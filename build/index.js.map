{
  "version": 3,
  "sources": ["../node_modules/@remix-run/dev/dist/compiler/shims/react.ts", "../app/utils/backend/constants.js", "../app/utils/backend/filterConstants.js", "../app/utils/backend/joiConstants.js", "../app/utils/backend/slackConstants.js", "../app/utils/backend/utilConstants.js", "../node_modules/markdown-draft-js/lib/draft-to-markdown.js", "../node_modules/remarkable/dist/cjs/index.js", "../node_modules/markdown-draft-js/lib/markdown-to-draft.js", "../node_modules/markdown-draft-js/lib/index.js", "empty-module:app/react-draft-wysiwyg.client", "../app/utils/backend/emails/emailConstants.js", "../app/utils/backend/emails/emailTransporter.js", "../app/utils/backend/validators/email.js", "../app/utils/backend/emails/emailHandler.js", "<stdin>", "server-entry-module:@remix-run/dev/server-build", "../app/entry.server.jsx", "../app/root.jsx", "../app/components/ErrorHandler/ErrorHandler.jsx", "../app/session.server.js", "../app/components/AppNavbar/index.js", "../app/components/AppNavbar/AppNavbar.jsx", "../app/components/AppNavbar/AppNavbar.Styled.jsx", "../app/components/UserControls/index.js", "../app/components/UserControls/UserControls.jsx", "../app/components/UserControls/UserControl.styled.jsx", "../app/components/UserDropdown/index.js", "../app/components/UserDropdown/UserDropdown.jsx", "../app/components/Atoms/UserImage/index.js", "../app/components/Atoms/UserImage/UserImage.jsx", "../app/components/Atoms/UserImage/UserImage.Styled.jsx", "../app/components/UserProfile/index.js", "../app/components/UserProfile/UserProfile.jsx", "../app/components/UserProfile/UserProfile.styled.jsx", "../app/components/UserDropdown/UserDropdown.styled.jsx", "../app/components/Modals/LogoutConfirmationModal/index.js", "../app/components/Modals/LogoutConfirmationModal/LogoutConfirmationModal.jsx", "../app/components/Atoms/Button/index.js", "../app/components/Atoms/Button/Button.jsx", "../app/utils/constants.js", "../app/components/Atoms/Button/Button.Styled.jsx", "../app/utils/hooks/useUser.js", "../app/utils/hooks/useFindLoaderMatch.js", "../app/components/Modals/LogoutConfirmationModal/LogoutConfirmationModal.styled.jsx", "../app/components/SearchBarNav/index.js", "../app/components/SearchBarNav/SearchBarNav.jsx", "../app/utils/hooks/useClickOutside.js", "../app/components/SearchBarNav/SearchBarNav.Styled.jsx", "../app/components/SearchBarDropdown/index.js", "../app/components/SearchBarDropdown/SearchBarDropdown.jsx", "../app/components/SearchBarDropdown/SearchBarDropdown.Styled.jsx", "../node_modules/react-markdown/index.js", "../node_modules/react-markdown/lib/uri-transformer.js", "../node_modules/react-markdown/lib/react-markdown.js", "../node_modules/vfile/index.js", "../node_modules/vfile/lib/index.js", "../node_modules/vfile-message/index.js", "../node_modules/unist-util-stringify-position/index.js", "../node_modules/vfile/lib/minpath.js", "../node_modules/vfile/lib/minproc.js", "../node_modules/vfile/lib/minurl.js", "../node_modules/vfile/lib/minurl.shared.js", "../node_modules/unified/index.js", "../node_modules/unified/lib/index.js", "../node_modules/bail/index.js", "../node_modules/trough/index.js", "../node_modules/remark-parse/index.js", "../node_modules/remark-parse/lib/index.js", "../node_modules/mdast-util-from-markdown/index.js", "../node_modules/mdast-util-from-markdown/lib/index.js", "../node_modules/mdast-util-to-string/index.js", "../node_modules/micromark/lib/parse.js", "../node_modules/micromark-util-combine-extensions/index.js", "../node_modules/micromark-util-chunked/index.js", "../node_modules/micromark/lib/initialize/content.js", "../node_modules/micromark-factory-space/index.js", "../node_modules/micromark-util-character/index.js", "../node_modules/micromark-util-character/lib/unicode-punctuation-regex.js", "../node_modules/micromark/lib/initialize/document.js", "../node_modules/micromark/lib/initialize/flow.js", "../node_modules/micromark-core-commonmark/index.js", "../node_modules/micromark-core-commonmark/lib/attention.js", "../node_modules/micromark-util-classify-character/index.js", "../node_modules/micromark-util-resolve-all/index.js", "../node_modules/micromark-core-commonmark/lib/autolink.js", "../node_modules/micromark-core-commonmark/lib/blank-line.js", "../node_modules/micromark-core-commonmark/lib/block-quote.js", "../node_modules/micromark-core-commonmark/lib/character-escape.js", "../node_modules/micromark-core-commonmark/lib/character-reference.js", "../node_modules/decode-named-character-reference/index.js", "../node_modules/character-entities/index.js", "../node_modules/micromark-core-commonmark/lib/code-fenced.js", "../node_modules/micromark-core-commonmark/lib/code-indented.js", "../node_modules/micromark-core-commonmark/lib/code-text.js", "../node_modules/micromark-core-commonmark/lib/content.js", "../node_modules/micromark-util-subtokenize/index.js", "../node_modules/micromark-core-commonmark/lib/definition.js", "../node_modules/micromark-factory-destination/index.js", "../node_modules/micromark-factory-label/index.js", "../node_modules/micromark-factory-title/index.js", "../node_modules/micromark-factory-whitespace/index.js", "../node_modules/micromark-util-normalize-identifier/index.js", "../node_modules/micromark-core-commonmark/lib/hard-break-escape.js", "../node_modules/micromark-core-commonmark/lib/heading-atx.js", "../node_modules/micromark-core-commonmark/lib/html-flow.js", "../node_modules/micromark-util-html-tag-name/index.js", "../node_modules/micromark-core-commonmark/lib/html-text.js", "../node_modules/micromark-core-commonmark/lib/label-end.js", "../node_modules/micromark-core-commonmark/lib/label-start-image.js", "../node_modules/micromark-core-commonmark/lib/label-start-link.js", "../node_modules/micromark-core-commonmark/lib/line-ending.js", "../node_modules/micromark-core-commonmark/lib/list.js", "../node_modules/micromark-core-commonmark/lib/thematic-break.js", "../node_modules/micromark-core-commonmark/lib/setext-underline.js", "../node_modules/micromark/lib/initialize/text.js", "../node_modules/micromark/lib/create-tokenizer.js", "../node_modules/micromark/lib/constructs.js", "../node_modules/micromark/lib/preprocess.js", "../node_modules/micromark/lib/postprocess.js", "../node_modules/micromark-util-decode-numeric-character-reference/index.js", "../node_modules/micromark-util-decode-string/index.js", "../node_modules/react-markdown/node_modules/remark-rehype/index.js", "../node_modules/react-markdown/node_modules/mdast-util-to-hast/index.js", "../node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/traverse.js", "../node_modules/unist-builder/index.js", "../node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/index.js", "../node_modules/unist-util-visit/index.js", "../node_modules/unist-util-visit-parents/index.js", "../node_modules/unist-util-is/index.js", "../node_modules/unist-util-visit-parents/color.js", "../node_modules/unist-util-position/index.js", "../node_modules/unist-util-generated/index.js", "../node_modules/mdast-util-definitions/index.js", "../node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/footer.js", "../node_modules/micromark-util-sanitize-uri/index.js", "../node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/wrap.js", "../node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/index.js", "../node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/blockquote.js", "../node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/break.js", "../node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/code.js", "../node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/delete.js", "../node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/emphasis.js", "../node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js", "../node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/footnote.js", "../node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/heading.js", "../node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/html.js", "../node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/image-reference.js", "../node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/revert.js", "../node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/image.js", "../node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/inline-code.js", "../node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/link-reference.js", "../node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/link.js", "../node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/list-item.js", "../node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/list.js", "../node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/paragraph.js", "../node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/root.js", "../node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/strong.js", "../node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/table.js", "../node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/text.js", "../node_modules/trim-lines/index.js", "../node_modules/react-markdown/node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js", "../node_modules/react-markdown/node_modules/remark-rehype/lib/index.js", "../node_modules/property-information/index.js", "../node_modules/property-information/lib/util/merge.js", "../node_modules/property-information/lib/util/schema.js", "../node_modules/property-information/lib/xlink.js", "../node_modules/property-information/lib/util/create.js", "../node_modules/property-information/lib/normalize.js", "../node_modules/property-information/lib/util/defined-info.js", "../node_modules/property-information/lib/util/info.js", "../node_modules/property-information/lib/util/types.js", "../node_modules/property-information/lib/xml.js", "../node_modules/property-information/lib/xmlns.js", "../node_modules/property-information/lib/util/case-insensitive-transform.js", "../node_modules/property-information/lib/util/case-sensitive-transform.js", "../node_modules/property-information/lib/aria.js", "../node_modules/property-information/lib/html.js", "../node_modules/property-information/lib/svg.js", "../node_modules/property-information/lib/find.js", "../node_modules/property-information/lib/hast-to-react.js", "../node_modules/react-markdown/lib/rehype-filter.js", "../node_modules/react-markdown/lib/ast-to-react.js", "../node_modules/hast-util-whitespace/index.js", "../node_modules/space-separated-tokens/index.js", "../node_modules/comma-separated-tokens/index.js", "../app/utils/stringOperations.js", "../app/utils/markdownFormatQuestions.js", "../app/components/SearchedLinkRenderer/index.js", "../app/components/SearchedLinkRenderer/SearchedLinkRenderer.jsx", "../app/components/MarkdownLinkRenderer/index.js", "../app/components/MarkdownLinkRenderer/MarkdownLinkRenderer.jsx", "../app/controllers/questions/list.js", "../app/utils/backend/dateUtils.js", "../app/utils/db.server.js", "../app/routes/employees/getByDeparment/$id.js", "../app/controllers/employees/list.js", "../app/routes/questions/$questionId.jsx", "../app/styles/QuestionDetails.Styled.jsx", "../app/components/QuestionDetail/index.js", "../app/components/QuestionDetail/QuestionDetail.jsx", "../app/utils/questionUtils.js", "../app/components/AnswerRow/index.js", "../app/components/AnswerRow/AnswerRow.jsx", "../app/utils/timeOperations.js", "../app/utils/dateFormat.js", "../app/components/AnswerRow/AnswerRow.Styled.jsx", "../app/components/QuestionResponderInfo/QuestionResponderInfo.Styled.jsx", "../app/components/Atoms/ConditionalLinkTo/index.js", "../app/components/Atoms/ConditionalLinkTo/ConditionalLinkTo.jsx", "../app/components/QuestionResponderInfo/index.js", "../app/components/QuestionResponderInfo/QuestionResponder.jsx", "../app/components/Atoms/Label/index.js", "../app/components/Atoms/Label/Label.jsx", "../app/components/Atoms/Label/Label.Styled.jsx", "../app/components/AnswerAdminOptions/index.js", "../app/components/AnswerAdminOptions/AnswerAdminOptions.jsx", "../app/components/AnswerAdminOptions/AnswerAdminOptions.Styled.jsx", "../app/components/CounterButton/index.js", "../app/components/CounterButton/CounterButton.jsx", "../app/components/CounterButton/CounterButton.Styled.jsx", "../app/components/QuestionCommentList/index.js", "../app/components/QuestionCommentList/QuestionCommentList.jsx", "../app/components/QuestionCommentList/QuestionCommentList.styled.jsx", "../app/utils/commentUtils.js", "../app/components/QuestionComment/index.js", "../app/components/QuestionComment/QuestionComment.jsx", "../app/components/QuestionComment/QuestionComment.styled.jsx", "../app/components/CommentInput/CommentInput.styled.jsx", "../app/components/Atoms/Input/Input.Styled.jsx", "../app/components/CommentInput/CommentInputText.jsx", "../app/components/CommentInput/CommentTextArea.jsx", "../app/components/MarkdownFormattingNote/index.js", "../app/components/MarkdownFormattingNote/MarkdownFormattingNote.jsx", "../app/components/MarkdownFormattingNote/MarkdownFormattingNote.Styled.jsx", "../app/utils/input.js", "../app/components/Atoms/Input/index.js", "../app/components/Atoms/Input/Input.jsx", "../app/components/InputCounter/index.js", "../app/components/InputCounter/InputCounter.jsx", "../app/components/InputCounter/InputCounter.Styled.jsx", "../app/components/QuestionMarkdown/index.js", "../app/components/QuestionMarkdown/QuestionMarkdown.jsx", "../node_modules/remark-gfm/index.js", "../node_modules/micromark-extension-gfm/index.js", "../node_modules/micromark-extension-gfm-autolink-literal/index.js", "../node_modules/micromark-extension-gfm-autolink-literal/lib/syntax.js", "../node_modules/micromark-extension-gfm-footnote/index.js", "../node_modules/micromark-extension-gfm-footnote/lib/syntax.js", "../node_modules/micromark-extension-gfm-strikethrough/index.js", "../node_modules/micromark-extension-gfm-strikethrough/lib/syntax.js", "../node_modules/micromark-extension-gfm-table/index.js", "../node_modules/micromark-extension-gfm-table/lib/syntax.js", "../node_modules/micromark-extension-gfm-task-list-item/index.js", "../node_modules/micromark-extension-gfm-task-list-item/lib/syntax.js", "../node_modules/mdast-util-gfm/index.js", "../node_modules/mdast-util-gfm/lib/index.js", "../node_modules/mdast-util-gfm-autolink-literal/index.js", "../node_modules/ccount/index.js", "../node_modules/mdast-util-find-and-replace/index.js", "../node_modules/mdast-util-find-and-replace/lib/index.js", "../node_modules/mdast-util-gfm-footnote/index.js", "../node_modules/mdast-util-to-markdown/lib/util/association.js", "../node_modules/mdast-util-to-markdown/lib/util/container-flow.js", "../node_modules/mdast-util-to-markdown/lib/util/track.js", "../node_modules/mdast-util-to-markdown/lib/util/indent-lines.js", "../node_modules/mdast-util-to-markdown/lib/util/safe.js", "../node_modules/mdast-util-to-markdown/lib/util/pattern-compile.js", "../node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js", "../node_modules/mdast-util-gfm-strikethrough/index.js", "../node_modules/mdast-util-to-markdown/lib/util/container-phrasing.js", "../node_modules/mdast-util-gfm-table/index.js", "../node_modules/mdast-util-gfm-table/lib/index.js", "../node_modules/mdast-util-to-markdown/lib/handle/inline-code.js", "../node_modules/markdown-table/index.js", "../node_modules/mdast-util-gfm-task-list-item/index.js", "../node_modules/mdast-util-to-markdown/lib/handle/list-item.js", "../node_modules/mdast-util-to-markdown/lib/util/check-bullet.js", "../node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js", "../app/components/QuestionMarkdown/QuestionMarkdown.Styled.jsx", "../app/utils/actions.js", "../app/components/SortQuestionCommentsDropdown/index.js", "../app/components/SortQuestionCommentsDropdown/SortQuestionCommentsDropdown.jsx", "../app/components/SortQuestionCommentsDropdown/SortQuestionCommentsDropdown.styled.jsx", "../app/components/Modals/AssignAnswerModal/AssignAnswerModal.jsx", "../app/components/Modals/AssignAnswerModal/AssignAnswerModal.Styled.jsx", "../app/components/CommentInput/CommentInput.jsx", "../app/components/CommentInput/CommentInputAuthor.jsx", "../app/components/QuestionRow/index.js", "../app/components/QuestionRow/QuestionRow.jsx", "../app/components/QuestionRow/QuestionRow.Styled.jsx", "../app/components/Switch/index.js", "../app/components/Switch/Switch.jsx", "../app/components/Switch/Switch.Styled.jsx", "../app/components/Modals/AnswerModal/AnswerModal.jsx", "../app/components/AnswerInputText/AnswerInputText.jsx", "../app/components/AnswerInputText/AnswerTextArea.jsx", "../app/components/AnswerInputText/AnswerInputText.Styled.jsx", "../app/components/Modals/AnswerModal/AnswerModal.Styled.jsx", "../app/components/Modals/DeleteAnswerModal/DeleteAnswerModal.jsx", "../app/components/Modals/DeleteAnswerModal/DeleteAnswerModal.Styled.jsx", "../app/components/NetPromoterScoreRow/NetPromoterScoreRow.jsx", "../app/components/NetPromoterScoreRow/NetPromoterScoreRow.styled.jsx", "../app/components/QuestionCard/QuestionCard.Styled.jsx", "../app/components/QuestionDetail/QuestionDetail.Styled.jsx", "../app/components/Loader.jsx", "../app/styles/Loader.Styled.jsx", "../app/components/QuestionDetailInfo/index.js", "../app/components/QuestionDetailInfo/QuestionDetailInfo.jsx", "../app/components/QuestionDetailInfo/QuestionDetailInfo.Styled.jsx", "../app/components/Notifications/index.js", "../app/components/Notifications/Notifications.jsx", "../app/utils/hooks/useGlobalSuccessMessage.js", "../app/controllers/questions/getQuestionById.js", "../app/utils/backend/crypto.js", "../app/controllers/locations/list.js", "../app/controllers/questions/modifyPinStatus.js", "../app/utils/backend/validators/question.js", "../app/controllers/questionVotes/voteQuestion.js", "../app/controllers/answers/create.js", "../app/utils/backend/validators/answer.js", "../app/utils/backend/sanitizer.js", "../app/utils/backend/slackNotifications.js", "../app/utils/backend/stringUtils.js", "../app/controllers/answers/update.js", "../app/controllers/answers/delete.js", "../app/controllers/comments/list.js", "../app/utils/backend/comments.js", "../app/controllers/comments/create.js", "../app/utils/backend/validators/comment.js", "../app/controllers/comments/update.js", "../app/utils/backend/validators/comments.js", "../app/controllers/commentVotes/voteComment.js", "../app/utils/backend/validators/commentVote.js", "../app/controllers/comments/delete.js", "../app/controllers/answers/nps/create.js", "../app/utils/backend/objectUtils.js", "../app/utils/backend/validators/nps.js", "../app/controllers/comments/approvedBy.js", "../app/controllers/questions/assignQuestion.js", "../app/controllers/departments/list.js", "../app/controllers/answers/nps/delete.js", "../app/controllers/questions/modifyEnableStatus.js", "../app/controllers/answerBot/pdfConv.js", "../app/controllers/answerBot/pythonUrl.js", "../app/routes/questions/new.jsx", "../app/styles/CreateQuestion.Styled.jsx", "../app/components/Slogan/index.js", "../app/components/Slogan/Slogan.jsx", "../app/components/Slogan/Slogan.Styled.jsx", "../app/components/QuestionForm/index.js", "../app/components/QuestionForm/QuestionForm.jsx", "../app/components/QuestionForm/QuestionForm.Styled.jsx", "../app/components/InputAuthor/index.js", "../app/components/InputAuthor/InputAuthor.jsx", "../app/components/SubmitWithModal/index.js", "../app/components/SubmitWithModal/SubmitWithModal.jsx", "../app/components/SubmitWithModal/SubmitWithModal.Styled.jsx", "../app/components/QuestionInputText/index.js", "../app/components/QuestionInputText/QuestionInputText.jsx", "../app/components/QuestionInputText/QuestionInputText.Styled.jsx", "../app/components/QuestionTextArea/index.js", "../app/components/QuestionTextArea/QuestionTextArea.jsx", "../app/components/QuestionTextArea/QuestionTextArea.Styled.jsx", "../app/components/DropdownMenu/index.js", "../app/components/DropdownMenu/DropdownMenu.component.jsx", "../app/components/DropdownTitle/index.js", "../app/components/DropdownTitle/DropdownTitle.jsx", "../app/components/DropdownTitle/DropdownTitle.Styled.jsx", "../app/components/DropdownMenu/DropdownMenu.Styled.js", "../app/controllers/questions/create.js", "../app/utils/backend/urlUtils.js", "../app/controllers/answerBot/create.js", "../app/utils/backend/validators/answerBot.js", "../app/controllers/answerBot/modifyFeedback.js", "../app/controllers/answerBot/modifyIDQuestion.js", "../app/components/AnswerBot/index.js", "../app/components/AnswerBot/AnswerBot.jsx", "../app/components/AnswerBot/AnswerBot.Styled.jsx", "../app/components/FAQs/FAQs.jsx", "../app/components/FAQs/FAQs.Styled.jsx", "../app/routes/auth/auth0.jsx", "../app/auth.server.js", "../app/controllers/users/find.js", "../app/routes/auth/auth0/callback.jsx", "../app/routes/dashboard.jsx", "../app/styles/Dashboard.Styled.jsx", "../app/components/AdminSideBar/index.js", "../app/components/AdminSideBar/AdminSideBar.jsx", "../app/components/AdminSideBar/AdminSideBar.Styled.jsx", "../app/utils/dateRangeConversion.js", "../app/controllers/answerBot/list.js", "../app/routes/contact.jsx", "../app/components/Footer.jsx", "../app/styles/Contact.Styled.jsx", "../app/components/ContactGoto.jsx", "../app/routes/logout.jsx", "../app/routes/about.jsx", "../app/styles/About.Styled.jsx", "../app/routes/admin.jsx", "../app/styles/Admin.Styled.jsx", "../app/components/AdminUsersTable/index.js", "../app/components/AdminUsersTable/AdminUsersTable.jsx", "../app/utils/hooks/usePagination.js", "../app/components/AdminUsersTable/AdminUsersTable.Styled.jsx", "../app/components/Modals/EditUserModal/EditUserModal.jsx", "../app/components/Modals/EditUserModal/EditUserModal.Styled.jsx", "../app/components/UserSearchBar/index.js", "../app/components/UserSearchBar/UserSearchBar.jsx", "../app/components/UserSearchBar/UserSearchBar.Styled.jsx", "../app/components/Atoms/UploadButton/index.js", "../app/components/Atoms/UploadButton/UploadButton.jsx", "../app/components/Atoms/UploadButton/UploadButton.Styled.jsx", "../app/controllers/users/list.js", "../app/controllers/users/update.js", "../app/utils/backend/validators/admin.js", "../app/routes/$.jsx", "../app/styles/NotFound.Styled.jsx", "../app/routes/index.jsx", "../app/styles/Home.Styled.jsx", "../app/components/ListQuestions/index.js", "../app/components/ListQuestions/ListQuestions.jsx", "../app/components/ListQuestions/ListQuestions.Styled.jsx", "../app/components/QuestionCard/index.js", "../app/components/QuestionCard/QuestionCard.jsx", "../app/components/GoToTopButton/index.js", "../app/components/GoToTopButton/GoToTopButton.jsx", "../app/components/GoToTopButton/GoToTopButton.Styled.jsx", "../app/components/Atoms/ArrowIcon/index.js", "../app/components/Atoms/ArrowIcon/ArrowIcon.jsx", "../app/components/Atoms/InfiniteScrollList/index.js", "../app/components/Atoms/InfiniteScrollList/InfiniteScrollList.jsx", "../app/components/Filters/index.js", "../app/components/Filters/Filters.jsx", "../app/components/Filters/Filters.Styled.jsx", "../app/components/CustomDropdown/index.js", "../app/components/CustomDropdown/CustomDropdown.jsx", "../app/components/CustomDropdown/CustomDropdown.Styled.jsx", "../app/utils/cookies.js", "../app/components/Modals/ValuesMessageModal/ValuesMessageModal.jsx", "../app/components/Modals/ValuesMessageModal/ValuesMessageModal.Styled.jsx", "../app/routes/login.jsx", "../app/components/Login/LoginContainer.jsx", "../app/components/Login/LoginContainer.Styled.jsx", "server-assets-manifest:@remix-run/dev/assets-manifest"],
  "sourcesContent": ["// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "module.exports = {\r\n  // Database string limit constant. It should hold about one page worth of text.\r\n  MINIMUM_ANSWER_LENGTH: 1,\r\n  MAXIMUM_ANSWER_LENGTH: 3000,\r\n  MINIMUM_COMMENT_LENGTH: 2,\r\n  MAXIMUM_COMMENT_LENGTH: 3000,\r\n  MINIMUM_QUESTION_LENGTH: 14,\r\n  MAXIMUM_QUESTION_LENGTH: 500,\r\n  DATE_FORMAT: 'MM-DD-YYYY',\r\n  DATE_TIME_FORMAT: 'YYYY-MM-DDTHH:mm:ssZ',\r\n  BASE_NUMBER: 10,\r\n  NOTIFICATION_MINUTE_INTERVAL: 3,\r\n  MAXIMUM_QUESTION_EXPORT_CSV_DAYS_RANGE: 90,\r\n  MAXIMUM_QUESTION_EXPORT_CSV_MONTHS_RANGE: 3,\r\n  DEFAULT_LIMIT: 20,\r\n  DEFAULT_OFFSET: 0,\r\n  MIN_NET_PROMOTER_SCORE: 1,\r\n  MAX_NET_PROMOTER_SCORE: 4,\r\n  DEFAULT_ERROR_MESSAGE: 'An unknown error has occurred with your request.',\r\n  DEFAULT_ERROR_MESSAGE_BOT: 'An unknown error has occurred with your request to bot.',\r\n  DEFAULT_ERROR_MESSAGE_CREATE_BOT: 'An unknown error has occurred with your request to bot.',\r\n  DEFAULT_ERROR_MESSAGE_FEEDBACK_BOT: 'An unknown error has occurred while submitting feedback.',\r\n  DEFAULT_ERROR_MESSAGE_POST_BOT: 'An unknown error has occurred while posting the question.',\r\n  COMMENT_AS_AN_ANSWER: 'This question already has a comment as answer',\r\n  COMMUNITY_ANSWER_COMMENT_VOTES_THRESHOLD: 10,\r\n  DEFAULT_MONTHS: -3,\r\n};\r\n", "module.exports = {\r\n  ALL_DEPARTMENTS: -1,\r\n  NOT_ASSIGNED_DEPARTMENT_ID: 0,\r\n};\r\n", "const Joi = require('joi');\r\n\r\nmodule.exports = {\r\n  JOI_ID_VALIDATION: Joi.number().integer().min(1).required(),\r\n  JOI_SIMPLE_STRING_VALIDATION: Joi.string().required(),\r\n  JOI_EMAIL_VALIDATION: Joi.string().email(),\r\n};\r\n", "module.exports = {\r\n  DEFAULT_DOMAIN: '',\r\n  DEFAULT_SLACK_NAME: 'WizeQ-bot',\r\n  SLACK_FALLBACK_STRING: 'New question posted',\r\n  SLACK_QUESTION_COLOR: '#FF9248',\r\n  SLACK_QUESTION_EMOJI: ':question:',\r\n  SLACK_QUESTION_DETAILS: 'see question details in WizeQ',\r\n  SLACK_QUESTION_HEADER: 'A new question has been posted at WizeQ!',\r\n  SLACK_QUESTION_SEE_MORE: 'see full question in WizeQ',\r\n  SLACK_QUESTION_LIMIT: 240,\r\n  SLACK_ANSWER_COLOR: '#7CD197',\r\n  SLACK_ANSWER_EMOJI: ':exclamation:',\r\n  SLACK_ANSWER_HEADER: 'A question has been answered at WizeQ!',\r\n  SLACK_ANSWER_UPDATED_HEADER: 'An answer has been updated at WizeQ!',\r\n  SLACK_MAX_MESSAGE_SIZE_IN_BYTES: 7500,\r\n};\r\n", "module.exports = {\r\n  HTTP_PREFIX: 'http',\r\n  TRUNCATE_ENDING: '...',\r\n};\r\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar TRAILING_WHITESPACE = /[ \\u0020\\t\\n]*$/; // This escapes some markdown but there's a few cases that are TODO -\n// - List items\n// - Back tics  (see https://github.com/Rosey/markdown-draft-js/issues/52#issuecomment-388458017)\n// - Complex markdown, like links or images. Not sure it's even worth it, because if you're typing\n// that into draft chances are you know its markdown and maybe expect it convert? :/\n\nvar MARKDOWN_STYLE_CHARACTERS = ['*', '_', '~', '`'];\nvar MARKDOWN_STYLE_CHARACTER_REGXP = /(\\*|_|~|\\\\|`)/g; // I hate this a bit, being outside of the function\u2019s scope\n// but can\u2019t think of a better way to keep track of how many ordered list\n// items were are on, as draft doesn\u2019t explicitly tell us in the raw object \uD83D\uDE22.\n// This is a hash that will be assigned values based on depth, so like\n// orderedListNumber[0] = 1 would mean that ordered list at depth 0 is on number 1.\n// orderedListNumber[0] = 2 would mean that ordered list at depth 0 is on number 2.\n// This is so we have the right number of numbers when doing a list, eg\n// 1. Item One\n// 2. Item two\n// 3. Item three\n// And so on.\n\nvar orderedListNumber = {},\n    previousOrderedListDepth = 0; // A map of draftjs block types -> markdown open and close characters\n// Both the open and close methods must exist, even if they simply return an empty string.\n// They should always return a string.\n\nvar StyleItems = {\n  // BLOCK LEVEL\n  'unordered-list-item': {\n    open: function open() {\n      return '- ';\n    },\n    close: function close() {\n      return '';\n    }\n  },\n  'ordered-list-item': {\n    open: function open(block) {\n      var number = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n      return \"\".concat(number, \". \");\n    },\n    close: function close() {\n      return '';\n    }\n  },\n  'blockquote': {\n    open: function open() {\n      return '> ';\n    },\n    close: function close() {\n      return '';\n    }\n  },\n  'header-one': {\n    open: function open() {\n      return '# ';\n    },\n    close: function close() {\n      return '';\n    }\n  },\n  'header-two': {\n    open: function open() {\n      return '## ';\n    },\n    close: function close() {\n      return '';\n    }\n  },\n  'header-three': {\n    open: function open() {\n      return '### ';\n    },\n    close: function close() {\n      return '';\n    }\n  },\n  'header-four': {\n    open: function open() {\n      return '#### ';\n    },\n    close: function close() {\n      return '';\n    }\n  },\n  'header-five': {\n    open: function open() {\n      return '##### ';\n    },\n    close: function close() {\n      return '';\n    }\n  },\n  'header-six': {\n    open: function open() {\n      return '###### ';\n    },\n    close: function close() {\n      return '';\n    }\n  },\n  'code-block': {\n    open: function open(block) {\n      return '```' + (block.data.language || '') + '\\n';\n    },\n    close: function close() {\n      return '\\n```';\n    }\n  },\n  // INLINE LEVEL\n  'BOLD': {\n    open: function open() {\n      return '**';\n    },\n    close: function close() {\n      return '**';\n    }\n  },\n  'ITALIC': {\n    open: function open() {\n      return '_';\n    },\n    close: function close() {\n      return '_';\n    }\n  },\n  'STRIKETHROUGH': {\n    open: function open() {\n      return '~~';\n    },\n    close: function close() {\n      return '~~';\n    }\n  },\n  'CODE': {\n    open: function open() {\n      return '`';\n    },\n    close: function close() {\n      return '`';\n    }\n  }\n}; // A map of draftjs entity types -> markdown open and close characters\n// entities are different from block types because they have additional data attached to them.\n// an entity object is passed in to both open and close, in case it's needed for string generation.\n//\n// Both the open and close methods must exist, even if they simply return an empty string.\n// They should always return a string.\n\nvar EntityItems = {\n  'LINK': {\n    open: function open(entity) {\n      return '[';\n    },\n    close: function close(entity) {\n      return \"](\".concat(entity.data.url || entity.data.href, \")\");\n    }\n  }\n}; // Bit of a hack - we normally want a double newline after a block,\n// but for list items we just want one (unless it's the _last_ list item in a group.)\n\nvar SingleNewlineAfterBlock = ['unordered-list-item', 'ordered-list-item'];\n\nfunction isEmptyBlock(block) {\n  return block.text.length === 0 && block.entityRanges.length === 0 && Object.keys(block.data || {}).length === 0;\n}\n/**\n * Generate markdown for a single block javascript object\n * DraftJS raw object contains an array of blocks, which is the main \"structure\"\n * of the text. Each block = a new line.\n *\n * @param {Object} block - block to generate markdown for\n * @param {Number} index - index of the block in the blocks array\n * @param {Object} rawDraftObject - entire raw draft object (needed for accessing the entityMap)\n * @param {Object} options - additional options passed in by the user calling this method.\n *\n * @return {String} markdown string\n**/\n\n\nfunction renderBlock(block, index, rawDraftObject, options) {\n  var openInlineStyles = [],\n      markdownToAdd = [];\n  var markdownString = '',\n      customStyleItems = options.styleItems || {},\n      customEntityItems = options.entityItems || {},\n      escapeMarkdownCharacters = options.hasOwnProperty('escapeMarkdownCharacters') ? options.escapeMarkdownCharacters : true;\n  var type = block.type;\n  var markdownStyleCharactersToEscape = []; // draft-js emits empty blocks that have type set\u2026 don\u2019t style them unless the user wants to preserve new lines\n  // (if newlines are preserved each empty line should be \"styled\" eg in case of blockquote we want to see a blockquote.)\n  // but if newlines aren\u2019t preserved then we'd end up having double or triple or etc markdown characters, which is a bug.\n\n  if (isEmptyBlock(block) && !options.preserveNewlines) {\n    type = 'unstyled';\n  } // Render main block wrapping element\n\n\n  if (customStyleItems[type] || StyleItems[type]) {\n    if (type === 'unordered-list-item' || type === 'ordered-list-item') {\n      markdownString += ' '.repeat(block.depth * 4);\n    }\n\n    if (type === 'ordered-list-item') {\n      orderedListNumber[block.depth] = orderedListNumber[block.depth] || 1;\n      markdownString += (customStyleItems[type] || StyleItems[type]).open(block, orderedListNumber[block.depth]);\n      orderedListNumber[block.depth]++; // Have to reset the number for orderedListNumber if we are breaking out of a list so that if\n      // there's another nested list at the same level further down, it starts at 1 again.\n      // COMPLICATED \uD83D\uDE2D\n\n      if (previousOrderedListDepth > block.depth) {\n        orderedListNumber[previousOrderedListDepth] = 1;\n      }\n\n      previousOrderedListDepth = block.depth;\n    } else {\n      orderedListNumber = {};\n      markdownString += (customStyleItems[type] || StyleItems[type]).open(block);\n    }\n  } else {\n    orderedListNumber = {};\n  } // A stack to keep track of open tags\n\n\n  var openTags = [];\n\n  function openTag(tag) {\n    openTags.push(tag);\n\n    if (tag.style) {\n      // Open inline tag\n      if (customStyleItems[tag.style] || StyleItems[tag.style]) {\n        var styleToAdd = (customStyleItems[tag.style] || StyleItems[tag.style]).open();\n        markdownToAdd.push({\n          type: 'style',\n          style: tag,\n          value: styleToAdd\n        });\n      }\n    } else {\n      // Open entity tag\n      var entity = rawDraftObject.entityMap[tag.key];\n\n      if (customEntityItems[entity.type] || EntityItems[entity.type]) {\n        var entityToAdd = (customEntityItems[entity.type] || EntityItems[entity.type]).open(entity, block);\n        markdownToAdd.push({\n          type: 'entity',\n          value: entityToAdd\n        });\n      }\n    }\n  }\n\n  function closeTag(tag) {\n    var popped = openTags.pop();\n\n    if (tag !== popped) {\n      throw new Error('Invariant violation: Cannot close a tag before all inner tags have been closed');\n    }\n\n    if (tag.style) {\n      // Close inline tag\n      if (customStyleItems[tag.style] || StyleItems[tag.style]) {\n        // Have to trim whitespace first and then re-add after because markdown can't handle leading/trailing whitespace\n        var trailingWhitespace = TRAILING_WHITESPACE.exec(markdownString);\n        markdownString = markdownString.slice(0, markdownString.length - trailingWhitespace[0].length);\n        markdownString += (customStyleItems[tag.style] || StyleItems[tag.style]).close();\n        markdownString += trailingWhitespace[0];\n      }\n    } else {\n      // Close entity tag\n      var entity = rawDraftObject.entityMap[tag.key];\n\n      if (customEntityItems[entity.type] || EntityItems[entity.type]) {\n        markdownString += (customEntityItems[entity.type] || EntityItems[entity.type]).close(entity, block);\n      }\n    }\n  }\n\n  var compareTagsLastCloseFirst = function compareTagsLastCloseFirst(a, b) {\n    return b.offset + b.length - (a.offset + a.length);\n  }; // reverse array without mutating the original\n\n\n  var reverse = function reverse(array) {\n    return array.concat().reverse();\n  }; // Render text within content, along with any inline styles/entities\n\n\n  Array.from(block.text).some(function (character, characterIndex) {\n    // Close any tags that need closing, starting from top of the stack\n    reverse(openTags).forEach(function (tag) {\n      if (tag.offset + tag.length === characterIndex) {\n        // Take all tags stacked on top of the current one, meaning they opened after it.\n        // Since they have not been popped, they'll close only later. So we need to split them.\n        var tagsToSplit = openTags.slice(openTags.indexOf(tag) + 1); // Close in reverse order as they were opened\n\n        reverse(tagsToSplit).forEach(closeTag); // Now we can close the current tag\n\n        closeTag(tag); // Reopen split tags, ordered so that tags that close last open first\n\n        tagsToSplit.sort(compareTagsLastCloseFirst).forEach(openTag);\n      }\n    }); // Open any tags that need opening, using the correct nesting order.\n\n    var inlineTagsToOpen = block.inlineStyleRanges.filter(function (tag) {\n      return tag.offset === characterIndex;\n    });\n    var entityTagsToOpen = block.entityRanges.filter(function (tag) {\n      return tag.offset === characterIndex;\n    });\n    inlineTagsToOpen.concat(entityTagsToOpen).sort(compareTagsLastCloseFirst).forEach(openTag); // These are all the opening entity and style types being added to the markdown string for this loop\n    // we store in an array and add here because if the character is WS character, we want to hang onto it and not apply it until the next non-whitespace\n    // character before adding the markdown, since markdown doesn\u2019t play nice with leading whitespace (eg '** bold**' is no  good, whereas ' **bold**' is good.)\n\n    if (character !== ' ' && markdownToAdd.length) {\n      markdownString += markdownToAdd.map(function (item) {\n        return item.value;\n      }).join('');\n      markdownToAdd = [];\n    }\n\n    if (block.type !== 'code-block' && escapeMarkdownCharacters) {\n      var insideInlineCodeStyle = openTags.find(function (style) {\n        return style.style === 'CODE';\n      });\n\n      if (insideInlineCodeStyle) {// Todo - The syntax to escape backtics when inside backtic code already is to use MORE backtics wrapping.\n        // So we need to see how many backtics in a row we have and then when converting to markdown, use that # + 1\n        // EG  ``Test ` Hllo ``\n        // OR   ```Test `` Hello```\n        // OR ````Test ``` Hello ````\n        // Similar work has to be done for codeblocks.\n      } else {\n        // Special escape logic for blockquotes and heading characters\n        if (characterIndex === 0 && character === '#' && block.text[1] && block.text[1] === ' ') {\n          character = character.replace('#', '\\\\#');\n        } else if (characterIndex === 0 && character === '>') {\n          character = character.replace('>', '\\\\>');\n        } // Escaping inline markdown characters\n        // \uD83E\uDDF9 If someone can think of a more elegant solution, I would love that.\n        // orginally this was just a little char replace using a simple regular expression, but there\u2019s lots of cases where\n        // a markdown character does not actually get converted to markdown, like this case: http://google.com/i_am_a_link\n        // so this code now tries to be smart and keeps track of potential \u201Copening\u201D characters as well as potential \u201Cclosing\u201D\n        // characters, and only escapes if both opening and closing exist, and they have the correct whitepace-before-open, whitespace-or-end-of-string-after-close pattern\n\n\n        if (MARKDOWN_STYLE_CHARACTERS.includes(character)) {\n          var openingStyle = markdownStyleCharactersToEscape.find(function (item) {\n            return item.character === character;\n          });\n\n          if (!openingStyle && block.text[characterIndex - 1] === ' ' && block.text[characterIndex + 1] !== ' ') {\n            markdownStyleCharactersToEscape.push({\n              character: character,\n              index: characterIndex,\n              markdownStringIndexStart: markdownString.length + character.length - 1,\n              markdownStringIndexEnd: markdownString.length + character.length\n            });\n          } else if (openingStyle && block.text[characterIndex - 1] === character && characterIndex === openingStyle.index + 1) {\n            openingStyle.markdownStringIndexEnd += 1;\n          } else if (openingStyle) {\n            var openingStyleLength = openingStyle.markdownStringIndexEnd - openingStyle.markdownStringIndexStart;\n            var escapeCharacter = false;\n            var popOpeningStyle = false;\n\n            if (openingStyleLength === 1 && (block.text[characterIndex + 1] === ' ' || !block.text[characterIndex + 1])) {\n              popOpeningStyle = true;\n              escapeCharacter = true;\n            }\n\n            if (openingStyleLength === 2 && block.text[characterIndex + 1] === character) {\n              escapeCharacter = true;\n            }\n\n            if (openingStyleLength === 2 && block.text[characterIndex - 1] === character && (block.text[characterIndex + 1] === ' ' || !block.text[characterIndex + 1])) {\n              popOpeningStyle = true;\n              escapeCharacter = true;\n            }\n\n            if (popOpeningStyle) {\n              markdownStyleCharactersToEscape.splice(markdownStyleCharactersToEscape.indexOf(openingStyle), 1);\n              var replacementString = markdownString.slice(openingStyle.markdownStringIndexStart, openingStyle.markdownStringIndexEnd);\n              replacementString = replacementString.replace(MARKDOWN_STYLE_CHARACTER_REGXP, '\\\\$1');\n              markdownString = markdownString.slice(0, openingStyle.markdownStringIndexStart) + replacementString + markdownString.slice(openingStyle.markdownStringIndexEnd);\n            }\n\n            if (escapeCharacter) {\n              character = \"\\\\\".concat(character);\n            }\n          }\n        }\n      }\n    }\n\n    if (character === '\\n' && type === 'blockquote') {\n      markdownString += '\\n> ';\n    } else {\n      markdownString += character;\n    }\n  }); // Finally, close all remaining open tags\n\n  reverse(openTags).forEach(closeTag); // Close block level item\n\n  if (customStyleItems[type] || StyleItems[type]) {\n    markdownString += (customStyleItems[type] || StyleItems[type]).close(block);\n  } // Determine how many newlines to add - generally we want 2, but for list items we just want one when they are succeeded by another list item.\n\n\n  if (SingleNewlineAfterBlock.indexOf(type) !== -1 && rawDraftObject.blocks[index + 1] && SingleNewlineAfterBlock.indexOf(rawDraftObject.blocks[index + 1].type) !== -1) {\n    markdownString += '\\n';\n  } else if (rawDraftObject.blocks[index + 1]) {\n    if (rawDraftObject.blocks[index].text) {\n      if (SingleNewlineAfterBlock.indexOf(type) !== -1 && SingleNewlineAfterBlock.indexOf(rawDraftObject.blocks[index + 1].type) === -1) {\n        markdownString += '\\n\\n';\n      } else if (!options.preserveNewlines) {\n        // 2 newlines if not preserving\n        markdownString += '\\n\\n';\n      } else {\n        markdownString += '\\n';\n      }\n    } else if (options.preserveNewlines) {\n      markdownString += '\\n';\n    }\n  }\n\n  return markdownString;\n}\n/**\n * Generate markdown for a raw draftjs object\n * DraftJS raw object contains an array of blocks, which is the main \"structure\"\n * of the text. Each block = a new line.\n *\n * @param {Object} rawDraftObject - draftjs object to generate markdown for\n * @param {Object} options - optional additional data, see readme for what options can be passed in.\n *\n * @return {String} markdown string\n**/\n\n\nfunction draftToMarkdown(rawDraftObject, options) {\n  options = options || {};\n  var markdownString = '';\n  rawDraftObject.blocks.forEach(function (block, index) {\n    markdownString += renderBlock(block, index, rawDraftObject, options);\n  });\n  orderedListNumber = {}; // See variable definitions at the top of the page to see why we have to do this sad hack.\n\n  return markdownString;\n}\n\nvar _default = draftToMarkdown;\nexports[\"default\"] = _default;", "'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n// List of valid entities\n//\n// Generate with ./support/entities.js script\n//\n\n/*eslint quotes:0*/\nvar entities = {\n  \"Aacute\":\"\\u00C1\",\n  \"aacute\":\"\\u00E1\",\n  \"Abreve\":\"\\u0102\",\n  \"abreve\":\"\\u0103\",\n  \"ac\":\"\\u223E\",\n  \"acd\":\"\\u223F\",\n  \"acE\":\"\\u223E\\u0333\",\n  \"Acirc\":\"\\u00C2\",\n  \"acirc\":\"\\u00E2\",\n  \"acute\":\"\\u00B4\",\n  \"Acy\":\"\\u0410\",\n  \"acy\":\"\\u0430\",\n  \"AElig\":\"\\u00C6\",\n  \"aelig\":\"\\u00E6\",\n  \"af\":\"\\u2061\",\n  \"Afr\":\"\\uD835\\uDD04\",\n  \"afr\":\"\\uD835\\uDD1E\",\n  \"Agrave\":\"\\u00C0\",\n  \"agrave\":\"\\u00E0\",\n  \"alefsym\":\"\\u2135\",\n  \"aleph\":\"\\u2135\",\n  \"Alpha\":\"\\u0391\",\n  \"alpha\":\"\\u03B1\",\n  \"Amacr\":\"\\u0100\",\n  \"amacr\":\"\\u0101\",\n  \"amalg\":\"\\u2A3F\",\n  \"AMP\":\"\\u0026\",\n  \"amp\":\"\\u0026\",\n  \"And\":\"\\u2A53\",\n  \"and\":\"\\u2227\",\n  \"andand\":\"\\u2A55\",\n  \"andd\":\"\\u2A5C\",\n  \"andslope\":\"\\u2A58\",\n  \"andv\":\"\\u2A5A\",\n  \"ang\":\"\\u2220\",\n  \"ange\":\"\\u29A4\",\n  \"angle\":\"\\u2220\",\n  \"angmsd\":\"\\u2221\",\n  \"angmsdaa\":\"\\u29A8\",\n  \"angmsdab\":\"\\u29A9\",\n  \"angmsdac\":\"\\u29AA\",\n  \"angmsdad\":\"\\u29AB\",\n  \"angmsdae\":\"\\u29AC\",\n  \"angmsdaf\":\"\\u29AD\",\n  \"angmsdag\":\"\\u29AE\",\n  \"angmsdah\":\"\\u29AF\",\n  \"angrt\":\"\\u221F\",\n  \"angrtvb\":\"\\u22BE\",\n  \"angrtvbd\":\"\\u299D\",\n  \"angsph\":\"\\u2222\",\n  \"angst\":\"\\u00C5\",\n  \"angzarr\":\"\\u237C\",\n  \"Aogon\":\"\\u0104\",\n  \"aogon\":\"\\u0105\",\n  \"Aopf\":\"\\uD835\\uDD38\",\n  \"aopf\":\"\\uD835\\uDD52\",\n  \"ap\":\"\\u2248\",\n  \"apacir\":\"\\u2A6F\",\n  \"apE\":\"\\u2A70\",\n  \"ape\":\"\\u224A\",\n  \"apid\":\"\\u224B\",\n  \"apos\":\"\\u0027\",\n  \"ApplyFunction\":\"\\u2061\",\n  \"approx\":\"\\u2248\",\n  \"approxeq\":\"\\u224A\",\n  \"Aring\":\"\\u00C5\",\n  \"aring\":\"\\u00E5\",\n  \"Ascr\":\"\\uD835\\uDC9C\",\n  \"ascr\":\"\\uD835\\uDCB6\",\n  \"Assign\":\"\\u2254\",\n  \"ast\":\"\\u002A\",\n  \"asymp\":\"\\u2248\",\n  \"asympeq\":\"\\u224D\",\n  \"Atilde\":\"\\u00C3\",\n  \"atilde\":\"\\u00E3\",\n  \"Auml\":\"\\u00C4\",\n  \"auml\":\"\\u00E4\",\n  \"awconint\":\"\\u2233\",\n  \"awint\":\"\\u2A11\",\n  \"backcong\":\"\\u224C\",\n  \"backepsilon\":\"\\u03F6\",\n  \"backprime\":\"\\u2035\",\n  \"backsim\":\"\\u223D\",\n  \"backsimeq\":\"\\u22CD\",\n  \"Backslash\":\"\\u2216\",\n  \"Barv\":\"\\u2AE7\",\n  \"barvee\":\"\\u22BD\",\n  \"Barwed\":\"\\u2306\",\n  \"barwed\":\"\\u2305\",\n  \"barwedge\":\"\\u2305\",\n  \"bbrk\":\"\\u23B5\",\n  \"bbrktbrk\":\"\\u23B6\",\n  \"bcong\":\"\\u224C\",\n  \"Bcy\":\"\\u0411\",\n  \"bcy\":\"\\u0431\",\n  \"bdquo\":\"\\u201E\",\n  \"becaus\":\"\\u2235\",\n  \"Because\":\"\\u2235\",\n  \"because\":\"\\u2235\",\n  \"bemptyv\":\"\\u29B0\",\n  \"bepsi\":\"\\u03F6\",\n  \"bernou\":\"\\u212C\",\n  \"Bernoullis\":\"\\u212C\",\n  \"Beta\":\"\\u0392\",\n  \"beta\":\"\\u03B2\",\n  \"beth\":\"\\u2136\",\n  \"between\":\"\\u226C\",\n  \"Bfr\":\"\\uD835\\uDD05\",\n  \"bfr\":\"\\uD835\\uDD1F\",\n  \"bigcap\":\"\\u22C2\",\n  \"bigcirc\":\"\\u25EF\",\n  \"bigcup\":\"\\u22C3\",\n  \"bigodot\":\"\\u2A00\",\n  \"bigoplus\":\"\\u2A01\",\n  \"bigotimes\":\"\\u2A02\",\n  \"bigsqcup\":\"\\u2A06\",\n  \"bigstar\":\"\\u2605\",\n  \"bigtriangledown\":\"\\u25BD\",\n  \"bigtriangleup\":\"\\u25B3\",\n  \"biguplus\":\"\\u2A04\",\n  \"bigvee\":\"\\u22C1\",\n  \"bigwedge\":\"\\u22C0\",\n  \"bkarow\":\"\\u290D\",\n  \"blacklozenge\":\"\\u29EB\",\n  \"blacksquare\":\"\\u25AA\",\n  \"blacktriangle\":\"\\u25B4\",\n  \"blacktriangledown\":\"\\u25BE\",\n  \"blacktriangleleft\":\"\\u25C2\",\n  \"blacktriangleright\":\"\\u25B8\",\n  \"blank\":\"\\u2423\",\n  \"blk12\":\"\\u2592\",\n  \"blk14\":\"\\u2591\",\n  \"blk34\":\"\\u2593\",\n  \"block\":\"\\u2588\",\n  \"bne\":\"\\u003D\\u20E5\",\n  \"bnequiv\":\"\\u2261\\u20E5\",\n  \"bNot\":\"\\u2AED\",\n  \"bnot\":\"\\u2310\",\n  \"Bopf\":\"\\uD835\\uDD39\",\n  \"bopf\":\"\\uD835\\uDD53\",\n  \"bot\":\"\\u22A5\",\n  \"bottom\":\"\\u22A5\",\n  \"bowtie\":\"\\u22C8\",\n  \"boxbox\":\"\\u29C9\",\n  \"boxDL\":\"\\u2557\",\n  \"boxDl\":\"\\u2556\",\n  \"boxdL\":\"\\u2555\",\n  \"boxdl\":\"\\u2510\",\n  \"boxDR\":\"\\u2554\",\n  \"boxDr\":\"\\u2553\",\n  \"boxdR\":\"\\u2552\",\n  \"boxdr\":\"\\u250C\",\n  \"boxH\":\"\\u2550\",\n  \"boxh\":\"\\u2500\",\n  \"boxHD\":\"\\u2566\",\n  \"boxHd\":\"\\u2564\",\n  \"boxhD\":\"\\u2565\",\n  \"boxhd\":\"\\u252C\",\n  \"boxHU\":\"\\u2569\",\n  \"boxHu\":\"\\u2567\",\n  \"boxhU\":\"\\u2568\",\n  \"boxhu\":\"\\u2534\",\n  \"boxminus\":\"\\u229F\",\n  \"boxplus\":\"\\u229E\",\n  \"boxtimes\":\"\\u22A0\",\n  \"boxUL\":\"\\u255D\",\n  \"boxUl\":\"\\u255C\",\n  \"boxuL\":\"\\u255B\",\n  \"boxul\":\"\\u2518\",\n  \"boxUR\":\"\\u255A\",\n  \"boxUr\":\"\\u2559\",\n  \"boxuR\":\"\\u2558\",\n  \"boxur\":\"\\u2514\",\n  \"boxV\":\"\\u2551\",\n  \"boxv\":\"\\u2502\",\n  \"boxVH\":\"\\u256C\",\n  \"boxVh\":\"\\u256B\",\n  \"boxvH\":\"\\u256A\",\n  \"boxvh\":\"\\u253C\",\n  \"boxVL\":\"\\u2563\",\n  \"boxVl\":\"\\u2562\",\n  \"boxvL\":\"\\u2561\",\n  \"boxvl\":\"\\u2524\",\n  \"boxVR\":\"\\u2560\",\n  \"boxVr\":\"\\u255F\",\n  \"boxvR\":\"\\u255E\",\n  \"boxvr\":\"\\u251C\",\n  \"bprime\":\"\\u2035\",\n  \"Breve\":\"\\u02D8\",\n  \"breve\":\"\\u02D8\",\n  \"brvbar\":\"\\u00A6\",\n  \"Bscr\":\"\\u212C\",\n  \"bscr\":\"\\uD835\\uDCB7\",\n  \"bsemi\":\"\\u204F\",\n  \"bsim\":\"\\u223D\",\n  \"bsime\":\"\\u22CD\",\n  \"bsol\":\"\\u005C\",\n  \"bsolb\":\"\\u29C5\",\n  \"bsolhsub\":\"\\u27C8\",\n  \"bull\":\"\\u2022\",\n  \"bullet\":\"\\u2022\",\n  \"bump\":\"\\u224E\",\n  \"bumpE\":\"\\u2AAE\",\n  \"bumpe\":\"\\u224F\",\n  \"Bumpeq\":\"\\u224E\",\n  \"bumpeq\":\"\\u224F\",\n  \"Cacute\":\"\\u0106\",\n  \"cacute\":\"\\u0107\",\n  \"Cap\":\"\\u22D2\",\n  \"cap\":\"\\u2229\",\n  \"capand\":\"\\u2A44\",\n  \"capbrcup\":\"\\u2A49\",\n  \"capcap\":\"\\u2A4B\",\n  \"capcup\":\"\\u2A47\",\n  \"capdot\":\"\\u2A40\",\n  \"CapitalDifferentialD\":\"\\u2145\",\n  \"caps\":\"\\u2229\\uFE00\",\n  \"caret\":\"\\u2041\",\n  \"caron\":\"\\u02C7\",\n  \"Cayleys\":\"\\u212D\",\n  \"ccaps\":\"\\u2A4D\",\n  \"Ccaron\":\"\\u010C\",\n  \"ccaron\":\"\\u010D\",\n  \"Ccedil\":\"\\u00C7\",\n  \"ccedil\":\"\\u00E7\",\n  \"Ccirc\":\"\\u0108\",\n  \"ccirc\":\"\\u0109\",\n  \"Cconint\":\"\\u2230\",\n  \"ccups\":\"\\u2A4C\",\n  \"ccupssm\":\"\\u2A50\",\n  \"Cdot\":\"\\u010A\",\n  \"cdot\":\"\\u010B\",\n  \"cedil\":\"\\u00B8\",\n  \"Cedilla\":\"\\u00B8\",\n  \"cemptyv\":\"\\u29B2\",\n  \"cent\":\"\\u00A2\",\n  \"CenterDot\":\"\\u00B7\",\n  \"centerdot\":\"\\u00B7\",\n  \"Cfr\":\"\\u212D\",\n  \"cfr\":\"\\uD835\\uDD20\",\n  \"CHcy\":\"\\u0427\",\n  \"chcy\":\"\\u0447\",\n  \"check\":\"\\u2713\",\n  \"checkmark\":\"\\u2713\",\n  \"Chi\":\"\\u03A7\",\n  \"chi\":\"\\u03C7\",\n  \"cir\":\"\\u25CB\",\n  \"circ\":\"\\u02C6\",\n  \"circeq\":\"\\u2257\",\n  \"circlearrowleft\":\"\\u21BA\",\n  \"circlearrowright\":\"\\u21BB\",\n  \"circledast\":\"\\u229B\",\n  \"circledcirc\":\"\\u229A\",\n  \"circleddash\":\"\\u229D\",\n  \"CircleDot\":\"\\u2299\",\n  \"circledR\":\"\\u00AE\",\n  \"circledS\":\"\\u24C8\",\n  \"CircleMinus\":\"\\u2296\",\n  \"CirclePlus\":\"\\u2295\",\n  \"CircleTimes\":\"\\u2297\",\n  \"cirE\":\"\\u29C3\",\n  \"cire\":\"\\u2257\",\n  \"cirfnint\":\"\\u2A10\",\n  \"cirmid\":\"\\u2AEF\",\n  \"cirscir\":\"\\u29C2\",\n  \"ClockwiseContourIntegral\":\"\\u2232\",\n  \"CloseCurlyDoubleQuote\":\"\\u201D\",\n  \"CloseCurlyQuote\":\"\\u2019\",\n  \"clubs\":\"\\u2663\",\n  \"clubsuit\":\"\\u2663\",\n  \"Colon\":\"\\u2237\",\n  \"colon\":\"\\u003A\",\n  \"Colone\":\"\\u2A74\",\n  \"colone\":\"\\u2254\",\n  \"coloneq\":\"\\u2254\",\n  \"comma\":\"\\u002C\",\n  \"commat\":\"\\u0040\",\n  \"comp\":\"\\u2201\",\n  \"compfn\":\"\\u2218\",\n  \"complement\":\"\\u2201\",\n  \"complexes\":\"\\u2102\",\n  \"cong\":\"\\u2245\",\n  \"congdot\":\"\\u2A6D\",\n  \"Congruent\":\"\\u2261\",\n  \"Conint\":\"\\u222F\",\n  \"conint\":\"\\u222E\",\n  \"ContourIntegral\":\"\\u222E\",\n  \"Copf\":\"\\u2102\",\n  \"copf\":\"\\uD835\\uDD54\",\n  \"coprod\":\"\\u2210\",\n  \"Coproduct\":\"\\u2210\",\n  \"COPY\":\"\\u00A9\",\n  \"copy\":\"\\u00A9\",\n  \"copysr\":\"\\u2117\",\n  \"CounterClockwiseContourIntegral\":\"\\u2233\",\n  \"crarr\":\"\\u21B5\",\n  \"Cross\":\"\\u2A2F\",\n  \"cross\":\"\\u2717\",\n  \"Cscr\":\"\\uD835\\uDC9E\",\n  \"cscr\":\"\\uD835\\uDCB8\",\n  \"csub\":\"\\u2ACF\",\n  \"csube\":\"\\u2AD1\",\n  \"csup\":\"\\u2AD0\",\n  \"csupe\":\"\\u2AD2\",\n  \"ctdot\":\"\\u22EF\",\n  \"cudarrl\":\"\\u2938\",\n  \"cudarrr\":\"\\u2935\",\n  \"cuepr\":\"\\u22DE\",\n  \"cuesc\":\"\\u22DF\",\n  \"cularr\":\"\\u21B6\",\n  \"cularrp\":\"\\u293D\",\n  \"Cup\":\"\\u22D3\",\n  \"cup\":\"\\u222A\",\n  \"cupbrcap\":\"\\u2A48\",\n  \"CupCap\":\"\\u224D\",\n  \"cupcap\":\"\\u2A46\",\n  \"cupcup\":\"\\u2A4A\",\n  \"cupdot\":\"\\u228D\",\n  \"cupor\":\"\\u2A45\",\n  \"cups\":\"\\u222A\\uFE00\",\n  \"curarr\":\"\\u21B7\",\n  \"curarrm\":\"\\u293C\",\n  \"curlyeqprec\":\"\\u22DE\",\n  \"curlyeqsucc\":\"\\u22DF\",\n  \"curlyvee\":\"\\u22CE\",\n  \"curlywedge\":\"\\u22CF\",\n  \"curren\":\"\\u00A4\",\n  \"curvearrowleft\":\"\\u21B6\",\n  \"curvearrowright\":\"\\u21B7\",\n  \"cuvee\":\"\\u22CE\",\n  \"cuwed\":\"\\u22CF\",\n  \"cwconint\":\"\\u2232\",\n  \"cwint\":\"\\u2231\",\n  \"cylcty\":\"\\u232D\",\n  \"Dagger\":\"\\u2021\",\n  \"dagger\":\"\\u2020\",\n  \"daleth\":\"\\u2138\",\n  \"Darr\":\"\\u21A1\",\n  \"dArr\":\"\\u21D3\",\n  \"darr\":\"\\u2193\",\n  \"dash\":\"\\u2010\",\n  \"Dashv\":\"\\u2AE4\",\n  \"dashv\":\"\\u22A3\",\n  \"dbkarow\":\"\\u290F\",\n  \"dblac\":\"\\u02DD\",\n  \"Dcaron\":\"\\u010E\",\n  \"dcaron\":\"\\u010F\",\n  \"Dcy\":\"\\u0414\",\n  \"dcy\":\"\\u0434\",\n  \"DD\":\"\\u2145\",\n  \"dd\":\"\\u2146\",\n  \"ddagger\":\"\\u2021\",\n  \"ddarr\":\"\\u21CA\",\n  \"DDotrahd\":\"\\u2911\",\n  \"ddotseq\":\"\\u2A77\",\n  \"deg\":\"\\u00B0\",\n  \"Del\":\"\\u2207\",\n  \"Delta\":\"\\u0394\",\n  \"delta\":\"\\u03B4\",\n  \"demptyv\":\"\\u29B1\",\n  \"dfisht\":\"\\u297F\",\n  \"Dfr\":\"\\uD835\\uDD07\",\n  \"dfr\":\"\\uD835\\uDD21\",\n  \"dHar\":\"\\u2965\",\n  \"dharl\":\"\\u21C3\",\n  \"dharr\":\"\\u21C2\",\n  \"DiacriticalAcute\":\"\\u00B4\",\n  \"DiacriticalDot\":\"\\u02D9\",\n  \"DiacriticalDoubleAcute\":\"\\u02DD\",\n  \"DiacriticalGrave\":\"\\u0060\",\n  \"DiacriticalTilde\":\"\\u02DC\",\n  \"diam\":\"\\u22C4\",\n  \"Diamond\":\"\\u22C4\",\n  \"diamond\":\"\\u22C4\",\n  \"diamondsuit\":\"\\u2666\",\n  \"diams\":\"\\u2666\",\n  \"die\":\"\\u00A8\",\n  \"DifferentialD\":\"\\u2146\",\n  \"digamma\":\"\\u03DD\",\n  \"disin\":\"\\u22F2\",\n  \"div\":\"\\u00F7\",\n  \"divide\":\"\\u00F7\",\n  \"divideontimes\":\"\\u22C7\",\n  \"divonx\":\"\\u22C7\",\n  \"DJcy\":\"\\u0402\",\n  \"djcy\":\"\\u0452\",\n  \"dlcorn\":\"\\u231E\",\n  \"dlcrop\":\"\\u230D\",\n  \"dollar\":\"\\u0024\",\n  \"Dopf\":\"\\uD835\\uDD3B\",\n  \"dopf\":\"\\uD835\\uDD55\",\n  \"Dot\":\"\\u00A8\",\n  \"dot\":\"\\u02D9\",\n  \"DotDot\":\"\\u20DC\",\n  \"doteq\":\"\\u2250\",\n  \"doteqdot\":\"\\u2251\",\n  \"DotEqual\":\"\\u2250\",\n  \"dotminus\":\"\\u2238\",\n  \"dotplus\":\"\\u2214\",\n  \"dotsquare\":\"\\u22A1\",\n  \"doublebarwedge\":\"\\u2306\",\n  \"DoubleContourIntegral\":\"\\u222F\",\n  \"DoubleDot\":\"\\u00A8\",\n  \"DoubleDownArrow\":\"\\u21D3\",\n  \"DoubleLeftArrow\":\"\\u21D0\",\n  \"DoubleLeftRightArrow\":\"\\u21D4\",\n  \"DoubleLeftTee\":\"\\u2AE4\",\n  \"DoubleLongLeftArrow\":\"\\u27F8\",\n  \"DoubleLongLeftRightArrow\":\"\\u27FA\",\n  \"DoubleLongRightArrow\":\"\\u27F9\",\n  \"DoubleRightArrow\":\"\\u21D2\",\n  \"DoubleRightTee\":\"\\u22A8\",\n  \"DoubleUpArrow\":\"\\u21D1\",\n  \"DoubleUpDownArrow\":\"\\u21D5\",\n  \"DoubleVerticalBar\":\"\\u2225\",\n  \"DownArrow\":\"\\u2193\",\n  \"Downarrow\":\"\\u21D3\",\n  \"downarrow\":\"\\u2193\",\n  \"DownArrowBar\":\"\\u2913\",\n  \"DownArrowUpArrow\":\"\\u21F5\",\n  \"DownBreve\":\"\\u0311\",\n  \"downdownarrows\":\"\\u21CA\",\n  \"downharpoonleft\":\"\\u21C3\",\n  \"downharpoonright\":\"\\u21C2\",\n  \"DownLeftRightVector\":\"\\u2950\",\n  \"DownLeftTeeVector\":\"\\u295E\",\n  \"DownLeftVector\":\"\\u21BD\",\n  \"DownLeftVectorBar\":\"\\u2956\",\n  \"DownRightTeeVector\":\"\\u295F\",\n  \"DownRightVector\":\"\\u21C1\",\n  \"DownRightVectorBar\":\"\\u2957\",\n  \"DownTee\":\"\\u22A4\",\n  \"DownTeeArrow\":\"\\u21A7\",\n  \"drbkarow\":\"\\u2910\",\n  \"drcorn\":\"\\u231F\",\n  \"drcrop\":\"\\u230C\",\n  \"Dscr\":\"\\uD835\\uDC9F\",\n  \"dscr\":\"\\uD835\\uDCB9\",\n  \"DScy\":\"\\u0405\",\n  \"dscy\":\"\\u0455\",\n  \"dsol\":\"\\u29F6\",\n  \"Dstrok\":\"\\u0110\",\n  \"dstrok\":\"\\u0111\",\n  \"dtdot\":\"\\u22F1\",\n  \"dtri\":\"\\u25BF\",\n  \"dtrif\":\"\\u25BE\",\n  \"duarr\":\"\\u21F5\",\n  \"duhar\":\"\\u296F\",\n  \"dwangle\":\"\\u29A6\",\n  \"DZcy\":\"\\u040F\",\n  \"dzcy\":\"\\u045F\",\n  \"dzigrarr\":\"\\u27FF\",\n  \"Eacute\":\"\\u00C9\",\n  \"eacute\":\"\\u00E9\",\n  \"easter\":\"\\u2A6E\",\n  \"Ecaron\":\"\\u011A\",\n  \"ecaron\":\"\\u011B\",\n  \"ecir\":\"\\u2256\",\n  \"Ecirc\":\"\\u00CA\",\n  \"ecirc\":\"\\u00EA\",\n  \"ecolon\":\"\\u2255\",\n  \"Ecy\":\"\\u042D\",\n  \"ecy\":\"\\u044D\",\n  \"eDDot\":\"\\u2A77\",\n  \"Edot\":\"\\u0116\",\n  \"eDot\":\"\\u2251\",\n  \"edot\":\"\\u0117\",\n  \"ee\":\"\\u2147\",\n  \"efDot\":\"\\u2252\",\n  \"Efr\":\"\\uD835\\uDD08\",\n  \"efr\":\"\\uD835\\uDD22\",\n  \"eg\":\"\\u2A9A\",\n  \"Egrave\":\"\\u00C8\",\n  \"egrave\":\"\\u00E8\",\n  \"egs\":\"\\u2A96\",\n  \"egsdot\":\"\\u2A98\",\n  \"el\":\"\\u2A99\",\n  \"Element\":\"\\u2208\",\n  \"elinters\":\"\\u23E7\",\n  \"ell\":\"\\u2113\",\n  \"els\":\"\\u2A95\",\n  \"elsdot\":\"\\u2A97\",\n  \"Emacr\":\"\\u0112\",\n  \"emacr\":\"\\u0113\",\n  \"empty\":\"\\u2205\",\n  \"emptyset\":\"\\u2205\",\n  \"EmptySmallSquare\":\"\\u25FB\",\n  \"emptyv\":\"\\u2205\",\n  \"EmptyVerySmallSquare\":\"\\u25AB\",\n  \"emsp\":\"\\u2003\",\n  \"emsp13\":\"\\u2004\",\n  \"emsp14\":\"\\u2005\",\n  \"ENG\":\"\\u014A\",\n  \"eng\":\"\\u014B\",\n  \"ensp\":\"\\u2002\",\n  \"Eogon\":\"\\u0118\",\n  \"eogon\":\"\\u0119\",\n  \"Eopf\":\"\\uD835\\uDD3C\",\n  \"eopf\":\"\\uD835\\uDD56\",\n  \"epar\":\"\\u22D5\",\n  \"eparsl\":\"\\u29E3\",\n  \"eplus\":\"\\u2A71\",\n  \"epsi\":\"\\u03B5\",\n  \"Epsilon\":\"\\u0395\",\n  \"epsilon\":\"\\u03B5\",\n  \"epsiv\":\"\\u03F5\",\n  \"eqcirc\":\"\\u2256\",\n  \"eqcolon\":\"\\u2255\",\n  \"eqsim\":\"\\u2242\",\n  \"eqslantgtr\":\"\\u2A96\",\n  \"eqslantless\":\"\\u2A95\",\n  \"Equal\":\"\\u2A75\",\n  \"equals\":\"\\u003D\",\n  \"EqualTilde\":\"\\u2242\",\n  \"equest\":\"\\u225F\",\n  \"Equilibrium\":\"\\u21CC\",\n  \"equiv\":\"\\u2261\",\n  \"equivDD\":\"\\u2A78\",\n  \"eqvparsl\":\"\\u29E5\",\n  \"erarr\":\"\\u2971\",\n  \"erDot\":\"\\u2253\",\n  \"Escr\":\"\\u2130\",\n  \"escr\":\"\\u212F\",\n  \"esdot\":\"\\u2250\",\n  \"Esim\":\"\\u2A73\",\n  \"esim\":\"\\u2242\",\n  \"Eta\":\"\\u0397\",\n  \"eta\":\"\\u03B7\",\n  \"ETH\":\"\\u00D0\",\n  \"eth\":\"\\u00F0\",\n  \"Euml\":\"\\u00CB\",\n  \"euml\":\"\\u00EB\",\n  \"euro\":\"\\u20AC\",\n  \"excl\":\"\\u0021\",\n  \"exist\":\"\\u2203\",\n  \"Exists\":\"\\u2203\",\n  \"expectation\":\"\\u2130\",\n  \"ExponentialE\":\"\\u2147\",\n  \"exponentiale\":\"\\u2147\",\n  \"fallingdotseq\":\"\\u2252\",\n  \"Fcy\":\"\\u0424\",\n  \"fcy\":\"\\u0444\",\n  \"female\":\"\\u2640\",\n  \"ffilig\":\"\\uFB03\",\n  \"fflig\":\"\\uFB00\",\n  \"ffllig\":\"\\uFB04\",\n  \"Ffr\":\"\\uD835\\uDD09\",\n  \"ffr\":\"\\uD835\\uDD23\",\n  \"filig\":\"\\uFB01\",\n  \"FilledSmallSquare\":\"\\u25FC\",\n  \"FilledVerySmallSquare\":\"\\u25AA\",\n  \"fjlig\":\"\\u0066\\u006A\",\n  \"flat\":\"\\u266D\",\n  \"fllig\":\"\\uFB02\",\n  \"fltns\":\"\\u25B1\",\n  \"fnof\":\"\\u0192\",\n  \"Fopf\":\"\\uD835\\uDD3D\",\n  \"fopf\":\"\\uD835\\uDD57\",\n  \"ForAll\":\"\\u2200\",\n  \"forall\":\"\\u2200\",\n  \"fork\":\"\\u22D4\",\n  \"forkv\":\"\\u2AD9\",\n  \"Fouriertrf\":\"\\u2131\",\n  \"fpartint\":\"\\u2A0D\",\n  \"frac12\":\"\\u00BD\",\n  \"frac13\":\"\\u2153\",\n  \"frac14\":\"\\u00BC\",\n  \"frac15\":\"\\u2155\",\n  \"frac16\":\"\\u2159\",\n  \"frac18\":\"\\u215B\",\n  \"frac23\":\"\\u2154\",\n  \"frac25\":\"\\u2156\",\n  \"frac34\":\"\\u00BE\",\n  \"frac35\":\"\\u2157\",\n  \"frac38\":\"\\u215C\",\n  \"frac45\":\"\\u2158\",\n  \"frac56\":\"\\u215A\",\n  \"frac58\":\"\\u215D\",\n  \"frac78\":\"\\u215E\",\n  \"frasl\":\"\\u2044\",\n  \"frown\":\"\\u2322\",\n  \"Fscr\":\"\\u2131\",\n  \"fscr\":\"\\uD835\\uDCBB\",\n  \"gacute\":\"\\u01F5\",\n  \"Gamma\":\"\\u0393\",\n  \"gamma\":\"\\u03B3\",\n  \"Gammad\":\"\\u03DC\",\n  \"gammad\":\"\\u03DD\",\n  \"gap\":\"\\u2A86\",\n  \"Gbreve\":\"\\u011E\",\n  \"gbreve\":\"\\u011F\",\n  \"Gcedil\":\"\\u0122\",\n  \"Gcirc\":\"\\u011C\",\n  \"gcirc\":\"\\u011D\",\n  \"Gcy\":\"\\u0413\",\n  \"gcy\":\"\\u0433\",\n  \"Gdot\":\"\\u0120\",\n  \"gdot\":\"\\u0121\",\n  \"gE\":\"\\u2267\",\n  \"ge\":\"\\u2265\",\n  \"gEl\":\"\\u2A8C\",\n  \"gel\":\"\\u22DB\",\n  \"geq\":\"\\u2265\",\n  \"geqq\":\"\\u2267\",\n  \"geqslant\":\"\\u2A7E\",\n  \"ges\":\"\\u2A7E\",\n  \"gescc\":\"\\u2AA9\",\n  \"gesdot\":\"\\u2A80\",\n  \"gesdoto\":\"\\u2A82\",\n  \"gesdotol\":\"\\u2A84\",\n  \"gesl\":\"\\u22DB\\uFE00\",\n  \"gesles\":\"\\u2A94\",\n  \"Gfr\":\"\\uD835\\uDD0A\",\n  \"gfr\":\"\\uD835\\uDD24\",\n  \"Gg\":\"\\u22D9\",\n  \"gg\":\"\\u226B\",\n  \"ggg\":\"\\u22D9\",\n  \"gimel\":\"\\u2137\",\n  \"GJcy\":\"\\u0403\",\n  \"gjcy\":\"\\u0453\",\n  \"gl\":\"\\u2277\",\n  \"gla\":\"\\u2AA5\",\n  \"glE\":\"\\u2A92\",\n  \"glj\":\"\\u2AA4\",\n  \"gnap\":\"\\u2A8A\",\n  \"gnapprox\":\"\\u2A8A\",\n  \"gnE\":\"\\u2269\",\n  \"gne\":\"\\u2A88\",\n  \"gneq\":\"\\u2A88\",\n  \"gneqq\":\"\\u2269\",\n  \"gnsim\":\"\\u22E7\",\n  \"Gopf\":\"\\uD835\\uDD3E\",\n  \"gopf\":\"\\uD835\\uDD58\",\n  \"grave\":\"\\u0060\",\n  \"GreaterEqual\":\"\\u2265\",\n  \"GreaterEqualLess\":\"\\u22DB\",\n  \"GreaterFullEqual\":\"\\u2267\",\n  \"GreaterGreater\":\"\\u2AA2\",\n  \"GreaterLess\":\"\\u2277\",\n  \"GreaterSlantEqual\":\"\\u2A7E\",\n  \"GreaterTilde\":\"\\u2273\",\n  \"Gscr\":\"\\uD835\\uDCA2\",\n  \"gscr\":\"\\u210A\",\n  \"gsim\":\"\\u2273\",\n  \"gsime\":\"\\u2A8E\",\n  \"gsiml\":\"\\u2A90\",\n  \"GT\":\"\\u003E\",\n  \"Gt\":\"\\u226B\",\n  \"gt\":\"\\u003E\",\n  \"gtcc\":\"\\u2AA7\",\n  \"gtcir\":\"\\u2A7A\",\n  \"gtdot\":\"\\u22D7\",\n  \"gtlPar\":\"\\u2995\",\n  \"gtquest\":\"\\u2A7C\",\n  \"gtrapprox\":\"\\u2A86\",\n  \"gtrarr\":\"\\u2978\",\n  \"gtrdot\":\"\\u22D7\",\n  \"gtreqless\":\"\\u22DB\",\n  \"gtreqqless\":\"\\u2A8C\",\n  \"gtrless\":\"\\u2277\",\n  \"gtrsim\":\"\\u2273\",\n  \"gvertneqq\":\"\\u2269\\uFE00\",\n  \"gvnE\":\"\\u2269\\uFE00\",\n  \"Hacek\":\"\\u02C7\",\n  \"hairsp\":\"\\u200A\",\n  \"half\":\"\\u00BD\",\n  \"hamilt\":\"\\u210B\",\n  \"HARDcy\":\"\\u042A\",\n  \"hardcy\":\"\\u044A\",\n  \"hArr\":\"\\u21D4\",\n  \"harr\":\"\\u2194\",\n  \"harrcir\":\"\\u2948\",\n  \"harrw\":\"\\u21AD\",\n  \"Hat\":\"\\u005E\",\n  \"hbar\":\"\\u210F\",\n  \"Hcirc\":\"\\u0124\",\n  \"hcirc\":\"\\u0125\",\n  \"hearts\":\"\\u2665\",\n  \"heartsuit\":\"\\u2665\",\n  \"hellip\":\"\\u2026\",\n  \"hercon\":\"\\u22B9\",\n  \"Hfr\":\"\\u210C\",\n  \"hfr\":\"\\uD835\\uDD25\",\n  \"HilbertSpace\":\"\\u210B\",\n  \"hksearow\":\"\\u2925\",\n  \"hkswarow\":\"\\u2926\",\n  \"hoarr\":\"\\u21FF\",\n  \"homtht\":\"\\u223B\",\n  \"hookleftarrow\":\"\\u21A9\",\n  \"hookrightarrow\":\"\\u21AA\",\n  \"Hopf\":\"\\u210D\",\n  \"hopf\":\"\\uD835\\uDD59\",\n  \"horbar\":\"\\u2015\",\n  \"HorizontalLine\":\"\\u2500\",\n  \"Hscr\":\"\\u210B\",\n  \"hscr\":\"\\uD835\\uDCBD\",\n  \"hslash\":\"\\u210F\",\n  \"Hstrok\":\"\\u0126\",\n  \"hstrok\":\"\\u0127\",\n  \"HumpDownHump\":\"\\u224E\",\n  \"HumpEqual\":\"\\u224F\",\n  \"hybull\":\"\\u2043\",\n  \"hyphen\":\"\\u2010\",\n  \"Iacute\":\"\\u00CD\",\n  \"iacute\":\"\\u00ED\",\n  \"ic\":\"\\u2063\",\n  \"Icirc\":\"\\u00CE\",\n  \"icirc\":\"\\u00EE\",\n  \"Icy\":\"\\u0418\",\n  \"icy\":\"\\u0438\",\n  \"Idot\":\"\\u0130\",\n  \"IEcy\":\"\\u0415\",\n  \"iecy\":\"\\u0435\",\n  \"iexcl\":\"\\u00A1\",\n  \"iff\":\"\\u21D4\",\n  \"Ifr\":\"\\u2111\",\n  \"ifr\":\"\\uD835\\uDD26\",\n  \"Igrave\":\"\\u00CC\",\n  \"igrave\":\"\\u00EC\",\n  \"ii\":\"\\u2148\",\n  \"iiiint\":\"\\u2A0C\",\n  \"iiint\":\"\\u222D\",\n  \"iinfin\":\"\\u29DC\",\n  \"iiota\":\"\\u2129\",\n  \"IJlig\":\"\\u0132\",\n  \"ijlig\":\"\\u0133\",\n  \"Im\":\"\\u2111\",\n  \"Imacr\":\"\\u012A\",\n  \"imacr\":\"\\u012B\",\n  \"image\":\"\\u2111\",\n  \"ImaginaryI\":\"\\u2148\",\n  \"imagline\":\"\\u2110\",\n  \"imagpart\":\"\\u2111\",\n  \"imath\":\"\\u0131\",\n  \"imof\":\"\\u22B7\",\n  \"imped\":\"\\u01B5\",\n  \"Implies\":\"\\u21D2\",\n  \"in\":\"\\u2208\",\n  \"incare\":\"\\u2105\",\n  \"infin\":\"\\u221E\",\n  \"infintie\":\"\\u29DD\",\n  \"inodot\":\"\\u0131\",\n  \"Int\":\"\\u222C\",\n  \"int\":\"\\u222B\",\n  \"intcal\":\"\\u22BA\",\n  \"integers\":\"\\u2124\",\n  \"Integral\":\"\\u222B\",\n  \"intercal\":\"\\u22BA\",\n  \"Intersection\":\"\\u22C2\",\n  \"intlarhk\":\"\\u2A17\",\n  \"intprod\":\"\\u2A3C\",\n  \"InvisibleComma\":\"\\u2063\",\n  \"InvisibleTimes\":\"\\u2062\",\n  \"IOcy\":\"\\u0401\",\n  \"iocy\":\"\\u0451\",\n  \"Iogon\":\"\\u012E\",\n  \"iogon\":\"\\u012F\",\n  \"Iopf\":\"\\uD835\\uDD40\",\n  \"iopf\":\"\\uD835\\uDD5A\",\n  \"Iota\":\"\\u0399\",\n  \"iota\":\"\\u03B9\",\n  \"iprod\":\"\\u2A3C\",\n  \"iquest\":\"\\u00BF\",\n  \"Iscr\":\"\\u2110\",\n  \"iscr\":\"\\uD835\\uDCBE\",\n  \"isin\":\"\\u2208\",\n  \"isindot\":\"\\u22F5\",\n  \"isinE\":\"\\u22F9\",\n  \"isins\":\"\\u22F4\",\n  \"isinsv\":\"\\u22F3\",\n  \"isinv\":\"\\u2208\",\n  \"it\":\"\\u2062\",\n  \"Itilde\":\"\\u0128\",\n  \"itilde\":\"\\u0129\",\n  \"Iukcy\":\"\\u0406\",\n  \"iukcy\":\"\\u0456\",\n  \"Iuml\":\"\\u00CF\",\n  \"iuml\":\"\\u00EF\",\n  \"Jcirc\":\"\\u0134\",\n  \"jcirc\":\"\\u0135\",\n  \"Jcy\":\"\\u0419\",\n  \"jcy\":\"\\u0439\",\n  \"Jfr\":\"\\uD835\\uDD0D\",\n  \"jfr\":\"\\uD835\\uDD27\",\n  \"jmath\":\"\\u0237\",\n  \"Jopf\":\"\\uD835\\uDD41\",\n  \"jopf\":\"\\uD835\\uDD5B\",\n  \"Jscr\":\"\\uD835\\uDCA5\",\n  \"jscr\":\"\\uD835\\uDCBF\",\n  \"Jsercy\":\"\\u0408\",\n  \"jsercy\":\"\\u0458\",\n  \"Jukcy\":\"\\u0404\",\n  \"jukcy\":\"\\u0454\",\n  \"Kappa\":\"\\u039A\",\n  \"kappa\":\"\\u03BA\",\n  \"kappav\":\"\\u03F0\",\n  \"Kcedil\":\"\\u0136\",\n  \"kcedil\":\"\\u0137\",\n  \"Kcy\":\"\\u041A\",\n  \"kcy\":\"\\u043A\",\n  \"Kfr\":\"\\uD835\\uDD0E\",\n  \"kfr\":\"\\uD835\\uDD28\",\n  \"kgreen\":\"\\u0138\",\n  \"KHcy\":\"\\u0425\",\n  \"khcy\":\"\\u0445\",\n  \"KJcy\":\"\\u040C\",\n  \"kjcy\":\"\\u045C\",\n  \"Kopf\":\"\\uD835\\uDD42\",\n  \"kopf\":\"\\uD835\\uDD5C\",\n  \"Kscr\":\"\\uD835\\uDCA6\",\n  \"kscr\":\"\\uD835\\uDCC0\",\n  \"lAarr\":\"\\u21DA\",\n  \"Lacute\":\"\\u0139\",\n  \"lacute\":\"\\u013A\",\n  \"laemptyv\":\"\\u29B4\",\n  \"lagran\":\"\\u2112\",\n  \"Lambda\":\"\\u039B\",\n  \"lambda\":\"\\u03BB\",\n  \"Lang\":\"\\u27EA\",\n  \"lang\":\"\\u27E8\",\n  \"langd\":\"\\u2991\",\n  \"langle\":\"\\u27E8\",\n  \"lap\":\"\\u2A85\",\n  \"Laplacetrf\":\"\\u2112\",\n  \"laquo\":\"\\u00AB\",\n  \"Larr\":\"\\u219E\",\n  \"lArr\":\"\\u21D0\",\n  \"larr\":\"\\u2190\",\n  \"larrb\":\"\\u21E4\",\n  \"larrbfs\":\"\\u291F\",\n  \"larrfs\":\"\\u291D\",\n  \"larrhk\":\"\\u21A9\",\n  \"larrlp\":\"\\u21AB\",\n  \"larrpl\":\"\\u2939\",\n  \"larrsim\":\"\\u2973\",\n  \"larrtl\":\"\\u21A2\",\n  \"lat\":\"\\u2AAB\",\n  \"lAtail\":\"\\u291B\",\n  \"latail\":\"\\u2919\",\n  \"late\":\"\\u2AAD\",\n  \"lates\":\"\\u2AAD\\uFE00\",\n  \"lBarr\":\"\\u290E\",\n  \"lbarr\":\"\\u290C\",\n  \"lbbrk\":\"\\u2772\",\n  \"lbrace\":\"\\u007B\",\n  \"lbrack\":\"\\u005B\",\n  \"lbrke\":\"\\u298B\",\n  \"lbrksld\":\"\\u298F\",\n  \"lbrkslu\":\"\\u298D\",\n  \"Lcaron\":\"\\u013D\",\n  \"lcaron\":\"\\u013E\",\n  \"Lcedil\":\"\\u013B\",\n  \"lcedil\":\"\\u013C\",\n  \"lceil\":\"\\u2308\",\n  \"lcub\":\"\\u007B\",\n  \"Lcy\":\"\\u041B\",\n  \"lcy\":\"\\u043B\",\n  \"ldca\":\"\\u2936\",\n  \"ldquo\":\"\\u201C\",\n  \"ldquor\":\"\\u201E\",\n  \"ldrdhar\":\"\\u2967\",\n  \"ldrushar\":\"\\u294B\",\n  \"ldsh\":\"\\u21B2\",\n  \"lE\":\"\\u2266\",\n  \"le\":\"\\u2264\",\n  \"LeftAngleBracket\":\"\\u27E8\",\n  \"LeftArrow\":\"\\u2190\",\n  \"Leftarrow\":\"\\u21D0\",\n  \"leftarrow\":\"\\u2190\",\n  \"LeftArrowBar\":\"\\u21E4\",\n  \"LeftArrowRightArrow\":\"\\u21C6\",\n  \"leftarrowtail\":\"\\u21A2\",\n  \"LeftCeiling\":\"\\u2308\",\n  \"LeftDoubleBracket\":\"\\u27E6\",\n  \"LeftDownTeeVector\":\"\\u2961\",\n  \"LeftDownVector\":\"\\u21C3\",\n  \"LeftDownVectorBar\":\"\\u2959\",\n  \"LeftFloor\":\"\\u230A\",\n  \"leftharpoondown\":\"\\u21BD\",\n  \"leftharpoonup\":\"\\u21BC\",\n  \"leftleftarrows\":\"\\u21C7\",\n  \"LeftRightArrow\":\"\\u2194\",\n  \"Leftrightarrow\":\"\\u21D4\",\n  \"leftrightarrow\":\"\\u2194\",\n  \"leftrightarrows\":\"\\u21C6\",\n  \"leftrightharpoons\":\"\\u21CB\",\n  \"leftrightsquigarrow\":\"\\u21AD\",\n  \"LeftRightVector\":\"\\u294E\",\n  \"LeftTee\":\"\\u22A3\",\n  \"LeftTeeArrow\":\"\\u21A4\",\n  \"LeftTeeVector\":\"\\u295A\",\n  \"leftthreetimes\":\"\\u22CB\",\n  \"LeftTriangle\":\"\\u22B2\",\n  \"LeftTriangleBar\":\"\\u29CF\",\n  \"LeftTriangleEqual\":\"\\u22B4\",\n  \"LeftUpDownVector\":\"\\u2951\",\n  \"LeftUpTeeVector\":\"\\u2960\",\n  \"LeftUpVector\":\"\\u21BF\",\n  \"LeftUpVectorBar\":\"\\u2958\",\n  \"LeftVector\":\"\\u21BC\",\n  \"LeftVectorBar\":\"\\u2952\",\n  \"lEg\":\"\\u2A8B\",\n  \"leg\":\"\\u22DA\",\n  \"leq\":\"\\u2264\",\n  \"leqq\":\"\\u2266\",\n  \"leqslant\":\"\\u2A7D\",\n  \"les\":\"\\u2A7D\",\n  \"lescc\":\"\\u2AA8\",\n  \"lesdot\":\"\\u2A7F\",\n  \"lesdoto\":\"\\u2A81\",\n  \"lesdotor\":\"\\u2A83\",\n  \"lesg\":\"\\u22DA\\uFE00\",\n  \"lesges\":\"\\u2A93\",\n  \"lessapprox\":\"\\u2A85\",\n  \"lessdot\":\"\\u22D6\",\n  \"lesseqgtr\":\"\\u22DA\",\n  \"lesseqqgtr\":\"\\u2A8B\",\n  \"LessEqualGreater\":\"\\u22DA\",\n  \"LessFullEqual\":\"\\u2266\",\n  \"LessGreater\":\"\\u2276\",\n  \"lessgtr\":\"\\u2276\",\n  \"LessLess\":\"\\u2AA1\",\n  \"lesssim\":\"\\u2272\",\n  \"LessSlantEqual\":\"\\u2A7D\",\n  \"LessTilde\":\"\\u2272\",\n  \"lfisht\":\"\\u297C\",\n  \"lfloor\":\"\\u230A\",\n  \"Lfr\":\"\\uD835\\uDD0F\",\n  \"lfr\":\"\\uD835\\uDD29\",\n  \"lg\":\"\\u2276\",\n  \"lgE\":\"\\u2A91\",\n  \"lHar\":\"\\u2962\",\n  \"lhard\":\"\\u21BD\",\n  \"lharu\":\"\\u21BC\",\n  \"lharul\":\"\\u296A\",\n  \"lhblk\":\"\\u2584\",\n  \"LJcy\":\"\\u0409\",\n  \"ljcy\":\"\\u0459\",\n  \"Ll\":\"\\u22D8\",\n  \"ll\":\"\\u226A\",\n  \"llarr\":\"\\u21C7\",\n  \"llcorner\":\"\\u231E\",\n  \"Lleftarrow\":\"\\u21DA\",\n  \"llhard\":\"\\u296B\",\n  \"lltri\":\"\\u25FA\",\n  \"Lmidot\":\"\\u013F\",\n  \"lmidot\":\"\\u0140\",\n  \"lmoust\":\"\\u23B0\",\n  \"lmoustache\":\"\\u23B0\",\n  \"lnap\":\"\\u2A89\",\n  \"lnapprox\":\"\\u2A89\",\n  \"lnE\":\"\\u2268\",\n  \"lne\":\"\\u2A87\",\n  \"lneq\":\"\\u2A87\",\n  \"lneqq\":\"\\u2268\",\n  \"lnsim\":\"\\u22E6\",\n  \"loang\":\"\\u27EC\",\n  \"loarr\":\"\\u21FD\",\n  \"lobrk\":\"\\u27E6\",\n  \"LongLeftArrow\":\"\\u27F5\",\n  \"Longleftarrow\":\"\\u27F8\",\n  \"longleftarrow\":\"\\u27F5\",\n  \"LongLeftRightArrow\":\"\\u27F7\",\n  \"Longleftrightarrow\":\"\\u27FA\",\n  \"longleftrightarrow\":\"\\u27F7\",\n  \"longmapsto\":\"\\u27FC\",\n  \"LongRightArrow\":\"\\u27F6\",\n  \"Longrightarrow\":\"\\u27F9\",\n  \"longrightarrow\":\"\\u27F6\",\n  \"looparrowleft\":\"\\u21AB\",\n  \"looparrowright\":\"\\u21AC\",\n  \"lopar\":\"\\u2985\",\n  \"Lopf\":\"\\uD835\\uDD43\",\n  \"lopf\":\"\\uD835\\uDD5D\",\n  \"loplus\":\"\\u2A2D\",\n  \"lotimes\":\"\\u2A34\",\n  \"lowast\":\"\\u2217\",\n  \"lowbar\":\"\\u005F\",\n  \"LowerLeftArrow\":\"\\u2199\",\n  \"LowerRightArrow\":\"\\u2198\",\n  \"loz\":\"\\u25CA\",\n  \"lozenge\":\"\\u25CA\",\n  \"lozf\":\"\\u29EB\",\n  \"lpar\":\"\\u0028\",\n  \"lparlt\":\"\\u2993\",\n  \"lrarr\":\"\\u21C6\",\n  \"lrcorner\":\"\\u231F\",\n  \"lrhar\":\"\\u21CB\",\n  \"lrhard\":\"\\u296D\",\n  \"lrm\":\"\\u200E\",\n  \"lrtri\":\"\\u22BF\",\n  \"lsaquo\":\"\\u2039\",\n  \"Lscr\":\"\\u2112\",\n  \"lscr\":\"\\uD835\\uDCC1\",\n  \"Lsh\":\"\\u21B0\",\n  \"lsh\":\"\\u21B0\",\n  \"lsim\":\"\\u2272\",\n  \"lsime\":\"\\u2A8D\",\n  \"lsimg\":\"\\u2A8F\",\n  \"lsqb\":\"\\u005B\",\n  \"lsquo\":\"\\u2018\",\n  \"lsquor\":\"\\u201A\",\n  \"Lstrok\":\"\\u0141\",\n  \"lstrok\":\"\\u0142\",\n  \"LT\":\"\\u003C\",\n  \"Lt\":\"\\u226A\",\n  \"lt\":\"\\u003C\",\n  \"ltcc\":\"\\u2AA6\",\n  \"ltcir\":\"\\u2A79\",\n  \"ltdot\":\"\\u22D6\",\n  \"lthree\":\"\\u22CB\",\n  \"ltimes\":\"\\u22C9\",\n  \"ltlarr\":\"\\u2976\",\n  \"ltquest\":\"\\u2A7B\",\n  \"ltri\":\"\\u25C3\",\n  \"ltrie\":\"\\u22B4\",\n  \"ltrif\":\"\\u25C2\",\n  \"ltrPar\":\"\\u2996\",\n  \"lurdshar\":\"\\u294A\",\n  \"luruhar\":\"\\u2966\",\n  \"lvertneqq\":\"\\u2268\\uFE00\",\n  \"lvnE\":\"\\u2268\\uFE00\",\n  \"macr\":\"\\u00AF\",\n  \"male\":\"\\u2642\",\n  \"malt\":\"\\u2720\",\n  \"maltese\":\"\\u2720\",\n  \"Map\":\"\\u2905\",\n  \"map\":\"\\u21A6\",\n  \"mapsto\":\"\\u21A6\",\n  \"mapstodown\":\"\\u21A7\",\n  \"mapstoleft\":\"\\u21A4\",\n  \"mapstoup\":\"\\u21A5\",\n  \"marker\":\"\\u25AE\",\n  \"mcomma\":\"\\u2A29\",\n  \"Mcy\":\"\\u041C\",\n  \"mcy\":\"\\u043C\",\n  \"mdash\":\"\\u2014\",\n  \"mDDot\":\"\\u223A\",\n  \"measuredangle\":\"\\u2221\",\n  \"MediumSpace\":\"\\u205F\",\n  \"Mellintrf\":\"\\u2133\",\n  \"Mfr\":\"\\uD835\\uDD10\",\n  \"mfr\":\"\\uD835\\uDD2A\",\n  \"mho\":\"\\u2127\",\n  \"micro\":\"\\u00B5\",\n  \"mid\":\"\\u2223\",\n  \"midast\":\"\\u002A\",\n  \"midcir\":\"\\u2AF0\",\n  \"middot\":\"\\u00B7\",\n  \"minus\":\"\\u2212\",\n  \"minusb\":\"\\u229F\",\n  \"minusd\":\"\\u2238\",\n  \"minusdu\":\"\\u2A2A\",\n  \"MinusPlus\":\"\\u2213\",\n  \"mlcp\":\"\\u2ADB\",\n  \"mldr\":\"\\u2026\",\n  \"mnplus\":\"\\u2213\",\n  \"models\":\"\\u22A7\",\n  \"Mopf\":\"\\uD835\\uDD44\",\n  \"mopf\":\"\\uD835\\uDD5E\",\n  \"mp\":\"\\u2213\",\n  \"Mscr\":\"\\u2133\",\n  \"mscr\":\"\\uD835\\uDCC2\",\n  \"mstpos\":\"\\u223E\",\n  \"Mu\":\"\\u039C\",\n  \"mu\":\"\\u03BC\",\n  \"multimap\":\"\\u22B8\",\n  \"mumap\":\"\\u22B8\",\n  \"nabla\":\"\\u2207\",\n  \"Nacute\":\"\\u0143\",\n  \"nacute\":\"\\u0144\",\n  \"nang\":\"\\u2220\\u20D2\",\n  \"nap\":\"\\u2249\",\n  \"napE\":\"\\u2A70\\u0338\",\n  \"napid\":\"\\u224B\\u0338\",\n  \"napos\":\"\\u0149\",\n  \"napprox\":\"\\u2249\",\n  \"natur\":\"\\u266E\",\n  \"natural\":\"\\u266E\",\n  \"naturals\":\"\\u2115\",\n  \"nbsp\":\"\\u00A0\",\n  \"nbump\":\"\\u224E\\u0338\",\n  \"nbumpe\":\"\\u224F\\u0338\",\n  \"ncap\":\"\\u2A43\",\n  \"Ncaron\":\"\\u0147\",\n  \"ncaron\":\"\\u0148\",\n  \"Ncedil\":\"\\u0145\",\n  \"ncedil\":\"\\u0146\",\n  \"ncong\":\"\\u2247\",\n  \"ncongdot\":\"\\u2A6D\\u0338\",\n  \"ncup\":\"\\u2A42\",\n  \"Ncy\":\"\\u041D\",\n  \"ncy\":\"\\u043D\",\n  \"ndash\":\"\\u2013\",\n  \"ne\":\"\\u2260\",\n  \"nearhk\":\"\\u2924\",\n  \"neArr\":\"\\u21D7\",\n  \"nearr\":\"\\u2197\",\n  \"nearrow\":\"\\u2197\",\n  \"nedot\":\"\\u2250\\u0338\",\n  \"NegativeMediumSpace\":\"\\u200B\",\n  \"NegativeThickSpace\":\"\\u200B\",\n  \"NegativeThinSpace\":\"\\u200B\",\n  \"NegativeVeryThinSpace\":\"\\u200B\",\n  \"nequiv\":\"\\u2262\",\n  \"nesear\":\"\\u2928\",\n  \"nesim\":\"\\u2242\\u0338\",\n  \"NestedGreaterGreater\":\"\\u226B\",\n  \"NestedLessLess\":\"\\u226A\",\n  \"NewLine\":\"\\u000A\",\n  \"nexist\":\"\\u2204\",\n  \"nexists\":\"\\u2204\",\n  \"Nfr\":\"\\uD835\\uDD11\",\n  \"nfr\":\"\\uD835\\uDD2B\",\n  \"ngE\":\"\\u2267\\u0338\",\n  \"nge\":\"\\u2271\",\n  \"ngeq\":\"\\u2271\",\n  \"ngeqq\":\"\\u2267\\u0338\",\n  \"ngeqslant\":\"\\u2A7E\\u0338\",\n  \"nges\":\"\\u2A7E\\u0338\",\n  \"nGg\":\"\\u22D9\\u0338\",\n  \"ngsim\":\"\\u2275\",\n  \"nGt\":\"\\u226B\\u20D2\",\n  \"ngt\":\"\\u226F\",\n  \"ngtr\":\"\\u226F\",\n  \"nGtv\":\"\\u226B\\u0338\",\n  \"nhArr\":\"\\u21CE\",\n  \"nharr\":\"\\u21AE\",\n  \"nhpar\":\"\\u2AF2\",\n  \"ni\":\"\\u220B\",\n  \"nis\":\"\\u22FC\",\n  \"nisd\":\"\\u22FA\",\n  \"niv\":\"\\u220B\",\n  \"NJcy\":\"\\u040A\",\n  \"njcy\":\"\\u045A\",\n  \"nlArr\":\"\\u21CD\",\n  \"nlarr\":\"\\u219A\",\n  \"nldr\":\"\\u2025\",\n  \"nlE\":\"\\u2266\\u0338\",\n  \"nle\":\"\\u2270\",\n  \"nLeftarrow\":\"\\u21CD\",\n  \"nleftarrow\":\"\\u219A\",\n  \"nLeftrightarrow\":\"\\u21CE\",\n  \"nleftrightarrow\":\"\\u21AE\",\n  \"nleq\":\"\\u2270\",\n  \"nleqq\":\"\\u2266\\u0338\",\n  \"nleqslant\":\"\\u2A7D\\u0338\",\n  \"nles\":\"\\u2A7D\\u0338\",\n  \"nless\":\"\\u226E\",\n  \"nLl\":\"\\u22D8\\u0338\",\n  \"nlsim\":\"\\u2274\",\n  \"nLt\":\"\\u226A\\u20D2\",\n  \"nlt\":\"\\u226E\",\n  \"nltri\":\"\\u22EA\",\n  \"nltrie\":\"\\u22EC\",\n  \"nLtv\":\"\\u226A\\u0338\",\n  \"nmid\":\"\\u2224\",\n  \"NoBreak\":\"\\u2060\",\n  \"NonBreakingSpace\":\"\\u00A0\",\n  \"Nopf\":\"\\u2115\",\n  \"nopf\":\"\\uD835\\uDD5F\",\n  \"Not\":\"\\u2AEC\",\n  \"not\":\"\\u00AC\",\n  \"NotCongruent\":\"\\u2262\",\n  \"NotCupCap\":\"\\u226D\",\n  \"NotDoubleVerticalBar\":\"\\u2226\",\n  \"NotElement\":\"\\u2209\",\n  \"NotEqual\":\"\\u2260\",\n  \"NotEqualTilde\":\"\\u2242\\u0338\",\n  \"NotExists\":\"\\u2204\",\n  \"NotGreater\":\"\\u226F\",\n  \"NotGreaterEqual\":\"\\u2271\",\n  \"NotGreaterFullEqual\":\"\\u2267\\u0338\",\n  \"NotGreaterGreater\":\"\\u226B\\u0338\",\n  \"NotGreaterLess\":\"\\u2279\",\n  \"NotGreaterSlantEqual\":\"\\u2A7E\\u0338\",\n  \"NotGreaterTilde\":\"\\u2275\",\n  \"NotHumpDownHump\":\"\\u224E\\u0338\",\n  \"NotHumpEqual\":\"\\u224F\\u0338\",\n  \"notin\":\"\\u2209\",\n  \"notindot\":\"\\u22F5\\u0338\",\n  \"notinE\":\"\\u22F9\\u0338\",\n  \"notinva\":\"\\u2209\",\n  \"notinvb\":\"\\u22F7\",\n  \"notinvc\":\"\\u22F6\",\n  \"NotLeftTriangle\":\"\\u22EA\",\n  \"NotLeftTriangleBar\":\"\\u29CF\\u0338\",\n  \"NotLeftTriangleEqual\":\"\\u22EC\",\n  \"NotLess\":\"\\u226E\",\n  \"NotLessEqual\":\"\\u2270\",\n  \"NotLessGreater\":\"\\u2278\",\n  \"NotLessLess\":\"\\u226A\\u0338\",\n  \"NotLessSlantEqual\":\"\\u2A7D\\u0338\",\n  \"NotLessTilde\":\"\\u2274\",\n  \"NotNestedGreaterGreater\":\"\\u2AA2\\u0338\",\n  \"NotNestedLessLess\":\"\\u2AA1\\u0338\",\n  \"notni\":\"\\u220C\",\n  \"notniva\":\"\\u220C\",\n  \"notnivb\":\"\\u22FE\",\n  \"notnivc\":\"\\u22FD\",\n  \"NotPrecedes\":\"\\u2280\",\n  \"NotPrecedesEqual\":\"\\u2AAF\\u0338\",\n  \"NotPrecedesSlantEqual\":\"\\u22E0\",\n  \"NotReverseElement\":\"\\u220C\",\n  \"NotRightTriangle\":\"\\u22EB\",\n  \"NotRightTriangleBar\":\"\\u29D0\\u0338\",\n  \"NotRightTriangleEqual\":\"\\u22ED\",\n  \"NotSquareSubset\":\"\\u228F\\u0338\",\n  \"NotSquareSubsetEqual\":\"\\u22E2\",\n  \"NotSquareSuperset\":\"\\u2290\\u0338\",\n  \"NotSquareSupersetEqual\":\"\\u22E3\",\n  \"NotSubset\":\"\\u2282\\u20D2\",\n  \"NotSubsetEqual\":\"\\u2288\",\n  \"NotSucceeds\":\"\\u2281\",\n  \"NotSucceedsEqual\":\"\\u2AB0\\u0338\",\n  \"NotSucceedsSlantEqual\":\"\\u22E1\",\n  \"NotSucceedsTilde\":\"\\u227F\\u0338\",\n  \"NotSuperset\":\"\\u2283\\u20D2\",\n  \"NotSupersetEqual\":\"\\u2289\",\n  \"NotTilde\":\"\\u2241\",\n  \"NotTildeEqual\":\"\\u2244\",\n  \"NotTildeFullEqual\":\"\\u2247\",\n  \"NotTildeTilde\":\"\\u2249\",\n  \"NotVerticalBar\":\"\\u2224\",\n  \"npar\":\"\\u2226\",\n  \"nparallel\":\"\\u2226\",\n  \"nparsl\":\"\\u2AFD\\u20E5\",\n  \"npart\":\"\\u2202\\u0338\",\n  \"npolint\":\"\\u2A14\",\n  \"npr\":\"\\u2280\",\n  \"nprcue\":\"\\u22E0\",\n  \"npre\":\"\\u2AAF\\u0338\",\n  \"nprec\":\"\\u2280\",\n  \"npreceq\":\"\\u2AAF\\u0338\",\n  \"nrArr\":\"\\u21CF\",\n  \"nrarr\":\"\\u219B\",\n  \"nrarrc\":\"\\u2933\\u0338\",\n  \"nrarrw\":\"\\u219D\\u0338\",\n  \"nRightarrow\":\"\\u21CF\",\n  \"nrightarrow\":\"\\u219B\",\n  \"nrtri\":\"\\u22EB\",\n  \"nrtrie\":\"\\u22ED\",\n  \"nsc\":\"\\u2281\",\n  \"nsccue\":\"\\u22E1\",\n  \"nsce\":\"\\u2AB0\\u0338\",\n  \"Nscr\":\"\\uD835\\uDCA9\",\n  \"nscr\":\"\\uD835\\uDCC3\",\n  \"nshortmid\":\"\\u2224\",\n  \"nshortparallel\":\"\\u2226\",\n  \"nsim\":\"\\u2241\",\n  \"nsime\":\"\\u2244\",\n  \"nsimeq\":\"\\u2244\",\n  \"nsmid\":\"\\u2224\",\n  \"nspar\":\"\\u2226\",\n  \"nsqsube\":\"\\u22E2\",\n  \"nsqsupe\":\"\\u22E3\",\n  \"nsub\":\"\\u2284\",\n  \"nsubE\":\"\\u2AC5\\u0338\",\n  \"nsube\":\"\\u2288\",\n  \"nsubset\":\"\\u2282\\u20D2\",\n  \"nsubseteq\":\"\\u2288\",\n  \"nsubseteqq\":\"\\u2AC5\\u0338\",\n  \"nsucc\":\"\\u2281\",\n  \"nsucceq\":\"\\u2AB0\\u0338\",\n  \"nsup\":\"\\u2285\",\n  \"nsupE\":\"\\u2AC6\\u0338\",\n  \"nsupe\":\"\\u2289\",\n  \"nsupset\":\"\\u2283\\u20D2\",\n  \"nsupseteq\":\"\\u2289\",\n  \"nsupseteqq\":\"\\u2AC6\\u0338\",\n  \"ntgl\":\"\\u2279\",\n  \"Ntilde\":\"\\u00D1\",\n  \"ntilde\":\"\\u00F1\",\n  \"ntlg\":\"\\u2278\",\n  \"ntriangleleft\":\"\\u22EA\",\n  \"ntrianglelefteq\":\"\\u22EC\",\n  \"ntriangleright\":\"\\u22EB\",\n  \"ntrianglerighteq\":\"\\u22ED\",\n  \"Nu\":\"\\u039D\",\n  \"nu\":\"\\u03BD\",\n  \"num\":\"\\u0023\",\n  \"numero\":\"\\u2116\",\n  \"numsp\":\"\\u2007\",\n  \"nvap\":\"\\u224D\\u20D2\",\n  \"nVDash\":\"\\u22AF\",\n  \"nVdash\":\"\\u22AE\",\n  \"nvDash\":\"\\u22AD\",\n  \"nvdash\":\"\\u22AC\",\n  \"nvge\":\"\\u2265\\u20D2\",\n  \"nvgt\":\"\\u003E\\u20D2\",\n  \"nvHarr\":\"\\u2904\",\n  \"nvinfin\":\"\\u29DE\",\n  \"nvlArr\":\"\\u2902\",\n  \"nvle\":\"\\u2264\\u20D2\",\n  \"nvlt\":\"\\u003C\\u20D2\",\n  \"nvltrie\":\"\\u22B4\\u20D2\",\n  \"nvrArr\":\"\\u2903\",\n  \"nvrtrie\":\"\\u22B5\\u20D2\",\n  \"nvsim\":\"\\u223C\\u20D2\",\n  \"nwarhk\":\"\\u2923\",\n  \"nwArr\":\"\\u21D6\",\n  \"nwarr\":\"\\u2196\",\n  \"nwarrow\":\"\\u2196\",\n  \"nwnear\":\"\\u2927\",\n  \"Oacute\":\"\\u00D3\",\n  \"oacute\":\"\\u00F3\",\n  \"oast\":\"\\u229B\",\n  \"ocir\":\"\\u229A\",\n  \"Ocirc\":\"\\u00D4\",\n  \"ocirc\":\"\\u00F4\",\n  \"Ocy\":\"\\u041E\",\n  \"ocy\":\"\\u043E\",\n  \"odash\":\"\\u229D\",\n  \"Odblac\":\"\\u0150\",\n  \"odblac\":\"\\u0151\",\n  \"odiv\":\"\\u2A38\",\n  \"odot\":\"\\u2299\",\n  \"odsold\":\"\\u29BC\",\n  \"OElig\":\"\\u0152\",\n  \"oelig\":\"\\u0153\",\n  \"ofcir\":\"\\u29BF\",\n  \"Ofr\":\"\\uD835\\uDD12\",\n  \"ofr\":\"\\uD835\\uDD2C\",\n  \"ogon\":\"\\u02DB\",\n  \"Ograve\":\"\\u00D2\",\n  \"ograve\":\"\\u00F2\",\n  \"ogt\":\"\\u29C1\",\n  \"ohbar\":\"\\u29B5\",\n  \"ohm\":\"\\u03A9\",\n  \"oint\":\"\\u222E\",\n  \"olarr\":\"\\u21BA\",\n  \"olcir\":\"\\u29BE\",\n  \"olcross\":\"\\u29BB\",\n  \"oline\":\"\\u203E\",\n  \"olt\":\"\\u29C0\",\n  \"Omacr\":\"\\u014C\",\n  \"omacr\":\"\\u014D\",\n  \"Omega\":\"\\u03A9\",\n  \"omega\":\"\\u03C9\",\n  \"Omicron\":\"\\u039F\",\n  \"omicron\":\"\\u03BF\",\n  \"omid\":\"\\u29B6\",\n  \"ominus\":\"\\u2296\",\n  \"Oopf\":\"\\uD835\\uDD46\",\n  \"oopf\":\"\\uD835\\uDD60\",\n  \"opar\":\"\\u29B7\",\n  \"OpenCurlyDoubleQuote\":\"\\u201C\",\n  \"OpenCurlyQuote\":\"\\u2018\",\n  \"operp\":\"\\u29B9\",\n  \"oplus\":\"\\u2295\",\n  \"Or\":\"\\u2A54\",\n  \"or\":\"\\u2228\",\n  \"orarr\":\"\\u21BB\",\n  \"ord\":\"\\u2A5D\",\n  \"order\":\"\\u2134\",\n  \"orderof\":\"\\u2134\",\n  \"ordf\":\"\\u00AA\",\n  \"ordm\":\"\\u00BA\",\n  \"origof\":\"\\u22B6\",\n  \"oror\":\"\\u2A56\",\n  \"orslope\":\"\\u2A57\",\n  \"orv\":\"\\u2A5B\",\n  \"oS\":\"\\u24C8\",\n  \"Oscr\":\"\\uD835\\uDCAA\",\n  \"oscr\":\"\\u2134\",\n  \"Oslash\":\"\\u00D8\",\n  \"oslash\":\"\\u00F8\",\n  \"osol\":\"\\u2298\",\n  \"Otilde\":\"\\u00D5\",\n  \"otilde\":\"\\u00F5\",\n  \"Otimes\":\"\\u2A37\",\n  \"otimes\":\"\\u2297\",\n  \"otimesas\":\"\\u2A36\",\n  \"Ouml\":\"\\u00D6\",\n  \"ouml\":\"\\u00F6\",\n  \"ovbar\":\"\\u233D\",\n  \"OverBar\":\"\\u203E\",\n  \"OverBrace\":\"\\u23DE\",\n  \"OverBracket\":\"\\u23B4\",\n  \"OverParenthesis\":\"\\u23DC\",\n  \"par\":\"\\u2225\",\n  \"para\":\"\\u00B6\",\n  \"parallel\":\"\\u2225\",\n  \"parsim\":\"\\u2AF3\",\n  \"parsl\":\"\\u2AFD\",\n  \"part\":\"\\u2202\",\n  \"PartialD\":\"\\u2202\",\n  \"Pcy\":\"\\u041F\",\n  \"pcy\":\"\\u043F\",\n  \"percnt\":\"\\u0025\",\n  \"period\":\"\\u002E\",\n  \"permil\":\"\\u2030\",\n  \"perp\":\"\\u22A5\",\n  \"pertenk\":\"\\u2031\",\n  \"Pfr\":\"\\uD835\\uDD13\",\n  \"pfr\":\"\\uD835\\uDD2D\",\n  \"Phi\":\"\\u03A6\",\n  \"phi\":\"\\u03C6\",\n  \"phiv\":\"\\u03D5\",\n  \"phmmat\":\"\\u2133\",\n  \"phone\":\"\\u260E\",\n  \"Pi\":\"\\u03A0\",\n  \"pi\":\"\\u03C0\",\n  \"pitchfork\":\"\\u22D4\",\n  \"piv\":\"\\u03D6\",\n  \"planck\":\"\\u210F\",\n  \"planckh\":\"\\u210E\",\n  \"plankv\":\"\\u210F\",\n  \"plus\":\"\\u002B\",\n  \"plusacir\":\"\\u2A23\",\n  \"plusb\":\"\\u229E\",\n  \"pluscir\":\"\\u2A22\",\n  \"plusdo\":\"\\u2214\",\n  \"plusdu\":\"\\u2A25\",\n  \"pluse\":\"\\u2A72\",\n  \"PlusMinus\":\"\\u00B1\",\n  \"plusmn\":\"\\u00B1\",\n  \"plussim\":\"\\u2A26\",\n  \"plustwo\":\"\\u2A27\",\n  \"pm\":\"\\u00B1\",\n  \"Poincareplane\":\"\\u210C\",\n  \"pointint\":\"\\u2A15\",\n  \"Popf\":\"\\u2119\",\n  \"popf\":\"\\uD835\\uDD61\",\n  \"pound\":\"\\u00A3\",\n  \"Pr\":\"\\u2ABB\",\n  \"pr\":\"\\u227A\",\n  \"prap\":\"\\u2AB7\",\n  \"prcue\":\"\\u227C\",\n  \"prE\":\"\\u2AB3\",\n  \"pre\":\"\\u2AAF\",\n  \"prec\":\"\\u227A\",\n  \"precapprox\":\"\\u2AB7\",\n  \"preccurlyeq\":\"\\u227C\",\n  \"Precedes\":\"\\u227A\",\n  \"PrecedesEqual\":\"\\u2AAF\",\n  \"PrecedesSlantEqual\":\"\\u227C\",\n  \"PrecedesTilde\":\"\\u227E\",\n  \"preceq\":\"\\u2AAF\",\n  \"precnapprox\":\"\\u2AB9\",\n  \"precneqq\":\"\\u2AB5\",\n  \"precnsim\":\"\\u22E8\",\n  \"precsim\":\"\\u227E\",\n  \"Prime\":\"\\u2033\",\n  \"prime\":\"\\u2032\",\n  \"primes\":\"\\u2119\",\n  \"prnap\":\"\\u2AB9\",\n  \"prnE\":\"\\u2AB5\",\n  \"prnsim\":\"\\u22E8\",\n  \"prod\":\"\\u220F\",\n  \"Product\":\"\\u220F\",\n  \"profalar\":\"\\u232E\",\n  \"profline\":\"\\u2312\",\n  \"profsurf\":\"\\u2313\",\n  \"prop\":\"\\u221D\",\n  \"Proportion\":\"\\u2237\",\n  \"Proportional\":\"\\u221D\",\n  \"propto\":\"\\u221D\",\n  \"prsim\":\"\\u227E\",\n  \"prurel\":\"\\u22B0\",\n  \"Pscr\":\"\\uD835\\uDCAB\",\n  \"pscr\":\"\\uD835\\uDCC5\",\n  \"Psi\":\"\\u03A8\",\n  \"psi\":\"\\u03C8\",\n  \"puncsp\":\"\\u2008\",\n  \"Qfr\":\"\\uD835\\uDD14\",\n  \"qfr\":\"\\uD835\\uDD2E\",\n  \"qint\":\"\\u2A0C\",\n  \"Qopf\":\"\\u211A\",\n  \"qopf\":\"\\uD835\\uDD62\",\n  \"qprime\":\"\\u2057\",\n  \"Qscr\":\"\\uD835\\uDCAC\",\n  \"qscr\":\"\\uD835\\uDCC6\",\n  \"quaternions\":\"\\u210D\",\n  \"quatint\":\"\\u2A16\",\n  \"quest\":\"\\u003F\",\n  \"questeq\":\"\\u225F\",\n  \"QUOT\":\"\\u0022\",\n  \"quot\":\"\\u0022\",\n  \"rAarr\":\"\\u21DB\",\n  \"race\":\"\\u223D\\u0331\",\n  \"Racute\":\"\\u0154\",\n  \"racute\":\"\\u0155\",\n  \"radic\":\"\\u221A\",\n  \"raemptyv\":\"\\u29B3\",\n  \"Rang\":\"\\u27EB\",\n  \"rang\":\"\\u27E9\",\n  \"rangd\":\"\\u2992\",\n  \"range\":\"\\u29A5\",\n  \"rangle\":\"\\u27E9\",\n  \"raquo\":\"\\u00BB\",\n  \"Rarr\":\"\\u21A0\",\n  \"rArr\":\"\\u21D2\",\n  \"rarr\":\"\\u2192\",\n  \"rarrap\":\"\\u2975\",\n  \"rarrb\":\"\\u21E5\",\n  \"rarrbfs\":\"\\u2920\",\n  \"rarrc\":\"\\u2933\",\n  \"rarrfs\":\"\\u291E\",\n  \"rarrhk\":\"\\u21AA\",\n  \"rarrlp\":\"\\u21AC\",\n  \"rarrpl\":\"\\u2945\",\n  \"rarrsim\":\"\\u2974\",\n  \"Rarrtl\":\"\\u2916\",\n  \"rarrtl\":\"\\u21A3\",\n  \"rarrw\":\"\\u219D\",\n  \"rAtail\":\"\\u291C\",\n  \"ratail\":\"\\u291A\",\n  \"ratio\":\"\\u2236\",\n  \"rationals\":\"\\u211A\",\n  \"RBarr\":\"\\u2910\",\n  \"rBarr\":\"\\u290F\",\n  \"rbarr\":\"\\u290D\",\n  \"rbbrk\":\"\\u2773\",\n  \"rbrace\":\"\\u007D\",\n  \"rbrack\":\"\\u005D\",\n  \"rbrke\":\"\\u298C\",\n  \"rbrksld\":\"\\u298E\",\n  \"rbrkslu\":\"\\u2990\",\n  \"Rcaron\":\"\\u0158\",\n  \"rcaron\":\"\\u0159\",\n  \"Rcedil\":\"\\u0156\",\n  \"rcedil\":\"\\u0157\",\n  \"rceil\":\"\\u2309\",\n  \"rcub\":\"\\u007D\",\n  \"Rcy\":\"\\u0420\",\n  \"rcy\":\"\\u0440\",\n  \"rdca\":\"\\u2937\",\n  \"rdldhar\":\"\\u2969\",\n  \"rdquo\":\"\\u201D\",\n  \"rdquor\":\"\\u201D\",\n  \"rdsh\":\"\\u21B3\",\n  \"Re\":\"\\u211C\",\n  \"real\":\"\\u211C\",\n  \"realine\":\"\\u211B\",\n  \"realpart\":\"\\u211C\",\n  \"reals\":\"\\u211D\",\n  \"rect\":\"\\u25AD\",\n  \"REG\":\"\\u00AE\",\n  \"reg\":\"\\u00AE\",\n  \"ReverseElement\":\"\\u220B\",\n  \"ReverseEquilibrium\":\"\\u21CB\",\n  \"ReverseUpEquilibrium\":\"\\u296F\",\n  \"rfisht\":\"\\u297D\",\n  \"rfloor\":\"\\u230B\",\n  \"Rfr\":\"\\u211C\",\n  \"rfr\":\"\\uD835\\uDD2F\",\n  \"rHar\":\"\\u2964\",\n  \"rhard\":\"\\u21C1\",\n  \"rharu\":\"\\u21C0\",\n  \"rharul\":\"\\u296C\",\n  \"Rho\":\"\\u03A1\",\n  \"rho\":\"\\u03C1\",\n  \"rhov\":\"\\u03F1\",\n  \"RightAngleBracket\":\"\\u27E9\",\n  \"RightArrow\":\"\\u2192\",\n  \"Rightarrow\":\"\\u21D2\",\n  \"rightarrow\":\"\\u2192\",\n  \"RightArrowBar\":\"\\u21E5\",\n  \"RightArrowLeftArrow\":\"\\u21C4\",\n  \"rightarrowtail\":\"\\u21A3\",\n  \"RightCeiling\":\"\\u2309\",\n  \"RightDoubleBracket\":\"\\u27E7\",\n  \"RightDownTeeVector\":\"\\u295D\",\n  \"RightDownVector\":\"\\u21C2\",\n  \"RightDownVectorBar\":\"\\u2955\",\n  \"RightFloor\":\"\\u230B\",\n  \"rightharpoondown\":\"\\u21C1\",\n  \"rightharpoonup\":\"\\u21C0\",\n  \"rightleftarrows\":\"\\u21C4\",\n  \"rightleftharpoons\":\"\\u21CC\",\n  \"rightrightarrows\":\"\\u21C9\",\n  \"rightsquigarrow\":\"\\u219D\",\n  \"RightTee\":\"\\u22A2\",\n  \"RightTeeArrow\":\"\\u21A6\",\n  \"RightTeeVector\":\"\\u295B\",\n  \"rightthreetimes\":\"\\u22CC\",\n  \"RightTriangle\":\"\\u22B3\",\n  \"RightTriangleBar\":\"\\u29D0\",\n  \"RightTriangleEqual\":\"\\u22B5\",\n  \"RightUpDownVector\":\"\\u294F\",\n  \"RightUpTeeVector\":\"\\u295C\",\n  \"RightUpVector\":\"\\u21BE\",\n  \"RightUpVectorBar\":\"\\u2954\",\n  \"RightVector\":\"\\u21C0\",\n  \"RightVectorBar\":\"\\u2953\",\n  \"ring\":\"\\u02DA\",\n  \"risingdotseq\":\"\\u2253\",\n  \"rlarr\":\"\\u21C4\",\n  \"rlhar\":\"\\u21CC\",\n  \"rlm\":\"\\u200F\",\n  \"rmoust\":\"\\u23B1\",\n  \"rmoustache\":\"\\u23B1\",\n  \"rnmid\":\"\\u2AEE\",\n  \"roang\":\"\\u27ED\",\n  \"roarr\":\"\\u21FE\",\n  \"robrk\":\"\\u27E7\",\n  \"ropar\":\"\\u2986\",\n  \"Ropf\":\"\\u211D\",\n  \"ropf\":\"\\uD835\\uDD63\",\n  \"roplus\":\"\\u2A2E\",\n  \"rotimes\":\"\\u2A35\",\n  \"RoundImplies\":\"\\u2970\",\n  \"rpar\":\"\\u0029\",\n  \"rpargt\":\"\\u2994\",\n  \"rppolint\":\"\\u2A12\",\n  \"rrarr\":\"\\u21C9\",\n  \"Rrightarrow\":\"\\u21DB\",\n  \"rsaquo\":\"\\u203A\",\n  \"Rscr\":\"\\u211B\",\n  \"rscr\":\"\\uD835\\uDCC7\",\n  \"Rsh\":\"\\u21B1\",\n  \"rsh\":\"\\u21B1\",\n  \"rsqb\":\"\\u005D\",\n  \"rsquo\":\"\\u2019\",\n  \"rsquor\":\"\\u2019\",\n  \"rthree\":\"\\u22CC\",\n  \"rtimes\":\"\\u22CA\",\n  \"rtri\":\"\\u25B9\",\n  \"rtrie\":\"\\u22B5\",\n  \"rtrif\":\"\\u25B8\",\n  \"rtriltri\":\"\\u29CE\",\n  \"RuleDelayed\":\"\\u29F4\",\n  \"ruluhar\":\"\\u2968\",\n  \"rx\":\"\\u211E\",\n  \"Sacute\":\"\\u015A\",\n  \"sacute\":\"\\u015B\",\n  \"sbquo\":\"\\u201A\",\n  \"Sc\":\"\\u2ABC\",\n  \"sc\":\"\\u227B\",\n  \"scap\":\"\\u2AB8\",\n  \"Scaron\":\"\\u0160\",\n  \"scaron\":\"\\u0161\",\n  \"sccue\":\"\\u227D\",\n  \"scE\":\"\\u2AB4\",\n  \"sce\":\"\\u2AB0\",\n  \"Scedil\":\"\\u015E\",\n  \"scedil\":\"\\u015F\",\n  \"Scirc\":\"\\u015C\",\n  \"scirc\":\"\\u015D\",\n  \"scnap\":\"\\u2ABA\",\n  \"scnE\":\"\\u2AB6\",\n  \"scnsim\":\"\\u22E9\",\n  \"scpolint\":\"\\u2A13\",\n  \"scsim\":\"\\u227F\",\n  \"Scy\":\"\\u0421\",\n  \"scy\":\"\\u0441\",\n  \"sdot\":\"\\u22C5\",\n  \"sdotb\":\"\\u22A1\",\n  \"sdote\":\"\\u2A66\",\n  \"searhk\":\"\\u2925\",\n  \"seArr\":\"\\u21D8\",\n  \"searr\":\"\\u2198\",\n  \"searrow\":\"\\u2198\",\n  \"sect\":\"\\u00A7\",\n  \"semi\":\"\\u003B\",\n  \"seswar\":\"\\u2929\",\n  \"setminus\":\"\\u2216\",\n  \"setmn\":\"\\u2216\",\n  \"sext\":\"\\u2736\",\n  \"Sfr\":\"\\uD835\\uDD16\",\n  \"sfr\":\"\\uD835\\uDD30\",\n  \"sfrown\":\"\\u2322\",\n  \"sharp\":\"\\u266F\",\n  \"SHCHcy\":\"\\u0429\",\n  \"shchcy\":\"\\u0449\",\n  \"SHcy\":\"\\u0428\",\n  \"shcy\":\"\\u0448\",\n  \"ShortDownArrow\":\"\\u2193\",\n  \"ShortLeftArrow\":\"\\u2190\",\n  \"shortmid\":\"\\u2223\",\n  \"shortparallel\":\"\\u2225\",\n  \"ShortRightArrow\":\"\\u2192\",\n  \"ShortUpArrow\":\"\\u2191\",\n  \"shy\":\"\\u00AD\",\n  \"Sigma\":\"\\u03A3\",\n  \"sigma\":\"\\u03C3\",\n  \"sigmaf\":\"\\u03C2\",\n  \"sigmav\":\"\\u03C2\",\n  \"sim\":\"\\u223C\",\n  \"simdot\":\"\\u2A6A\",\n  \"sime\":\"\\u2243\",\n  \"simeq\":\"\\u2243\",\n  \"simg\":\"\\u2A9E\",\n  \"simgE\":\"\\u2AA0\",\n  \"siml\":\"\\u2A9D\",\n  \"simlE\":\"\\u2A9F\",\n  \"simne\":\"\\u2246\",\n  \"simplus\":\"\\u2A24\",\n  \"simrarr\":\"\\u2972\",\n  \"slarr\":\"\\u2190\",\n  \"SmallCircle\":\"\\u2218\",\n  \"smallsetminus\":\"\\u2216\",\n  \"smashp\":\"\\u2A33\",\n  \"smeparsl\":\"\\u29E4\",\n  \"smid\":\"\\u2223\",\n  \"smile\":\"\\u2323\",\n  \"smt\":\"\\u2AAA\",\n  \"smte\":\"\\u2AAC\",\n  \"smtes\":\"\\u2AAC\\uFE00\",\n  \"SOFTcy\":\"\\u042C\",\n  \"softcy\":\"\\u044C\",\n  \"sol\":\"\\u002F\",\n  \"solb\":\"\\u29C4\",\n  \"solbar\":\"\\u233F\",\n  \"Sopf\":\"\\uD835\\uDD4A\",\n  \"sopf\":\"\\uD835\\uDD64\",\n  \"spades\":\"\\u2660\",\n  \"spadesuit\":\"\\u2660\",\n  \"spar\":\"\\u2225\",\n  \"sqcap\":\"\\u2293\",\n  \"sqcaps\":\"\\u2293\\uFE00\",\n  \"sqcup\":\"\\u2294\",\n  \"sqcups\":\"\\u2294\\uFE00\",\n  \"Sqrt\":\"\\u221A\",\n  \"sqsub\":\"\\u228F\",\n  \"sqsube\":\"\\u2291\",\n  \"sqsubset\":\"\\u228F\",\n  \"sqsubseteq\":\"\\u2291\",\n  \"sqsup\":\"\\u2290\",\n  \"sqsupe\":\"\\u2292\",\n  \"sqsupset\":\"\\u2290\",\n  \"sqsupseteq\":\"\\u2292\",\n  \"squ\":\"\\u25A1\",\n  \"Square\":\"\\u25A1\",\n  \"square\":\"\\u25A1\",\n  \"SquareIntersection\":\"\\u2293\",\n  \"SquareSubset\":\"\\u228F\",\n  \"SquareSubsetEqual\":\"\\u2291\",\n  \"SquareSuperset\":\"\\u2290\",\n  \"SquareSupersetEqual\":\"\\u2292\",\n  \"SquareUnion\":\"\\u2294\",\n  \"squarf\":\"\\u25AA\",\n  \"squf\":\"\\u25AA\",\n  \"srarr\":\"\\u2192\",\n  \"Sscr\":\"\\uD835\\uDCAE\",\n  \"sscr\":\"\\uD835\\uDCC8\",\n  \"ssetmn\":\"\\u2216\",\n  \"ssmile\":\"\\u2323\",\n  \"sstarf\":\"\\u22C6\",\n  \"Star\":\"\\u22C6\",\n  \"star\":\"\\u2606\",\n  \"starf\":\"\\u2605\",\n  \"straightepsilon\":\"\\u03F5\",\n  \"straightphi\":\"\\u03D5\",\n  \"strns\":\"\\u00AF\",\n  \"Sub\":\"\\u22D0\",\n  \"sub\":\"\\u2282\",\n  \"subdot\":\"\\u2ABD\",\n  \"subE\":\"\\u2AC5\",\n  \"sube\":\"\\u2286\",\n  \"subedot\":\"\\u2AC3\",\n  \"submult\":\"\\u2AC1\",\n  \"subnE\":\"\\u2ACB\",\n  \"subne\":\"\\u228A\",\n  \"subplus\":\"\\u2ABF\",\n  \"subrarr\":\"\\u2979\",\n  \"Subset\":\"\\u22D0\",\n  \"subset\":\"\\u2282\",\n  \"subseteq\":\"\\u2286\",\n  \"subseteqq\":\"\\u2AC5\",\n  \"SubsetEqual\":\"\\u2286\",\n  \"subsetneq\":\"\\u228A\",\n  \"subsetneqq\":\"\\u2ACB\",\n  \"subsim\":\"\\u2AC7\",\n  \"subsub\":\"\\u2AD5\",\n  \"subsup\":\"\\u2AD3\",\n  \"succ\":\"\\u227B\",\n  \"succapprox\":\"\\u2AB8\",\n  \"succcurlyeq\":\"\\u227D\",\n  \"Succeeds\":\"\\u227B\",\n  \"SucceedsEqual\":\"\\u2AB0\",\n  \"SucceedsSlantEqual\":\"\\u227D\",\n  \"SucceedsTilde\":\"\\u227F\",\n  \"succeq\":\"\\u2AB0\",\n  \"succnapprox\":\"\\u2ABA\",\n  \"succneqq\":\"\\u2AB6\",\n  \"succnsim\":\"\\u22E9\",\n  \"succsim\":\"\\u227F\",\n  \"SuchThat\":\"\\u220B\",\n  \"Sum\":\"\\u2211\",\n  \"sum\":\"\\u2211\",\n  \"sung\":\"\\u266A\",\n  \"Sup\":\"\\u22D1\",\n  \"sup\":\"\\u2283\",\n  \"sup1\":\"\\u00B9\",\n  \"sup2\":\"\\u00B2\",\n  \"sup3\":\"\\u00B3\",\n  \"supdot\":\"\\u2ABE\",\n  \"supdsub\":\"\\u2AD8\",\n  \"supE\":\"\\u2AC6\",\n  \"supe\":\"\\u2287\",\n  \"supedot\":\"\\u2AC4\",\n  \"Superset\":\"\\u2283\",\n  \"SupersetEqual\":\"\\u2287\",\n  \"suphsol\":\"\\u27C9\",\n  \"suphsub\":\"\\u2AD7\",\n  \"suplarr\":\"\\u297B\",\n  \"supmult\":\"\\u2AC2\",\n  \"supnE\":\"\\u2ACC\",\n  \"supne\":\"\\u228B\",\n  \"supplus\":\"\\u2AC0\",\n  \"Supset\":\"\\u22D1\",\n  \"supset\":\"\\u2283\",\n  \"supseteq\":\"\\u2287\",\n  \"supseteqq\":\"\\u2AC6\",\n  \"supsetneq\":\"\\u228B\",\n  \"supsetneqq\":\"\\u2ACC\",\n  \"supsim\":\"\\u2AC8\",\n  \"supsub\":\"\\u2AD4\",\n  \"supsup\":\"\\u2AD6\",\n  \"swarhk\":\"\\u2926\",\n  \"swArr\":\"\\u21D9\",\n  \"swarr\":\"\\u2199\",\n  \"swarrow\":\"\\u2199\",\n  \"swnwar\":\"\\u292A\",\n  \"szlig\":\"\\u00DF\",\n  \"Tab\":\"\\u0009\",\n  \"target\":\"\\u2316\",\n  \"Tau\":\"\\u03A4\",\n  \"tau\":\"\\u03C4\",\n  \"tbrk\":\"\\u23B4\",\n  \"Tcaron\":\"\\u0164\",\n  \"tcaron\":\"\\u0165\",\n  \"Tcedil\":\"\\u0162\",\n  \"tcedil\":\"\\u0163\",\n  \"Tcy\":\"\\u0422\",\n  \"tcy\":\"\\u0442\",\n  \"tdot\":\"\\u20DB\",\n  \"telrec\":\"\\u2315\",\n  \"Tfr\":\"\\uD835\\uDD17\",\n  \"tfr\":\"\\uD835\\uDD31\",\n  \"there4\":\"\\u2234\",\n  \"Therefore\":\"\\u2234\",\n  \"therefore\":\"\\u2234\",\n  \"Theta\":\"\\u0398\",\n  \"theta\":\"\\u03B8\",\n  \"thetasym\":\"\\u03D1\",\n  \"thetav\":\"\\u03D1\",\n  \"thickapprox\":\"\\u2248\",\n  \"thicksim\":\"\\u223C\",\n  \"ThickSpace\":\"\\u205F\\u200A\",\n  \"thinsp\":\"\\u2009\",\n  \"ThinSpace\":\"\\u2009\",\n  \"thkap\":\"\\u2248\",\n  \"thksim\":\"\\u223C\",\n  \"THORN\":\"\\u00DE\",\n  \"thorn\":\"\\u00FE\",\n  \"Tilde\":\"\\u223C\",\n  \"tilde\":\"\\u02DC\",\n  \"TildeEqual\":\"\\u2243\",\n  \"TildeFullEqual\":\"\\u2245\",\n  \"TildeTilde\":\"\\u2248\",\n  \"times\":\"\\u00D7\",\n  \"timesb\":\"\\u22A0\",\n  \"timesbar\":\"\\u2A31\",\n  \"timesd\":\"\\u2A30\",\n  \"tint\":\"\\u222D\",\n  \"toea\":\"\\u2928\",\n  \"top\":\"\\u22A4\",\n  \"topbot\":\"\\u2336\",\n  \"topcir\":\"\\u2AF1\",\n  \"Topf\":\"\\uD835\\uDD4B\",\n  \"topf\":\"\\uD835\\uDD65\",\n  \"topfork\":\"\\u2ADA\",\n  \"tosa\":\"\\u2929\",\n  \"tprime\":\"\\u2034\",\n  \"TRADE\":\"\\u2122\",\n  \"trade\":\"\\u2122\",\n  \"triangle\":\"\\u25B5\",\n  \"triangledown\":\"\\u25BF\",\n  \"triangleleft\":\"\\u25C3\",\n  \"trianglelefteq\":\"\\u22B4\",\n  \"triangleq\":\"\\u225C\",\n  \"triangleright\":\"\\u25B9\",\n  \"trianglerighteq\":\"\\u22B5\",\n  \"tridot\":\"\\u25EC\",\n  \"trie\":\"\\u225C\",\n  \"triminus\":\"\\u2A3A\",\n  \"TripleDot\":\"\\u20DB\",\n  \"triplus\":\"\\u2A39\",\n  \"trisb\":\"\\u29CD\",\n  \"tritime\":\"\\u2A3B\",\n  \"trpezium\":\"\\u23E2\",\n  \"Tscr\":\"\\uD835\\uDCAF\",\n  \"tscr\":\"\\uD835\\uDCC9\",\n  \"TScy\":\"\\u0426\",\n  \"tscy\":\"\\u0446\",\n  \"TSHcy\":\"\\u040B\",\n  \"tshcy\":\"\\u045B\",\n  \"Tstrok\":\"\\u0166\",\n  \"tstrok\":\"\\u0167\",\n  \"twixt\":\"\\u226C\",\n  \"twoheadleftarrow\":\"\\u219E\",\n  \"twoheadrightarrow\":\"\\u21A0\",\n  \"Uacute\":\"\\u00DA\",\n  \"uacute\":\"\\u00FA\",\n  \"Uarr\":\"\\u219F\",\n  \"uArr\":\"\\u21D1\",\n  \"uarr\":\"\\u2191\",\n  \"Uarrocir\":\"\\u2949\",\n  \"Ubrcy\":\"\\u040E\",\n  \"ubrcy\":\"\\u045E\",\n  \"Ubreve\":\"\\u016C\",\n  \"ubreve\":\"\\u016D\",\n  \"Ucirc\":\"\\u00DB\",\n  \"ucirc\":\"\\u00FB\",\n  \"Ucy\":\"\\u0423\",\n  \"ucy\":\"\\u0443\",\n  \"udarr\":\"\\u21C5\",\n  \"Udblac\":\"\\u0170\",\n  \"udblac\":\"\\u0171\",\n  \"udhar\":\"\\u296E\",\n  \"ufisht\":\"\\u297E\",\n  \"Ufr\":\"\\uD835\\uDD18\",\n  \"ufr\":\"\\uD835\\uDD32\",\n  \"Ugrave\":\"\\u00D9\",\n  \"ugrave\":\"\\u00F9\",\n  \"uHar\":\"\\u2963\",\n  \"uharl\":\"\\u21BF\",\n  \"uharr\":\"\\u21BE\",\n  \"uhblk\":\"\\u2580\",\n  \"ulcorn\":\"\\u231C\",\n  \"ulcorner\":\"\\u231C\",\n  \"ulcrop\":\"\\u230F\",\n  \"ultri\":\"\\u25F8\",\n  \"Umacr\":\"\\u016A\",\n  \"umacr\":\"\\u016B\",\n  \"uml\":\"\\u00A8\",\n  \"UnderBar\":\"\\u005F\",\n  \"UnderBrace\":\"\\u23DF\",\n  \"UnderBracket\":\"\\u23B5\",\n  \"UnderParenthesis\":\"\\u23DD\",\n  \"Union\":\"\\u22C3\",\n  \"UnionPlus\":\"\\u228E\",\n  \"Uogon\":\"\\u0172\",\n  \"uogon\":\"\\u0173\",\n  \"Uopf\":\"\\uD835\\uDD4C\",\n  \"uopf\":\"\\uD835\\uDD66\",\n  \"UpArrow\":\"\\u2191\",\n  \"Uparrow\":\"\\u21D1\",\n  \"uparrow\":\"\\u2191\",\n  \"UpArrowBar\":\"\\u2912\",\n  \"UpArrowDownArrow\":\"\\u21C5\",\n  \"UpDownArrow\":\"\\u2195\",\n  \"Updownarrow\":\"\\u21D5\",\n  \"updownarrow\":\"\\u2195\",\n  \"UpEquilibrium\":\"\\u296E\",\n  \"upharpoonleft\":\"\\u21BF\",\n  \"upharpoonright\":\"\\u21BE\",\n  \"uplus\":\"\\u228E\",\n  \"UpperLeftArrow\":\"\\u2196\",\n  \"UpperRightArrow\":\"\\u2197\",\n  \"Upsi\":\"\\u03D2\",\n  \"upsi\":\"\\u03C5\",\n  \"upsih\":\"\\u03D2\",\n  \"Upsilon\":\"\\u03A5\",\n  \"upsilon\":\"\\u03C5\",\n  \"UpTee\":\"\\u22A5\",\n  \"UpTeeArrow\":\"\\u21A5\",\n  \"upuparrows\":\"\\u21C8\",\n  \"urcorn\":\"\\u231D\",\n  \"urcorner\":\"\\u231D\",\n  \"urcrop\":\"\\u230E\",\n  \"Uring\":\"\\u016E\",\n  \"uring\":\"\\u016F\",\n  \"urtri\":\"\\u25F9\",\n  \"Uscr\":\"\\uD835\\uDCB0\",\n  \"uscr\":\"\\uD835\\uDCCA\",\n  \"utdot\":\"\\u22F0\",\n  \"Utilde\":\"\\u0168\",\n  \"utilde\":\"\\u0169\",\n  \"utri\":\"\\u25B5\",\n  \"utrif\":\"\\u25B4\",\n  \"uuarr\":\"\\u21C8\",\n  \"Uuml\":\"\\u00DC\",\n  \"uuml\":\"\\u00FC\",\n  \"uwangle\":\"\\u29A7\",\n  \"vangrt\":\"\\u299C\",\n  \"varepsilon\":\"\\u03F5\",\n  \"varkappa\":\"\\u03F0\",\n  \"varnothing\":\"\\u2205\",\n  \"varphi\":\"\\u03D5\",\n  \"varpi\":\"\\u03D6\",\n  \"varpropto\":\"\\u221D\",\n  \"vArr\":\"\\u21D5\",\n  \"varr\":\"\\u2195\",\n  \"varrho\":\"\\u03F1\",\n  \"varsigma\":\"\\u03C2\",\n  \"varsubsetneq\":\"\\u228A\\uFE00\",\n  \"varsubsetneqq\":\"\\u2ACB\\uFE00\",\n  \"varsupsetneq\":\"\\u228B\\uFE00\",\n  \"varsupsetneqq\":\"\\u2ACC\\uFE00\",\n  \"vartheta\":\"\\u03D1\",\n  \"vartriangleleft\":\"\\u22B2\",\n  \"vartriangleright\":\"\\u22B3\",\n  \"Vbar\":\"\\u2AEB\",\n  \"vBar\":\"\\u2AE8\",\n  \"vBarv\":\"\\u2AE9\",\n  \"Vcy\":\"\\u0412\",\n  \"vcy\":\"\\u0432\",\n  \"VDash\":\"\\u22AB\",\n  \"Vdash\":\"\\u22A9\",\n  \"vDash\":\"\\u22A8\",\n  \"vdash\":\"\\u22A2\",\n  \"Vdashl\":\"\\u2AE6\",\n  \"Vee\":\"\\u22C1\",\n  \"vee\":\"\\u2228\",\n  \"veebar\":\"\\u22BB\",\n  \"veeeq\":\"\\u225A\",\n  \"vellip\":\"\\u22EE\",\n  \"Verbar\":\"\\u2016\",\n  \"verbar\":\"\\u007C\",\n  \"Vert\":\"\\u2016\",\n  \"vert\":\"\\u007C\",\n  \"VerticalBar\":\"\\u2223\",\n  \"VerticalLine\":\"\\u007C\",\n  \"VerticalSeparator\":\"\\u2758\",\n  \"VerticalTilde\":\"\\u2240\",\n  \"VeryThinSpace\":\"\\u200A\",\n  \"Vfr\":\"\\uD835\\uDD19\",\n  \"vfr\":\"\\uD835\\uDD33\",\n  \"vltri\":\"\\u22B2\",\n  \"vnsub\":\"\\u2282\\u20D2\",\n  \"vnsup\":\"\\u2283\\u20D2\",\n  \"Vopf\":\"\\uD835\\uDD4D\",\n  \"vopf\":\"\\uD835\\uDD67\",\n  \"vprop\":\"\\u221D\",\n  \"vrtri\":\"\\u22B3\",\n  \"Vscr\":\"\\uD835\\uDCB1\",\n  \"vscr\":\"\\uD835\\uDCCB\",\n  \"vsubnE\":\"\\u2ACB\\uFE00\",\n  \"vsubne\":\"\\u228A\\uFE00\",\n  \"vsupnE\":\"\\u2ACC\\uFE00\",\n  \"vsupne\":\"\\u228B\\uFE00\",\n  \"Vvdash\":\"\\u22AA\",\n  \"vzigzag\":\"\\u299A\",\n  \"Wcirc\":\"\\u0174\",\n  \"wcirc\":\"\\u0175\",\n  \"wedbar\":\"\\u2A5F\",\n  \"Wedge\":\"\\u22C0\",\n  \"wedge\":\"\\u2227\",\n  \"wedgeq\":\"\\u2259\",\n  \"weierp\":\"\\u2118\",\n  \"Wfr\":\"\\uD835\\uDD1A\",\n  \"wfr\":\"\\uD835\\uDD34\",\n  \"Wopf\":\"\\uD835\\uDD4E\",\n  \"wopf\":\"\\uD835\\uDD68\",\n  \"wp\":\"\\u2118\",\n  \"wr\":\"\\u2240\",\n  \"wreath\":\"\\u2240\",\n  \"Wscr\":\"\\uD835\\uDCB2\",\n  \"wscr\":\"\\uD835\\uDCCC\",\n  \"xcap\":\"\\u22C2\",\n  \"xcirc\":\"\\u25EF\",\n  \"xcup\":\"\\u22C3\",\n  \"xdtri\":\"\\u25BD\",\n  \"Xfr\":\"\\uD835\\uDD1B\",\n  \"xfr\":\"\\uD835\\uDD35\",\n  \"xhArr\":\"\\u27FA\",\n  \"xharr\":\"\\u27F7\",\n  \"Xi\":\"\\u039E\",\n  \"xi\":\"\\u03BE\",\n  \"xlArr\":\"\\u27F8\",\n  \"xlarr\":\"\\u27F5\",\n  \"xmap\":\"\\u27FC\",\n  \"xnis\":\"\\u22FB\",\n  \"xodot\":\"\\u2A00\",\n  \"Xopf\":\"\\uD835\\uDD4F\",\n  \"xopf\":\"\\uD835\\uDD69\",\n  \"xoplus\":\"\\u2A01\",\n  \"xotime\":\"\\u2A02\",\n  \"xrArr\":\"\\u27F9\",\n  \"xrarr\":\"\\u27F6\",\n  \"Xscr\":\"\\uD835\\uDCB3\",\n  \"xscr\":\"\\uD835\\uDCCD\",\n  \"xsqcup\":\"\\u2A06\",\n  \"xuplus\":\"\\u2A04\",\n  \"xutri\":\"\\u25B3\",\n  \"xvee\":\"\\u22C1\",\n  \"xwedge\":\"\\u22C0\",\n  \"Yacute\":\"\\u00DD\",\n  \"yacute\":\"\\u00FD\",\n  \"YAcy\":\"\\u042F\",\n  \"yacy\":\"\\u044F\",\n  \"Ycirc\":\"\\u0176\",\n  \"ycirc\":\"\\u0177\",\n  \"Ycy\":\"\\u042B\",\n  \"ycy\":\"\\u044B\",\n  \"yen\":\"\\u00A5\",\n  \"Yfr\":\"\\uD835\\uDD1C\",\n  \"yfr\":\"\\uD835\\uDD36\",\n  \"YIcy\":\"\\u0407\",\n  \"yicy\":\"\\u0457\",\n  \"Yopf\":\"\\uD835\\uDD50\",\n  \"yopf\":\"\\uD835\\uDD6A\",\n  \"Yscr\":\"\\uD835\\uDCB4\",\n  \"yscr\":\"\\uD835\\uDCCE\",\n  \"YUcy\":\"\\u042E\",\n  \"yucy\":\"\\u044E\",\n  \"Yuml\":\"\\u0178\",\n  \"yuml\":\"\\u00FF\",\n  \"Zacute\":\"\\u0179\",\n  \"zacute\":\"\\u017A\",\n  \"Zcaron\":\"\\u017D\",\n  \"zcaron\":\"\\u017E\",\n  \"Zcy\":\"\\u0417\",\n  \"zcy\":\"\\u0437\",\n  \"Zdot\":\"\\u017B\",\n  \"zdot\":\"\\u017C\",\n  \"zeetrf\":\"\\u2128\",\n  \"ZeroWidthSpace\":\"\\u200B\",\n  \"Zeta\":\"\\u0396\",\n  \"zeta\":\"\\u03B6\",\n  \"Zfr\":\"\\u2128\",\n  \"zfr\":\"\\uD835\\uDD37\",\n  \"ZHcy\":\"\\u0416\",\n  \"zhcy\":\"\\u0436\",\n  \"zigrarr\":\"\\u21DD\",\n  \"Zopf\":\"\\u2124\",\n  \"zopf\":\"\\uD835\\uDD6B\",\n  \"Zscr\":\"\\uD835\\uDCB5\",\n  \"zscr\":\"\\uD835\\uDCCF\",\n  \"zwj\":\"\\u200D\",\n  \"zwnj\":\"\\u200C\"\n};\n\nvar hasOwn = Object.prototype.hasOwnProperty;\n\nfunction has(object, key) {\n  return object\n    ? hasOwn.call(object, key)\n    : false;\n}\n\nfunction decodeEntity(name) {\n  if (has(entities, name)) {\n    return entities[name]\n  } else {\n    return name;\n  }\n}\n\n/**\n * Utility functions\n */\n\nfunction typeOf(obj) {\n  return Object.prototype.toString.call(obj);\n}\n\nfunction isString(obj) {\n  return typeOf(obj) === '[object String]';\n}\n\nvar hasOwn$1 = Object.prototype.hasOwnProperty;\n\nfunction has$1(object, key) {\n  return object\n    ? hasOwn$1.call(object, key)\n    : false;\n}\n\n// Extend objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = [].slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object');\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar UNESCAPE_MD_RE = /\\\\([\\\\!\"#$%&'()*+,.\\/:;<=>?@[\\]^_`{|}~-])/g;\n\nfunction unescapeMd(str) {\n  if (str.indexOf('\\\\') < 0) { return str; }\n  return str.replace(UNESCAPE_MD_RE, '$1');\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isValidEntityCode(c) {\n  /*eslint no-bitwise:0*/\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) { return false; }\n  // never used\n  if (c >= 0xFDD0 && c <= 0xFDEF) { return false; }\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) { return false; }\n  // control codes\n  if (c >= 0x00 && c <= 0x08) { return false; }\n  if (c === 0x0B) { return false; }\n  if (c >= 0x0E && c <= 0x1F) { return false; }\n  if (c >= 0x7F && c <= 0x9F) { return false; }\n  // out of range\n  if (c > 0x10FFFF) { return false; }\n  return true;\n}\n\nfunction fromCodePoint(c) {\n  /*eslint no-bitwise:0*/\n  if (c > 0xffff) {\n    c -= 0x10000;\n    var surrogate1 = 0xd800 + (c >> 10),\n        surrogate2 = 0xdc00 + (c & 0x3ff);\n\n    return String.fromCharCode(surrogate1, surrogate2);\n  }\n  return String.fromCharCode(c);\n}\n\nvar NAMED_ENTITY_RE   = /&([a-z#][a-z0-9]{1,31});/gi;\nvar DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))/i;\n\nfunction replaceEntityPattern(match, name) {\n  var code = 0;\n  var decoded = decodeEntity(name);\n\n  if (name !== decoded) {\n    return decoded;\n  } else if (name.charCodeAt(0) === 0x23/* # */ && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    code = name[1].toLowerCase() === 'x' ?\n      parseInt(name.slice(2), 16)\n    :\n      parseInt(name.slice(1), 10);\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code);\n    }\n  }\n  return match;\n}\n\nfunction replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(NAMED_ENTITY_RE, replaceEntityPattern);\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar HTML_ESCAPE_TEST_RE = /[&<>\"]/;\nvar HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g;\nvar HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n};\n\nfunction replaceUnsafeChar(ch) {\n  return HTML_REPLACEMENTS[ch];\n}\n\nfunction escapeHtml(str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);\n  }\n  return str;\n}\n\nvar utils = /*#__PURE__*/Object.freeze({\n  isString: isString,\n  has: has$1,\n  assign: assign,\n  unescapeMd: unescapeMd,\n  isValidEntityCode: isValidEntityCode,\n  fromCodePoint: fromCodePoint,\n  replaceEntities: replaceEntities,\n  escapeHtml: escapeHtml\n});\n\n/**\n * Renderer rules cache\n */\n\nvar rules = {};\n\n/**\n * Blockquotes\n */\n\nrules.blockquote_open = function(/* tokens, idx, options, env */) {\n  return '<blockquote>\\n';\n};\n\nrules.blockquote_close = function(tokens, idx /*, options, env */) {\n  return '</blockquote>' + getBreak(tokens, idx);\n};\n\n/**\n * Code\n */\n\nrules.code = function(tokens, idx /*, options, env */) {\n  if (tokens[idx].block) {\n    return '<pre><code>' + escapeHtml(tokens[idx].content) + '</code></pre>' + getBreak(tokens, idx);\n  }\n  return '<code>' + escapeHtml(tokens[idx].content) + '</code>';\n};\n\n/**\n * Fenced code blocks\n */\n\nrules.fence = function(tokens, idx, options, env, instance) {\n  var token = tokens[idx];\n  var langClass = '';\n  var langPrefix = options.langPrefix;\n  var langName = '', fences, fenceName;\n  var highlighted;\n\n  if (token.params) {\n\n    //\n    // ```foo bar\n    //\n    // Try custom renderer \"foo\" first. That will simplify overwrite\n    // for diagrams, latex, and any other fenced block with custom look\n    //\n\n    fences = token.params.split(/\\s+/g);\n    fenceName = fences.join(' ');\n\n    if (has$1(instance.rules.fence_custom, fences[0])) {\n      return instance.rules.fence_custom[fences[0]](tokens, idx, options, env, instance);\n    }\n\n    langName = escapeHtml(replaceEntities(unescapeMd(fenceName)));\n    langClass = ' class=\"' + langPrefix + langName + '\"';\n  }\n\n  if (options.highlight) {\n    highlighted = options.highlight.apply(options.highlight, [ token.content ].concat(fences))\n      || escapeHtml(token.content);\n  } else {\n    highlighted = escapeHtml(token.content);\n  }\n\n  return '<pre><code' + langClass + '>'\n        + highlighted\n        + '</code></pre>'\n        + getBreak(tokens, idx);\n};\n\nrules.fence_custom = {};\n\n/**\n * Headings\n */\n\nrules.heading_open = function(tokens, idx /*, options, env */) {\n  return '<h' + tokens[idx].hLevel + '>';\n};\nrules.heading_close = function(tokens, idx /*, options, env */) {\n  return '</h' + tokens[idx].hLevel + '>\\n';\n};\n\n/**\n * Horizontal rules\n */\n\nrules.hr = function(tokens, idx, options /*, env */) {\n  return (options.xhtmlOut ? '<hr />' : '<hr>') + getBreak(tokens, idx);\n};\n\n/**\n * Bullets\n */\n\nrules.bullet_list_open = function(/* tokens, idx, options, env */) {\n  return '<ul>\\n';\n};\nrules.bullet_list_close = function(tokens, idx /*, options, env */) {\n  return '</ul>' + getBreak(tokens, idx);\n};\n\n/**\n * List items\n */\n\nrules.list_item_open = function(/* tokens, idx, options, env */) {\n  return '<li>';\n};\nrules.list_item_close = function(/* tokens, idx, options, env */) {\n  return '</li>\\n';\n};\n\n/**\n * Ordered list items\n */\n\nrules.ordered_list_open = function(tokens, idx /*, options, env */) {\n  var token = tokens[idx];\n  var order = token.order > 1 ? ' start=\"' + token.order + '\"' : '';\n  return '<ol' + order + '>\\n';\n};\nrules.ordered_list_close = function(tokens, idx /*, options, env */) {\n  return '</ol>' + getBreak(tokens, idx);\n};\n\n/**\n * Paragraphs\n */\n\nrules.paragraph_open = function(tokens, idx /*, options, env */) {\n  return tokens[idx].tight ? '' : '<p>';\n};\nrules.paragraph_close = function(tokens, idx /*, options, env */) {\n  var addBreak = !(tokens[idx].tight && idx && tokens[idx - 1].type === 'inline' && !tokens[idx - 1].content);\n  return (tokens[idx].tight ? '' : '</p>') + (addBreak ? getBreak(tokens, idx) : '');\n};\n\n/**\n * Links\n */\n\nrules.link_open = function(tokens, idx, options /* env */) {\n  var title = tokens[idx].title ? (' title=\"' + escapeHtml(replaceEntities(tokens[idx].title)) + '\"') : '';\n  var target = options.linkTarget ? (' target=\"' + options.linkTarget + '\"') : '';\n  return '<a href=\"' + escapeHtml(tokens[idx].href) + '\"' + title + target + '>';\n};\nrules.link_close = function(/* tokens, idx, options, env */) {\n  return '</a>';\n};\n\n/**\n * Images\n */\n\nrules.image = function(tokens, idx, options /*, env */) {\n  var src = ' src=\"' + escapeHtml(tokens[idx].src) + '\"';\n  var title = tokens[idx].title ? (' title=\"' + escapeHtml(replaceEntities(tokens[idx].title)) + '\"') : '';\n  var alt = ' alt=\"' + (tokens[idx].alt ? escapeHtml(replaceEntities(unescapeMd(tokens[idx].alt))) : '') + '\"';\n  var suffix = options.xhtmlOut ? ' /' : '';\n  return '<img' + src + alt + title + suffix + '>';\n};\n\n/**\n * Tables\n */\n\nrules.table_open = function(/* tokens, idx, options, env */) {\n  return '<table>\\n';\n};\nrules.table_close = function(/* tokens, idx, options, env */) {\n  return '</table>\\n';\n};\nrules.thead_open = function(/* tokens, idx, options, env */) {\n  return '<thead>\\n';\n};\nrules.thead_close = function(/* tokens, idx, options, env */) {\n  return '</thead>\\n';\n};\nrules.tbody_open = function(/* tokens, idx, options, env */) {\n  return '<tbody>\\n';\n};\nrules.tbody_close = function(/* tokens, idx, options, env */) {\n  return '</tbody>\\n';\n};\nrules.tr_open = function(/* tokens, idx, options, env */) {\n  return '<tr>';\n};\nrules.tr_close = function(/* tokens, idx, options, env */) {\n  return '</tr>\\n';\n};\nrules.th_open = function(tokens, idx /*, options, env */) {\n  var token = tokens[idx];\n  return '<th'\n    + (token.align ? ' style=\"text-align:' + token.align + '\"' : '')\n    + '>';\n};\nrules.th_close = function(/* tokens, idx, options, env */) {\n  return '</th>';\n};\nrules.td_open = function(tokens, idx /*, options, env */) {\n  var token = tokens[idx];\n  return '<td'\n    + (token.align ? ' style=\"text-align:' + token.align + '\"' : '')\n    + '>';\n};\nrules.td_close = function(/* tokens, idx, options, env */) {\n  return '</td>';\n};\n\n/**\n * Bold\n */\n\nrules.strong_open = function(/* tokens, idx, options, env */) {\n  return '<strong>';\n};\nrules.strong_close = function(/* tokens, idx, options, env */) {\n  return '</strong>';\n};\n\n/**\n * Italicize\n */\n\nrules.em_open = function(/* tokens, idx, options, env */) {\n  return '<em>';\n};\nrules.em_close = function(/* tokens, idx, options, env */) {\n  return '</em>';\n};\n\n/**\n * Strikethrough\n */\n\nrules.del_open = function(/* tokens, idx, options, env */) {\n  return '<del>';\n};\nrules.del_close = function(/* tokens, idx, options, env */) {\n  return '</del>';\n};\n\n/**\n * Insert\n */\n\nrules.ins_open = function(/* tokens, idx, options, env */) {\n  return '<ins>';\n};\nrules.ins_close = function(/* tokens, idx, options, env */) {\n  return '</ins>';\n};\n\n/**\n * Highlight\n */\n\nrules.mark_open = function(/* tokens, idx, options, env */) {\n  return '<mark>';\n};\nrules.mark_close = function(/* tokens, idx, options, env */) {\n  return '</mark>';\n};\n\n/**\n * Super- and sub-script\n */\n\nrules.sub = function(tokens, idx /*, options, env */) {\n  return '<sub>' + escapeHtml(tokens[idx].content) + '</sub>';\n};\nrules.sup = function(tokens, idx /*, options, env */) {\n  return '<sup>' + escapeHtml(tokens[idx].content) + '</sup>';\n};\n\n/**\n * Breaks\n */\n\nrules.hardbreak = function(tokens, idx, options /*, env */) {\n  return options.xhtmlOut ? '<br />\\n' : '<br>\\n';\n};\nrules.softbreak = function(tokens, idx, options /*, env */) {\n  return options.breaks ? (options.xhtmlOut ? '<br />\\n' : '<br>\\n') : '\\n';\n};\n\n/**\n * Text\n */\n\nrules.text = function(tokens, idx /*, options, env */) {\n  return escapeHtml(tokens[idx].content);\n};\n\n/**\n * Content\n */\n\nrules.htmlblock = function(tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\nrules.htmltag = function(tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\n\n/**\n * Abbreviations, initialism\n */\n\nrules.abbr_open = function(tokens, idx /*, options, env */) {\n  return '<abbr title=\"' + escapeHtml(replaceEntities(tokens[idx].title)) + '\">';\n};\nrules.abbr_close = function(/* tokens, idx, options, env */) {\n  return '</abbr>';\n};\n\n/**\n * Footnotes\n */\n\nrules.footnote_ref = function(tokens, idx) {\n  var n = Number(tokens[idx].id + 1).toString();\n  var id = 'fnref' + n;\n  if (tokens[idx].subId > 0) {\n    id += ':' + tokens[idx].subId;\n  }\n  return '<sup class=\"footnote-ref\"><a href=\"#fn' + n + '\" id=\"' + id + '\">[' + n + ']</a></sup>';\n};\nrules.footnote_block_open = function(tokens, idx, options) {\n  var hr = options.xhtmlOut\n    ? '<hr class=\"footnotes-sep\" />\\n'\n    : '<hr class=\"footnotes-sep\">\\n';\n  return hr + '<section class=\"footnotes\">\\n<ol class=\"footnotes-list\">\\n';\n};\nrules.footnote_block_close = function() {\n  return '</ol>\\n</section>\\n';\n};\nrules.footnote_open = function(tokens, idx) {\n  var id = Number(tokens[idx].id + 1).toString();\n  return '<li id=\"fn' + id + '\"  class=\"footnote-item\">';\n};\nrules.footnote_close = function() {\n  return '</li>\\n';\n};\nrules.footnote_anchor = function(tokens, idx) {\n  var n = Number(tokens[idx].id + 1).toString();\n  var id = 'fnref' + n;\n  if (tokens[idx].subId > 0) {\n    id += ':' + tokens[idx].subId;\n  }\n  return ' <a href=\"#' + id + '\" class=\"footnote-backref\">\u21A9</a>';\n};\n\n/**\n * Definition lists\n */\n\nrules.dl_open = function() {\n  return '<dl>\\n';\n};\nrules.dt_open = function() {\n  return '<dt>';\n};\nrules.dd_open = function() {\n  return '<dd>';\n};\nrules.dl_close = function() {\n  return '</dl>\\n';\n};\nrules.dt_close = function() {\n  return '</dt>\\n';\n};\nrules.dd_close = function() {\n  return '</dd>\\n';\n};\n\n/**\n * Helper functions\n */\n\nfunction nextToken(tokens, idx) {\n  if (++idx >= tokens.length - 2) {\n    return idx;\n  }\n  if ((tokens[idx].type === 'paragraph_open' && tokens[idx].tight) &&\n      (tokens[idx + 1].type === 'inline' && tokens[idx + 1].content.length === 0) &&\n      (tokens[idx + 2].type === 'paragraph_close' && tokens[idx + 2].tight)) {\n    return nextToken(tokens, idx + 2);\n  }\n  return idx;\n}\n\n/**\n * Check to see if `\\n` is needed before the next token.\n *\n * @param  {Array} `tokens`\n * @param  {Number} `idx`\n * @return {String} Empty string or newline\n * @api private\n */\n\nvar getBreak = rules.getBreak = function getBreak(tokens, idx) {\n  idx = nextToken(tokens, idx);\n  if (idx < tokens.length && tokens[idx].type === 'list_item_close') {\n    return '';\n  }\n  return '\\n';\n};\n\n/**\n * Renderer class. Renders HTML and exposes `rules` to allow\n * local modifications.\n */\n\nfunction Renderer() {\n  this.rules = assign({}, rules);\n\n  // exported helper, for custom rules only\n  this.getBreak = rules.getBreak;\n}\n\n/**\n * Render a string of inline HTML with the given `tokens` and\n * `options`.\n *\n * @param  {Array} `tokens`\n * @param  {Object} `options`\n * @param  {Object} `env`\n * @return {String}\n * @api public\n */\n\nRenderer.prototype.renderInline = function (tokens, options, env) {\n  var _rules = this.rules;\n  var len = tokens.length, i = 0;\n  var result = '';\n\n  while (len--) {\n    result += _rules[tokens[i].type](tokens, i++, options, env, this);\n  }\n\n  return result;\n};\n\n/**\n * Render a string of HTML with the given `tokens` and\n * `options`.\n *\n * @param  {Array} `tokens`\n * @param  {Object} `options`\n * @param  {Object} `env`\n * @return {String}\n * @api public\n */\n\nRenderer.prototype.render = function (tokens, options, env) {\n  var _rules = this.rules;\n  var len = tokens.length, i = -1;\n  var result = '';\n\n  while (++i < len) {\n    if (tokens[i].type === 'inline') {\n      result += this.renderInline(tokens[i].children, options, env);\n    } else {\n      result += _rules[tokens[i].type](tokens, i, options, env, this);\n    }\n  }\n  return result;\n};\n\n/**\n * Ruler is a helper class for building responsibility chains from\n * parse rules. It allows:\n *\n *   - easy stack rules chains\n *   - getting main chain and named chains content (as arrays of functions)\n *\n * Helper methods, should not be used directly.\n * @api private\n */\n\nfunction Ruler() {\n  // List of added rules. Each element is:\n  //\n  // { name: XXX,\n  //   enabled: Boolean,\n  //   fn: Function(),\n  //   alt: [ name2, name3 ] }\n  //\n  this.__rules__ = [];\n\n  // Cached rule chains.\n  //\n  // First level - chain name, '' for default.\n  // Second level - digital anchor for fast filtering by charcodes.\n  //\n  this.__cache__ = null;\n}\n\n/**\n * Find the index of a rule by `name`.\n *\n * @param  {String} `name`\n * @return {Number} Index of the given `name`\n * @api private\n */\n\nRuler.prototype.__find__ = function (name) {\n  var len = this.__rules__.length;\n  var i = -1;\n\n  while (len--) {\n    if (this.__rules__[++i].name === name) {\n      return i;\n    }\n  }\n  return -1;\n};\n\n/**\n * Build the rules lookup cache\n *\n * @api private\n */\n\nRuler.prototype.__compile__ = function () {\n  var self = this;\n  var chains = [ '' ];\n\n  // collect unique names\n  self.__rules__.forEach(function (rule) {\n    if (!rule.enabled) {\n      return;\n    }\n\n    rule.alt.forEach(function (altName) {\n      if (chains.indexOf(altName) < 0) {\n        chains.push(altName);\n      }\n    });\n  });\n\n  self.__cache__ = {};\n\n  chains.forEach(function (chain) {\n    self.__cache__[chain] = [];\n    self.__rules__.forEach(function (rule) {\n      if (!rule.enabled) {\n        return;\n      }\n\n      if (chain && rule.alt.indexOf(chain) < 0) {\n        return;\n      }\n      self.__cache__[chain].push(rule.fn);\n    });\n  });\n};\n\n/**\n * Ruler public methods\n * ------------------------------------------------\n */\n\n/**\n * Replace rule function\n *\n * @param  {String} `name` Rule name\n * @param  {Function `fn`\n * @param  {Object} `options`\n * @api private\n */\n\nRuler.prototype.at = function (name, fn, options) {\n  var idx = this.__find__(name);\n  var opt = options || {};\n\n  if (idx === -1) {\n    throw new Error('Parser rule not found: ' + name);\n  }\n\n  this.__rules__[idx].fn = fn;\n  this.__rules__[idx].alt = opt.alt || [];\n  this.__cache__ = null;\n};\n\n/**\n * Add a rule to the chain before given the `ruleName`.\n *\n * @param  {String}   `beforeName`\n * @param  {String}   `ruleName`\n * @param  {Function} `fn`\n * @param  {Object}   `options`\n * @api private\n */\n\nRuler.prototype.before = function (beforeName, ruleName, fn, options) {\n  var idx = this.__find__(beforeName);\n  var opt = options || {};\n\n  if (idx === -1) {\n    throw new Error('Parser rule not found: ' + beforeName);\n  }\n\n  this.__rules__.splice(idx, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n/**\n * Add a rule to the chain after the given `ruleName`.\n *\n * @param  {String}   `afterName`\n * @param  {String}   `ruleName`\n * @param  {Function} `fn`\n * @param  {Object}   `options`\n * @api private\n */\n\nRuler.prototype.after = function (afterName, ruleName, fn, options) {\n  var idx = this.__find__(afterName);\n  var opt = options || {};\n\n  if (idx === -1) {\n    throw new Error('Parser rule not found: ' + afterName);\n  }\n\n  this.__rules__.splice(idx + 1, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n/**\n * Add a rule to the end of chain.\n *\n * @param  {String}   `ruleName`\n * @param  {Function} `fn`\n * @param  {Object}   `options`\n * @return {String}\n */\n\nRuler.prototype.push = function (ruleName, fn, options) {\n  var opt = options || {};\n\n  this.__rules__.push({\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n/**\n * Enable a rule or list of rules.\n *\n * @param  {String|Array} `list` Name or array of rule names to enable\n * @param  {Boolean} `strict` If `true`, all non listed rules will be disabled.\n * @api private\n */\n\nRuler.prototype.enable = function (list, strict) {\n  list = !Array.isArray(list)\n    ? [ list ]\n    : list;\n\n  // In strict mode disable all existing rules first\n  if (strict) {\n    this.__rules__.forEach(function (rule) {\n      rule.enabled = false;\n    });\n  }\n\n  // Search by name and enable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n    if (idx < 0) {\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = true;\n  }, this);\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Disable a rule or list of rules.\n *\n * @param  {String|Array} `list` Name or array of rule names to disable\n * @api private\n */\n\nRuler.prototype.disable = function (list) {\n  list = !Array.isArray(list)\n    ? [ list ]\n    : list;\n\n  // Search by name and disable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n    if (idx < 0) {\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = false;\n  }, this);\n\n  this.__cache__ = null;\n};\n\n/**\n * Get a rules list as an array of functions.\n *\n * @param  {String} `chainName`\n * @return {Object}\n * @api private\n */\n\nRuler.prototype.getRules = function (chainName) {\n  if (this.__cache__ === null) {\n    this.__compile__();\n  }\n  return this.__cache__[chainName] || [];\n};\n\nfunction block(state) {\n\n  if (state.inlineMode) {\n    state.tokens.push({\n      type: 'inline',\n      content: state.src.replace(/\\n/g, ' ').trim(),\n      level: 0,\n      lines: [ 0, 1 ],\n      children: []\n    });\n\n  } else {\n    state.block.parse(state.src, state.options, state.env, state.tokens);\n  }\n}\n\n// Inline parser state\n\nfunction StateInline(src, parserInline, options, env, outTokens) {\n  this.src = src;\n  this.env = env;\n  this.options = options;\n  this.parser = parserInline;\n  this.tokens = outTokens;\n  this.pos = 0;\n  this.posMax = this.src.length;\n  this.level = 0;\n  this.pending = '';\n  this.pendingLevel = 0;\n\n  this.cache = [];        // Stores { start: end } pairs. Useful for backtrack\n                          // optimization of pairs parse (emphasis, strikes).\n\n  // Link parser state vars\n\n  this.isInLabel = false; // Set true when seek link label - we should disable\n                          // \"paired\" rules (emphasis, strikes) to not skip\n                          // tailing `]`\n\n  this.linkLevel = 0;     // Increment for each nesting link. Used to prevent\n                          // nesting in definitions\n\n  this.linkContent = '';  // Temporary storage for link url\n\n  this.labelUnmatchedScopes = 0; // Track unpaired `[` for link labels\n                                 // (backtrack optimization)\n}\n\n// Flush pending text\n//\nStateInline.prototype.pushPending = function () {\n  this.tokens.push({\n    type: 'text',\n    content: this.pending,\n    level: this.pendingLevel\n  });\n  this.pending = '';\n};\n\n// Push new token to \"stream\".\n// If pending text exists - flush it as text token\n//\nStateInline.prototype.push = function (token) {\n  if (this.pending) {\n    this.pushPending();\n  }\n\n  this.tokens.push(token);\n  this.pendingLevel = this.level;\n};\n\n// Store value to cache.\n// !!! Implementation has parser-specific optimizations\n// !!! keys MUST be integer, >= 0; values MUST be integer, > 0\n//\nStateInline.prototype.cacheSet = function (key, val) {\n  for (var i = this.cache.length; i <= key; i++) {\n    this.cache.push(0);\n  }\n\n  this.cache[key] = val;\n};\n\n// Get cache value\n//\nStateInline.prototype.cacheGet = function (key) {\n  return key < this.cache.length ? this.cache[key] : 0;\n};\n\n/**\n * Parse link labels\n *\n * This function assumes that first character (`[`) already matches;\n * returns the end of the label.\n *\n * @param  {Object} state\n * @param  {Number} start\n * @api private\n */\n\nfunction parseLinkLabel(state, start) {\n  var level, found, marker,\n      labelEnd = -1,\n      max = state.posMax,\n      oldPos = state.pos,\n      oldFlag = state.isInLabel;\n\n  if (state.isInLabel) { return -1; }\n\n  if (state.labelUnmatchedScopes) {\n    state.labelUnmatchedScopes--;\n    return -1;\n  }\n\n  state.pos = start + 1;\n  state.isInLabel = true;\n  level = 1;\n\n  while (state.pos < max) {\n    marker = state.src.charCodeAt(state.pos);\n    if (marker === 0x5B /* [ */) {\n      level++;\n    } else if (marker === 0x5D /* ] */) {\n      level--;\n      if (level === 0) {\n        found = true;\n        break;\n      }\n    }\n\n    state.parser.skipToken(state);\n  }\n\n  if (found) {\n    labelEnd = state.pos;\n    state.labelUnmatchedScopes = 0;\n  } else {\n    state.labelUnmatchedScopes = level - 1;\n  }\n\n  // restore old state\n  state.pos = oldPos;\n  state.isInLabel = oldFlag;\n\n  return labelEnd;\n}\n\n// Parse abbreviation definitions, i.e. `*[abbr]: description`\n\n\nfunction parseAbbr(str, parserInline, options, env) {\n  var state, labelEnd, pos, max, label, title;\n\n  if (str.charCodeAt(0) !== 0x2A/* * */) { return -1; }\n  if (str.charCodeAt(1) !== 0x5B/* [ */) { return -1; }\n\n  if (str.indexOf(']:') === -1) { return -1; }\n\n  state = new StateInline(str, parserInline, options, env, []);\n  labelEnd = parseLinkLabel(state, 1);\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A/* : */) { return -1; }\n\n  max = state.posMax;\n\n  // abbr title is always one line, so looking for ending \"\\n\" here\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    if (state.src.charCodeAt(pos) === 0x0A) { break; }\n  }\n\n  label = str.slice(2, labelEnd);\n  title = str.slice(labelEnd + 2, pos).trim();\n  if (title.length === 0) { return -1; }\n  if (!env.abbreviations) { env.abbreviations = {}; }\n  // prepend ':' to avoid conflict with Object.prototype members\n  if (typeof env.abbreviations[':' + label] === 'undefined') {\n    env.abbreviations[':' + label] = title;\n  }\n\n  return pos;\n}\n\nfunction abbr(state) {\n  var tokens = state.tokens, i, l, content, pos;\n\n  if (state.inlineMode) {\n    return;\n  }\n\n  // Parse inlines\n  for (i = 1, l = tokens.length - 1; i < l; i++) {\n    if (tokens[i - 1].type === 'paragraph_open' &&\n        tokens[i].type === 'inline' &&\n        tokens[i + 1].type === 'paragraph_close') {\n\n      content = tokens[i].content;\n      while (content.length) {\n        pos = parseAbbr(content, state.inline, state.options, state.env);\n        if (pos < 0) { break; }\n        content = content.slice(pos).trim();\n      }\n\n      tokens[i].content = content;\n      if (!content.length) {\n        tokens[i - 1].tight = true;\n        tokens[i + 1].tight = true;\n      }\n    }\n  }\n}\n\nfunction normalizeLink(url) {\n  var normalized = replaceEntities(url);\n  // We shouldn't care about the result of malformed URIs,\n  // and should not throw an exception.\n  try {\n    normalized = decodeURI(normalized);\n  } catch (err) {}\n  return encodeURI(normalized);\n}\n\n/**\n * Parse link destination\n *\n *   - on success it returns a string and updates state.pos;\n *   - on failure it returns null\n *\n * @param  {Object} state\n * @param  {Number} pos\n * @api private\n */\n\nfunction parseLinkDestination(state, pos) {\n  var code, level, link,\n      start = pos,\n      max = state.posMax;\n\n  if (state.src.charCodeAt(pos) === 0x3C /* < */) {\n    pos++;\n    while (pos < max) {\n      code = state.src.charCodeAt(pos);\n      if (code === 0x0A /* \\n */) { return false; }\n      if (code === 0x3E /* > */) {\n        link = normalizeLink(unescapeMd(state.src.slice(start + 1, pos)));\n        if (!state.parser.validateLink(link)) { return false; }\n        state.pos = pos + 1;\n        state.linkContent = link;\n        return true;\n      }\n      if (code === 0x5C /* \\ */ && pos + 1 < max) {\n        pos += 2;\n        continue;\n      }\n\n      pos++;\n    }\n\n    // no closing '>'\n    return false;\n  }\n\n  // this should be ... } else { ... branch\n\n  level = 0;\n  while (pos < max) {\n    code = state.src.charCodeAt(pos);\n\n    if (code === 0x20) { break; }\n\n    // ascii control chars\n    if (code < 0x20 || code === 0x7F) { break; }\n\n    if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos += 2;\n      continue;\n    }\n\n    if (code === 0x28 /* ( */) {\n      level++;\n      if (level > 1) { break; }\n    }\n\n    if (code === 0x29 /* ) */) {\n      level--;\n      if (level < 0) { break; }\n    }\n\n    pos++;\n  }\n\n  if (start === pos) { return false; }\n\n  link = unescapeMd(state.src.slice(start, pos));\n  if (!state.parser.validateLink(link)) { return false; }\n\n  state.linkContent = link;\n  state.pos = pos;\n  return true;\n}\n\n/**\n * Parse link title\n *\n *   - on success it returns a string and updates state.pos;\n *   - on failure it returns null\n *\n * @param  {Object} state\n * @param  {Number} pos\n * @api private\n */\n\nfunction parseLinkTitle(state, pos) {\n  var code,\n      start = pos,\n      max = state.posMax,\n      marker = state.src.charCodeAt(pos);\n\n  if (marker !== 0x22 /* \" */ && marker !== 0x27 /* ' */ && marker !== 0x28 /* ( */) { return false; }\n\n  pos++;\n\n  // if opening marker is \"(\", switch it to closing marker \")\"\n  if (marker === 0x28) { marker = 0x29; }\n\n  while (pos < max) {\n    code = state.src.charCodeAt(pos);\n    if (code === marker) {\n      state.pos = pos + 1;\n      state.linkContent = unescapeMd(state.src.slice(start + 1, pos));\n      return true;\n    }\n    if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos += 2;\n      continue;\n    }\n\n    pos++;\n  }\n\n  return false;\n}\n\nfunction normalizeReference(str) {\n  // use .toUpperCase() instead of .toLowerCase()\n  // here to avoid a conflict with Object.prototype\n  // members (most notably, `__proto__`)\n  return str.trim().replace(/\\s+/g, ' ').toUpperCase();\n}\n\nfunction parseReference(str, parser, options, env) {\n  var state, labelEnd, pos, max, code, start, href, title, label;\n\n  if (str.charCodeAt(0) !== 0x5B/* [ */) { return -1; }\n\n  if (str.indexOf(']:') === -1) { return -1; }\n\n  state = new StateInline(str, parser, options, env, []);\n  labelEnd = parseLinkLabel(state, 0);\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A/* : */) { return -1; }\n\n  max = state.posMax;\n\n  // [label]:   destination   'title'\n  //         ^^^ skip optional whitespace here\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    code = state.src.charCodeAt(pos);\n    if (code !== 0x20 && code !== 0x0A) { break; }\n  }\n\n  // [label]:   destination   'title'\n  //            ^^^^^^^^^^^ parse this\n  if (!parseLinkDestination(state, pos)) { return -1; }\n  href = state.linkContent;\n  pos = state.pos;\n\n  // [label]:   destination   'title'\n  //                       ^^^ skipping those spaces\n  start = pos;\n  for (pos = pos + 1; pos < max; pos++) {\n    code = state.src.charCodeAt(pos);\n    if (code !== 0x20 && code !== 0x0A) { break; }\n  }\n\n  // [label]:   destination   'title'\n  //                          ^^^^^^^ parse this\n  if (pos < max && start !== pos && parseLinkTitle(state, pos)) {\n    title = state.linkContent;\n    pos = state.pos;\n  } else {\n    title = '';\n    pos = start;\n  }\n\n  // ensure that the end of the line is empty\n  while (pos < max && state.src.charCodeAt(pos) === 0x20/* space */) { pos++; }\n  if (pos < max && state.src.charCodeAt(pos) !== 0x0A) { return -1; }\n\n  label = normalizeReference(str.slice(1, labelEnd));\n  if (typeof env.references[label] === 'undefined') {\n    env.references[label] = { title: title, href: href };\n  }\n\n  return pos;\n}\n\n\nfunction references(state) {\n  var tokens = state.tokens, i, l, content, pos;\n\n  state.env.references = state.env.references || {};\n\n  if (state.inlineMode) {\n    return;\n  }\n\n  // Scan definitions in paragraph inlines\n  for (i = 1, l = tokens.length - 1; i < l; i++) {\n    if (tokens[i].type === 'inline' &&\n        tokens[i - 1].type === 'paragraph_open' &&\n        tokens[i + 1].type === 'paragraph_close') {\n\n      content = tokens[i].content;\n      while (content.length) {\n        pos = parseReference(content, state.inline, state.options, state.env);\n        if (pos < 0) { break; }\n        content = content.slice(pos).trim();\n      }\n\n      tokens[i].content = content;\n      if (!content.length) {\n        tokens[i - 1].tight = true;\n        tokens[i + 1].tight = true;\n      }\n    }\n  }\n}\n\nfunction inline(state) {\n  var tokens = state.tokens, tok, i, l;\n\n  // Parse inlines\n  for (i = 0, l = tokens.length; i < l; i++) {\n    tok = tokens[i];\n    if (tok.type === 'inline') {\n      state.inline.parse(tok.content, state.options, state.env, tok.children);\n    }\n  }\n}\n\nfunction footnote_block(state) {\n  var i, l, j, t, lastParagraph, list, tokens, current, currentLabel,\n      level = 0,\n      insideRef = false,\n      refTokens = {};\n\n  if (!state.env.footnotes) { return; }\n\n  state.tokens = state.tokens.filter(function(tok) {\n    if (tok.type === 'footnote_reference_open') {\n      insideRef = true;\n      current = [];\n      currentLabel = tok.label;\n      return false;\n    }\n    if (tok.type === 'footnote_reference_close') {\n      insideRef = false;\n      // prepend ':' to avoid conflict with Object.prototype members\n      refTokens[':' + currentLabel] = current;\n      return false;\n    }\n    if (insideRef) { current.push(tok); }\n    return !insideRef;\n  });\n\n  if (!state.env.footnotes.list) { return; }\n  list = state.env.footnotes.list;\n\n  state.tokens.push({\n    type: 'footnote_block_open',\n    level: level++\n  });\n  for (i = 0, l = list.length; i < l; i++) {\n    state.tokens.push({\n      type: 'footnote_open',\n      id: i,\n      level: level++\n    });\n\n    if (list[i].tokens) {\n      tokens = [];\n      tokens.push({\n        type: 'paragraph_open',\n        tight: false,\n        level: level++\n      });\n      tokens.push({\n        type: 'inline',\n        content: '',\n        level: level,\n        children: list[i].tokens\n      });\n      tokens.push({\n        type: 'paragraph_close',\n        tight: false,\n        level: --level\n      });\n    } else if (list[i].label) {\n      tokens = refTokens[':' + list[i].label];\n    }\n\n    state.tokens = state.tokens.concat(tokens);\n    if (state.tokens[state.tokens.length - 1].type === 'paragraph_close') {\n      lastParagraph = state.tokens.pop();\n    } else {\n      lastParagraph = null;\n    }\n\n    t = list[i].count > 0 ? list[i].count : 1;\n    for (j = 0; j < t; j++) {\n      state.tokens.push({\n        type: 'footnote_anchor',\n        id: i,\n        subId: j,\n        level: level\n      });\n    }\n\n    if (lastParagraph) {\n      state.tokens.push(lastParagraph);\n    }\n\n    state.tokens.push({\n      type: 'footnote_close',\n      level: --level\n    });\n  }\n  state.tokens.push({\n    type: 'footnote_block_close',\n    level: --level\n  });\n}\n\n// Enclose abbreviations in <abbr> tags\n//\n\nvar PUNCT_CHARS = ' \\n()[]\\'\".,!?-';\n\n\n// from Google closure library\n// http://closure-library.googlecode.com/git-history/docs/local_closure_goog_string_string.js.source.html#line1021\nfunction regEscape(s) {\n  return s.replace(/([-()\\[\\]{}+?*.$\\^|,:#<!\\\\])/g, '\\\\$1');\n}\n\n\nfunction abbr2(state) {\n  var i, j, l, tokens, token, text, nodes, pos, level, reg, m, regText,\n      blockTokens = state.tokens;\n\n  if (!state.env.abbreviations) { return; }\n  if (!state.env.abbrRegExp) {\n    regText = '(^|[' + PUNCT_CHARS.split('').map(regEscape).join('') + '])'\n            + '(' + Object.keys(state.env.abbreviations).map(function (x) {\n                      return x.substr(1);\n                    }).sort(function (a, b) {\n                      return b.length - a.length;\n                    }).map(regEscape).join('|') + ')'\n            + '($|[' + PUNCT_CHARS.split('').map(regEscape).join('') + '])';\n    state.env.abbrRegExp = new RegExp(regText, 'g');\n  }\n  reg = state.env.abbrRegExp;\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline') { continue; }\n    tokens = blockTokens[j].children;\n\n    // We scan from the end, to keep position when new tags added.\n    for (i = tokens.length - 1; i >= 0; i--) {\n      token = tokens[i];\n      if (token.type !== 'text') { continue; }\n\n      pos = 0;\n      text = token.content;\n      reg.lastIndex = 0;\n      level = token.level;\n      nodes = [];\n\n      while ((m = reg.exec(text))) {\n        if (reg.lastIndex > pos) {\n          nodes.push({\n            type: 'text',\n            content: text.slice(pos, m.index + m[1].length),\n            level: level\n          });\n        }\n\n        nodes.push({\n          type: 'abbr_open',\n          title: state.env.abbreviations[':' + m[2]],\n          level: level++\n        });\n        nodes.push({\n          type: 'text',\n          content: m[2],\n          level: level\n        });\n        nodes.push({\n          type: 'abbr_close',\n          level: --level\n        });\n        pos = reg.lastIndex - m[3].length;\n      }\n\n      if (!nodes.length) { continue; }\n\n      if (pos < text.length) {\n        nodes.push({\n          type: 'text',\n          content: text.slice(pos),\n          level: level\n        });\n      }\n\n      // replace current node\n      blockTokens[j].children = tokens = [].concat(tokens.slice(0, i), nodes, tokens.slice(i + 1));\n    }\n  }\n}\n\n// Simple typographical replacements\n//\n// TODO:\n// - fractionals 1/2, 1/4, 3/4 -> \u00BD, \u00BC, \u00BE\n// - miltiplication 2 x 4 -> 2 \u00D7 4\n\nvar RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/;\n\nvar SCOPED_ABBR_RE = /\\((c|tm|r|p)\\)/ig;\nvar SCOPED_ABBR = {\n  'c': '\u00A9',\n  'r': '\u00AE',\n  'p': '\u00A7',\n  'tm': '\u2122'\n};\n\nfunction replaceScopedAbbr(str) {\n  if (str.indexOf('(') < 0) { return str; }\n\n  return str.replace(SCOPED_ABBR_RE, function(match, name) {\n    return SCOPED_ABBR[name.toLowerCase()];\n  });\n}\n\n\nfunction replace(state) {\n  var i, token, text, inlineTokens, blkIdx;\n\n  if (!state.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline') { continue; }\n\n    inlineTokens = state.tokens[blkIdx].children;\n\n    for (i = inlineTokens.length - 1; i >= 0; i--) {\n      token = inlineTokens[i];\n      if (token.type === 'text') {\n        text = token.content;\n\n        text = replaceScopedAbbr(text);\n\n        if (RARE_RE.test(text)) {\n          text = text\n            .replace(/\\+-/g, '\u00B1')\n            // .., ..., ....... -> \u2026\n            // but ?..... & !..... -> ?.. & !..\n            .replace(/\\.{2,}/g, '\u2026').replace(/([?!])\u2026/g, '$1..')\n            .replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',')\n            // em-dash\n            .replace(/(^|[^-])---([^-]|$)/mg, '$1\\u2014$2')\n            // en-dash\n            .replace(/(^|\\s)--(\\s|$)/mg, '$1\\u2013$2')\n            .replace(/(^|[^-\\s])--([^-\\s]|$)/mg, '$1\\u2013$2');\n        }\n\n        token.content = text;\n      }\n    }\n  }\n}\n\n// Convert straight quotation marks to typographic ones\n//\n\nvar QUOTE_TEST_RE = /['\"]/;\nvar QUOTE_RE = /['\"]/g;\nvar PUNCT_RE = /[-\\s()\\[\\]]/;\nvar APOSTROPHE = '\u2019';\n\n// This function returns true if the character at `pos`\n// could be inside a word.\nfunction isLetter(str, pos) {\n  if (pos < 0 || pos >= str.length) { return false; }\n  return !PUNCT_RE.test(str[pos]);\n}\n\n\nfunction replaceAt(str, index, ch) {\n  return str.substr(0, index) + ch + str.substr(index + 1);\n}\n\n\nfunction smartquotes(state) {\n  /*eslint max-depth:0*/\n  var i, token, text, t, pos, max, thisLevel, lastSpace, nextSpace, item,\n      canOpen, canClose, j, isSingle, blkIdx, tokens,\n      stack;\n\n  if (!state.options.typographer) { return; }\n\n  stack = [];\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline') { continue; }\n\n    tokens = state.tokens[blkIdx].children;\n    stack.length = 0;\n\n    for (i = 0; i < tokens.length; i++) {\n      token = tokens[i];\n\n      if (token.type !== 'text' || QUOTE_TEST_RE.test(token.text)) { continue; }\n\n      thisLevel = tokens[i].level;\n\n      for (j = stack.length - 1; j >= 0; j--) {\n        if (stack[j].level <= thisLevel) { break; }\n      }\n      stack.length = j + 1;\n\n      text = token.content;\n      pos = 0;\n      max = text.length;\n\n      /*eslint no-labels:0,block-scoped-var:0*/\n      OUTER:\n      while (pos < max) {\n        QUOTE_RE.lastIndex = pos;\n        t = QUOTE_RE.exec(text);\n        if (!t) { break; }\n\n        lastSpace = !isLetter(text, t.index - 1);\n        pos = t.index + 1;\n        isSingle = (t[0] === \"'\");\n        nextSpace = !isLetter(text, pos);\n\n        if (!nextSpace && !lastSpace) {\n          // middle of word\n          if (isSingle) {\n            token.content = replaceAt(token.content, t.index, APOSTROPHE);\n          }\n          continue;\n        }\n\n        canOpen = !nextSpace;\n        canClose = !lastSpace;\n\n        if (canClose) {\n          // this could be a closing quote, rewind the stack to get a match\n          for (j = stack.length - 1; j >= 0; j--) {\n            item = stack[j];\n            if (stack[j].level < thisLevel) { break; }\n            if (item.single === isSingle && stack[j].level === thisLevel) {\n              item = stack[j];\n              if (isSingle) {\n                tokens[item.token].content = replaceAt(tokens[item.token].content, item.pos, state.options.quotes[2]);\n                token.content = replaceAt(token.content, t.index, state.options.quotes[3]);\n              } else {\n                tokens[item.token].content = replaceAt(tokens[item.token].content, item.pos, state.options.quotes[0]);\n                token.content = replaceAt(token.content, t.index, state.options.quotes[1]);\n              }\n              stack.length = j;\n              continue OUTER;\n            }\n          }\n        }\n\n        if (canOpen) {\n          stack.push({\n            token: i,\n            pos: t.index,\n            single: isSingle,\n            level: thisLevel\n          });\n        } else if (canClose && isSingle) {\n          token.content = replaceAt(token.content, t.index, APOSTROPHE);\n        }\n      }\n    }\n  }\n}\n\n/**\n * Core parser `rules`\n */\n\nvar _rules = [\n  [ 'block',          block          ],\n  [ 'abbr',           abbr           ],\n  [ 'references',     references     ],\n  [ 'inline',         inline         ],\n  [ 'footnote_tail',  footnote_block  ],\n  [ 'abbr2',          abbr2          ],\n  [ 'replacements',   replace   ],\n  [ 'smartquotes',    smartquotes    ],\n];\n\n/**\n * Class for top level (`core`) parser rules\n *\n * @api private\n */\n\nfunction Core() {\n  this.options = {};\n  this.ruler = new Ruler();\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n}\n\n/**\n * Process rules with the given `state`\n *\n * @param  {Object} `state`\n * @api private\n */\n\nCore.prototype.process = function (state) {\n  var i, l, rules;\n  rules = this.ruler.getRules('');\n  for (i = 0, l = rules.length; i < l; i++) {\n    rules[i](state);\n  }\n};\n\n// Parser state class\n\nfunction StateBlock(src, parser, options, env, tokens) {\n  var ch, s, start, pos, len, indent, indent_found;\n\n  this.src = src;\n\n  // Shortcuts to simplify nested calls\n  this.parser = parser;\n\n  this.options = options;\n\n  this.env = env;\n\n  //\n  // Internal state vartiables\n  //\n\n  this.tokens = tokens;\n\n  this.bMarks = [];  // line begin offsets for fast jumps\n  this.eMarks = [];  // line end offsets for fast jumps\n  this.tShift = [];  // indent for each line\n\n  // block parser variables\n  this.blkIndent  = 0; // required block content indent\n                       // (for example, if we are in list)\n  this.line       = 0; // line index in src\n  this.lineMax    = 0; // lines count\n  this.tight      = false;  // loose/tight mode for lists\n  this.parentType = 'root'; // if `list`, block parser stops on two newlines\n  this.ddIndent   = -1; // indent of the current dd block (-1 if there isn't any)\n\n  this.level = 0;\n\n  // renderer\n  this.result = '';\n\n  // Create caches\n  // Generate markers.\n  s = this.src;\n  indent = 0;\n  indent_found = false;\n\n  for (start = pos = indent = 0, len = s.length; pos < len; pos++) {\n    ch = s.charCodeAt(pos);\n\n    if (!indent_found) {\n      if (ch === 0x20/* space */) {\n        indent++;\n        continue;\n      } else {\n        indent_found = true;\n      }\n    }\n\n    if (ch === 0x0A || pos === len - 1) {\n      if (ch !== 0x0A) { pos++; }\n      this.bMarks.push(start);\n      this.eMarks.push(pos);\n      this.tShift.push(indent);\n\n      indent_found = false;\n      indent = 0;\n      start = pos + 1;\n    }\n  }\n\n  // Push fake entry to simplify cache bounds checks\n  this.bMarks.push(s.length);\n  this.eMarks.push(s.length);\n  this.tShift.push(0);\n\n  this.lineMax = this.bMarks.length - 1; // don't count last fake line\n}\n\nStateBlock.prototype.isEmpty = function isEmpty(line) {\n  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line];\n};\n\nStateBlock.prototype.skipEmptyLines = function skipEmptyLines(from) {\n  for (var max = this.lineMax; from < max; from++) {\n    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n      break;\n    }\n  }\n  return from;\n};\n\n// Skip spaces from given position.\nStateBlock.prototype.skipSpaces = function skipSpaces(pos) {\n  for (var max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== 0x20/* space */) { break; }\n  }\n  return pos;\n};\n\n// Skip char codes from given position\nStateBlock.prototype.skipChars = function skipChars(pos, code) {\n  for (var max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== code) { break; }\n  }\n  return pos;\n};\n\n// Skip char codes reverse from given position - 1\nStateBlock.prototype.skipCharsBack = function skipCharsBack(pos, code, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (code !== this.src.charCodeAt(--pos)) { return pos + 1; }\n  }\n  return pos;\n};\n\n// cut lines range from source.\nStateBlock.prototype.getLines = function getLines(begin, end, indent, keepLastLF) {\n  var i, first, last, queue, shift,\n      line = begin;\n\n  if (begin >= end) {\n    return '';\n  }\n\n  // Opt: don't use push queue for single line;\n  if (line + 1 === end) {\n    first = this.bMarks[line] + Math.min(this.tShift[line], indent);\n    last = keepLastLF ? this.eMarks[line] + 1 : this.eMarks[line];\n    return this.src.slice(first, last);\n  }\n\n  queue = new Array(end - begin);\n\n  for (i = 0; line < end; line++, i++) {\n    shift = this.tShift[line];\n    if (shift > indent) { shift = indent; }\n    if (shift < 0) { shift = 0; }\n\n    first = this.bMarks[line] + shift;\n\n    if (line + 1 < end || keepLastLF) {\n      // No need for bounds check because we have fake entry on tail.\n      last = this.eMarks[line] + 1;\n    } else {\n      last = this.eMarks[line];\n    }\n\n    queue[i] = this.src.slice(first, last);\n  }\n\n  return queue.join('');\n};\n\n// Code block (4 spaces padded)\n\nfunction code(state, startLine, endLine/*, silent*/) {\n  var nextLine, last;\n\n  if (state.tShift[startLine] - state.blkIndent < 4) { return false; }\n\n  last = nextLine = startLine + 1;\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++;\n      continue;\n    }\n    if (state.tShift[nextLine] - state.blkIndent >= 4) {\n      nextLine++;\n      last = nextLine;\n      continue;\n    }\n    break;\n  }\n\n  state.line = nextLine;\n  state.tokens.push({\n    type: 'code',\n    content: state.getLines(startLine, last, 4 + state.blkIndent, true),\n    block: true,\n    lines: [ startLine, state.line ],\n    level: state.level\n  });\n\n  return true;\n}\n\n// fences (``` lang, ~~~ lang)\n\nfunction fences(state, startLine, endLine, silent) {\n  var marker, len, params, nextLine, mem,\n      haveEndMarker = false,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  if (pos + 3 > max) { return false; }\n\n  marker = state.src.charCodeAt(pos);\n\n  if (marker !== 0x7E/* ~ */ && marker !== 0x60 /* ` */) {\n    return false;\n  }\n\n  // scan marker length\n  mem = pos;\n  pos = state.skipChars(pos, marker);\n\n  len = pos - mem;\n\n  if (len < 3) { return false; }\n\n  params = state.src.slice(pos, max).trim();\n\n  if (params.indexOf('`') >= 0) { return false; }\n\n  // Since start is found, we can report success here in validation mode\n  if (silent) { return true; }\n\n  // search end of block\n  nextLine = startLine;\n\n  for (;;) {\n    nextLine++;\n    if (nextLine >= endLine) {\n      // unclosed block should be autoclosed by end of document.\n      // also block seems to be autoclosed by end of parent\n      break;\n    }\n\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos < max && state.tShift[nextLine] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break;\n    }\n\n    if (state.src.charCodeAt(pos) !== marker) { continue; }\n\n    if (state.tShift[nextLine] - state.blkIndent >= 4) {\n      // closing fence should be indented less than 4 spaces\n      continue;\n    }\n\n    pos = state.skipChars(pos, marker);\n\n    // closing code fence must be at least as long as the opening one\n    if (pos - mem < len) { continue; }\n\n    // make sure tail has spaces only\n    pos = state.skipSpaces(pos);\n\n    if (pos < max) { continue; }\n\n    haveEndMarker = true;\n    // found!\n    break;\n  }\n\n  // If a fence has heading spaces, they should be removed from its inner block\n  len = state.tShift[startLine];\n\n  state.line = nextLine + (haveEndMarker ? 1 : 0);\n  state.tokens.push({\n    type: 'fence',\n    params: params,\n    content: state.getLines(startLine + 1, nextLine, len, true),\n    lines: [ startLine, state.line ],\n    level: state.level\n  });\n\n  return true;\n}\n\n// Block quotes\n\nfunction blockquote(state, startLine, endLine, silent) {\n  var nextLine, lastLineEmpty, oldTShift, oldBMarks, oldIndent, oldParentType, lines,\n      terminatorRules,\n      i, l, terminate,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  if (pos > max) { return false; }\n\n  // check the block quote marker\n  if (state.src.charCodeAt(pos++) !== 0x3E/* > */) { return false; }\n\n  if (state.level >= state.options.maxNesting) { return false; }\n\n  // we know that it's going to be a valid blockquote,\n  // so no point trying to find the end of it in silent mode\n  if (silent) { return true; }\n\n  // skip one optional space after '>'\n  if (state.src.charCodeAt(pos) === 0x20) { pos++; }\n\n  oldIndent = state.blkIndent;\n  state.blkIndent = 0;\n\n  oldBMarks = [ state.bMarks[startLine] ];\n  state.bMarks[startLine] = pos;\n\n  // check if we have an empty blockquote\n  pos = pos < max ? state.skipSpaces(pos) : pos;\n  lastLineEmpty = pos >= max;\n\n  oldTShift = [ state.tShift[startLine] ];\n  state.tShift[startLine] = pos - state.bMarks[startLine];\n\n  terminatorRules = state.parser.ruler.getRules('blockquote');\n\n  // Search the end of the block\n  //\n  // Block ends with either:\n  //  1. an empty line outside:\n  //     ```\n  //     > test\n  //\n  //     ```\n  //  2. an empty line inside:\n  //     ```\n  //     >\n  //     test\n  //     ```\n  //  3. another tag\n  //     ```\n  //     > test\n  //      - - -\n  //     ```\n  for (nextLine = startLine + 1; nextLine < endLine; nextLine++) {\n    pos = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos >= max) {\n      // Case 1: line is not inside the blockquote, and this line is empty.\n      break;\n    }\n\n    if (state.src.charCodeAt(pos++) === 0x3E/* > */) {\n      // This line is inside the blockquote.\n\n      // skip one optional space after '>'\n      if (state.src.charCodeAt(pos) === 0x20) { pos++; }\n\n      oldBMarks.push(state.bMarks[nextLine]);\n      state.bMarks[nextLine] = pos;\n\n      pos = pos < max ? state.skipSpaces(pos) : pos;\n      lastLineEmpty = pos >= max;\n\n      oldTShift.push(state.tShift[nextLine]);\n      state.tShift[nextLine] = pos - state.bMarks[nextLine];\n      continue;\n    }\n\n    // Case 2: line is not inside the blockquote, and the last line was empty.\n    if (lastLineEmpty) { break; }\n\n    // Case 3: another tag found.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n\n    oldBMarks.push(state.bMarks[nextLine]);\n    oldTShift.push(state.tShift[nextLine]);\n\n    // A negative number means that this is a paragraph continuation;\n    //\n    // Any negative number will do the job here, but it's better for it\n    // to be large enough to make any bugs obvious.\n    state.tShift[nextLine] = -1337;\n  }\n\n  oldParentType = state.parentType;\n  state.parentType = 'blockquote';\n  state.tokens.push({\n    type: 'blockquote_open',\n    lines: lines = [ startLine, 0 ],\n    level: state.level++\n  });\n  state.parser.tokenize(state, startLine, nextLine);\n  state.tokens.push({\n    type: 'blockquote_close',\n    level: --state.level\n  });\n  state.parentType = oldParentType;\n  lines[1] = state.line;\n\n  // Restore original tShift; this might not be necessary since the parser\n  // has already been here, but just to make sure we can do that.\n  for (i = 0; i < oldTShift.length; i++) {\n    state.bMarks[i + startLine] = oldBMarks[i];\n    state.tShift[i + startLine] = oldTShift[i];\n  }\n  state.blkIndent = oldIndent;\n\n  return true;\n}\n\n// Horizontal rule\n\nfunction hr(state, startLine, endLine, silent) {\n  var marker, cnt, ch,\n      pos = state.bMarks[startLine],\n      max = state.eMarks[startLine];\n\n  pos += state.tShift[startLine];\n\n  if (pos > max) { return false; }\n\n  marker = state.src.charCodeAt(pos++);\n\n  // Check hr marker\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x5F/* _ */) {\n    return false;\n  }\n\n  // markers can be mixed with spaces, but there should be at least 3 one\n\n  cnt = 1;\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos++);\n    if (ch !== marker && ch !== 0x20/* space */) { return false; }\n    if (ch === marker) { cnt++; }\n  }\n\n  if (cnt < 3) { return false; }\n\n  if (silent) { return true; }\n\n  state.line = startLine + 1;\n  state.tokens.push({\n    type: 'hr',\n    lines: [ startLine, state.line ],\n    level: state.level\n  });\n\n  return true;\n}\n\n// Lists\n\n// Search `[-+*][\\n ]`, returns next pos arter marker on success\n// or -1 on fail.\nfunction skipBulletListMarker(state, startLine) {\n  var marker, pos, max;\n\n  pos = state.bMarks[startLine] + state.tShift[startLine];\n  max = state.eMarks[startLine];\n\n  if (pos >= max) { return -1; }\n\n  marker = state.src.charCodeAt(pos++);\n  // Check bullet\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x2B/* + */) {\n    return -1;\n  }\n\n  if (pos < max && state.src.charCodeAt(pos) !== 0x20) {\n    // \" 1.test \" - is not a list item\n    return -1;\n  }\n\n  return pos;\n}\n\n// Search `\\d+[.)][\\n ]`, returns next pos arter marker on success\n// or -1 on fail.\nfunction skipOrderedListMarker(state, startLine) {\n  var ch,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  if (pos + 1 >= max) { return -1; }\n\n  ch = state.src.charCodeAt(pos++);\n\n  if (ch < 0x30/* 0 */ || ch > 0x39/* 9 */) { return -1; }\n\n  for (;;) {\n    // EOL -> fail\n    if (pos >= max) { return -1; }\n\n    ch = state.src.charCodeAt(pos++);\n\n    if (ch >= 0x30/* 0 */ && ch <= 0x39/* 9 */) {\n      continue;\n    }\n\n    // found valid marker\n    if (ch === 0x29/* ) */ || ch === 0x2e/* . */) {\n      break;\n    }\n\n    return -1;\n  }\n\n\n  if (pos < max && state.src.charCodeAt(pos) !== 0x20/* space */) {\n    // \" 1.test \" - is not a list item\n    return -1;\n  }\n  return pos;\n}\n\nfunction markTightParagraphs(state, idx) {\n  var i, l,\n      level = state.level + 2;\n\n  for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].tight = true;\n      state.tokens[i].tight = true;\n      i += 2;\n    }\n  }\n}\n\n\nfunction list(state, startLine, endLine, silent) {\n  var nextLine,\n      indent,\n      oldTShift,\n      oldIndent,\n      oldTight,\n      oldParentType,\n      start,\n      posAfterMarker,\n      max,\n      indentAfterMarker,\n      markerValue,\n      markerCharCode,\n      isOrdered,\n      contentStart,\n      listTokIdx,\n      prevEmptyEnd,\n      listLines,\n      itemLines,\n      tight = true,\n      terminatorRules,\n      i, l, terminate;\n\n  // Detect list type and position after marker\n  if ((posAfterMarker = skipOrderedListMarker(state, startLine)) >= 0) {\n    isOrdered = true;\n  } else if ((posAfterMarker = skipBulletListMarker(state, startLine)) >= 0) {\n    isOrdered = false;\n  } else {\n    return false;\n  }\n\n  if (state.level >= state.options.maxNesting) { return false; }\n\n  // We should terminate list on style change. Remember first one to compare.\n  markerCharCode = state.src.charCodeAt(posAfterMarker - 1);\n\n  // For validation mode we can terminate immediately\n  if (silent) { return true; }\n\n  // Start list\n  listTokIdx = state.tokens.length;\n\n  if (isOrdered) {\n    start = state.bMarks[startLine] + state.tShift[startLine];\n    markerValue = Number(state.src.substr(start, posAfterMarker - start - 1));\n\n    state.tokens.push({\n      type: 'ordered_list_open',\n      order: markerValue,\n      lines: listLines = [ startLine, 0 ],\n      level: state.level++\n    });\n\n  } else {\n    state.tokens.push({\n      type: 'bullet_list_open',\n      lines: listLines = [ startLine, 0 ],\n      level: state.level++\n    });\n  }\n\n  //\n  // Iterate list items\n  //\n\n  nextLine = startLine;\n  prevEmptyEnd = false;\n  terminatorRules = state.parser.ruler.getRules('list');\n\n  while (nextLine < endLine) {\n    contentStart = state.skipSpaces(posAfterMarker);\n    max = state.eMarks[nextLine];\n\n    if (contentStart >= max) {\n      // trimming space in \"-    \\n  3\" case, indent is 1 here\n      indentAfterMarker = 1;\n    } else {\n      indentAfterMarker = contentStart - posAfterMarker;\n    }\n\n    // If we have more than 4 spaces, the indent is 1\n    // (the rest is just indented code block)\n    if (indentAfterMarker > 4) { indentAfterMarker = 1; }\n\n    // If indent is less than 1, assume that it's one, example:\n    //  \"-\\n  test\"\n    if (indentAfterMarker < 1) { indentAfterMarker = 1; }\n\n    // \"  -  test\"\n    //  ^^^^^ - calculating total length of this thing\n    indent = (posAfterMarker - state.bMarks[nextLine]) + indentAfterMarker;\n\n    // Run subparser & write tokens\n    state.tokens.push({\n      type: 'list_item_open',\n      lines: itemLines = [ startLine, 0 ],\n      level: state.level++\n    });\n\n    oldIndent = state.blkIndent;\n    oldTight = state.tight;\n    oldTShift = state.tShift[startLine];\n    oldParentType = state.parentType;\n    state.tShift[startLine] = contentStart - state.bMarks[startLine];\n    state.blkIndent = indent;\n    state.tight = true;\n    state.parentType = 'list';\n\n    state.parser.tokenize(state, startLine, endLine, true);\n\n    // If any of list item is tight, mark list as tight\n    if (!state.tight || prevEmptyEnd) {\n      tight = false;\n    }\n    // Item become loose if finish with empty line,\n    // but we should filter last element, because it means list finish\n    prevEmptyEnd = (state.line - startLine) > 1 && state.isEmpty(state.line - 1);\n\n    state.blkIndent = oldIndent;\n    state.tShift[startLine] = oldTShift;\n    state.tight = oldTight;\n    state.parentType = oldParentType;\n\n    state.tokens.push({\n      type: 'list_item_close',\n      level: --state.level\n    });\n\n    nextLine = startLine = state.line;\n    itemLines[1] = nextLine;\n    contentStart = state.bMarks[startLine];\n\n    if (nextLine >= endLine) { break; }\n\n    if (state.isEmpty(nextLine)) {\n      break;\n    }\n\n    //\n    // Try to check if list is terminated or continued.\n    //\n    if (state.tShift[nextLine] < state.blkIndent) { break; }\n\n    // fail if terminating block found\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n\n    // fail if list has another type\n    if (isOrdered) {\n      posAfterMarker = skipOrderedListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n    } else {\n      posAfterMarker = skipBulletListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n    }\n\n    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) { break; }\n  }\n\n  // Finilize list\n  state.tokens.push({\n    type: isOrdered ? 'ordered_list_close' : 'bullet_list_close',\n    level: --state.level\n  });\n  listLines[1] = nextLine;\n\n  state.line = nextLine;\n\n  // mark paragraphs tight if needed\n  if (tight) {\n    markTightParagraphs(state, listTokIdx);\n  }\n\n  return true;\n}\n\n// Process footnote reference list\n\nfunction footnote(state, startLine, endLine, silent) {\n  var oldBMark, oldTShift, oldParentType, pos, label,\n      start = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // line should be at least 5 chars - \"[^x]:\"\n  if (start + 4 > max) { return false; }\n\n  if (state.src.charCodeAt(start) !== 0x5B/* [ */) { return false; }\n  if (state.src.charCodeAt(start + 1) !== 0x5E/* ^ */) { return false; }\n  if (state.level >= state.options.maxNesting) { return false; }\n\n  for (pos = start + 2; pos < max; pos++) {\n    if (state.src.charCodeAt(pos) === 0x20) { return false; }\n    if (state.src.charCodeAt(pos) === 0x5D /* ] */) {\n      break;\n    }\n  }\n\n  if (pos === start + 2) { return false; } // no empty footnote labels\n  if (pos + 1 >= max || state.src.charCodeAt(++pos) !== 0x3A /* : */) { return false; }\n  if (silent) { return true; }\n  pos++;\n\n  if (!state.env.footnotes) { state.env.footnotes = {}; }\n  if (!state.env.footnotes.refs) { state.env.footnotes.refs = {}; }\n  label = state.src.slice(start + 2, pos - 2);\n  state.env.footnotes.refs[':' + label] = -1;\n\n  state.tokens.push({\n    type: 'footnote_reference_open',\n    label: label,\n    level: state.level++\n  });\n\n  oldBMark = state.bMarks[startLine];\n  oldTShift = state.tShift[startLine];\n  oldParentType = state.parentType;\n  state.tShift[startLine] = state.skipSpaces(pos) - pos;\n  state.bMarks[startLine] = pos;\n  state.blkIndent += 4;\n  state.parentType = 'footnote';\n\n  if (state.tShift[startLine] < state.blkIndent) {\n    state.tShift[startLine] += state.blkIndent;\n    state.bMarks[startLine] -= state.blkIndent;\n  }\n\n  state.parser.tokenize(state, startLine, endLine, true);\n\n  state.parentType = oldParentType;\n  state.blkIndent -= 4;\n  state.tShift[startLine] = oldTShift;\n  state.bMarks[startLine] = oldBMark;\n\n  state.tokens.push({\n    type: 'footnote_reference_close',\n    level: --state.level\n  });\n\n  return true;\n}\n\n// heading (#, ##, ...)\n\nfunction heading(state, startLine, endLine, silent) {\n  var ch, level, tmp,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  if (pos >= max) { return false; }\n\n  ch  = state.src.charCodeAt(pos);\n\n  if (ch !== 0x23/* # */ || pos >= max) { return false; }\n\n  // count heading level\n  level = 1;\n  ch = state.src.charCodeAt(++pos);\n  while (ch === 0x23/* # */ && pos < max && level <= 6) {\n    level++;\n    ch = state.src.charCodeAt(++pos);\n  }\n\n  if (level > 6 || (pos < max && ch !== 0x20/* space */)) { return false; }\n\n  if (silent) { return true; }\n\n  // Let's cut tails like '    ###  ' from the end of string\n\n  max = state.skipCharsBack(max, 0x20, pos); // space\n  tmp = state.skipCharsBack(max, 0x23, pos); // #\n  if (tmp > pos && state.src.charCodeAt(tmp - 1) === 0x20/* space */) {\n    max = tmp;\n  }\n\n  state.line = startLine + 1;\n\n  state.tokens.push({ type: 'heading_open',\n    hLevel: level,\n    lines: [ startLine, state.line ],\n    level: state.level\n  });\n\n  // only if header is not empty\n  if (pos < max) {\n    state.tokens.push({\n      type: 'inline',\n      content: state.src.slice(pos, max).trim(),\n      level: state.level + 1,\n      lines: [ startLine, state.line ],\n      children: []\n    });\n  }\n  state.tokens.push({ type: 'heading_close', hLevel: level, level: state.level });\n\n  return true;\n}\n\n// lheading (---, ===)\n\nfunction lheading(state, startLine, endLine/*, silent*/) {\n  var marker, pos, max,\n      next = startLine + 1;\n\n  if (next >= endLine) { return false; }\n  if (state.tShift[next] < state.blkIndent) { return false; }\n\n  // Scan next line\n\n  if (state.tShift[next] - state.blkIndent > 3) { return false; }\n\n  pos = state.bMarks[next] + state.tShift[next];\n  max = state.eMarks[next];\n\n  if (pos >= max) { return false; }\n\n  marker = state.src.charCodeAt(pos);\n\n  if (marker !== 0x2D/* - */ && marker !== 0x3D/* = */) { return false; }\n\n  pos = state.skipChars(pos, marker);\n\n  pos = state.skipSpaces(pos);\n\n  if (pos < max) { return false; }\n\n  pos = state.bMarks[startLine] + state.tShift[startLine];\n\n  state.line = next + 1;\n  state.tokens.push({\n    type: 'heading_open',\n    hLevel: marker === 0x3D/* = */ ? 1 : 2,\n    lines: [ startLine, state.line ],\n    level: state.level\n  });\n  state.tokens.push({\n    type: 'inline',\n    content: state.src.slice(pos, state.eMarks[startLine]).trim(),\n    level: state.level + 1,\n    lines: [ startLine, state.line - 1 ],\n    children: []\n  });\n  state.tokens.push({\n    type: 'heading_close',\n    hLevel: marker === 0x3D/* = */ ? 1 : 2,\n    level: state.level\n  });\n\n  return true;\n}\n\n// List of valid html blocks names, accorting to commonmark spec\n// http://jgm.github.io/CommonMark/spec.html#html-blocks\n\nvar html_blocks = {};\n\n[\n  'article',\n  'aside',\n  'button',\n  'blockquote',\n  'body',\n  'canvas',\n  'caption',\n  'col',\n  'colgroup',\n  'dd',\n  'div',\n  'dl',\n  'dt',\n  'embed',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'header',\n  'hgroup',\n  'hr',\n  'iframe',\n  'li',\n  'map',\n  'object',\n  'ol',\n  'output',\n  'p',\n  'pre',\n  'progress',\n  'script',\n  'section',\n  'style',\n  'table',\n  'tbody',\n  'td',\n  'textarea',\n  'tfoot',\n  'th',\n  'tr',\n  'thead',\n  'ul',\n  'video'\n].forEach(function (name) { html_blocks[name] = true; });\n\n// HTML block\n\n\nvar HTML_TAG_OPEN_RE = /^<([a-zA-Z]{1,15})[\\s\\/>]/;\nvar HTML_TAG_CLOSE_RE = /^<\\/([a-zA-Z]{1,15})[\\s>]/;\n\nfunction isLetter$1(ch) {\n  /*eslint no-bitwise:0*/\n  var lc = ch | 0x20; // to lower case\n  return (lc >= 0x61/* a */) && (lc <= 0x7a/* z */);\n}\n\nfunction htmlblock(state, startLine, endLine, silent) {\n  var ch, match, nextLine,\n      pos = state.bMarks[startLine],\n      max = state.eMarks[startLine],\n      shift = state.tShift[startLine];\n\n  pos += shift;\n\n  if (!state.options.html) { return false; }\n\n  if (shift > 3 || pos + 2 >= max) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  ch = state.src.charCodeAt(pos + 1);\n\n  if (ch === 0x21/* ! */ || ch === 0x3F/* ? */) {\n    // Directive start / comment start / processing instruction start\n    if (silent) { return true; }\n\n  } else if (ch === 0x2F/* / */ || isLetter$1(ch)) {\n\n    // Probably start or end of tag\n    if (ch === 0x2F/* \\ */) {\n      // closing tag\n      match = state.src.slice(pos, max).match(HTML_TAG_CLOSE_RE);\n      if (!match) { return false; }\n    } else {\n      // opening tag\n      match = state.src.slice(pos, max).match(HTML_TAG_OPEN_RE);\n      if (!match) { return false; }\n    }\n    // Make sure tag name is valid\n    if (html_blocks[match[1].toLowerCase()] !== true) { return false; }\n    if (silent) { return true; }\n\n  } else {\n    return false;\n  }\n\n  // If we are here - we detected HTML block.\n  // Let's roll down till empty line (block end).\n  nextLine = startLine + 1;\n  while (nextLine < state.lineMax && !state.isEmpty(nextLine)) {\n    nextLine++;\n  }\n\n  state.line = nextLine;\n  state.tokens.push({\n    type: 'htmlblock',\n    level: state.level,\n    lines: [ startLine, state.line ],\n    content: state.getLines(startLine, nextLine, 0, true)\n  });\n\n  return true;\n}\n\n// GFM table, non-standard\n\nfunction getLine(state, line) {\n  var pos = state.bMarks[line] + state.blkIndent,\n      max = state.eMarks[line];\n\n  return state.src.substr(pos, max - pos);\n}\n\nfunction table(state, startLine, endLine, silent) {\n  var ch, lineText, pos, i, nextLine, rows, cell,\n      aligns, t, tableLines, tbodyLines;\n\n  // should have at least three lines\n  if (startLine + 2 > endLine) { return false; }\n\n  nextLine = startLine + 1;\n\n  if (state.tShift[nextLine] < state.blkIndent) { return false; }\n\n  // first character of the second line should be '|' or '-'\n\n  pos = state.bMarks[nextLine] + state.tShift[nextLine];\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  ch = state.src.charCodeAt(pos);\n  if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */) { return false; }\n\n  lineText = getLine(state, startLine + 1);\n  if (!/^[-:| ]+$/.test(lineText)) { return false; }\n\n  rows = lineText.split('|');\n  if (rows <= 2) { return false; }\n  aligns = [];\n  for (i = 0; i < rows.length; i++) {\n    t = rows[i].trim();\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === rows.length - 1) {\n        continue;\n      } else {\n        return false;\n      }\n    }\n\n    if (!/^:?-+:?$/.test(t)) { return false; }\n    if (t.charCodeAt(t.length - 1) === 0x3A/* : */) {\n      aligns.push(t.charCodeAt(0) === 0x3A/* : */ ? 'center' : 'right');\n    } else if (t.charCodeAt(0) === 0x3A/* : */) {\n      aligns.push('left');\n    } else {\n      aligns.push('');\n    }\n  }\n\n  lineText = getLine(state, startLine).trim();\n  if (lineText.indexOf('|') === -1) { return false; }\n  rows = lineText.replace(/^\\||\\|$/g, '').split('|');\n  if (aligns.length !== rows.length) { return false; }\n  if (silent) { return true; }\n\n  state.tokens.push({\n    type: 'table_open',\n    lines: tableLines = [ startLine, 0 ],\n    level: state.level++\n  });\n  state.tokens.push({\n    type: 'thead_open',\n    lines: [ startLine, startLine + 1 ],\n    level: state.level++\n  });\n\n  state.tokens.push({\n    type: 'tr_open',\n    lines: [ startLine, startLine + 1 ],\n    level: state.level++\n  });\n  for (i = 0; i < rows.length; i++) {\n    state.tokens.push({\n      type: 'th_open',\n      align: aligns[i],\n      lines: [ startLine, startLine + 1 ],\n      level: state.level++\n    });\n    state.tokens.push({\n      type: 'inline',\n      content: rows[i].trim(),\n      lines: [ startLine, startLine + 1 ],\n      level: state.level,\n      children: []\n    });\n    state.tokens.push({ type: 'th_close', level: --state.level });\n  }\n  state.tokens.push({ type: 'tr_close', level: --state.level });\n  state.tokens.push({ type: 'thead_close', level: --state.level });\n\n  state.tokens.push({\n    type: 'tbody_open',\n    lines: tbodyLines = [ startLine + 2, 0 ],\n    level: state.level++\n  });\n\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.tShift[nextLine] < state.blkIndent) { break; }\n\n    lineText = getLine(state, nextLine).trim();\n    if (lineText.indexOf('|') === -1) { break; }\n    rows = lineText.replace(/^\\||\\|$/g, '').split('|');\n\n    state.tokens.push({ type: 'tr_open', level: state.level++ });\n    for (i = 0; i < rows.length; i++) {\n      state.tokens.push({ type: 'td_open', align: aligns[i], level: state.level++ });\n      // 0x7c === '|'\n      cell = rows[i].substring(\n          rows[i].charCodeAt(0) === 0x7c ? 1 : 0,\n          rows[i].charCodeAt(rows[i].length - 1) === 0x7c ? rows[i].length - 1 : rows[i].length\n      ).trim();\n      state.tokens.push({\n        type: 'inline',\n        content: cell,\n        level: state.level,\n        children: []\n      });\n      state.tokens.push({ type: 'td_close', level: --state.level });\n    }\n    state.tokens.push({ type: 'tr_close', level: --state.level });\n  }\n  state.tokens.push({ type: 'tbody_close', level: --state.level });\n  state.tokens.push({ type: 'table_close', level: --state.level });\n\n  tableLines[1] = tbodyLines[1] = nextLine;\n  state.line = nextLine;\n  return true;\n}\n\n// Definition lists\n\n// Search `[:~][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipMarker(state, line) {\n  var pos, marker,\n      start = state.bMarks[line] + state.tShift[line],\n      max = state.eMarks[line];\n\n  if (start >= max) { return -1; }\n\n  // Check bullet\n  marker = state.src.charCodeAt(start++);\n  if (marker !== 0x7E/* ~ */ && marker !== 0x3A/* : */) { return -1; }\n\n  pos = state.skipSpaces(start);\n\n  // require space after \":\"\n  if (start === pos) { return -1; }\n\n  // no empty definitions, e.g. \"  : \"\n  if (pos >= max) { return -1; }\n\n  return pos;\n}\n\nfunction markTightParagraphs$1(state, idx) {\n  var i, l,\n      level = state.level + 2;\n\n  for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].tight = true;\n      state.tokens[i].tight = true;\n      i += 2;\n    }\n  }\n}\n\nfunction deflist(state, startLine, endLine, silent) {\n  var contentStart,\n      ddLine,\n      dtLine,\n      itemLines,\n      listLines,\n      listTokIdx,\n      nextLine,\n      oldIndent,\n      oldDDIndent,\n      oldParentType,\n      oldTShift,\n      oldTight,\n      prevEmptyEnd,\n      tight;\n\n  if (silent) {\n    // quirk: validation mode validates a dd block only, not a whole deflist\n    if (state.ddIndent < 0) { return false; }\n    return skipMarker(state, startLine) >= 0;\n  }\n\n  nextLine = startLine + 1;\n  if (state.isEmpty(nextLine)) {\n    if (++nextLine > endLine) { return false; }\n  }\n\n  if (state.tShift[nextLine] < state.blkIndent) { return false; }\n  contentStart = skipMarker(state, nextLine);\n  if (contentStart < 0) { return false; }\n\n  if (state.level >= state.options.maxNesting) { return false; }\n\n  // Start list\n  listTokIdx = state.tokens.length;\n\n  state.tokens.push({\n    type: 'dl_open',\n    lines: listLines = [ startLine, 0 ],\n    level: state.level++\n  });\n\n  //\n  // Iterate list items\n  //\n\n  dtLine = startLine;\n  ddLine = nextLine;\n\n  // One definition list can contain multiple DTs,\n  // and one DT can be followed by multiple DDs.\n  //\n  // Thus, there is two loops here, and label is\n  // needed to break out of the second one\n  //\n  /*eslint no-labels:0,block-scoped-var:0*/\n  OUTER:\n  for (;;) {\n    tight = true;\n    prevEmptyEnd = false;\n\n    state.tokens.push({\n      type: 'dt_open',\n      lines: [ dtLine, dtLine ],\n      level: state.level++\n    });\n    state.tokens.push({\n      type: 'inline',\n      content: state.getLines(dtLine, dtLine + 1, state.blkIndent, false).trim(),\n      level: state.level + 1,\n      lines: [ dtLine, dtLine ],\n      children: []\n    });\n    state.tokens.push({\n      type: 'dt_close',\n      level: --state.level\n    });\n\n    for (;;) {\n      state.tokens.push({\n        type: 'dd_open',\n        lines: itemLines = [ nextLine, 0 ],\n        level: state.level++\n      });\n\n      oldTight = state.tight;\n      oldDDIndent = state.ddIndent;\n      oldIndent = state.blkIndent;\n      oldTShift = state.tShift[ddLine];\n      oldParentType = state.parentType;\n      state.blkIndent = state.ddIndent = state.tShift[ddLine] + 2;\n      state.tShift[ddLine] = contentStart - state.bMarks[ddLine];\n      state.tight = true;\n      state.parentType = 'deflist';\n\n      state.parser.tokenize(state, ddLine, endLine, true);\n\n      // If any of list item is tight, mark list as tight\n      if (!state.tight || prevEmptyEnd) {\n        tight = false;\n      }\n      // Item become loose if finish with empty line,\n      // but we should filter last element, because it means list finish\n      prevEmptyEnd = (state.line - ddLine) > 1 && state.isEmpty(state.line - 1);\n\n      state.tShift[ddLine] = oldTShift;\n      state.tight = oldTight;\n      state.parentType = oldParentType;\n      state.blkIndent = oldIndent;\n      state.ddIndent = oldDDIndent;\n\n      state.tokens.push({\n        type: 'dd_close',\n        level: --state.level\n      });\n\n      itemLines[1] = nextLine = state.line;\n\n      if (nextLine >= endLine) { break OUTER; }\n\n      if (state.tShift[nextLine] < state.blkIndent) { break OUTER; }\n      contentStart = skipMarker(state, nextLine);\n      if (contentStart < 0) { break; }\n\n      ddLine = nextLine;\n\n      // go to the next loop iteration:\n      // insert DD tag and repeat checking\n    }\n\n    if (nextLine >= endLine) { break; }\n    dtLine = nextLine;\n\n    if (state.isEmpty(dtLine)) { break; }\n    if (state.tShift[dtLine] < state.blkIndent) { break; }\n\n    ddLine = dtLine + 1;\n    if (ddLine >= endLine) { break; }\n    if (state.isEmpty(ddLine)) { ddLine++; }\n    if (ddLine >= endLine) { break; }\n\n    if (state.tShift[ddLine] < state.blkIndent) { break; }\n    contentStart = skipMarker(state, ddLine);\n    if (contentStart < 0) { break; }\n\n    // go to the next loop iteration:\n    // insert DT and DD tags and repeat checking\n  }\n\n  // Finilize list\n  state.tokens.push({\n    type: 'dl_close',\n    level: --state.level\n  });\n  listLines[1] = nextLine;\n\n  state.line = nextLine;\n\n  // mark paragraphs tight if needed\n  if (tight) {\n    markTightParagraphs$1(state, listTokIdx);\n  }\n\n  return true;\n}\n\n// Paragraph\n\nfunction paragraph(state, startLine/*, endLine*/) {\n  var endLine, content, terminate, i, l,\n      nextLine = startLine + 1,\n      terminatorRules;\n\n  endLine = state.lineMax;\n\n  // jump line-by-line until empty one or EOF\n  if (nextLine < endLine && !state.isEmpty(nextLine)) {\n    terminatorRules = state.parser.ruler.getRules('paragraph');\n\n    for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n      // this would be a code block normally, but after paragraph\n      // it's considered a lazy continuation regardless of what's there\n      if (state.tShift[nextLine] - state.blkIndent > 3) { continue; }\n\n      // Some tags can terminate paragraph without empty line.\n      terminate = false;\n      for (i = 0, l = terminatorRules.length; i < l; i++) {\n        if (terminatorRules[i](state, nextLine, endLine, true)) {\n          terminate = true;\n          break;\n        }\n      }\n      if (terminate) { break; }\n    }\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine;\n  if (content.length) {\n    state.tokens.push({\n      type: 'paragraph_open',\n      tight: false,\n      lines: [ startLine, state.line ],\n      level: state.level\n    });\n    state.tokens.push({\n      type: 'inline',\n      content: content,\n      level: state.level + 1,\n      lines: [ startLine, state.line ],\n      children: []\n    });\n    state.tokens.push({\n      type: 'paragraph_close',\n      tight: false,\n      level: state.level\n    });\n  }\n\n  return true;\n}\n\n/**\n * Parser rules\n */\n\nvar _rules$1 = [\n  [ 'code',       code ],\n  [ 'fences',     fences,     [ 'paragraph', 'blockquote', 'list' ] ],\n  [ 'blockquote', blockquote, [ 'paragraph', 'blockquote', 'list' ] ],\n  [ 'hr',         hr,         [ 'paragraph', 'blockquote', 'list' ] ],\n  [ 'list',       list,       [ 'paragraph', 'blockquote' ] ],\n  [ 'footnote',   footnote,   [ 'paragraph' ] ],\n  [ 'heading',    heading,    [ 'paragraph', 'blockquote' ] ],\n  [ 'lheading',   lheading ],\n  [ 'htmlblock',  htmlblock,  [ 'paragraph', 'blockquote' ] ],\n  [ 'table',      table,      [ 'paragraph' ] ],\n  [ 'deflist',    deflist,    [ 'paragraph' ] ],\n  [ 'paragraph',  paragraph ]\n];\n\n/**\n * Block Parser class\n *\n * @api private\n */\n\nfunction ParserBlock() {\n  this.ruler = new Ruler();\n  for (var i = 0; i < _rules$1.length; i++) {\n    this.ruler.push(_rules$1[i][0], _rules$1[i][1], {\n      alt: (_rules$1[i][2] || []).slice()\n    });\n  }\n}\n\n/**\n * Generate tokens for the given input range.\n *\n * @param  {Object} `state` Has properties like `src`, `parser`, `options` etc\n * @param  {Number} `startLine`\n * @param  {Number} `endLine`\n * @api private\n */\n\nParserBlock.prototype.tokenize = function (state, startLine, endLine) {\n  var rules = this.ruler.getRules('');\n  var len = rules.length;\n  var line = startLine;\n  var hasEmptyLines = false;\n  var ok, i;\n\n  while (line < endLine) {\n    state.line = line = state.skipEmptyLines(line);\n    if (line >= endLine) {\n      break;\n    }\n\n    // Termination condition for nested calls.\n    // Nested calls currently used for blockquotes & lists\n    if (state.tShift[line] < state.blkIndent) {\n      break;\n    }\n\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.line`\n    // - update `state.tokens`\n    // - return true\n\n    for (i = 0; i < len; i++) {\n      ok = rules[i](state, line, endLine, false);\n      if (ok) {\n        break;\n      }\n    }\n\n    // set state.tight iff we had an empty line before current tag\n    // i.e. latest empty line should not count\n    state.tight = !hasEmptyLines;\n\n    // paragraph might \"eat\" one newline after it in nested lists\n    if (state.isEmpty(state.line - 1)) {\n      hasEmptyLines = true;\n    }\n\n    line = state.line;\n\n    if (line < endLine && state.isEmpty(line)) {\n      hasEmptyLines = true;\n      line++;\n\n      // two empty lines should stop the parser in list mode\n      if (line < endLine && state.parentType === 'list' && state.isEmpty(line)) { break; }\n      state.line = line;\n    }\n  }\n};\n\nvar TABS_SCAN_RE = /[\\n\\t]/g;\nvar NEWLINES_RE  = /\\r[\\n\\u0085]|[\\u2424\\u2028\\u0085]/g;\nvar SPACES_RE    = /\\u00a0/g;\n\n/**\n * Tokenize the given `str`.\n *\n * @param  {String} `str` Source string\n * @param  {Object} `options`\n * @param  {Object} `env`\n * @param  {Array} `outTokens`\n * @api private\n */\n\nParserBlock.prototype.parse = function (str, options, env, outTokens) {\n  var state, lineStart = 0, lastTabPos = 0;\n  if (!str) { return []; }\n\n  // Normalize spaces\n  str = str.replace(SPACES_RE, ' ');\n\n  // Normalize newlines\n  str = str.replace(NEWLINES_RE, '\\n');\n\n  // Replace tabs with proper number of spaces (1..4)\n  if (str.indexOf('\\t') >= 0) {\n    str = str.replace(TABS_SCAN_RE, function (match, offset) {\n      var result;\n      if (str.charCodeAt(offset) === 0x0A) {\n        lineStart = offset + 1;\n        lastTabPos = 0;\n        return match;\n      }\n      result = '    '.slice((offset - lineStart - lastTabPos) % 4);\n      lastTabPos = offset - lineStart + 1;\n      return result;\n    });\n  }\n\n  state = new StateBlock(str, this, options, env, outTokens);\n  this.tokenize(state, state.line, state.lineMax);\n};\n\n// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n\n// Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n\nfunction isTerminatorChar(ch) {\n  switch (ch) {\n    case 0x0A/* \\n */:\n    case 0x5C/* \\ */:\n    case 0x60/* ` */:\n    case 0x2A/* * */:\n    case 0x5F/* _ */:\n    case 0x5E/* ^ */:\n    case 0x5B/* [ */:\n    case 0x5D/* ] */:\n    case 0x21/* ! */:\n    case 0x26/* & */:\n    case 0x3C/* < */:\n    case 0x3E/* > */:\n    case 0x7B/* { */:\n    case 0x7D/* } */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x40/* @ */:\n    case 0x7E/* ~ */:\n    case 0x2B/* + */:\n    case 0x3D/* = */:\n    case 0x3A/* : */:\n      return true;\n    default:\n      return false;\n  }\n}\n\nfunction text(state, silent) {\n  var pos = state.pos;\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++;\n  }\n\n  if (pos === state.pos) { return false; }\n\n  if (!silent) { state.pending += state.src.slice(state.pos, pos); }\n\n  state.pos = pos;\n\n  return true;\n}\n\n// Proceess '\\n'\n\nfunction newline(state, silent) {\n  var pmax, max, pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x0A/* \\n */) { return false; }\n\n  pmax = state.pending.length - 1;\n  max = state.posMax;\n\n  // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        // Strip out all trailing spaces on this line.\n        for (var i = pmax - 2; i >= 0; i--) {\n          if (state.pending.charCodeAt(i) !== 0x20) {\n            state.pending = state.pending.substring(0, i + 1);\n            break;\n          }\n        }\n        state.push({\n          type: 'hardbreak',\n          level: state.level\n        });\n      } else {\n        state.pending = state.pending.slice(0, -1);\n        state.push({\n          type: 'softbreak',\n          level: state.level\n        });\n      }\n\n    } else {\n      state.push({\n        type: 'softbreak',\n        level: state.level\n      });\n    }\n  }\n\n  pos++;\n\n  // skip heading spaces for next line\n  while (pos < max && state.src.charCodeAt(pos) === 0x20) { pos++; }\n\n  state.pos = pos;\n  return true;\n}\n\n// Proceess escaped chars and hardbreaks\n\nvar ESCAPED = [];\n\nfor (var i = 0; i < 256; i++) { ESCAPED.push(0); }\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'\n  .split('').forEach(function(ch) { ESCAPED[ch.charCodeAt(0)] = 1; });\n\n\nfunction escape(state, silent) {\n  var ch, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x5C/* \\ */) { return false; }\n\n  pos++;\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch < 256 && ESCAPED[ch] !== 0) {\n      if (!silent) { state.pending += state.src[pos]; }\n      state.pos += 2;\n      return true;\n    }\n\n    if (ch === 0x0A) {\n      if (!silent) {\n        state.push({\n          type: 'hardbreak',\n          level: state.level\n        });\n      }\n\n      pos++;\n      // skip leading whitespaces from next line\n      while (pos < max && state.src.charCodeAt(pos) === 0x20) { pos++; }\n\n      state.pos = pos;\n      return true;\n    }\n  }\n\n  if (!silent) { state.pending += '\\\\'; }\n  state.pos++;\n  return true;\n}\n\n// Parse backticks\n\nfunction backticks(state, silent) {\n  var start, max, marker, matchStart, matchEnd,\n      pos = state.pos,\n      ch = state.src.charCodeAt(pos);\n\n  if (ch !== 0x60/* ` */) { return false; }\n\n  start = pos;\n  pos++;\n  max = state.posMax;\n\n  while (pos < max && state.src.charCodeAt(pos) === 0x60/* ` */) { pos++; }\n\n  marker = state.src.slice(start, pos);\n\n  matchStart = matchEnd = pos;\n\n  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n    matchEnd = matchStart + 1;\n\n    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60/* ` */) { matchEnd++; }\n\n    if (matchEnd - matchStart === marker.length) {\n      if (!silent) {\n        state.push({\n          type: 'code',\n          content: state.src.slice(pos, matchStart)\n                              .replace(/[ \\n]+/g, ' ')\n                              .trim(),\n          block: false,\n          level: state.level\n        });\n      }\n      state.pos = matchEnd;\n      return true;\n    }\n  }\n\n  if (!silent) { state.pending += marker; }\n  state.pos += marker.length;\n  return true;\n}\n\n// Process ~~deleted text~~\n\nfunction del(state, silent) {\n  var found,\n      pos,\n      stack,\n      max = state.posMax,\n      start = state.pos,\n      lastChar,\n      nextChar;\n\n  if (state.src.charCodeAt(start) !== 0x7E/* ~ */) { return false; }\n  if (silent) { return false; } // don't run any pairs in validation mode\n  if (start + 4 >= max) { return false; }\n  if (state.src.charCodeAt(start + 1) !== 0x7E/* ~ */) { return false; }\n  if (state.level >= state.options.maxNesting) { return false; }\n\n  lastChar = start > 0 ? state.src.charCodeAt(start - 1) : -1;\n  nextChar = state.src.charCodeAt(start + 2);\n\n  if (lastChar === 0x7E/* ~ */) { return false; }\n  if (nextChar === 0x7E/* ~ */) { return false; }\n  if (nextChar === 0x20 || nextChar === 0x0A) { return false; }\n\n  pos = start + 2;\n  while (pos < max && state.src.charCodeAt(pos) === 0x7E/* ~ */) { pos++; }\n  if (pos > start + 3) {\n    // sequence of 4+ markers taking as literal, same as in a emphasis\n    state.pos += pos - start;\n    if (!silent) { state.pending += state.src.slice(start, pos); }\n    return true;\n  }\n\n  state.pos = start + 2;\n  stack = 1;\n\n  while (state.pos + 1 < max) {\n    if (state.src.charCodeAt(state.pos) === 0x7E/* ~ */) {\n      if (state.src.charCodeAt(state.pos + 1) === 0x7E/* ~ */) {\n        lastChar = state.src.charCodeAt(state.pos - 1);\n        nextChar = state.pos + 2 < max ? state.src.charCodeAt(state.pos + 2) : -1;\n        if (nextChar !== 0x7E/* ~ */ && lastChar !== 0x7E/* ~ */) {\n          if (lastChar !== 0x20 && lastChar !== 0x0A) {\n            // closing '~~'\n            stack--;\n          } else if (nextChar !== 0x20 && nextChar !== 0x0A) {\n            // opening '~~'\n            stack++;\n          } // else {\n            //  // standalone ' ~~ ' indented with spaces\n            // }\n          if (stack <= 0) {\n            found = true;\n            break;\n          }\n        }\n      }\n    }\n\n    state.parser.skipToken(state);\n  }\n\n  if (!found) {\n    // parser failed to find ending tag, so it's not valid emphasis\n    state.pos = start;\n    return false;\n  }\n\n  // found!\n  state.posMax = state.pos;\n  state.pos = start + 2;\n\n  if (!silent) {\n    state.push({ type: 'del_open', level: state.level++ });\n    state.parser.tokenize(state);\n    state.push({ type: 'del_close', level: --state.level });\n  }\n\n  state.pos = state.posMax + 2;\n  state.posMax = max;\n  return true;\n}\n\n// Process ++inserted text++\n\nfunction ins(state, silent) {\n  var found,\n      pos,\n      stack,\n      max = state.posMax,\n      start = state.pos,\n      lastChar,\n      nextChar;\n\n  if (state.src.charCodeAt(start) !== 0x2B/* + */) { return false; }\n  if (silent) { return false; } // don't run any pairs in validation mode\n  if (start + 4 >= max) { return false; }\n  if (state.src.charCodeAt(start + 1) !== 0x2B/* + */) { return false; }\n  if (state.level >= state.options.maxNesting) { return false; }\n\n  lastChar = start > 0 ? state.src.charCodeAt(start - 1) : -1;\n  nextChar = state.src.charCodeAt(start + 2);\n\n  if (lastChar === 0x2B/* + */) { return false; }\n  if (nextChar === 0x2B/* + */) { return false; }\n  if (nextChar === 0x20 || nextChar === 0x0A) { return false; }\n\n  pos = start + 2;\n  while (pos < max && state.src.charCodeAt(pos) === 0x2B/* + */) { pos++; }\n  if (pos !== start + 2) {\n    // sequence of 3+ markers taking as literal, same as in a emphasis\n    state.pos += pos - start;\n    if (!silent) { state.pending += state.src.slice(start, pos); }\n    return true;\n  }\n\n  state.pos = start + 2;\n  stack = 1;\n\n  while (state.pos + 1 < max) {\n    if (state.src.charCodeAt(state.pos) === 0x2B/* + */) {\n      if (state.src.charCodeAt(state.pos + 1) === 0x2B/* + */) {\n        lastChar = state.src.charCodeAt(state.pos - 1);\n        nextChar = state.pos + 2 < max ? state.src.charCodeAt(state.pos + 2) : -1;\n        if (nextChar !== 0x2B/* + */ && lastChar !== 0x2B/* + */) {\n          if (lastChar !== 0x20 && lastChar !== 0x0A) {\n            // closing '++'\n            stack--;\n          } else if (nextChar !== 0x20 && nextChar !== 0x0A) {\n            // opening '++'\n            stack++;\n          } // else {\n            //  // standalone ' ++ ' indented with spaces\n            // }\n          if (stack <= 0) {\n            found = true;\n            break;\n          }\n        }\n      }\n    }\n\n    state.parser.skipToken(state);\n  }\n\n  if (!found) {\n    // parser failed to find ending tag, so it's not valid emphasis\n    state.pos = start;\n    return false;\n  }\n\n  // found!\n  state.posMax = state.pos;\n  state.pos = start + 2;\n\n  if (!silent) {\n    state.push({ type: 'ins_open', level: state.level++ });\n    state.parser.tokenize(state);\n    state.push({ type: 'ins_close', level: --state.level });\n  }\n\n  state.pos = state.posMax + 2;\n  state.posMax = max;\n  return true;\n}\n\n// Process ==highlighted text==\n\nfunction mark(state, silent) {\n  var found,\n      pos,\n      stack,\n      max = state.posMax,\n      start = state.pos,\n      lastChar,\n      nextChar;\n\n  if (state.src.charCodeAt(start) !== 0x3D/* = */) { return false; }\n  if (silent) { return false; } // don't run any pairs in validation mode\n  if (start + 4 >= max) { return false; }\n  if (state.src.charCodeAt(start + 1) !== 0x3D/* = */) { return false; }\n  if (state.level >= state.options.maxNesting) { return false; }\n\n  lastChar = start > 0 ? state.src.charCodeAt(start - 1) : -1;\n  nextChar = state.src.charCodeAt(start + 2);\n\n  if (lastChar === 0x3D/* = */) { return false; }\n  if (nextChar === 0x3D/* = */) { return false; }\n  if (nextChar === 0x20 || nextChar === 0x0A) { return false; }\n\n  pos = start + 2;\n  while (pos < max && state.src.charCodeAt(pos) === 0x3D/* = */) { pos++; }\n  if (pos !== start + 2) {\n    // sequence of 3+ markers taking as literal, same as in a emphasis\n    state.pos += pos - start;\n    if (!silent) { state.pending += state.src.slice(start, pos); }\n    return true;\n  }\n\n  state.pos = start + 2;\n  stack = 1;\n\n  while (state.pos + 1 < max) {\n    if (state.src.charCodeAt(state.pos) === 0x3D/* = */) {\n      if (state.src.charCodeAt(state.pos + 1) === 0x3D/* = */) {\n        lastChar = state.src.charCodeAt(state.pos - 1);\n        nextChar = state.pos + 2 < max ? state.src.charCodeAt(state.pos + 2) : -1;\n        if (nextChar !== 0x3D/* = */ && lastChar !== 0x3D/* = */) {\n          if (lastChar !== 0x20 && lastChar !== 0x0A) {\n            // closing '=='\n            stack--;\n          } else if (nextChar !== 0x20 && nextChar !== 0x0A) {\n            // opening '=='\n            stack++;\n          } // else {\n            //  // standalone ' == ' indented with spaces\n            // }\n          if (stack <= 0) {\n            found = true;\n            break;\n          }\n        }\n      }\n    }\n\n    state.parser.skipToken(state);\n  }\n\n  if (!found) {\n    // parser failed to find ending tag, so it's not valid emphasis\n    state.pos = start;\n    return false;\n  }\n\n  // found!\n  state.posMax = state.pos;\n  state.pos = start + 2;\n\n  if (!silent) {\n    state.push({ type: 'mark_open', level: state.level++ });\n    state.parser.tokenize(state);\n    state.push({ type: 'mark_close', level: --state.level });\n  }\n\n  state.pos = state.posMax + 2;\n  state.posMax = max;\n  return true;\n}\n\n// Process *this* and _that_\n\nfunction isAlphaNum(code) {\n  return (code >= 0x30 /* 0 */ && code <= 0x39 /* 9 */) ||\n         (code >= 0x41 /* A */ && code <= 0x5A /* Z */) ||\n         (code >= 0x61 /* a */ && code <= 0x7A /* z */);\n}\n\n// parse sequence of emphasis markers,\n// \"start\" should point at a valid marker\nfunction scanDelims(state, start) {\n  var pos = start, lastChar, nextChar, count,\n      can_open = true,\n      can_close = true,\n      max = state.posMax,\n      marker = state.src.charCodeAt(start);\n\n  lastChar = start > 0 ? state.src.charCodeAt(start - 1) : -1;\n\n  while (pos < max && state.src.charCodeAt(pos) === marker) { pos++; }\n  if (pos >= max) { can_open = false; }\n  count = pos - start;\n\n  if (count >= 4) {\n    // sequence of four or more unescaped markers can't start/end an emphasis\n    can_open = can_close = false;\n  } else {\n    nextChar = pos < max ? state.src.charCodeAt(pos) : -1;\n\n    // check whitespace conditions\n    if (nextChar === 0x20 || nextChar === 0x0A) { can_open = false; }\n    if (lastChar === 0x20 || lastChar === 0x0A) { can_close = false; }\n\n    if (marker === 0x5F /* _ */) {\n      // check if we aren't inside the word\n      if (isAlphaNum(lastChar)) { can_open = false; }\n      if (isAlphaNum(nextChar)) { can_close = false; }\n    }\n  }\n\n  return {\n    can_open: can_open,\n    can_close: can_close,\n    delims: count\n  };\n}\n\nfunction emphasis(state, silent) {\n  var startCount,\n      count,\n      found,\n      oldCount,\n      newCount,\n      stack,\n      res,\n      max = state.posMax,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (marker !== 0x5F/* _ */ && marker !== 0x2A /* * */) { return false; }\n  if (silent) { return false; } // don't run any pairs in validation mode\n\n  res = scanDelims(state, start);\n  startCount = res.delims;\n  if (!res.can_open) {\n    state.pos += startCount;\n    if (!silent) { state.pending += state.src.slice(start, state.pos); }\n    return true;\n  }\n\n  if (state.level >= state.options.maxNesting) { return false; }\n\n  state.pos = start + startCount;\n  stack = [ startCount ];\n\n  while (state.pos < max) {\n    if (state.src.charCodeAt(state.pos) === marker) {\n      res = scanDelims(state, state.pos);\n      count = res.delims;\n      if (res.can_close) {\n        oldCount = stack.pop();\n        newCount = count;\n\n        while (oldCount !== newCount) {\n          if (newCount < oldCount) {\n            stack.push(oldCount - newCount);\n            break;\n          }\n\n          // assert(newCount > oldCount)\n          newCount -= oldCount;\n\n          if (stack.length === 0) { break; }\n          state.pos += oldCount;\n          oldCount = stack.pop();\n        }\n\n        if (stack.length === 0) {\n          startCount = oldCount;\n          found = true;\n          break;\n        }\n        state.pos += count;\n        continue;\n      }\n\n      if (res.can_open) { stack.push(count); }\n      state.pos += count;\n      continue;\n    }\n\n    state.parser.skipToken(state);\n  }\n\n  if (!found) {\n    // parser failed to find ending tag, so it's not valid emphasis\n    state.pos = start;\n    return false;\n  }\n\n  // found!\n  state.posMax = state.pos;\n  state.pos = start + startCount;\n\n  if (!silent) {\n    if (startCount === 2 || startCount === 3) {\n      state.push({ type: 'strong_open', level: state.level++ });\n    }\n    if (startCount === 1 || startCount === 3) {\n      state.push({ type: 'em_open', level: state.level++ });\n    }\n\n    state.parser.tokenize(state);\n\n    if (startCount === 1 || startCount === 3) {\n      state.push({ type: 'em_close', level: --state.level });\n    }\n    if (startCount === 2 || startCount === 3) {\n      state.push({ type: 'strong_close', level: --state.level });\n    }\n  }\n\n  state.pos = state.posMax + startCount;\n  state.posMax = max;\n  return true;\n}\n\n// Process ~subscript~\n\n// same as UNESCAPE_MD_RE plus a space\nvar UNESCAPE_RE = /\\\\([ \\\\!\"#$%&'()*+,.\\/:;<=>?@[\\]^_`{|}~-])/g;\n\nfunction sub(state, silent) {\n  var found,\n      content,\n      max = state.posMax,\n      start = state.pos;\n\n  if (state.src.charCodeAt(start) !== 0x7E/* ~ */) { return false; }\n  if (silent) { return false; } // don't run any pairs in validation mode\n  if (start + 2 >= max) { return false; }\n  if (state.level >= state.options.maxNesting) { return false; }\n\n  state.pos = start + 1;\n\n  while (state.pos < max) {\n    if (state.src.charCodeAt(state.pos) === 0x7E/* ~ */) {\n      found = true;\n      break;\n    }\n\n    state.parser.skipToken(state);\n  }\n\n  if (!found || start + 1 === state.pos) {\n    state.pos = start;\n    return false;\n  }\n\n  content = state.src.slice(start + 1, state.pos);\n\n  // don't allow unescaped spaces/newlines inside\n  if (content.match(/(^|[^\\\\])(\\\\\\\\)*\\s/)) {\n    state.pos = start;\n    return false;\n  }\n\n  // found!\n  state.posMax = state.pos;\n  state.pos = start + 1;\n\n  if (!silent) {\n    state.push({\n      type: 'sub',\n      level: state.level,\n      content: content.replace(UNESCAPE_RE, '$1')\n    });\n  }\n\n  state.pos = state.posMax + 1;\n  state.posMax = max;\n  return true;\n}\n\n// Process ^superscript^\n\n// same as UNESCAPE_MD_RE plus a space\nvar UNESCAPE_RE$1 = /\\\\([ \\\\!\"#$%&'()*+,.\\/:;<=>?@[\\]^_`{|}~-])/g;\n\nfunction sup(state, silent) {\n  var found,\n      content,\n      max = state.posMax,\n      start = state.pos;\n\n  if (state.src.charCodeAt(start) !== 0x5E/* ^ */) { return false; }\n  if (silent) { return false; } // don't run any pairs in validation mode\n  if (start + 2 >= max) { return false; }\n  if (state.level >= state.options.maxNesting) { return false; }\n\n  state.pos = start + 1;\n\n  while (state.pos < max) {\n    if (state.src.charCodeAt(state.pos) === 0x5E/* ^ */) {\n      found = true;\n      break;\n    }\n\n    state.parser.skipToken(state);\n  }\n\n  if (!found || start + 1 === state.pos) {\n    state.pos = start;\n    return false;\n  }\n\n  content = state.src.slice(start + 1, state.pos);\n\n  // don't allow unescaped spaces/newlines inside\n  if (content.match(/(^|[^\\\\])(\\\\\\\\)*\\s/)) {\n    state.pos = start;\n    return false;\n  }\n\n  // found!\n  state.posMax = state.pos;\n  state.pos = start + 1;\n\n  if (!silent) {\n    state.push({\n      type: 'sup',\n      level: state.level,\n      content: content.replace(UNESCAPE_RE$1, '$1')\n    });\n  }\n\n  state.pos = state.posMax + 1;\n  state.posMax = max;\n  return true;\n}\n\n// Process [links](<to> \"stuff\")\n\n\nfunction links(state, silent) {\n  var labelStart,\n      labelEnd,\n      label,\n      href,\n      title,\n      pos,\n      ref,\n      code,\n      isImage = false,\n      oldPos = state.pos,\n      max = state.posMax,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (marker === 0x21/* ! */) {\n    isImage = true;\n    marker = state.src.charCodeAt(++start);\n  }\n\n  if (marker !== 0x5B/* [ */) { return false; }\n  if (state.level >= state.options.maxNesting) { return false; }\n\n  labelStart = start + 1;\n  labelEnd = parseLinkLabel(state, start);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (code !== 0x20 && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    if (parseLinkDestination(state, pos)) {\n      href = state.linkContent;\n      pos = state.pos;\n    } else {\n      href = '';\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (code !== 0x20 && code !== 0x0A) { break; }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    if (pos < max && start !== pos && parseLinkTitle(state, pos)) {\n      title = state.linkContent;\n      pos = state.pos;\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (code !== 0x20 && code !== 0x0A) { break; }\n      }\n    } else {\n      title = '';\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      state.pos = oldPos;\n      return false;\n    }\n    pos++;\n  } else {\n    //\n    // Link reference\n    //\n\n    // do not allow nested reference links\n    if (state.linkLevel > 0) { return false; }\n\n    // [foo]  [bar]\n    //      ^^ optional whitespace (can include newlines)\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (code !== 0x20 && code !== 0x0A) { break; }\n    }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = start - 1;\n      }\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) {\n      if (typeof label === 'undefined') {\n        pos = labelEnd + 1;\n      }\n      label = state.src.slice(labelStart, labelEnd);\n    }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    state.pos = labelStart;\n    state.posMax = labelEnd;\n\n    if (isImage) {\n      state.push({\n        type: 'image',\n        src: href,\n        title: title,\n        alt: state.src.substr(labelStart, labelEnd - labelStart),\n        level: state.level\n      });\n    } else {\n      state.push({\n        type: 'link_open',\n        href: href,\n        title: title,\n        level: state.level++\n      });\n      state.linkLevel++;\n      state.parser.tokenize(state);\n      state.linkLevel--;\n      state.push({ type: 'link_close', level: --state.level });\n    }\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n}\n\n// Process inline footnotes (^[...])\n\n\nfunction footnote_inline(state, silent) {\n  var labelStart,\n      labelEnd,\n      footnoteId,\n      oldLength,\n      max = state.posMax,\n      start = state.pos;\n\n  if (start + 2 >= max) { return false; }\n  if (state.src.charCodeAt(start) !== 0x5E/* ^ */) { return false; }\n  if (state.src.charCodeAt(start + 1) !== 0x5B/* [ */) { return false; }\n  if (state.level >= state.options.maxNesting) { return false; }\n\n  labelStart = start + 2;\n  labelEnd = parseLinkLabel(state, start + 1);\n\n  // parser failed to find ']', so it's not a valid note\n  if (labelEnd < 0) { return false; }\n\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    if (!state.env.footnotes) { state.env.footnotes = {}; }\n    if (!state.env.footnotes.list) { state.env.footnotes.list = []; }\n    footnoteId = state.env.footnotes.list.length;\n\n    state.pos = labelStart;\n    state.posMax = labelEnd;\n\n    state.push({\n      type: 'footnote_ref',\n      id: footnoteId,\n      level: state.level\n    });\n    state.linkLevel++;\n    oldLength = state.tokens.length;\n    state.parser.tokenize(state);\n    state.env.footnotes.list[footnoteId] = { tokens: state.tokens.splice(oldLength) };\n    state.linkLevel--;\n  }\n\n  state.pos = labelEnd + 1;\n  state.posMax = max;\n  return true;\n}\n\n// Process footnote references ([^...])\n\nfunction footnote_ref(state, silent) {\n  var label,\n      pos,\n      footnoteId,\n      footnoteSubId,\n      max = state.posMax,\n      start = state.pos;\n\n  // should be at least 4 chars - \"[^x]\"\n  if (start + 3 > max) { return false; }\n\n  if (!state.env.footnotes || !state.env.footnotes.refs) { return false; }\n  if (state.src.charCodeAt(start) !== 0x5B/* [ */) { return false; }\n  if (state.src.charCodeAt(start + 1) !== 0x5E/* ^ */) { return false; }\n  if (state.level >= state.options.maxNesting) { return false; }\n\n  for (pos = start + 2; pos < max; pos++) {\n    if (state.src.charCodeAt(pos) === 0x20) { return false; }\n    if (state.src.charCodeAt(pos) === 0x0A) { return false; }\n    if (state.src.charCodeAt(pos) === 0x5D /* ] */) {\n      break;\n    }\n  }\n\n  if (pos === start + 2) { return false; } // no empty footnote labels\n  if (pos >= max) { return false; }\n  pos++;\n\n  label = state.src.slice(start + 2, pos - 1);\n  if (typeof state.env.footnotes.refs[':' + label] === 'undefined') { return false; }\n\n  if (!silent) {\n    if (!state.env.footnotes.list) { state.env.footnotes.list = []; }\n\n    if (state.env.footnotes.refs[':' + label] < 0) {\n      footnoteId = state.env.footnotes.list.length;\n      state.env.footnotes.list[footnoteId] = { label: label, count: 0 };\n      state.env.footnotes.refs[':' + label] = footnoteId;\n    } else {\n      footnoteId = state.env.footnotes.refs[':' + label];\n    }\n\n    footnoteSubId = state.env.footnotes.list[footnoteId].count;\n    state.env.footnotes.list[footnoteId].count++;\n\n    state.push({\n      type: 'footnote_ref',\n      id: footnoteId,\n      subId: footnoteSubId,\n      level: state.level\n    });\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n}\n\n// List of valid url schemas, accorting to commonmark spec\n// http://jgm.github.io/CommonMark/spec.html#autolinks\n\nvar url_schemas = [\n  'coap',\n  'doi',\n  'javascript',\n  'aaa',\n  'aaas',\n  'about',\n  'acap',\n  'cap',\n  'cid',\n  'crid',\n  'data',\n  'dav',\n  'dict',\n  'dns',\n  'file',\n  'ftp',\n  'geo',\n  'go',\n  'gopher',\n  'h323',\n  'http',\n  'https',\n  'iax',\n  'icap',\n  'im',\n  'imap',\n  'info',\n  'ipp',\n  'iris',\n  'iris.beep',\n  'iris.xpc',\n  'iris.xpcs',\n  'iris.lwz',\n  'ldap',\n  'mailto',\n  'mid',\n  'msrp',\n  'msrps',\n  'mtqp',\n  'mupdate',\n  'news',\n  'nfs',\n  'ni',\n  'nih',\n  'nntp',\n  'opaquelocktoken',\n  'pop',\n  'pres',\n  'rtsp',\n  'service',\n  'session',\n  'shttp',\n  'sieve',\n  'sip',\n  'sips',\n  'sms',\n  'snmp',\n  'soap.beep',\n  'soap.beeps',\n  'tag',\n  'tel',\n  'telnet',\n  'tftp',\n  'thismessage',\n  'tn3270',\n  'tip',\n  'tv',\n  'urn',\n  'vemmi',\n  'ws',\n  'wss',\n  'xcon',\n  'xcon-userid',\n  'xmlrpc.beep',\n  'xmlrpc.beeps',\n  'xmpp',\n  'z39.50r',\n  'z39.50s',\n  'adiumxtra',\n  'afp',\n  'afs',\n  'aim',\n  'apt',\n  'attachment',\n  'aw',\n  'beshare',\n  'bitcoin',\n  'bolo',\n  'callto',\n  'chrome',\n  'chrome-extension',\n  'com-eventbrite-attendee',\n  'content',\n  'cvs',\n  'dlna-playsingle',\n  'dlna-playcontainer',\n  'dtn',\n  'dvb',\n  'ed2k',\n  'facetime',\n  'feed',\n  'finger',\n  'fish',\n  'gg',\n  'git',\n  'gizmoproject',\n  'gtalk',\n  'hcp',\n  'icon',\n  'ipn',\n  'irc',\n  'irc6',\n  'ircs',\n  'itms',\n  'jar',\n  'jms',\n  'keyparc',\n  'lastfm',\n  'ldaps',\n  'magnet',\n  'maps',\n  'market',\n  'message',\n  'mms',\n  'ms-help',\n  'msnim',\n  'mumble',\n  'mvn',\n  'notes',\n  'oid',\n  'palm',\n  'paparazzi',\n  'platform',\n  'proxy',\n  'psyc',\n  'query',\n  'res',\n  'resource',\n  'rmi',\n  'rsync',\n  'rtmp',\n  'secondlife',\n  'sftp',\n  'sgn',\n  'skype',\n  'smb',\n  'soldat',\n  'spotify',\n  'ssh',\n  'steam',\n  'svn',\n  'teamspeak',\n  'things',\n  'udp',\n  'unreal',\n  'ut2004',\n  'ventrilo',\n  'view-source',\n  'webcal',\n  'wtai',\n  'wyciwyg',\n  'xfire',\n  'xri',\n  'ymsgr'\n];\n\n// Process autolinks '<protocol:...>'\n\n\n/*eslint max-len:0*/\nvar EMAIL_RE    = /^<([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)>/;\nvar AUTOLINK_RE = /^<([a-zA-Z.\\-]{1,25}):([^<>\\x00-\\x20]*)>/;\n\n\nfunction autolink(state, silent) {\n  var tail, linkMatch, emailMatch, url, fullUrl, pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  tail = state.src.slice(pos);\n\n  if (tail.indexOf('>') < 0) { return false; }\n\n  linkMatch = tail.match(AUTOLINK_RE);\n\n  if (linkMatch) {\n    if (url_schemas.indexOf(linkMatch[1].toLowerCase()) < 0) { return false; }\n\n    url = linkMatch[0].slice(1, -1);\n    fullUrl = normalizeLink(url);\n    if (!state.parser.validateLink(url)) { return false; }\n\n    if (!silent) {\n      state.push({\n        type: 'link_open',\n        href: fullUrl,\n        level: state.level\n      });\n      state.push({\n        type: 'text',\n        content: url,\n        level: state.level + 1\n      });\n      state.push({ type: 'link_close', level: state.level });\n    }\n\n    state.pos += linkMatch[0].length;\n    return true;\n  }\n\n  emailMatch = tail.match(EMAIL_RE);\n\n  if (emailMatch) {\n\n    url = emailMatch[0].slice(1, -1);\n\n    fullUrl = normalizeLink('mailto:' + url);\n    if (!state.parser.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      state.push({\n        type: 'link_open',\n        href: fullUrl,\n        level: state.level\n      });\n      state.push({\n        type: 'text',\n        content: url,\n        level: state.level + 1\n      });\n      state.push({ type: 'link_close', level: state.level });\n    }\n\n    state.pos += emailMatch[0].length;\n    return true;\n  }\n\n  return false;\n}\n\n// Regexps to match html elements\n\nfunction replace$1(regex, options) {\n  regex = regex.source;\n  options = options || '';\n\n  return function self(name, val) {\n    if (!name) {\n      return new RegExp(regex, options);\n    }\n    val = val.source || val;\n    regex = regex.replace(name, val);\n    return self;\n  };\n}\n\n\nvar attr_name     = /[a-zA-Z_:][a-zA-Z0-9:._-]*/;\n\nvar unquoted      = /[^\"'=<>`\\x00-\\x20]+/;\nvar single_quoted = /'[^']*'/;\nvar double_quoted = /\"[^\"]*\"/;\n\n/*eslint no-spaced-func:0*/\nvar attr_value  = replace$1(/(?:unquoted|single_quoted|double_quoted)/)\n                    ('unquoted', unquoted)\n                    ('single_quoted', single_quoted)\n                    ('double_quoted', double_quoted)\n                    ();\n\nvar attribute   = replace$1(/(?:\\s+attr_name(?:\\s*=\\s*attr_value)?)/)\n                    ('attr_name', attr_name)\n                    ('attr_value', attr_value)\n                    ();\n\nvar open_tag    = replace$1(/<[A-Za-z][A-Za-z0-9]*attribute*\\s*\\/?>/)\n                    ('attribute', attribute)\n                    ();\n\nvar close_tag   = /<\\/[A-Za-z][A-Za-z0-9]*\\s*>/;\nvar comment     = /<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->/;\nvar processing  = /<[?].*?[?]>/;\nvar declaration = /<![A-Z]+\\s+[^>]*>/;\nvar cdata       = /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/;\n\nvar HTML_TAG_RE = replace$1(/^(?:open_tag|close_tag|comment|processing|declaration|cdata)/)\n  ('open_tag', open_tag)\n  ('close_tag', close_tag)\n  ('comment', comment)\n  ('processing', processing)\n  ('declaration', declaration)\n  ('cdata', cdata)\n  ();\n\n// Process html tags\n\n\nfunction isLetter$2(ch) {\n  /*eslint no-bitwise:0*/\n  var lc = ch | 0x20; // to lower case\n  return (lc >= 0x61/* a */) && (lc <= 0x7a/* z */);\n}\n\n\nfunction htmltag(state, silent) {\n  var ch, match, max, pos = state.pos;\n\n  if (!state.options.html) { return false; }\n\n  // Check start\n  max = state.posMax;\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */ ||\n      pos + 2 >= max) {\n    return false;\n  }\n\n  // Quick fail on second char\n  ch = state.src.charCodeAt(pos + 1);\n  if (ch !== 0x21/* ! */ &&\n      ch !== 0x3F/* ? */ &&\n      ch !== 0x2F/* / */ &&\n      !isLetter$2(ch)) {\n    return false;\n  }\n\n  match = state.src.slice(pos).match(HTML_TAG_RE);\n  if (!match) { return false; }\n\n  if (!silent) {\n    state.push({\n      type: 'htmltag',\n      content: state.src.slice(pos, pos + match[0].length),\n      level: state.level\n    });\n  }\n  state.pos += match[0].length;\n  return true;\n}\n\n// Process html entity - &#123;, &#xAF;, &quot;, ...\n\n\nvar DIGITAL_RE = /^&#((?:x[a-f0-9]{1,8}|[0-9]{1,8}));/i;\nvar NAMED_RE   = /^&([a-z][a-z0-9]{1,31});/i;\n\n\nfunction entity(state, silent) {\n  var ch, code, match, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x26/* & */) { return false; }\n\n  if (pos + 1 < max) {\n    ch = state.src.charCodeAt(pos + 1);\n\n    if (ch === 0x23 /* # */) {\n      match = state.src.slice(pos).match(DIGITAL_RE);\n      if (match) {\n        if (!silent) {\n          code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10);\n          state.pending += isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD);\n        }\n        state.pos += match[0].length;\n        return true;\n      }\n    } else {\n      match = state.src.slice(pos).match(NAMED_RE);\n      if (match) {\n        var decoded = decodeEntity(match[1]);\n        if (match[1] !== decoded) {\n          if (!silent) { state.pending += decoded; }\n          state.pos += match[0].length;\n          return true;\n        }\n      }\n    }\n  }\n\n  if (!silent) { state.pending += '&'; }\n  state.pos++;\n  return true;\n}\n\n/**\n * Inline Parser `rules`\n */\n\nvar _rules$2 = [\n  [ 'text',            text ],\n  [ 'newline',         newline ],\n  [ 'escape',          escape ],\n  [ 'backticks',       backticks ],\n  [ 'del',             del ],\n  [ 'ins',             ins ],\n  [ 'mark',            mark ],\n  [ 'emphasis',        emphasis ],\n  [ 'sub',             sub ],\n  [ 'sup',             sup ],\n  [ 'links',           links ],\n  [ 'footnote_inline', footnote_inline ],\n  [ 'footnote_ref',    footnote_ref ],\n  [ 'autolink',        autolink ],\n  [ 'htmltag',         htmltag ],\n  [ 'entity',          entity ]\n];\n\n/**\n * Inline Parser class. Note that link validation is stricter\n * in Remarkable than what is specified by CommonMark. If you\n * want to change this you can use a custom validator.\n *\n * @api private\n */\n\nfunction ParserInline() {\n  this.ruler = new Ruler();\n  for (var i = 0; i < _rules$2.length; i++) {\n    this.ruler.push(_rules$2[i][0], _rules$2[i][1]);\n  }\n\n  // Can be overridden with a custom validator\n  this.validateLink = validateLink;\n}\n\n/**\n * Skip a single token by running all rules in validation mode.\n * Returns `true` if any rule reports success.\n *\n * @param  {Object} `state`\n * @api privage\n */\n\nParserInline.prototype.skipToken = function (state) {\n  var rules = this.ruler.getRules('');\n  var len = rules.length;\n  var pos = state.pos;\n  var i, cached_pos;\n\n  if ((cached_pos = state.cacheGet(pos)) > 0) {\n    state.pos = cached_pos;\n    return;\n  }\n\n  for (i = 0; i < len; i++) {\n    if (rules[i](state, true)) {\n      state.cacheSet(pos, state.pos);\n      return;\n    }\n  }\n\n  state.pos++;\n  state.cacheSet(pos, state.pos);\n};\n\n/**\n * Generate tokens for the given input range.\n *\n * @param  {Object} `state`\n * @api private\n */\n\nParserInline.prototype.tokenize = function (state) {\n  var rules = this.ruler.getRules('');\n  var len = rules.length;\n  var end = state.posMax;\n  var ok, i;\n\n  while (state.pos < end) {\n\n    // Try all possible rules.\n    // On success, the rule should:\n    //\n    // - update `state.pos`\n    // - update `state.tokens`\n    // - return true\n    for (i = 0; i < len; i++) {\n      ok = rules[i](state, false);\n\n      if (ok) {\n        break;\n      }\n    }\n\n    if (ok) {\n      if (state.pos >= end) { break; }\n      continue;\n    }\n\n    state.pending += state.src[state.pos++];\n  }\n\n  if (state.pending) {\n    state.pushPending();\n  }\n};\n\n/**\n * Parse the given input string.\n *\n * @param  {String} `str`\n * @param  {Object} `options`\n * @param  {Object} `env`\n * @param  {Array} `outTokens`\n * @api private\n */\n\nParserInline.prototype.parse = function (str, options, env, outTokens) {\n  var state = new StateInline(str, this, options, env, outTokens);\n  this.tokenize(state);\n};\n\n/**\n * Validate the given `url` by checking for bad protocols.\n *\n * @param  {String} `url`\n * @return {Boolean}\n */\n\nfunction validateLink(url) {\n  var BAD_PROTOCOLS = [ 'vbscript', 'javascript', 'file', 'data' ];\n  var str = url.trim().toLowerCase();\n  // Care about digital entities \"javascript&#x3A;alert(1)\"\n  str = replaceEntities(str);\n  if (str.indexOf(':') !== -1 && BAD_PROTOCOLS.indexOf(str.split(':')[0]) !== -1) {\n    return false;\n  }\n  return true;\n}\n\n// Remarkable default options\n\nvar defaultConfig = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkTarget:   '',           // set target to open link in\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Set doubles to '\u00AB\u00BB' for Russian, '\u201E\u201C' for German.\n    quotes: '\u201C\u201D\u2018\u2019',\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if input not changed\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'block',\n        'inline',\n        'references',\n        'replacements',\n        'smartquotes',\n        'references',\n        'abbr2',\n        'footnote_tail'\n      ]\n    },\n\n    block: {\n      rules: [\n        'blockquote',\n        'code',\n        'fences',\n        'footnote',\n        'heading',\n        'hr',\n        'htmlblock',\n        'lheading',\n        'list',\n        'paragraph',\n        'table'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'autolink',\n        'backticks',\n        'del',\n        'emphasis',\n        'entity',\n        'escape',\n        'footnote_ref',\n        'htmltag',\n        'links',\n        'newline',\n        'text'\n      ]\n    }\n  }\n};\n\n// Remarkable default options\n\nvar fullConfig = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkTarget:   '',           // set target to open link in\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Set doubles to '\u00AB\u00BB' for Russian, '\u201E\u201C' for German.\n    quotes:       '\u201C\u201D\u2018\u2019',\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if input not changed\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight:     null,\n\n    maxNesting:    20            // Internal protection, recursion limit\n  },\n\n  components: {\n    // Don't restrict core/block/inline rules\n    core: {},\n    block: {},\n    inline: {}\n  }\n};\n\n// Commonmark default options\n\nvar commonmarkConfig = {\n  options: {\n    html:         true,         // Enable HTML tags in source\n    xhtmlOut:     true,         // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkTarget:   '',           // set target to open link in\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Set doubles to '\u00AB\u00BB' for Russian, '\u201E\u201C' for German.\n    quotes: '\u201C\u201D\u2018\u2019',\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if input not changed\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'block',\n        'inline',\n        'references',\n        'abbr2'\n      ]\n    },\n\n    block: {\n      rules: [\n        'blockquote',\n        'code',\n        'fences',\n        'heading',\n        'hr',\n        'htmlblock',\n        'lheading',\n        'list',\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'autolink',\n        'backticks',\n        'emphasis',\n        'entity',\n        'escape',\n        'htmltag',\n        'links',\n        'newline',\n        'text'\n      ]\n    }\n  }\n};\n\n/**\n * Preset configs\n */\n\nvar config = {\n  'default': defaultConfig,\n  'full': fullConfig,\n  'commonmark': commonmarkConfig\n};\n\n/**\n * The `StateCore` class manages state.\n *\n * @param {Object} `instance` Remarkable instance\n * @param {String} `str` Markdown string\n * @param {Object} `env`\n */\n\nfunction StateCore(instance, str, env) {\n  this.src = str;\n  this.env = env;\n  this.options = instance.options;\n  this.tokens = [];\n  this.inlineMode = false;\n\n  this.inline = instance.inline;\n  this.block = instance.block;\n  this.renderer = instance.renderer;\n  this.typographer = instance.typographer;\n}\n\n/**\n * The main `Remarkable` class. Create an instance of\n * `Remarkable` with a `preset` and/or `options`.\n *\n * @param {String} `preset` If no preset is given, `default` is used.\n * @param {Object} `options`\n */\n\nfunction Remarkable(preset, options) {\n  if (typeof preset !== 'string') {\n    options = preset;\n    preset = 'default';\n  }\n\n  if (options && options.linkify != null) {\n    console.warn(\n      'linkify option is removed. Use linkify plugin instead:\\n\\n' +\n      'import Remarkable from \\'remarkable\\';\\n' +\n      'import linkify from \\'remarkable/linkify\\';\\n' +\n      'new Remarkable().use(linkify)\\n'\n    );\n  }\n\n  this.inline   = new ParserInline();\n  this.block    = new ParserBlock();\n  this.core     = new Core();\n  this.renderer = new Renderer();\n  this.ruler    = new Ruler();\n\n  this.options  = {};\n  this.configure(config[preset]);\n  this.set(options || {});\n}\n\n/**\n * Set options as an alternative to passing them\n * to the constructor.\n *\n * ```js\n * md.set({typographer: true});\n * ```\n * @param {Object} `options`\n * @api public\n */\n\nRemarkable.prototype.set = function (options) {\n  assign(this.options, options);\n};\n\n/**\n * Batch loader for components rules states, and options\n *\n * @param  {Object} `presets`\n */\n\nRemarkable.prototype.configure = function (presets) {\n  var self = this;\n\n  if (!presets) { throw new Error('Wrong `remarkable` preset, check name/content'); }\n  if (presets.options) { self.set(presets.options); }\n  if (presets.components) {\n    Object.keys(presets.components).forEach(function (name) {\n      if (presets.components[name].rules) {\n        self[name].ruler.enable(presets.components[name].rules, true);\n      }\n    });\n  }\n};\n\n/**\n * Use a plugin.\n *\n * ```js\n * var md = new Remarkable();\n *\n * md.use(plugin1)\n *   .use(plugin2, opts)\n *   .use(plugin3);\n * ```\n *\n * @param  {Function} `plugin`\n * @param  {Object} `options`\n * @return {Object} `Remarkable` for chaining\n */\n\nRemarkable.prototype.use = function (plugin, options) {\n  plugin(this, options);\n  return this;\n};\n\n\n/**\n * Parse the input `string` and return a tokens array.\n * Modifies `env` with definitions data.\n *\n * @param  {String} `string`\n * @param  {Object} `env`\n * @return {Array} Array of tokens\n */\n\nRemarkable.prototype.parse = function (str, env) {\n  var state = new StateCore(this, str, env);\n  this.core.process(state);\n  return state.tokens;\n};\n\n/**\n * The main `.render()` method that does all the magic :)\n *\n * @param  {String} `string`\n * @param  {Object} `env`\n * @return {String} Rendered HTML.\n */\n\nRemarkable.prototype.render = function (str, env) {\n  env = env || {};\n  return this.renderer.render(this.parse(str, env), this.options, env);\n};\n\n/**\n * Parse the given content `string` as a single string.\n *\n * @param  {String} `string`\n * @param  {Object} `env`\n * @return {Array} Array of tokens\n */\n\nRemarkable.prototype.parseInline = function (str, env) {\n  var state = new StateCore(this, str, env);\n  state.inlineMode = true;\n  this.core.process(state);\n  return state.tokens;\n};\n\n/**\n * Render a single content `string`, without wrapping it\n * to paragraphs\n *\n * @param  {String} `str`\n * @param  {Object} `env`\n * @return {String}\n */\n\nRemarkable.prototype.renderInline = function (str, env) {\n  env = env || {};\n  return this.renderer.render(this.parseInline(str, env), this.options, env);\n};\n\nexports.Remarkable = Remarkable;\nexports.utils = utils;\n", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _remarkable = require(\"remarkable\");\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) { return; } var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar TRAILING_NEW_LINE = /\\n$/; // In DraftJS, string lengths are calculated differently than in JS itself (due\n// to surrogate pairs). Instead of importing the entire UnicodeUtils file from\n// FBJS, we use a simpler alternative, in the form of `Array.from`.\n//\n// Alternative:  const { strlen } = require('fbjs/lib/UnicodeUtils');\n\nfunction strlen(str) {\n  return Array.from(str).length;\n} // Block level items, key is Remarkable's key for them, value returned is\n// A function that generates the raw draftjs key and block data.\n//\n// Why a function? Because in some cases (headers) we need additional information\n// before we can determine the exact key to return. And blocks may also return data\n\n\nvar DefaultBlockTypes = {\n  paragraph_open: function paragraph_open(item) {\n    return {\n      type: 'unstyled',\n      text: '',\n      entityRanges: [],\n      inlineStyleRanges: []\n    };\n  },\n  blockquote_open: function blockquote_open(item) {\n    return {\n      type: 'blockquote',\n      text: ''\n    };\n  },\n  ordered_list_item_open: function ordered_list_item_open() {\n    return {\n      type: 'ordered-list-item',\n      text: ''\n    };\n  },\n  unordered_list_item_open: function unordered_list_item_open() {\n    return {\n      type: 'unordered-list-item',\n      text: ''\n    };\n  },\n  fence: function fence(item) {\n    return {\n      type: 'code-block',\n      data: {\n        language: item.params || ''\n      },\n      text: (item.content || '').replace(TRAILING_NEW_LINE, ''),\n      // remarkable seems to always append an erronious trailing newline to its codeblock content, so we need to trim it out.\n      entityRanges: [],\n      inlineStyleRanges: []\n    };\n  },\n  heading_open: function heading_open(item) {\n    var type = 'header-' + {\n      1: 'one',\n      2: 'two',\n      3: 'three',\n      4: 'four',\n      5: 'five',\n      6: 'six'\n    }[item.hLevel];\n    return {\n      type: type,\n      text: ''\n    };\n  }\n}; // Entity types. These are things like links or images that require\n// additional data and will be added to the `entityMap`\n// again. In this case, key is remarkable key, value is\n// meethod that returns the draftjs key + any data needed.\n\nvar DefaultBlockEntities = {\n  link_open: function link_open(item) {\n    return {\n      type: 'LINK',\n      mutability: 'MUTABLE',\n      data: {\n        url: item.href,\n        href: item.href\n      }\n    };\n  }\n}; // Entity styles. Simple Inline styles that aren't added to entityMap\n// key is remarkable key, value is draftjs raw key\n\nvar DefaultBlockStyles = {\n  strong_open: 'BOLD',\n  em_open: 'ITALIC',\n  code: 'CODE',\n  del_open: 'STRIKETHROUGH'\n}; // Key generator for entityMap items\n\nvar idCounter = -1;\n\nfunction generateUniqueKey() {\n  idCounter++;\n  return idCounter;\n}\n/*\n * Handle inline content in a block level item\n * parses for BlockEntities (links, images) and BlockStyles (em, strong)\n * doesn't handle block level items (blockquote, ordered list, etc)\n *\n * @param <Object> inlineItem - single object from remarkable data representation of markdown\n * @param <Object> BlockEntities - key-value object of mappable block entity items. Passed in as param so users can include their own custom stuff\n * @param <Object> BlockStyles - key-value object of mappable block styles items. Passed in as param so users can include their own custom stuff\n *\n * @return <Object>\n *  content: Entire text content for the inline item,\n *  blockEntities: New block eneities to be added to global block entity map\n *  blockEntityRanges: block-level representation of block entities including key to access the block entity from the global map\n *  blockStyleRanges: block-level representation of styles (eg strong, em)\n*/\n\n\nfunction parseInline(inlineItem, BlockEntities, BlockStyles) {\n  var content = '',\n      blockEntities = {},\n      blockEntityRanges = [],\n      blockInlineStyleRanges = [];\n  inlineItem.children.forEach(function (child) {\n    if (child.type === 'text') {\n      content += child.content;\n    } else if (child.type === 'softbreak') {\n      content += '\\n';\n    } else if (child.type === 'hardbreak') {\n      content += '\\n';\n    } else if (BlockStyles[child.type]) {\n      var key = generateUniqueKey();\n      var styleBlock = {\n        offset: strlen(content) || 0,\n        length: 0,\n        style: BlockStyles[child.type]\n      }; // Edge case hack because code items don't have inline content or open/close, unlike everything else\n      // sub and sup are also special :)\n\n      if (child.type === 'code' || child.type === 'sub' || child.type === 'sup') {\n        styleBlock.length = strlen(child.content);\n        content += child.content;\n      }\n\n      blockInlineStyleRanges.push(styleBlock);\n    } else if (BlockEntities[child.type]) {\n      var key = generateUniqueKey();\n      blockEntities[key] = BlockEntities[child.type](child);\n      blockEntityRanges.push({\n        offset: strlen(content) || 0,\n        length: 0,\n        key: key\n      });\n    } else if (child.type.indexOf('_close') !== -1 && BlockEntities[child.type.replace('_close', '_open')]) {\n      blockEntityRanges[blockEntityRanges.length - 1].length = strlen(content) - blockEntityRanges[blockEntityRanges.length - 1].offset;\n    } else if (child.type.indexOf('_close') !== -1 && BlockStyles[child.type.replace('_close', '_open')]) {\n      var type = BlockStyles[child.type.replace('_close', '_open')];\n      blockInlineStyleRanges = blockInlineStyleRanges.map(function (style) {\n        if (style.length === 0 && style.style === type) {\n          style.length = strlen(content) - style.offset;\n        }\n\n        return style;\n      });\n    }\n  });\n  return {\n    content: content,\n    blockEntities: blockEntities,\n    blockEntityRanges: blockEntityRanges,\n    blockInlineStyleRanges: blockInlineStyleRanges\n  };\n}\n/**\n * Convert markdown into raw draftjs object\n *\n * @param {String} markdown - markdown to convert into raw draftjs object\n * @param {Object} options - optional additional data, see readme for what options can be passed in.\n *\n * @return {Object} rawDraftObject\n**/\n\n\nfunction markdownToDraft(string) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var remarkablePreset = options.remarkablePreset || options.remarkableOptions;\n  var remarkableOptions = _typeof(options.remarkableOptions) === 'object' ? options.remarkableOptions : null;\n  var md = new _remarkable.Remarkable(remarkablePreset, remarkableOptions); // if tables are not explicitly enabled, disable them by default\n\n  if (!remarkableOptions || !remarkableOptions.enable || !remarkableOptions.enable.block || remarkableOptions.enable.block !== 'table' || remarkableOptions.enable.block.includes('table') === false) {\n    md.block.ruler.disable('table');\n  } // disable the specified rules\n\n\n  if (remarkableOptions && remarkableOptions.disable) {\n    for (var _i = 0, _Object$entries = Object.entries(remarkableOptions.disable); _i < _Object$entries.length; _i++) {\n      var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n          key = _Object$entries$_i[0],\n          value = _Object$entries$_i[1];\n\n      md[key].ruler.disable(value);\n    }\n  } // enable the specified rules\n\n\n  if (remarkableOptions && remarkableOptions.enable) {\n    for (var _i2 = 0, _Object$entries2 = Object.entries(remarkableOptions.enable); _i2 < _Object$entries2.length; _i2++) {\n      var _Object$entries2$_i = _slicedToArray(_Object$entries2[_i2], 2),\n          _key = _Object$entries2$_i[0],\n          _value = _Object$entries2$_i[1];\n\n      md[_key].ruler.enable(_value);\n    }\n  } // If users want to define custom remarkable plugins for custom markdown, they can be added here\n\n\n  if (options.remarkablePlugins) {\n    options.remarkablePlugins.forEach(function (plugin) {\n      md.use(plugin, {});\n    });\n  }\n\n  var blocks = []; // blocks will be returned as part of the final draftjs raw object\n\n  var entityMap = {}; // entitymap will be returned as part of the final draftjs raw object\n\n  var parsedData = md.parse(string, {}); // remarkable js takes markdown and makes it an array of style objects for us to easily parse\n\n  var currentListType = null; // Because of how remarkable's data is formatted, we need to cache what kind of list we're currently dealing with\n\n  var previousBlockEndingLine = 0; // Allow user to define custom BlockTypes and Entities if they so wish\n\n  var BlockTypes = Object.assign({}, DefaultBlockTypes, options.blockTypes || {});\n  var BlockEntities = Object.assign({}, DefaultBlockEntities, options.blockEntities || {});\n  var BlockStyles = Object.assign({}, DefaultBlockStyles, options.blockStyles || {});\n  parsedData.forEach(function (item) {\n    // Because of how remarkable's data is formatted, we need to cache what kind of list we're currently dealing with\n    if (item.type === 'bullet_list_open') {\n      currentListType = 'unordered_list_item_open';\n    } else if (item.type === 'ordered_list_open') {\n      currentListType = 'ordered_list_item_open';\n    }\n\n    var itemType = item.type;\n\n    if (itemType === 'list_item_open') {\n      itemType = currentListType;\n    }\n\n    if (itemType === 'inline') {\n      // Parse inline content and apply it to the most recently created block level item,\n      // which is where the inline content will belong.\n      var _parseInline = parseInline(item, BlockEntities, BlockStyles),\n          content = _parseInline.content,\n          blockEntities = _parseInline.blockEntities,\n          blockEntityRanges = _parseInline.blockEntityRanges,\n          blockInlineStyleRanges = _parseInline.blockInlineStyleRanges;\n\n      var blockToModify = blocks[blocks.length - 1];\n      blockToModify.text = content;\n      blockToModify.inlineStyleRanges = blockInlineStyleRanges;\n      blockToModify.entityRanges = blockEntityRanges; // The entity map is a master object separate from the block so just add any entities created for this block to the master object\n\n      Object.assign(entityMap, blockEntities);\n    } else if ((itemType.indexOf('_open') !== -1 || itemType === 'fence' || itemType === 'hr' || itemType === 'htmlblock') && BlockTypes[itemType]) {\n      var depth = 0;\n      var block;\n\n      if (item.level > 0) {\n        depth = Math.floor(item.level / 2);\n      } // Draftjs only supports 1 level of blocks, hence the item.level === 0 check\n      // List items will always be at least `level==1` though so we need a separate check for that\n      // If there\u2019s nested block level items deeper than that, we need to make sure we capture this by cloning the topmost block\n      // otherwise we\u2019ll accidentally overwrite its text. (eg if there's a blockquote with 3 nested paragraphs with inline text, without this check, only the last paragraph would be reflected)\n\n\n      if (item.level === 0 || item.type === 'list_item_open') {\n        block = Object.assign({\n          depth: depth\n        }, BlockTypes[itemType](item));\n      } else if (item.level > 0 && blocks[blocks.length - 1].text) {\n        block = Object.assign({}, blocks[blocks.length - 1]);\n      }\n\n      if (block && options.preserveNewlines) {\n        // Re: previousBlockEndingLine.... omg.\n        // So remarkable strips out empty newlines and doesn't make any entities to parse to restore them\n        // the only solution I could find is that there's a 2-value array on each block item called \"lines\" which is the start and end line of the block element.\n        // by keeping track of the PREVIOUS block element ending line and the NEXT block element starting line, we can find the difference between the new lines and insert\n        // an appropriate number of extra paragraphs to re-create those newlines in draftjs.\n        // This is probably my least favourite thing in this file, but not sure what could be better.\n        var totalEmptyParagraphsToCreate = item.lines[0] - previousBlockEndingLine;\n\n        for (var i = 0; i < totalEmptyParagraphsToCreate; i++) {\n          blocks.push(DefaultBlockTypes.paragraph_open());\n        }\n      }\n\n      if (block) {\n        previousBlockEndingLine = item.lines[1]; // reserve one line after list block\n\n        if (block.type === 'unordered-list-item' || block.type === 'ordered-list-item') {\n          previousBlockEndingLine += 1;\n        }\n\n        blocks.push(block);\n      }\n    }\n  }); // EditorState.createWithContent will error if there's no blocks defined\n  // Remarkable returns an empty array though. So we have to generate a 'fake'\n  // empty block in this case. \uD83D\uDE11\n\n  if (!blocks.length) {\n    blocks.push(DefaultBlockTypes.paragraph_open());\n  }\n\n  return {\n    entityMap: entityMap,\n    blocks: blocks\n  };\n}\n\nvar _default = markdownToDraft;\nexports[\"default\"] = _default;", "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"draftToMarkdown\", {\n  enumerable: true,\n  get: function get() {\n    return _draftToMarkdown[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"markdownToDraft\", {\n  enumerable: true,\n  get: function get() {\n    return _markdownToDraft[\"default\"];\n  }\n});\n\nvar _draftToMarkdown = _interopRequireDefault(require(\"./draft-to-markdown\"));\n\nvar _markdownToDraft = _interopRequireDefault(require(\"./markdown-to-draft\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }", "module.exports = {};", "export const EMAIL_SUBJECT_PREFIX = 'Wizeline Questions - ';\r\n\r\nexport const EMAILS = {\r\n  anonymousQuestionAssigned: {\r\n    subject: 'New question assigned to you',\r\n    template: 'anonymousQuestionAssigned',\r\n  },\r\n};\r\n", "require('dotenv').config();\r\nconst nodemailer = require('nodemailer');\r\nconst hbs = require('nodemailer-express-handlebars');\r\nconst path = require('path');\r\n\r\nconst instantiateTransporter = () => {\r\n  const {\r\n    EMAIL_SERVICE, EMAIL_HOST, EMAIL_PORT, EMAIL_AUTH_USER, EMAIL_AUTH_PASSWORD,\r\n  } = process.env;\r\n\r\n  let transporter;\r\n\r\n  if (EMAIL_SERVICE && EMAIL_SERVICE.toLowerCase() === 'gmail') {\r\n    if (!EMAIL_AUTH_USER || !EMAIL_AUTH_PASSWORD) {\r\n      return undefined;\r\n    }\r\n\r\n    transporter = nodemailer.createTransport({\r\n      service: EMAIL_SERVICE,\r\n      auth: {\r\n        user: EMAIL_AUTH_USER,\r\n        pass: EMAIL_AUTH_PASSWORD,\r\n      },\r\n    });\r\n  } else {\r\n    if (!EMAIL_HOST || !EMAIL_PORT || !EMAIL_AUTH_USER || !EMAIL_AUTH_PASSWORD) {\r\n      return undefined;\r\n    }\r\n\r\n    transporter = nodemailer.createTransport({\r\n      host: EMAIL_HOST,\r\n      port: EMAIL_PORT,\r\n      auth: {\r\n        user: EMAIL_AUTH_USER,\r\n        pass: EMAIL_AUTH_PASSWORD,\r\n      },\r\n    });\r\n  }\r\n\r\n  const handlebarOptions = {\r\n    viewEngine: {\r\n      extname: '.hbs',\r\n      layoutsDir: path.resolve(__dirname, 'templates/layouts/'),\r\n      defaultLayout: 'default',\r\n      partialsDir: path.resolve(__dirname, 'templates/partials/'),\r\n    },\r\n    viewPath: path.resolve(__dirname, 'templates/views/'),\r\n    extName: '.hbs',\r\n  };\r\n\r\n  transporter.use('compile', hbs(handlebarOptions));\r\n\r\n  return transporter;\r\n};\r\n\r\nmodule.exports = {\r\n  instantiateTransporter,\r\n};\r\n", "import Joi from 'joi';\r\n\r\nexport const sendEmailSchema = Joi.object().keys({\r\n  subject: Joi.string().required(),\r\n  to: Joi.string().required(),\r\n  template: Joi.string().required(),\r\n  context: Joi.object(),\r\n});\r\n\r\nexport default sendEmailSchema;\r\n", "const { EMAIL_SUBJECT_PREFIX } = require('app/utils/backend/emails/emailConstants');\r\nconst { instantiateTransporter } = require('app/utils/backend/emails/emailTransporter');\r\nconst { sendEmailSchema } = require('app/utils/backend/validators/email');\r\n\r\nconst sendEmail = async (message) => {\r\n  const { error } = sendEmailSchema.validate(message);\r\n  if (error) {\r\n    throw Error(error);\r\n  }\r\n  const transporter = instantiateTransporter();\r\n  if (!transporter) return;\r\n\r\n  let transformedSubject = message.subject;\r\n\r\n  if (!message.subject.includes(EMAIL_SUBJECT_PREFIX)) {\r\n    transformedSubject = `${EMAIL_SUBJECT_PREFIX}${message.subject}`;\r\n  }\r\n\r\n  await transporter.sendMail({\r\n    ...message,\r\n    subject: transformedSubject,\r\n  });\r\n};\r\n\r\nmodule.exports = {\r\n  sendEmail,\r\n};\r\n", "export * from \"@remix-run/dev/server-build\";", "\nimport * as entryServer from \"./entry.server.jsx\";\nimport * as route0 from \"./root.jsx\";\nimport * as route1 from \"./routes\\\\employees\\\\getByDeparment\\\\$id.js\";\nimport * as route2 from \"./routes\\\\questions\\\\$questionId.jsx\";\nimport * as route3 from \"./routes\\\\questions\\\\new.jsx\";\nimport * as route4 from \"./routes\\\\auth\\\\auth0.jsx\";\nimport * as route5 from \"./routes\\\\auth\\\\auth0\\\\callback.jsx\";\nimport * as route6 from \"./routes\\\\dashboard.jsx\";\nimport * as route7 from \"./routes\\\\contact.jsx\";\nimport * as route8 from \"./routes\\\\logout.jsx\";\nimport * as route9 from \"./routes\\\\about.jsx\";\nimport * as route10 from \"./routes\\\\admin.jsx\";\nimport * as route11 from \"./routes\\\\index.jsx\";\nimport * as route12 from \"./routes\\\\login.jsx\";\nimport * as route13 from \"./routes\\\\$.jsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public\\\\build\";\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/employees/getByDeparment/$id\": {\n      id: \"routes/employees/getByDeparment/$id\",\n      parentId: \"root\",\n      path: \"employees/getByDeparment/:id\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/questions/$questionId\": {\n      id: \"routes/questions/$questionId\",\n      parentId: \"root\",\n      path: \"questions/:questionId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/questions/new\": {\n      id: \"routes/questions/new\",\n      parentId: \"root\",\n      path: \"questions/new\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/auth/auth0\": {\n      id: \"routes/auth/auth0\",\n      parentId: \"root\",\n      path: \"auth/auth0\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/auth/auth0/callback\": {\n      id: \"routes/auth/auth0/callback\",\n      parentId: \"routes/auth/auth0\",\n      path: \"callback\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/dashboard\": {\n      id: \"routes/dashboard\",\n      parentId: \"root\",\n      path: \"dashboard\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/contact\": {\n      id: \"routes/contact\",\n      parentId: \"root\",\n      path: \"contact\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/logout\": {\n      id: \"routes/logout\",\n      parentId: \"root\",\n      path: \"logout\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/about\": {\n      id: \"routes/about\",\n      parentId: \"root\",\n      path: \"about\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route9\n    },\n  \"routes/admin\": {\n      id: \"routes/admin\",\n      parentId: \"root\",\n      path: \"admin\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route10\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route11\n    },\n  \"routes/login\": {\n      id: \"routes/login\",\n      parentId: \"root\",\n      path: \"login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route12\n    },\n  \"routes/$\": {\n      id: \"routes/$\",\n      parentId: \"root\",\n      path: \"*\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route13\n    }\n  };", "import React from 'react';\r\nimport { RemixServer } from '@remix-run/react';\r\nimport { renderToString } from 'react-dom/server';\r\nimport { ServerStyleSheet } from 'styled-components';\r\n\r\nexport default function handleRequest(\r\n  request,\r\n  responseStatusCode,\r\n  responseHeaders,\r\n  remixContext,\r\n) {\r\n  const sheet = new ServerStyleSheet();\r\n\r\n  let markup = renderToString(\r\n    sheet.collectStyles(\r\n      <RemixServer context={remixContext} url={request.url} />,\r\n    ),\r\n  );\r\n  const styles = sheet.getStyleTags();\r\n\r\n  markup = markup.replace('__STYLES__', styles);\r\n\r\n  responseHeaders.set('Content-Type', 'text/html');\r\n  return new Response(`<!DOCTYPE html>${markup}`, {\r\n    status: responseStatusCode,\r\n    headers: responseHeaders,\r\n  });\r\n}\r\n", "import React from 'react';\r\nimport {\r\n  Links,\r\n  LiveReload,\r\n  Meta,\r\n  Outlet,\r\n  Scripts,\r\n  ScrollRestoration,\r\n} from '@remix-run/react';\r\nimport toastify from 'react-toastify/dist/ReactToastify.css';\r\nimport reactDraftWysiwyg from 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport draftJs from 'draft-js/dist/Draft.css';\r\nimport { json } from '@remix-run/node';\r\nimport globalStyle from 'app/styles/global.css';\r\nimport bootstrap from 'app/styles/bootstrap/css/bootstrap.min.css';\r\n\r\nimport ErrorHandler from 'app/components/ErrorHandler/ErrorHandler';\r\n\r\nimport { commitSession, getAuthenticatedUser, getSession } from 'app/session.server';\r\nimport AppNavbar from 'app/components/AppNavbar';\r\nimport listQuestions from 'app/controllers/questions/list';\r\n\r\nconst titleSuffix = process.env.NODE_ENV === 'development' ? ' - Local' : '';\r\n\r\nexport const meta = () => ({\r\n  charset: 'utf-8',\r\n  title: `Wizeline Questions${titleSuffix}`,\r\n  viewport: 'width=device-width,initial-scale=1',\r\n});\r\n\r\nexport function links() {\r\n  return [\r\n    { rel: 'stylesheet', href: bootstrap },\r\n    { rel: 'stylesheet', href: toastify },\r\n    { rel: 'stylesheet', href: draftJs },\r\n    { rel: 'stylesheet', href: reactDraftWysiwyg },\r\n    { rel: 'stylesheet', href: globalStyle },\r\n  ];\r\n}\r\n\r\nexport const loader = async ({ request }) => {\r\n  const profile = await getAuthenticatedUser(request);\r\n  const session = await getSession(request);\r\n  const url = new URL(request.url);\r\n  const search = url.searchParams.get('search');\r\n\r\n  let searchResults = [];\r\n\r\n  if (search) {\r\n    searchResults = await listQuestions({\r\n      user: profile,\r\n      limit: 5,\r\n      search,\r\n    });\r\n  }\r\n\r\n  const globalSuccess = session.get('globalSuccess') || null;\r\n\r\n  return json(\r\n    {\r\n      profile,\r\n      globalSuccess,\r\n      searchResults,\r\n    },\r\n    {\r\n      headers: {\r\n        'Set-Cookie': await commitSession(session),\r\n      },\r\n    },\r\n  );\r\n};\r\n\r\nexport default function App() {\r\n  return (\r\n    <html lang=\"en\">\r\n      <head>\r\n        <Meta />\r\n        <Links />\r\n        {typeof document === 'undefined' ? '__STYLES__' : null}\r\n      </head>\r\n      <body>\r\n        <AppNavbar />\r\n        <Outlet />\r\n        <ScrollRestoration />\r\n        <Scripts />\r\n        {process.env.NODE_ENV === 'development' && <LiveReload />}\r\n      </body>\r\n    </html>\r\n  );\r\n}\r\n\r\n// eslint-disable-next-line react/prop-types\r\nexport function ErrorBoundary({ error }) {\r\n  // console.error(error);\r\n  return (\r\n    <html lang=\"es\">\r\n      <head>\r\n        <title>Oh no!</title>\r\n        <Meta />\r\n        <Links />\r\n      </head>\r\n      <body>\r\n        <ErrorHandler error={error} />\r\n        <Scripts />\r\n      </body>\r\n    </html>\r\n  );\r\n}\r\n", "import React from 'react';\r\nimport { VscBracketError } from 'react-icons/vsc';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction ErrorHandler({ error }) {\r\n  return (\r\n    <div>\r\n      <div style={{ display: 'flex', justifyContent: 'center', paddingTop: '200px' }}>\r\n        <VscBracketError size=\"15rem\" color=\"var(--color-primary)\" />\r\n        <h1 style={{ paddingTop: '40px' }}>Sorry! Something Went Wrong.</h1>\r\n      </div>\r\n      <div style={{ display: 'flex', justifyContent: 'center', paddingTop: '20px' }}>\r\n        <pre>{error.message}</pre>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nErrorHandler.propTypes = {\r\n  error: PropTypes.shape().isRequired,\r\n};\r\n\r\nexport default ErrorHandler;\r\n", "import { createCookieSessionStorage, redirect } from \"@remix-run/node\";\r\n\r\nconst USER_SESSION_KEY = \"userData\";\r\nconst SESSION_SECRET = process.env.SESSION_SECRET || \"super-duper-s3cret\";\r\n\r\nexport const sessionStorage = createCookieSessionStorage({\r\n  cookie: {\r\n    name: \"__session\",\r\n    httpOnly: true,\r\n    path: \"/\",\r\n    sameSite: \"lax\",\r\n    secrets: [SESSION_SECRET],\r\n    secure: false,\r\n  },\r\n});\r\n\r\nexport async function getSession(request) {\r\n  const cookie = request.headers.get(\"Cookie\");\r\n  return sessionStorage.getSession(cookie);\r\n}\r\n\r\nexport async function createUserSession({\r\n  request,\r\n  userData,\r\n  remember,\r\n  redirectTo,\r\n}) {\r\n  const session = await getSession(request);\r\n  session.set(USER_SESSION_KEY, userData);\r\n  return redirect(redirectTo, {\r\n    headers: {\r\n      \"Set-Cookie\": await commitSession(session, remember)\r\n    },\r\n  });\r\n}\r\n\r\nexport async function commitSession(session, remember = true) {\r\n  return await sessionStorage.commitSession(session, {\r\n    maxAge: remember\r\n      ? 60 * 60 * 24 * 7 // 7 days\r\n      : undefined,\r\n  });\r\n};\r\n\r\nexport async function requireAuth(request) {\r\n    const session = await getSession(request);\r\n    if (!session.has(\"userData\")) {\r\n      throw redirect(\"/login\");\r\n    }\r\n\r\n    return session;\r\n}\r\n\r\nexport async function requireAdminAuth(request) {\r\n  await requireAuth(request);\r\n\r\n  const user = await getAuthenticatedUser(request);\r\n\r\n  if (user && user.is_admin) {\r\n    return;\r\n  }\r\n\r\n  throw new Response(\"Not Found\", {\r\n    status: 404,\r\n  });\r\n}\r\n\r\nexport async function getAuthenticatedUser(request) {\r\n  const session = await getSession(request);\r\n  if (!session) return null;\r\n\r\n  if (session.has(\"userData\")) {\r\n    return session.get(\"userData\");\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nexport async function logout(request) {\r\n  const session = await getSession(request);\r\n  return redirect(\"/login\", {\r\n    headers: {\r\n      \"Set-Cookie\": await sessionStorage.destroySession(session),\r\n    },\r\n  });\r\n}", "export { default } from './AppNavbar';\r\n", "/* eslint-disable consistent-return */\r\nimport React, { useState } from 'react';\r\nimport { Navbar } from 'react-bootstrap';\r\nimport { Link } from '@remix-run/react';\r\nimport logo from 'app/images/logo-white.png';\r\nimport * as Styled from 'app/components/AppNavbar/AppNavbar.Styled';\r\nimport UserControls from 'app/components/UserControls';\r\nimport useUser from 'app/utils/hooks/useUser';\r\nimport SearchBarNav from 'app/components/SearchBarNav';\r\n\r\nfunction AppNavbar() {\r\n  const [expanded, setExpanded] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const toggle = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  const complexOnSelect = (eventKey) => {\r\n    if (eventKey === 2) {\r\n      setExpanded(true);\r\n    } else {\r\n      setExpanded(false);\r\n    }\r\n  };\r\n\r\n  const profile = useUser();\r\n\r\n  if (!profile) {\r\n    return;\r\n  }\r\n\r\n  return (\r\n    <Styled.AppNav\r\n      onSelect={complexOnSelect}\r\n      expanded={expanded}\r\n      onToggle={toggle}\r\n    >\r\n      <Navbar.Header>\r\n        <Navbar.Brand>\r\n          <Link to=\"/\">\r\n            <img src={logo} alt=\"logo\" className=\"App-logo\" />\r\n          </Link>\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle />\r\n        <Styled.ButtonBootstrap\r\n          onClick={() => setOpen(!open)}\r\n          aria-controls=\"example-collapse-text\"\r\n          aria-expanded={open}\r\n        >\r\n          <Styled.IconWrapper>\r\n            <Styled.SearchIcon />\r\n          </Styled.IconWrapper>\r\n        </Styled.ButtonBootstrap>\r\n      </Navbar.Header>\r\n      <Navbar.Collapse id=\"user-controls\">\r\n        <UserControls\r\n          name={profile.full_name}\r\n          title={profile.job_title}\r\n          email={profile.email}\r\n          picture={profile.profile_picture}\r\n          isAdmin={profile.is_admin}\r\n        />\r\n      </Navbar.Collapse>\r\n      <Styled.SearchBarNavContainer>\r\n        <Navbar.Collapse\r\n          in={open}\r\n          id=\"example-collapse-text\"\r\n          style={{ width: '100%', padding: '10px', overflow: 'visible' }}\r\n        >\r\n          <SearchBarNav />\r\n        </Navbar.Collapse>\r\n      </Styled.SearchBarNavContainer>\r\n    </Styled.AppNav>\r\n  );\r\n}\r\n\r\nexport default AppNavbar;\r\n", "/* eslint-disable import/prefer-default-export */\r\nimport styled from 'styled-components';\r\nimport { Navbar, Button } from 'react-bootstrap';\r\nimport { AiOutlineSearch } from 'react-icons/ai';\r\n\r\nexport const AppNav = styled(Navbar).attrs(() => ({\r\n  fluid: true,\r\n}))`\r\nbackground-color: #203449;\r\nborder-color: #203449;\r\nborder-radius: 0;\r\nmargin-bottom: 0;\r\npadding: 5px;\r\nwidth: 100%;\r\n.dropdown.btn-group {\r\nfloat: left;\r\nmargin-left: 30px;\r\n}\r\n`;\r\n\r\nexport const ButtonBootstrap = styled(Button)`\r\nbackground-color: transparent;\r\ndisplay: none;\r\nborder: 1px solid transparent;\r\nborder-radius: 25px;\r\nposition: absolute;\r\nright: 65px;\r\ntop: 8px;\r\n\r\n&:hover,\r\n&.hover {\r\nbackground-color: #4d5d6d;\r\nborder: 1px solid transparent;\r\n}\r\n&:focus,\r\n&.focus {\r\nbackground-color: #4d5d6d;\r\nborder: 1px solid transparent;\r\n}\r\n&:active:hover,\r\n&:active:focus {\r\nbackground-color: #4d5d6d;\r\nborder: 1px solid transparent;\r\ncolor: transparent;\r\n}\r\n@media (max-width: 768px) {\r\ndisplay: block;\r\n}\r\n`;\r\n\r\nexport const SearchBarNavContainer = styled.div`\r\ndisplay: none;\r\n@media (max-width: 768px) {\r\ndisplay: flex;\r\nwidth: 100%;\r\n}\r\n`;\r\n\r\nexport const IconWrapper = styled.div`\r\nwidth: 22px;\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: center;\r\n`;\r\n\r\nexport const SearchIcon = styled(AiOutlineSearch)`\r\nfont-size: 30px;\r\ncolor: #fff;\r\n`;\r\n", "export { default } from './UserControls';\r\n", "import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { ButtonToolbar } from 'react-bootstrap';\r\nimport * as Styled from 'app/components/UserControls/UserControl.styled';\r\nimport UserDropdown from 'app/components/UserDropdown';\r\nimport LogoutConfirmationModal from 'app/components/Modals/LogoutConfirmationModal';\r\nimport SearchBarNav from 'app/components/SearchBarNav';\r\n\r\nfunction UserControls(props) {\r\n  const [showLogoutModal, setShowLogoutModal] = useState(false);\r\n\r\n  const handleLogoutClick = () => {\r\n    setShowLogoutModal(true);\r\n  };\r\n\r\n  const handleCancelLogoutClick = () => {\r\n    setShowLogoutModal(false);\r\n  };\r\n\r\n  const {\r\n    name, title, email, picture, isAdmin,\r\n  } = props;\r\n\r\n  return (\r\n    <Styled.NavBar pullRight>\r\n      <Styled.SearchBarNavContainer>\r\n        <SearchBarNav />\r\n      </Styled.SearchBarNavContainer>\r\n      <LinkContainer to=\"/\" exact=\"true\">\r\n        <Styled.Navitem>Home</Styled.Navitem>\r\n      </LinkContainer>\r\n      <LinkContainer to=\"/about\">\r\n        <Styled.Navitem eventKey={1}>About</Styled.Navitem>\r\n      </LinkContainer>\r\n      <LinkContainer to=\"/contact\">\r\n        <Styled.Navitem>Contact</Styled.Navitem>\r\n      </LinkContainer>\r\n      {isAdmin && (\r\n        <LinkContainer to=\"/admin\">\r\n          <Styled.Navitem>Admin</Styled.Navitem>\r\n        </LinkContainer>\r\n      )}\r\n      {isAdmin && (\r\n        <LinkContainer to=\"/dashboard\">\r\n          <Styled.Navitem id=\"dashboard\">Dashboard</Styled.Navitem>\r\n        </LinkContainer>\r\n      )}\r\n      <Styled.NavLi>\r\n        <ButtonToolbar>\r\n          <UserDropdown\r\n            name={name}\r\n            title={title}\r\n            email={email}\r\n            picture={picture}\r\n            onLogoutClick={handleLogoutClick}\r\n          />\r\n        </ButtonToolbar>\r\n      </Styled.NavLi>\r\n      <Styled.XSNavItem\r\n        eventKey={2}\r\n        onClick={handleLogoutClick}\r\n      >\r\n        Logout\r\n      </Styled.XSNavItem>\r\n      <LogoutConfirmationModal\r\n        show={showLogoutModal}\r\n        onClose={handleCancelLogoutClick}\r\n      />\r\n    </Styled.NavBar>\r\n  );\r\n}\r\n\r\nUserControls.propTypes = {\r\n  name: PropTypes.string,\r\n  title: PropTypes.string,\r\n  email: PropTypes.string.isRequired,\r\n  picture: PropTypes.string.isRequired,\r\n  isAdmin: PropTypes.bool,\r\n};\r\n\r\nUserControls.defaultProps = {\r\n  title: '',\r\n  name: '',\r\n  isAdmin: false,\r\n};\r\n\r\nexport default UserControls;\r\n", "/* eslint-disable import/prefer-default-export */\r\nimport styled from 'styled-components';\r\nimport { Nav, NavItem } from 'react-bootstrap';\r\n\r\nexport const NavBar = styled(Nav)`\r\n  margin-right: 15px;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Navitem = styled(NavItem)`\r\n  line-height: 20px;\r\n  margin-left: 30px;\r\n  padding-top: 0;\r\n  text-decoration: none;\r\n  font-size: 1.1em;\r\n  a {\r\n    line-height: 55px;\r\n    padding: 0;\r\n    text-decoration: none;\r\n    &:hover,\r\n    &:focus,\r\n    &:active {\r\n      color: #aaa;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const XSNavItem = styled(Navitem)`\r\n  display: none !important;\r\n  @media (max-width: 767px) {\r\n    display: block !important;\r\n  }\r\n`;\r\n\r\nexport const VisibleNavitem = styled(NavItem)`\r\n  line-height: 20px;\r\n  margin-left: 30px;\r\n  padding-top: 0;\r\n  text-decoration: none;\r\n  font-size: 1.1em;\r\n  a {\r\n    line-height: 55px;\r\n    padding: 0;\r\n    text-decoration: none;\r\n    &:hover,\r\n    &:focus,\r\n    &:active {\r\n      color: #aaa;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const NavLi = styled.li`\r\n  font-size: 1.1em;\r\n  margin-left: 0;\r\n  line-height: 20px;\r\n  margin-left: 30px;\r\n  padding-top: 0;\r\n  text-decoration: none;\r\n  a {\r\n    line-height: 55px;\r\n    padding: 0;\r\n    text-decoration: none;\r\n    &:hover,\r\n    &:focus,\r\n    &:active {\r\n      color: #aaa;\r\n    }\r\n  }\r\n  @media (max-width: 767px) {\r\n      display: none !important;\r\n  }\r\n`;\r\n\r\nexport const SearchBarNavContainer = styled.div`\r\n  @media (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`;\r\n", "export { default } from './UserDropdown';\r\n", "import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport UserImage from 'app/components/Atoms/UserImage';\r\nimport UserProfile from 'app/components/UserProfile';\r\nimport * as Styled from 'app/components/UserDropdown/UserDropdown.styled';\r\n\r\nexport default function UserDropdown({\r\n  name, title, email, picture, onLogoutClick,\r\n}) {\r\n  return (\r\n    <Styled.UDropdown id=\"userDropdown\">\r\n      <Styled.UDropdown.Toggle noCaret componentClass=\"a\">\r\n        <UserImage src={picture} size=\"big\" alt=\"user\" />\r\n      </Styled.UDropdown.Toggle>\r\n      <Styled.UDropdown.Menu>\r\n        <Styled.UInfo>\r\n          <UserProfile\r\n            name={name}\r\n            title={title}\r\n            email={email}\r\n            picture={picture}\r\n          />\r\n        </Styled.UInfo>\r\n        <Styled.UMenuItem\r\n          footer=\"true\"\r\n          eventKey=\"1\"\r\n          onClick={onLogoutClick}\r\n        >\r\n          Logout\r\n        </Styled.UMenuItem>\r\n      </Styled.UDropdown.Menu>\r\n    </Styled.UDropdown>\r\n  );\r\n}\r\n\r\nUserDropdown.propTypes = {\r\n  onLogoutClick: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  title: PropTypes.string,\r\n  email: PropTypes.string.isRequired,\r\n  picture: PropTypes.string.isRequired,\r\n};\r\n\r\nUserDropdown.defaultProps = {\r\n  title: '',\r\n};\r\n", "export { default } from './UserImage';\r\n", "import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as S from 'app/components/Atoms/UserImage/UserImage.Styled';\r\nimport PlaceHolderImage from 'app/images/placeholder_user_img.png';\r\n\r\nfunction UserImage({\r\n  src, alt, customSize, size,\r\n}) {\r\n  const [imageSrc, setImageSrc] = useState(src);\r\n\r\n  return (\r\n    <S.Container size={size} customSize={customSize}>\r\n      <S.Image\r\n        alt={alt}\r\n        onError={() => {\r\n          if (imageSrc !== PlaceHolderImage) setImageSrc(PlaceHolderImage);\r\n        }}\r\n        src={imageSrc}\r\n      />\r\n    </S.Container>\r\n  );\r\n}\r\n\r\nUserImage.propTypes = {\r\n  src: PropTypes.string.isRequired,\r\n  alt: PropTypes.string,\r\n  size: PropTypes.oneOf(['small', 'medium', 'big', 'extra big']),\r\n  customSize: PropTypes.string,\r\n};\r\n\r\nUserImage.defaultProps = {\r\n  alt: '',\r\n  size: 'medium',\r\n  customSize: null,\r\n};\r\n\r\nexport default UserImage;\r\n", "import styled, { css } from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  border: 1px solid var(--color-secondary);\r\n  border-radius: 50%;\r\n  overflow: hidden;\r\n  height: 32px;\r\n  min-width: 32px;\r\n  width: fit-content;\r\n  ${(props) => props.size === 'small' && css`\r\n    height: 20px;\r\n    min-width: 20px;\r\n  `}\r\n  ${(props) => props.size === 'big' && css`\r\n    height: 46px;\r\n    min-width: 46px;\r\n  `}\r\n  ${(props) => props.size === 'extra big' && css`\r\n    min-height: 100px;\r\n    min-width: 100px;\r\n  `}\r\n  ${(props) => props.customSize && css`\r\n    min-height: ${props.customSize};\r\n    min-width: ${props.customSize};\r\n  `}\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  height: 100%;\r\n  width: auto;\r\n`;\r\n", "export { default } from './UserProfile';\r\n", "import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport UserImage from 'app/components/Atoms/UserImage';\r\nimport * as Styled from 'app/components/UserProfile/UserProfile.styled';\r\n\r\nfunction UserProfile({\r\n  name, title, email, picture,\r\n}) {\r\n  return (\r\n    <Styled.ProfileDropdown>\r\n      <Styled.ProfileDropdownInfo>\r\n        <UserImage src={picture} size=\"big\" alt=\"user\" />\r\n        <Styled.ProfileDropdownUser>\r\n          <Styled.ProfileDropdownName>{name}</Styled.ProfileDropdownName>\r\n          <p>{title}</p>\r\n          <p>{email}</p>\r\n        </Styled.ProfileDropdownUser>\r\n      </Styled.ProfileDropdownInfo>\r\n    </Styled.ProfileDropdown>\r\n  );\r\n}\r\n\r\nUserProfile.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  title: PropTypes.string,\r\n  email: PropTypes.string.isRequired,\r\n  picture: PropTypes.string.isRequired,\r\n};\r\n\r\nUserProfile.defaultProps = {\r\n  title: '',\r\n};\r\n\r\nexport default UserProfile;\r\n", "/* eslint-disable import/prefer-default-export */\r\nimport styled from 'styled-components';\r\n\r\nexport const ProfileDropdown = styled.div`\r\n    line-height: normal;\r\n    text-align: center;\r\n`;\r\n\r\nexport const ProfileDropdownInfo = styled.div`\r\n    display: flex;\r\n    padding: 35px 25px 16px;\r\n    text-align: left;\r\n`;\r\n\r\nexport const ProfileDropdownUser = styled.div`\r\n    padding-left: 12px;\r\n`;\r\n\r\nexport const ProfileDropdownName = styled.p`\r\n    font-family: \"Nunito\", sans-serif;\r\n    margin: 0 0 10px;\r\n`;\r\n", "import styled, { css } from 'styled-components';\r\nimport { MenuItem, Dropdown } from 'react-bootstrap';\r\n\r\nexport const UDropdown = styled(Dropdown)`\r\n  background: none;\r\n  box-shadow: none;\r\n  padding: 0;\r\n  .btn-default.active,\r\n  .open > .dropdown-toggle.btn-default,\r\n  .open > .dropdown-toggle.btn-default:hover {\r\n    background: none;\r\n    color: #333;\r\n  }\r\n  a {\r\n    box-shadow: none !important;  \r\n  }\r\n  .dropdown-menu {\r\n    border: 1px solid #e1e5e9;\r\n    padding: 0;\r\n    margin-top: 5px;\r\n    width: auto;\r\n    a {\r\n      color: #222;\r\n      line-height: initial;\r\n      overflow: hidden;\r\n      text-overflow: ellipsis;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const UInfo = styled.div`\r\n  color: black;\r\n  cursor: default;\r\n`;\r\n\r\nexport const UMenuItem = styled(MenuItem)`\r\n  background: none;\r\n  padding: 0;\r\n  width: auto;\r\n  &:hover {\r\n    background-color: none;\r\n  }\r\n  ${(props) => props.footer && css`\r\n    background-color: #f4f7f9;\r\n    a {\r\n      color: var(--color-secondary) !important;\r\n      font-family: \"Nunito\", sans-serif;\r\n      font-size: 14px;\r\n      font-weight: 600;\r\n      line-height: 40px !important;\r\n      padding-right: 25px;\r\n      text-align: right;\r\n    }\r\n  `}\r\n`;\r\n", "export { default } from './LogoutConfirmationModal';\r\n", "import React from 'react';\r\nimport { Form } from '@remix-run/react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from 'app/components/Atoms/Button';\r\nimport { CLOSE_BUTTON, DANGER_BUTTON, SECONDARY_BUTTON } from 'app/utils/constants';\r\nimport useUser from 'app/utils/hooks/useUser';\r\nimport * as Styled from 'app/components/Modals/LogoutConfirmationModal/LogoutConfirmationModal.styled';\r\n\r\nfunction LogoutConfirmationModal({ show, onClose }) {\r\n  const profile = useUser();\r\n\r\n  if (!show) { return null; }\r\n  return (\r\n    <div onClick={onClose}>\r\n      <Styled.LogoutModal show>\r\n        <Form action=\"/logout\" method=\"POST\">\r\n          <Styled.LogoutModalDialog onClick={(e) => e.stopPropagation()}>\r\n            <Styled.ModalHeader variant=\"logout\" closeButton>\r\n              <Styled.ModalTitle>Warning</Styled.ModalTitle>\r\n              <Button category={CLOSE_BUTTON} onClick={onClose} />\r\n            </Styled.ModalHeader>\r\n            <Styled.ModalBody>\r\n              <p>\r\n                {' '}\r\n                You&apos;re about to log out as\r\n                {profile.full_name}\r\n                ,\r\n                do you still want to continue?\r\n                {' '}\r\n              </p>\r\n            </Styled.ModalBody>\r\n            <Styled.ModalFooter variant=\"logout\">\r\n              <Button type=\"button\" category={SECONDARY_BUTTON} onClick={onClose}>Cancel</Button>\r\n              <Button id=\"confirmLogout\" category={DANGER_BUTTON} type=\"submit\">Logout</Button>\r\n            </Styled.ModalFooter>\r\n          </Styled.LogoutModalDialog>\r\n        </Form>\r\n      </Styled.LogoutModal>\r\n    </div>\r\n  );\r\n}\r\n\r\nLogoutConfirmationModal.propTypes = {\r\n  show: PropTypes.bool.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default LogoutConfirmationModal;\r\n", "export { default } from './Button';\r\n", "import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { CLOSE_BUTTON } from 'app/utils/constants';\r\nimport * as Styled from 'app/components/Atoms/Button/Button.Styled';\r\n\r\nfunction Button({\r\n  id,\r\n  type,\r\n  className,\r\n  title,\r\n  onClick,\r\n  category,\r\n  value,\r\n  form,\r\n  disabled,\r\n  children,\r\n}) {\r\n  const RootButton = category === CLOSE_BUTTON ? Styled.CloseButton : Styled.MainButton;\r\n\r\n  return (\r\n    <RootButton\r\n      id={id}\r\n      type={type}\r\n      className={className}\r\n      title={title}\r\n      onClick={onClick}\r\n      category={category}\r\n      value={value}\r\n      form={form}\r\n      disabled={disabled}\r\n    >\r\n      {children}\r\n    </RootButton>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  id: PropTypes.string,\r\n  type: PropTypes.string,\r\n  className: PropTypes.string,\r\n  title: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n  category: PropTypes.string.isRequired,\r\n  value: PropTypes.string,\r\n  form: PropTypes.string,\r\n  disabled: PropTypes.bool,\r\n  children: PropTypes.string,\r\n};\r\n\r\nButton.defaultProps = {\r\n  id: '',\r\n  type: 'button',\r\n  className: '',\r\n  title: '',\r\n  onClick: null,\r\n  value: '',\r\n  form: null,\r\n  disabled: false,\r\n  children: '',\r\n};\r\n\r\nexport default Button;\r\n", "// export const API_ENDPOINT = process.env.REACT_APP_API_URL;\r\n\r\n// // Enable / Disable .env params per feature\r\n// export const SOCKETS_FEATURE_ENABLED = (process.env.REACT_APP_SOCKETS === 'ON');\r\n// export const SHARE_DROPDOWN_ENABLED = (process.env.REACT_APP_SHARE_DROPDOWN === 'true');\r\n\r\n// Database string limit constant. It should hold about one page worth of text.\r\nexport const MAXIMUM_ANSWER_LENGTH = 3000;\r\nexport const MAXIMUM_COMMENT_LENGTH = 3000;\r\nexport const MAXIMUM_QUESTION_LENGTH = 500;\r\nexport const MINIMUM_QUESTION_LENGTH = 14;\r\nexport const MINIMUM_ANSWER_LENGTH = 14;\r\n\r\n// limit input in contact form\r\nexport const MAXIMUM_MESSAGE_LENGTH = 3000;\r\nexport const MAXIUMUM_EMAIL_LENGTH = 320;\r\nexport const MAXIMUM_NAME_LENGTH = 50;\r\n// reason length is a constant with a direct relationship to CONTACT_REASONS_LIST attribute value.\r\nexport const MAXIMUM_REASON_LENGTH = 7;\r\n\r\nexport const QUESTION_LENGHT_RESTRICTIONS = `Question must be between ${MINIMUM_QUESTION_LENGTH} and ${MAXIMUM_QUESTION_LENGTH} characters`;\r\n// warnings\r\nexport const answerDeleteWarning = (questionId) => `You're about to delete the answer to question Q${questionId}`;\r\nexport const ANSWER_DELETE_WARNING_SUBTITLE = 'Do you want to continue?';\r\nexport const ANONYMOUS_SWITCH_WARNING = 'You are about to change the privacy to anonymous, after logging out, your question will not be editable anymore';\r\nexport const IDENTITY_MESSAGE = 'You are about to post a question';\r\nexport const CONTINUE_MESSAGE = 'Do you want to continue?';\r\nexport const CONTACT_WARNING = 'Please enter all fields';\r\nexport const HTML_CODE_WARNING = 'Your input contains some HTML code without the correct Markdown format, so it will be removed if submitted. If you want to keep the HTML code please encapsulate it like `<html>markup</html>`';\r\n\r\nexport const PAGE_QUESTIONS_LIMIT = 20;\r\nexport const PAGE_COMMENTS_LIMIT = 100;\r\nexport const FIRST_PAGE_NUMBER = 1;\r\nexport const DEFAULT_ACCESS_VALUE = 'value';\r\nexport const DEFAULT_LOCATION_ACCESS_VALUE = 'code';\r\n\r\nexport const SORTING_OPTIONS = [\r\n  { name: 'Newest', value: 'newest' },\r\n  { name: 'Oldest', value: 'oldest' },\r\n  { name: 'Popular', value: 'popular' },\r\n  { name: 'Most Commented', value: 'most_commented' },\r\n];\r\n\r\nexport const DEFAULT_SORTING_OPT = SORTING_OPTIONS[0];\r\nexport const SORTING_ACCESS_VALUE = DEFAULT_ACCESS_VALUE;\r\n\r\nexport const DATE_RANGE_OPTIONS = [\r\n  { name: 'All', value: 'all' },\r\n  { name: 'Today', value: 'today' },\r\n  { name: 'This week', value: 'this_week' },\r\n  { name: 'This month', value: 'this_month' },\r\n];\r\n\r\nexport const DATE_RANGE_LABEL = 'Date range';\r\nexport const DEFAULT_DATE_RANGE_OPT = DATE_RANGE_OPTIONS[0];\r\nexport const DATE_RANGE_ACCESS_VALUE = DEFAULT_ACCESS_VALUE;\r\n\r\nexport const STATUS_OPTIONS = [\r\n  { name: 'All', value: 'all' },\r\n  { name: 'Answered', value: 'answered' },\r\n  { name: 'Not Answered', value: 'not_answered' },\r\n];\r\n\r\nexport const STATUS_LABEL = 'Status';\r\nexport const DEFAULT_STATUS_OPT = STATUS_OPTIONS[0];\r\nexport const STATUS_ACCESS_VALUE = DEFAULT_ACCESS_VALUE;\r\n\r\nexport const DEPARTMENT_OPTIONS = [\r\n  { department_id: -1, name: 'All' },\r\n  { department_id: 0, name: 'Not Assigned' },\r\n];\r\n\r\nexport const DEPARTMENT_LABEL = 'Department';\r\nexport const DEFAULT_DEPARTMENT_OPT = DEPARTMENT_OPTIONS[0];\r\nexport const DEFAULT_DEPARTMENT_ID = DEFAULT_DEPARTMENT_OPT.department_id;\r\nexport const DEPARTMENT_ACCESS_VALUE = 'department_id';\r\n\r\nexport const LOCATION_LABEL = 'Location';\r\nexport const DEFAULT_LOCATION = 'ALL';\r\nexport const LOCATION_ACCESS_VALUE = DEFAULT_LOCATION_ACCESS_VALUE;\r\nexport const DEFAULT_LOCATION_OPT = { name: 'All', code: DEFAULT_LOCATION };\r\n\r\nexport const FILTER_BY_USER_TEXT = 'All questions';\r\nexport const DEFAULT_FILTER_BY_USER = 'ALL_QUESTIONS';\r\n\r\nexport const FILTER_BY_USER_TYPES = [\r\n  { name: 'All questions', value: DEFAULT_FILTER_BY_USER },\r\n  { name: 'Assigned to me', value: 'MY_QUESTIONS' },\r\n];\r\n\r\nexport const DEFAULT_QUESTION_SEARCH = {\r\n  type: 'pending',\r\n  order: 'newest',\r\n  dateRange: 'all',\r\n  status: 'all',\r\n  offset: 0,\r\n  limit: PAGE_QUESTIONS_LIMIT,\r\n  search: '',\r\n  location: DEFAULT_LOCATION,\r\n  filterByUser: false,\r\n  tag: '',\r\n};\r\n\r\nexport const DEFAULT_COMMENT_SEARCH = {\r\n  offset: 0,\r\n  limit: PAGE_COMMENTS_LIMIT,\r\n};\r\n\r\nexport const DEFAULT_QUESTION_COMMENT_SORTING = 'votes';\r\nexport const ACTIVITY_TIME_QUESTION_COMMENT_SORTING = 'activityTime';\r\n\r\nexport const ENDPOINT_DASHBOARD = '/api/dashboard';\r\nexport const ENDPOINT_QUESTIONS = '/api/questions';\r\nexport const ENDPOINT_ANSWERS = '/api/answers';\r\nexport const ENDPOINT_COMMENTS = '/api/comments';\r\nexport const ENDPOINT_COMMIT_HASH = '/api/commit_hash';\r\nexport const ENDPOINT_EMPLOYEES = '/api/employees';\r\nexport const ENDPOINT_DEPARTMENTS = '/api/departments';\r\nexport const ENDPOINT_VOTE = '/api/vote';\r\nexport const ENDPOINT_CONTACT = '/api/contact';\r\nexport const ENDPOINT_LOCATIONS = '/api/locations';\r\n\r\nexport const ROUTES = {\r\n  about: '/about',\r\n  contact: 'http://wizeq.wizeline.com/contact/',\r\n};\r\n\r\nexport const ANONYMOUS_USER = {\r\n  username: 'Anonymous',\r\n  profilePicture: '/anonymous.png',\r\n};\r\n\r\nexport const ALERT_SUCCESS = 'success';\r\nexport const ALERT_DANGER = 'danger';\r\nexport const ALERT_WARNING = 'warning';\r\n\r\nexport const ALERT_SUCCESS_TITLE = 'Success';\r\nexport const ALERT_ERROR_TITLE = 'Error';\r\nexport const ALERT_WARNING_TITLE = 'Warning:';\r\n\r\n// Define APP URL constant, default STG environment URL\r\n// export const REACT_APP_URL = process.env.REACT_APP_URL ? process.env.REACT_APP_URL : 'https://questions-stage.wizeline.com';\r\n\r\nexport const ANSWER_UPDATED = 'Answer successfully updated';\r\nexport const ANSWER_DELETED = 'Answer successfully deleted';\r\nexport const ANSWER_LENGTH_EXCEEDED = `The maximum length is ${MAXIMUM_ANSWER_LENGTH} characters`;\r\nexport const ANSWER_EMPTY = 'No empty answers are allowed';\r\nexport const SHOW_MORE_TEXT = 'Show more';\r\nexport const SHOW_LESS_TEXT = 'Show less';\r\nexport const COLLAPSED_QUESTION_MIN_LENGTH = 130;\r\nexport const COLLAPSED_ANSWER_MIN_LENGTH = 130;\r\nexport const COLLAPSED_COMMENT_MIN_LENGTH = COLLAPSED_ANSWER_MIN_LENGTH;\r\n\r\nexport const MAX_DAYS_RANGE_CSV_EXPORT = 89;\r\nexport const EXPORT_CSV_FORM_DATE_FORMAT = 'YYYY-MM-DD';\r\n\r\n// Departments\r\nexport const DEPARTMENT_NOT_ASSIGNED = 'Not Assigned';\r\n\r\n// Questions\r\nexport const FOLLOW = 'Follow';\r\nexport const VOTE_TIME_CHECK = 1500;\r\n\r\n// Comments\r\nexport const COMMENT_CONFIRM_DELETE = 'Are you sure you want to delete this comment?';\r\nexport const NO_COMMENTS = 'No Comments';\r\nexport const NO_COMMENTS_MESSAGE = 'You can be the first to comment on this question.';\r\nexport const COMMENT = 'Comment';\r\nexport const COMMENTS = 'Comments';\r\nexport const WARNING_MAX_COMMENT_LENGTH = 'The maximum length is 3000 characters';\r\nexport const WARNING_EMPTY_COMMENT_SUBMIT = 'Comment needed to Post';\r\nexport const COMMENTS_SEPARATOR = ' | ';\r\nexport const COMMUNITY_ANSWER_COMMENT_VOTES_THRESHOLD = 10;\r\nexport const COMMUNITY_ANSWER_TAG_TEXT = 'Community answer';\r\n\r\n// Contacts\r\nexport const CONTACT_REASONS_LIST = [\r\n  { value: 'default', reason: 'I want to' },\r\n  { value: 'bug', reason: 'Report a bug' },\r\n  { value: 'feature', reason: 'Suggest new feature' },\r\n  { value: 'join', reason: 'Join the WizeQ team' },\r\n  { value: 'vibes', reason: 'Send Good Vibes!' },\r\n];\r\n\r\nexport const CONTACT_REASONS_MAP = {\r\n  default: 'I want to',\r\n  bug: 'Report a bug',\r\n  feature: 'Suggest a new feature',\r\n  join: 'Join the WizeQ team',\r\n  vibes: 'Send Good Vibes!',\r\n};\r\n\r\n// email\r\nexport const EMAIL_CONTACT_FORMAT = {\r\n  address: 'wizeq@wizeline.com',\r\n  subject: 'New WizeQ Contact Entry',\r\n  content: 'Default',\r\n};\r\n\r\n// footer\r\nexport const FOOTER_MESSAGE = 'Proudly powered by Wizeline new hires as part of their technical on-boarding process';\r\n\r\nexport const TOKEN_ID_SEPARATOR = ':';\r\n\r\n// Answer question\r\nexport const ANSWER_PLACE_HOLDER = 'Type your answer here...';\r\nexport const MINIMUM_INPUT_LENGTH_TO_SHOW_MARKDOWN = 2;\r\nexport const MINIMUM_WIDTH_TO_SHOW_MARKDOWN = 767;\r\nexport const MINIMUN_WINDOW_WIDTH = 768;\r\nexport const editAnswerMessage = (questionId) => `Edit answer to question Q${questionId}?`;\r\nexport const editAnswerInfo = (fullName, timeDiff) => `Question answered by ${fullName}, ${timeDiff}`;\r\nexport const addAnswerInfo = (fullName, timeDiff) => `Question asked by ${fullName}, ${timeDiff}`;\r\nexport const addAnswerMessage = (questionId) => `Do you have the answer to question Q${questionId}?`;\r\n\r\n// Buttons\r\nexport const CANCEL = 'Cancel';\r\nexport const SUBMIT = 'Submit';\r\nexport const DELETE_ANSWER = 'Delete Answer';\r\nexport const SUBMIT_ANSWER = 'Submit Answer';\r\nexport const UPDATE_ANSWER = 'Update Answer';\r\n\r\nexport const ANSWER = 'ANSWER';\r\nexport const ASSIGN = 'ASSIGN';\r\nexport const REASSIGN = 'REASSIGN';\r\n\r\nexport const HIGHLIGHT_START = 'HIGHLIGHT_START_INDICATOR';\r\nexport const HIGHLIGHT_END = 'HIGHLIGHT_END_INDICATOR';\r\n\r\n// Input\r\nexport const inputPlaceholder = (minCharacters) => `Type at least ${minCharacters} characters`;\r\n\r\n// textarea\r\nexport const MIN_TEXTAREA_ROWS = 1;\r\nexport const TEXTAREA_LINE_HEIGHT_IN_PX = 13;\r\nexport const MIN_COMMENT_PREVIEW_LENGTH = 3;\r\nexport const MIN_SHOW_COMMENT_BTN_LENGTH = 2;\r\nexport const MAX_COMMENT_LENGTH = 500;\r\nexport const COMMENT_INPUT_PLACEHOLDER = 'Add a comment and remember, we are all nice Wizeline collaborators.';\r\nexport const COMMENT_EDIT_PLACEHOLDER = \"Your comment can't be empty\";\r\n\r\n// Loader\r\nexport const LSPIN_SMALL = 'SMALL';\r\nexport const LSPIN_MEDIUM = 'MEDIUM';\r\nexport const LSPIN_LARGE = 'LARGE';\r\n\r\n// Net Promoter Score\r\nexport const SCORES = [\r\n  { name: 'Strongly Disagree', value: 1 },\r\n  { name: 'Disagree', value: 2 },\r\n  { name: 'Agree', value: 3 },\r\n  { name: 'Strongly Agree', value: 4 },\r\n];\r\nexport const DISPLAY_TEXT_BEFORE_SCORING = 'Do you consider the answer solves the question?';\r\nexport const DISPLAY_TEXT_AFTER_SCORING = 'Thanks for your feedback!';\r\nexport const UNDO_BUTTON_TEXT = 'Undo';\r\nexport const AFTER_SCORE_TIMEOUT = 800;\r\n\r\n// Sockets\r\nexport const SOCKET_CREATE_COMMENT = 'create_comment';\r\nexport const SOCKET_UPDATE_COMMENT = 'update_comment';\r\nexport const SOCKET_DELETE_COMMENT = 'delete_comment';\r\nexport const SOCKET_UPVOTE = 'upvoted';\r\nexport const SOCKET_DELETE_VOTE = 'deleted vote';\r\n\r\n// Tooltips\r\nexport const DISABLED_ANSWER_ICONS_TOOLTIP_MESSAGE = 'You can not modify an already scored answer';\r\nexport const NO_DEPARTMENT_SELECTED_TOOLTIP_MESSAGE = 'Select a department';\r\nexport const NO_COLLABORATOR_SELECTED_TOOLTIP_MESSAGE = 'Select a collaborator';\r\nexport const MIN_CHARS_QUESTION_INPUT_TOOLTIP_MESSAGE = inputPlaceholder(MINIMUM_QUESTION_LENGTH);\r\nexport const DEFAULT_MESSAGE_END_QUESTION_INPUT_TOOLTIP = 'to ask a question.';\r\nexport const NO_LOCATIONS_AVAILABLE_TOOLTIP_MESSAGE = 'There are no locations';\r\n\r\n// Sockets & Reactivity\r\nexport const FAKE_SOCKET = {\r\n  on: () => { },\r\n  emit: () => { },\r\n  close: () => { },\r\n}; // used instead of an actual socket when reactivity is disabled\r\n\r\n// Back to top\r\nexport const BACK_TO_TOP = 'Back to top';\r\n\r\n// Question Text area Defaults\r\nexport const LINE_HEIGHT_IN_PX = 23;\r\nexport const NONE_LOCATION = 'NONE';\r\nexport const MIN_QUESTION_PREVIEW_LENGTH = 13;\r\n\r\n// Question Text area Warnings\r\nexport const QUESTION_BEING_PROCESSED = 'Your question is being processed';\r\nexport const DEPARTMENT_WARNING = 'You need to select a department';\r\nexport const EMPLOYEE_WARNING = 'You need to select a collaborator';\r\nexport const DEFAULT_LOCATION_MESSAGE = 'As you have not selected a location for your question, it will be posted to all locations.';\r\nexport const ALL_LOCATIONS_MESSAGE = 'This question will be posted to all locations. Are you sure?';\r\nexport const LOCATION_WARNING = 'This question will be posted to: ';\r\nexport const EMPLOYEE_PLACEHOLDER = 'Select a collaborator';\r\nexport const DEPARTMENT_PLACEHOLDER = 'Select a department';\r\nexport const NO_DEPARTMENT_SELECTED_ID = -1;\r\nexport const NO_EMPLOYEE_SELECTED_ID = -1;\r\nexport const NOT_ASSIGNED_DEPARTMENT_ID = 0;\r\n\r\n// Buttons Categories\r\nexport const PRIMARY_BUTTON = 'primary_button';\r\nexport const SECONDARY_BUTTON = 'secondary_button';\r\nexport const DISABLED_BUTTON = 'disabled_button';\r\nexport const DANGER_BUTTON = 'danger_button';\r\nexport const TEXT_BUTTON = 'text_button';\r\nexport const CLOSE_BUTTON = 'close_button';\r\nexport const ICON_BUTTON = 'icon_button';\r\n\r\nexport const DEFAULT_TOAST_CONFIG = {\r\n  position: 'top-right',\r\n  autoClose: 2000,\r\n  hideProgressBar: false,\r\n  closeOnClick: true,\r\n  pauseOnHover: true,\r\n  draggable: true,\r\n  progress: undefined,\r\n};\r\n\r\n// Things to Keep in Mind\r\nexport const RECOMMENDATIONS_QUESTION = [\r\n  'Strive for constructive open communication. Avoid vagueness.',\r\n  'Do not demean or degrade others because of their gender, race, age, religion, etc.',\r\n  'Avoid posting questions that include sexually explicit comments, hate speech, prejudicial remarks, and profanity.',\r\n  'Do not mock other members, their comments, profiles, threads, or experiences. Remember, what is funny for you may be offensive to others.',\r\n];\r\n\r\n// Recurring error messages\r\nexport const PIN_QUESTION_ERROR_MESSAGE = 'Error trying to pin/unpin the question.';\r\nexport const INVALID_PARAMS_FOR_OPERATION_ERROR_MESSAGE = 'The provided parameters for the operation are not valid';\r\nexport const QUESTION_NOT_FOUND_ERROR_MESSAGE = 'The question with the id provided could not be found';\r\nexport const INVALIDATE_VOTE_ERROR_MESSAGE = 'Error trying to invalidate the vote in the question';\r\nexport const UPDATE_COMMENT_ERROR_MESSAGE = 'Error trying to update the comment';\r\nexport const DELETE_COMMENT_ERROR_MESSAGE = 'Error trying to delete the comment';\r\nexport const ENABLE_DISABLE_ERROR_MESSAGE = 'Error trying to enable/disable this question';\r\n\r\n// AnswerBot\r\nexport const WELCOME_MESSAGE = 'Hello! Ask me any question and I\\'ll see how I can help you.';\r\nexport const CREATED_ANSWEBOT = 'The question to bot has been created succesfully!';\r\nexport const POSITIVE_FEEDBACK_ANSWEBOT = 'The positive feedback to bot has been updated succesfully!';\r\nexport const NEGATIVE_FEEDBACK_ANSWEBOT = 'The negative feedback to bot has been updated succesfully!';\r\nexport const POSTED_ANSWEBOT = 'The question has been posted on the forum successfully!';\r\nexport const INSTRUCTIONS_ANSWERBOT = \"Instructions: Compose a comprehensive reply to the query using the search results given.\\n If the search results mention multiple subjects\\nwith the same name, create separate answers for each. Only include information found in the results and\\ndon't add any additional information. Make sure the answer is correct and don't output false content.\\nIf the text does not relate to the query, simply state 'Sorry, I couldn't find an answer to your question.'. Don't write 'Answer:'Directly start the answer.\\n\";\r\n", "import styled, { css } from 'styled-components';\r\nimport { MdClose } from 'react-icons/md';\r\nimport {\r\n  PRIMARY_BUTTON,\r\n  DISABLED_BUTTON,\r\n  SECONDARY_BUTTON,\r\n  DANGER_BUTTON,\r\n  TEXT_BUTTON,\r\n  ICON_BUTTON,\r\n} from 'app/utils/constants';\r\n\r\nexport const MainButton = styled.button`\r\n  align-items: center;\r\n  background-color: transparent;\r\n  border: none;\r\n  border-radius: 3px;\r\n  cursor: pointer;\r\n  font-family: \"Nunito\", sans-serif;\r\n  font-size: 14px;\r\n  justify-content: center;\r\n  margin: 0;\r\n  padding: 0;\r\n  text-align: center;\r\n  transition: all 0.3s ease-in-out;\r\n  user-select: none;\r\n  -webkit-user-select: none;\r\n  white-space: nowrap;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  ${(props) => props.category === PRIMARY_BUTTON\r\n    && css`\r\n      background-color: var(--color-secondary);\r\n      border: 1px solid transparent;\r\n      color: #fff;\r\n      line-height: 1.42857;\r\n      margin: 0 0 0 10px;\r\n      padding: 6px 12px;\r\n      min-width: 76px;\r\n      touch-action: manipulation;\r\n      box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.5);\r\n\r\n      &:hover {\r\n        background-color: var(--color-secondary-hover);\r\n        box-shadow: 0 3px 4px 0 rgba(233, 236, 239, 0.5);\r\n      }\r\n\r\n      &.login-button {\r\n        font-size: 18px;\r\n        height: 44px;\r\n        letter-spacing: 0.3px;\r\n        margin: 0;\r\n        padding: 0 32px;\r\n      }\r\n\r\n      &.large-button {\r\n        line-height: inherit;\r\n        margin: 0;\r\n        padding: 12px 32px;\r\n        width: 100%;\r\n      }\r\n\r\n      &.add-comment-button {\r\n        display: none;\r\n        @media (max-width: 500px) {\r\n            display: inline-block;\r\n        }\r\n      }\r\n\r\n      &.writing-mobile {\r\n        @media (max-width: 768px) {\r\n          display: none;\r\n        }\r\n      }\r\n    `}\r\n\r\n  ${(props) => props.category === SECONDARY_BUTTON\r\n    && css`\r\n      background-color: #fff;\r\n      border: 1px solid var(--color-secondary);\r\n      color: var(--color-secondary);\r\n      line-height: 1.42857;\r\n      margin: 0 0 0 10px;\r\n      padding: 6px 12px;\r\n      min-width: 76px;\r\n      touch-action: manipulation;\r\n      box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.5);\r\n\r\n      &:hover {\r\n        background-color: #f8f9fa;\r\n        box-shadow: 0 3px 4px 0 rgba(233, 236, 239, 0.5);\r\n      }\r\n\r\n      &.edit-comment-button {\r\n        margin: 0 0 0 20px;\r\n        height: 34px;\r\n      }\r\n    `}\r\n\r\n  ${(props) => props.category === DISABLED_BUTTON\r\n    && css`\r\n      background-color: var(--color-secondary);\r\n      border: 1px solid transparent;\r\n      color: #fff;\r\n      line-height: 1.42857;\r\n      margin: 0 0 0 10px;\r\n      padding: 6px 12px;\r\n      min-width: 76px;\r\n      touch-action: manipulation;\r\n\r\n      &:disabled {\r\n        cursor: not-allowed;\r\n        opacity: 0.5;\r\n      }\r\n      &:hover:enabled {\r\n        background-color: var(--color-secondary-hover);\r\n        border: 1px solid var(--color-secondary-hover);\r\n        box-shadow: 0 3px 4px 0 rgba(233, 236, 239, 0.5);\r\n        opacity: 1;\r\n      }\r\n\r\n      &.edit-comment-button {\r\n        margin: 0 0 0 20px;\r\n        height: 34px;\r\n      }\r\n    `}\r\n\r\n  ${(props) => props.category === DANGER_BUTTON\r\n    && css`\r\n      background-color: var(--color-primary);\r\n      border: 1px solid var(--color-primary);\r\n      color: #fff;\r\n      line-height: 1.42857;\r\n      margin: 0 0 0 10px;\r\n      padding: 6px 12px;\r\n      min-width: 76px;\r\n      touch-action: manipulation;\r\n      box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.5);\r\n\r\n      &:hover {\r\n        background-color: var(--color-primary-hover);\r\n        border: 1px solid var(--color-primary-hover);\r\n        box-shadow: 0 3px 4px 0 rgba(233, 236, 239, 0.5);\r\n      }\r\n    `}    \r\n\r\n  ${(props) => props.category === TEXT_BUTTON\r\n    && css`\r\n      background-color: transparent;\r\n      color: var(--color-secondary);\r\n      letter-spacing: 0.6px;\r\n\r\n      &.admin-button {\r\n        font-size: 12px;\r\n        margin-right: 12px;\r\n        padding: 5px;\r\n      }\r\n\r\n      &.preview-button {\r\n        font-family: \"Nunito\", sans-serif;\r\n        height: 32px;\r\n        padding: 1px 6px;\r\n      }\r\n\r\n      &.undo-button {\r\n        color: #fff;\r\n        font-size: 14px;\r\n        font-family: \"Nunito\", sans-serif;\r\n        margin: 3px 0;\r\n        float: right;\r\n        right: 48px;\r\n        text-decoration: underline;\r\n      }\r\n      \r\n      &.send-button {\r\n        color: #fff;\r\n        font-size: 14px;\r\n        font-family: \"NunitoSans Semibold\", sans-serif;\r\n        margin: 3px 0;\r\n        position: relative;\r\n        left: 85px;\r\n        bottom: 15px;\r\n        text-decoration: underline;\r\n      }\r\n\r\n      &.show-filters-button {\r\n        display: none;\r\n        color: var(--color-dark-50);\r\n        padding: 6px 10px;\r\n        text-align: left;\r\n        &:hover {\r\n          background-color: var(--color-secondary-light);\r\n        }\r\n        @media (min-width: 768px) and (max-width: 1024px) {\r\n          display: block;\r\n        }\r\n        @media (max-width: 767px) {\r\n          display: block;\r\n        }\r\n      }\r\n    `}\r\n\r\n  ${(props) => props.category === ICON_BUTTON\r\n    && css`\r\n      display: flex;\r\n\r\n      &.clear-button {\r\n        background-color: var(--color-dark-25);\r\n        border-radius: 50%;\r\n        position: absolute;\r\n        right: 6px;\r\n        top: auto;\r\n        &:hover {\r\n          background-color: var(--color-dark-50);\r\n        }\r\n      }\r\n    `} \r\n`;\r\n\r\nexport const CloseButton = styled(MdClose)`\r\n  position: absolute;\r\n  top: 3px;\r\n  right: 3px;\r\n  font-size: 28px;\r\n  color: #555555;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    color: darkgray;\r\n  }\r\n\r\n  &.question-modal-button {\r\n    z-index: 1000;\r\n    top: 3px;\r\n    right: 25px;\r\n  }\r\n`;\r\n", "import useFindLoaderMatch from 'app/utils/hooks/useFindLoaderMatch';\r\n\r\nfunction useUser() {\r\n  const loader = useFindLoaderMatch('root');\r\n  if (!loader || !loader.data) return undefined;\r\n  return loader.data.profile;\r\n}\r\n\r\nexport default useUser;\r\n", "import { useMatches } from '@remix-run/react';\r\n\r\nfunction useFindLoaderMatch(id) {\r\n  const matches = useMatches();\r\n  const found = matches.find((route) => route.id === id);\r\n  return found;\r\n}\r\n\r\nexport default useFindLoaderMatch;\r\n", "/* eslint-disable import/prefer-default-export */\r\nimport styled from 'styled-components';\r\n\r\nexport const LogoutModal = styled.div` \r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    z-index: 2000;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    background-color: rgba(0, 0, 0, 0.5);  \r\n`;\r\n\r\nexport const LogoutModalDialog = styled.div`\r\n    position: relative;\r\n    border-radius: 5px;\r\n    border: 0;\r\n    background-color: #fff;\r\n    box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.5);\r\n    overflow: hidden;\r\n    margin: 0 auto;\r\n    max-width: 70vw;\r\n    padding: 24px 0px;\r\n    width: 100%;\r\n    display: block;\r\n    max-height: calc(100vh - 150px);\r\n    overflow-y: auto;\r\n\r\n    @media (max-width: 576px) {\r\n        max-height: 90%;\r\n        max-width: 90%;\r\n    }\r\n`;\r\n\r\nexport const ModalFooter = styled.div`\r\n    border-top: none;\r\n    background-color: #fff;\r\n    border-bottom: none;\r\n    padding: 15px;\r\n    text-align: right;\r\n    box-sizing: border-box;\r\n    display: block;\r\n    font-size: 14px;\r\n    ${(props) => (props.variant === 'logout' ? 'border-top: 1px solid #e5e5e5;padding: 15px;text-align: right;' : 'border-bottom: none;')}\r\n`;\r\n\r\nexport const ModalHeader = styled.div`\r\n    overflow-y: hidden;\r\n    padding: 15px;\r\n    box-sizing: border-box;\r\n    display: block;\r\n    font-size: 14px;\r\n    ${(props) => (props.variant === 'logout' ? 'border-bottom: 1px solid #e5e5e5;padding: 15px;' : 'border-bottom: none;')}\r\n`;\r\n\r\nexport const ModalBody = styled.div`\r\n    display: block;\r\n    font-size: 14px;\r\n    background-color: #fff;\r\n    border-bottom: none;\r\n    position: relative;\r\n    padding: 15px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nexport const ModalTitle = styled.div`\r\n    font-family: \"Nunito\";\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    line-height: normal;\r\n    letter-spacing: normal;\r\n    margin-bottom: 8px;\r\n`;\r\n", "export { default } from './SearchBarNav';\r\n", "import React, { useEffect, useState, useCallback } from 'react';\r\nimport { useFetcher, useNavigate } from '@remix-run/react';\r\nimport { debounce } from 'lodash';\r\nimport useClickOutside from 'app/utils/hooks/useClickOutside';\r\nimport { ICON_BUTTON } from 'app/utils/constants';\r\nimport * as Styled from 'app/components/SearchBarNav/SearchBarNav.Styled';\r\nimport Button from 'app/components/Atoms/Button';\r\nimport SearchBarDropdown from 'app/components/SearchBarDropdown';\r\n\r\nfunction SearchBarNav() {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const { state: showDropdown, setState: setShowDropdown, wrapperRef } = useClickOutside();\r\n  const [found, setFound] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  const fetcher = useFetcher();\r\n\r\n  useEffect(() => {\r\n    if (fetcher.data && fetcher.data.searchResults !== undefined) {\r\n      setFound(fetcher.data.searchResults);\r\n    }\r\n  }, [fetcher.data]);\r\n\r\n  const sendQuery = (value) => {\r\n    fetcher.load(`/?search=${value}`);\r\n  };\r\n\r\n  const delayedQuery = useCallback(debounce((value) => sendQuery(value), 400), []);\r\n\r\n  const onChange = (e) => {\r\n    setSearchTerm(e.target.value);\r\n    delayedQuery(e.target.value);\r\n  };\r\n\r\n  const onClear = () => {\r\n    setSearchTerm('');\r\n  };\r\n\r\n  const onQuestionClick = (questionId) => {\r\n    onClear();\r\n    setShowDropdown(false);\r\n    navigate(`/questions/${questionId}`);\r\n  };\r\n\r\n  return (\r\n    <Styled.SearchField ref={wrapperRef}>\r\n      <Styled.IconWrapper>\r\n        <Styled.SearchIcon />\r\n      </Styled.IconWrapper>\r\n      <Styled.Input\r\n        type=\"search\"\r\n        value={searchTerm}\r\n        onChange={onChange}\r\n        onFocus={() => setShowDropdown(true)}\r\n        placeholder=\"Search for\u2026\"\r\n      />\r\n      {searchTerm && (\r\n        <Button\r\n          type=\"button\"\r\n          className=\"clear-button\"\r\n          title=\"Clear\"\r\n          category={ICON_BUTTON}\r\n          onClick={onClear}\r\n        >\r\n          <Styled.ClearIcon />\r\n        </Button>\r\n      )}\r\n      {showDropdown && (\r\n        <SearchBarDropdown\r\n          searchTerm={searchTerm}\r\n          questions={found}\r\n          onQuestionClick={onQuestionClick}\r\n        />\r\n      )}\r\n    </Styled.SearchField>\r\n  );\r\n}\r\n\r\nexport default SearchBarNav;\r\n", "import { useEffect, useRef, useState } from 'react';\r\n\r\nconst useClickOutside = (exceptionState = false) => {\r\n  const wrapperRef = useRef(null);\r\n  const [state, setState] = useState(false);\r\n\r\n  const handleClickOutside = (event) => {\r\n    if (wrapperRef.current\r\n      && !wrapperRef.current.contains(event.target)\r\n      && state && !exceptionState) {\r\n      setState(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside);\r\n    };\r\n  }, [state, exceptionState]);\r\n\r\n  return { state, setState, wrapperRef };\r\n};\r\n\r\nexport default useClickOutside;\r\n", "/* eslint-disable import/prefer-default-export */\r\nimport styled from 'styled-components';\r\nimport { MdClose } from 'react-icons/md';\r\nimport { AiOutlineSearch } from 'react-icons/ai';\r\n\r\nexport const SearchField = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  background-color: #f4f7f9;\r\n  border-radius: 20px;\r\n  height: 40px;\r\n  justify-content: center;\r\n  max-width: 270px;\r\n  position: relative;\r\n  width: 100%;\r\n  transition: all 0.5s ease;\r\n  @media (max-width: 768px) {\r\n    max-width: none;\r\n  }\r\n`;\r\n\r\nexport const IconWrapper = styled.div`\r\n  left: 10px;\r\n  top: auto;\r\n  width: 22px;\r\n  position: absolute;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  background-color: transparent;\r\n  border: none;\r\n  font-size: 14px;\r\n  height: 100%;\r\n  padding: 0 40px;\r\n  width: 100%;\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n  ::placeholder,\r\n  ::-webkit-input-placeholder {\r\n    color: rgba(78, 81, 84, 0.65);\r\n    font-family: \"NunitoSans Regular\", sans-serif;\r\n  }\r\n`;\r\n\r\nexport const SearchIcon = styled(AiOutlineSearch)`\r\n  font-size: 30px;\r\n  color: rgba(78, 81, 84, 0.65);\r\n`;\r\n\r\nexport const ClearIcon = styled(MdClose)`\r\n  font-size: 28px;\r\n  color: rgba(78, 81, 84, 0.65);\r\n  padding: 5px;\r\n  transition: all 0.3s ease-in-out;\r\n  &:hover {\r\n    color: #fff;\r\n  }\r\n`;\r\n", "export { default } from './SearchBarDropdown';\r\n", "/* eslint-disable react/no-children-prop */\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as Styled from 'app/components/SearchBarDropdown/SearchBarDropdown.Styled';\r\nimport { formatCollapsingText } from 'app/utils/stringOperations';\r\nimport { markdownFormat } from 'app/utils/markdownFormatQuestions';\r\nimport { COLLAPSED_QUESTION_MIN_LENGTH } from 'app/utils/constants';\r\n\r\nfunction SearchBarDropdown({ searchTerm, questions, onQuestionClick }) {\r\n  const renderNoResultMessage = () => {\r\n    if (searchTerm) {\r\n      return 'Oops! There are no results for your search';\r\n    }\r\n\r\n    return 'Find something...';\r\n  };\r\n\r\n  return (\r\n    <Styled.Dropdown>\r\n      {\r\n        questions.length === 0\r\n          ? (<Styled.Alert>{renderNoResultMessage()}</Styled.Alert>)\r\n          : (\r\n            <div>\r\n              <Styled.TitleContainer>Questions</Styled.TitleContainer>\r\n              {\r\n              questions.map((question) => (\r\n                <Styled.DropdownQuestion\r\n                  key={question.question_id}\r\n                  onClick={() => onQuestionClick(question.question_id)}\r\n                >\r\n                  <Styled.DepartmentLabel>\r\n                    {\r\n                      question.Department\r\n                        ? question.Department.name\r\n                        : 'Not Assigned'\r\n                    }\r\n                  </Styled.DepartmentLabel>\r\n                  <Styled.QuestionMarkdown\r\n                    children={formatCollapsingText(\r\n                      markdownFormat(question.question),\r\n                      question.question.length > COLLAPSED_QUESTION_MIN_LENGTH,\r\n                      true,\r\n                      COLLAPSED_QUESTION_MIN_LENGTH,\r\n                    )}\r\n                  />\r\n                </Styled.DropdownQuestion>\r\n              ))\r\n            }\r\n            </div>\r\n          )\r\n      }\r\n    </Styled.Dropdown>\r\n  );\r\n}\r\n\r\nexport default SearchBarDropdown;\r\n\r\n// Props types\r\nSearchBarDropdown.propTypes = {\r\n  searchTerm: PropTypes.string.isRequired,\r\n  questions: PropTypes.arrayOf(\r\n    PropTypes.shape(),\r\n  ).isRequired,\r\n  onQuestionClick: PropTypes.func.isRequired,\r\n};\r\n", "/* eslint-disable import/prefer-default-export */\r\nimport styled from 'styled-components';\r\nimport Markdown from 'react-markdown';\r\nimport Button from 'app/components/Atoms/Button';\r\n\r\nexport const Dropdown = styled.div`\r\n  border-radius: 10px;\r\n  background: #fff;\r\n  box-shadow: 0 3px 6px 0 rgba(225, 229, 233, 0.8);\r\n  min-height: 5px;\r\n  top: 100%;\r\n  margin-top: 5px;\r\n  width: 150%;\r\n  position: absolute;\r\n  padding: 15px;\r\n  z-index: 999;\r\n  font-size: 12px;\r\n  @media (max-width: 768px) {\r\n    width: 110%;\r\n  }\r\n`;\r\n\r\nexport const Alert = styled.span`\r\n  color: var(--color-dark-25);\r\n`;\r\n\r\nexport const DropdownQuestion = styled.div`\r\n  display: flex;\r\n  margin-bottom: 10px;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const DepartmentLabel = styled.div`\r\n  border: 2px solid var(--color-secondary);\r\n  align-items: center;\r\n  justify-content: center;\r\n  text-align: center;\r\n  display: flex;\r\n  height: fit-content;\r\n  padding: 5px;\r\n  border-radius: 20px;\r\n  min-width: 110px;\r\n  font-weight: 600;\r\n  color: var(--color-secondary);\r\n`;\r\n\r\nexport const QuestionMarkdown = styled(Markdown)`\r\n  overflow-wrap: anywhere;\r\n  width: 100%;\r\n  margin-left: 10px;\r\n  font-size: 12px;\r\n`;\r\n\r\nexport const TitleContainer = styled.span`\r\n  color: #bbbbbb;\r\n  display: flex;\r\n  font-weight: 600;\r\n  font-size: 13px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nexport const ButtonShowMore = styled(Button)`\r\n  color: #bbbbbb;\r\n  font-size: 12px;\r\n`;\r\n", "/**\n * @typedef {import('./lib/react-markdown.js').ReactMarkdownOptions} Options\n * @typedef {import('./lib/ast-to-react.js').Components} Components\n */\n\nexport {uriTransformer} from './lib/uri-transformer.js'\n\nexport {ReactMarkdown as default} from './lib/react-markdown.js'\n", "const protocols = ['http', 'https', 'mailto', 'tel']\n\n/**\n * @param {string} uri\n * @returns {string}\n */\nexport function uriTransformer(uri) {\n  const url = (uri || '').trim()\n  const first = url.charAt(0)\n\n  if (first === '#' || first === '/') {\n    return url\n  }\n\n  const colon = url.indexOf(':')\n  if (colon === -1) {\n    return url\n  }\n\n  let index = -1\n\n  while (++index < protocols.length) {\n    const protocol = protocols[index]\n\n    if (\n      colon === protocol.length &&\n      url.slice(0, protocol.length).toLowerCase() === protocol\n    ) {\n      return url\n    }\n  }\n\n  index = url.indexOf('?')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  index = url.indexOf('#')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  // eslint-disable-next-line no-script-url\n  return 'javascript:void(0)'\n}\n", "/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('react').ReactElement<{}>} ReactElement\n * @typedef {import('unified').PluggableList} PluggableList\n * @typedef {import('hast').Root} Root\n * @typedef {import('./rehype-filter.js').Options} FilterOptions\n * @typedef {import('./ast-to-react.js').Options} TransformOptions\n *\n * @typedef CoreOptions\n * @property {string} children\n *\n * @typedef PluginOptions\n * @property {PluggableList} [remarkPlugins=[]]\n * @property {PluggableList} [rehypePlugins=[]]\n * @property {import('remark-rehype').Options | undefined} [remarkRehypeOptions={}]\n *\n * @typedef LayoutOptions\n * @property {string} [className]\n *\n * @typedef {CoreOptions & PluginOptions & LayoutOptions & FilterOptions & TransformOptions} ReactMarkdownOptions\n *\n * @typedef Deprecation\n * @property {string} id\n * @property {string} [to]\n */\n\nimport React from 'react'\nimport {VFile} from 'vfile'\nimport {unified} from 'unified'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport PropTypes from 'prop-types'\nimport {html} from 'property-information'\nimport rehypeFilter from './rehype-filter.js'\nimport {uriTransformer} from './uri-transformer.js'\nimport {childrenToReact} from './ast-to-react.js'\n\nconst own = {}.hasOwnProperty\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {Record<string, Deprecation>} */\nconst deprecated = {\n  plugins: {to: 'plugins', id: 'change-plugins-to-remarkplugins'},\n  renderers: {to: 'components', id: 'change-renderers-to-components'},\n  astPlugins: {id: 'remove-buggy-html-in-markdown-parser'},\n  allowDangerousHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  escapeHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  source: {to: 'children', id: 'change-source-to-children'},\n  allowNode: {\n    to: 'allowElement',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  allowedTypes: {\n    to: 'allowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  disallowedTypes: {\n    to: 'disallowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  includeNodeIndex: {\n    to: 'includeElementIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  }\n}\n\n/**\n * React component to render markdown.\n *\n * @param {ReactMarkdownOptions} options\n * @returns {ReactElement}\n */\nexport function ReactMarkdown(options) {\n  for (const key in deprecated) {\n    if (own.call(deprecated, key) && own.call(options, key)) {\n      const deprecation = deprecated[key]\n      console.warn(\n        `[react-markdown] Warning: please ${\n          deprecation.to ? `use \\`${deprecation.to}\\` instead of` : 'remove'\n        } \\`${key}\\` (see <${changelog}#${deprecation.id}> for more info)`\n      )\n      delete deprecated[key]\n    }\n  }\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(options.remarkPlugins || [])\n    .use(remarkRehype, {\n      ...options.remarkRehypeOptions,\n      allowDangerousHtml: true\n    })\n    .use(options.rehypePlugins || [])\n    .use(rehypeFilter, options)\n\n  const file = new VFile()\n\n  if (typeof options.children === 'string') {\n    file.value = options.children\n  } else if (options.children !== undefined && options.children !== null) {\n    console.warn(\n      `[react-markdown] Warning: please pass a string as \\`children\\` (not: \\`${options.children}\\`)`\n    )\n  }\n\n  const hastNode = processor.runSync(processor.parse(file), file)\n\n  if (hastNode.type !== 'root') {\n    throw new TypeError('Expected a `root` node')\n  }\n\n  /** @type {ReactElement} */\n  let result = React.createElement(\n    React.Fragment,\n    {},\n    childrenToReact({options, schema: html, listDepth: 0}, hastNode)\n  )\n\n  if (options.className) {\n    result = React.createElement('div', {className: options.className}, result)\n  }\n\n  return result\n}\n\nReactMarkdown.defaultProps = {transformLinkUri: uriTransformer}\n\nReactMarkdown.propTypes = {\n  // Core options:\n  children: PropTypes.string,\n  // Layout options:\n  className: PropTypes.string,\n  // Filter options:\n  allowElement: PropTypes.func,\n  allowedElements: PropTypes.arrayOf(PropTypes.string),\n  disallowedElements: PropTypes.arrayOf(PropTypes.string),\n  unwrapDisallowed: PropTypes.bool,\n  // Plugin options:\n  remarkPlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  rehypePlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  // Transform options:\n  sourcePos: PropTypes.bool,\n  rawSourcePos: PropTypes.bool,\n  skipHtml: PropTypes.bool,\n  includeElementIndex: PropTypes.bool,\n  transformLinkUri: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  linkTarget: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  transformImageUri: PropTypes.func,\n  components: PropTypes.object\n}\n", "export {VFile} from './lib/index.js'\n", "/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {Record<string, unknown> & {type: string, position?: Position|undefined}} NodeLike\n * @typedef {import('./minurl.shared.js').URL} URL\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n *\n * @typedef {'ascii'|'utf8'|'utf-8'|'utf16le'|'ucs2'|'ucs-2'|'base64'|'base64url'|'latin1'|'binary'|'hex'} BufferEncoding\n *   Encodings supported by the buffer class.\n *   This is a copy of the typing from Node, copied to prevent Node globals from\n *   being needed.\n *   Copied from: <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/90a4ec8/types/node/buffer.d.ts#L170>\n *\n * @typedef {Value|Options|VFile|URL} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n * @property {Value} [value]\n * @property {string} [cwd]\n * @property {Array<string>} [history]\n * @property {string|URL} [path]\n * @property {string} [basename]\n * @property {string} [stem]\n * @property {string} [extname]\n * @property {string} [dirname]\n * @property {Data} [data]\n *\n * @typedef Map\n *   Raw source map, see:\n *   <https://github.com/mozilla/source-map/blob/58819f0/source-map.d.ts#L15-L23>.\n * @property {number} version\n * @property {Array<string>} sources\n * @property {Array<string>} names\n * @property {string|undefined} [sourceRoot]\n * @property {Array<string>|undefined} [sourcesContent]\n * @property {string} mappings\n * @property {string} file\n *\n * @typedef {{[key: string]: unknown} & VFileCoreOptions} Options\n *   Configuration: a bunch of keys that will be shallow copied over to the new\n *   file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n * @typedef {<T = ReporterSettings>(files: Array<VFile>, options: T) => string} Reporter\n */\n\nimport buffer from 'is-buffer'\nimport {VFileMessage} from 'vfile-message'\nimport {path} from './minpath.js'\nimport {proc} from './minproc.js'\nimport {urlToPath, isUrl} from './minurl.js'\n\n// Order of setting (least specific to most), we need this because otherwise\n// `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n// stem can be set.\nconst order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * If `options` is `string` or `Buffer`, it\u2019s treated as `{value: options}`.\n   * If `options` is a `URL`, it\u2019s treated as `{path: options}`.\n   * If `options` is a `VFile`, shallow copies its data over to the new file.\n   * All fields in `options` are set on the newly created `VFile`.\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * It\u2019s not possible to set either `dirname` or `extname` without setting\n   * either `history`, `path`, `basename`, or `stem` as well.\n   *\n   * @param {Compatible} [value]\n   */\n  constructor(value) {\n    /** @type {Options} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (typeof value === 'string' || buffer(value)) {\n      // @ts-expect-error Looks like a buffer.\n      options = {value}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else {\n      // @ts-expect-error Looks like file or options.\n      options = value\n    }\n\n    /**\n     * Place to store custom information (default: `{}`).\n     * It\u2019s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of messages associated with the file.\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * List of filepaths the file moved between.\n     * The first is the original path and the last is the current path.\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Raw value.\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are \u201Cwell-known\u201D.\n    // As in, used in several tools.\n\n    /**\n     * Whether a file was saved to disk.\n     * This is used by vfile reporters.\n     * @type {boolean}\n     */\n    this.stored\n\n    /**\n     * Sometimes files have a non-string, compiled, representation.\n     * This can be stored in the `result` field.\n     * One example is when turning markdown into React nodes.\n     * This is used by unified to store non-string results.\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Sometimes files have a source map associated with them.\n     * This can be stored in the `map` field.\n     * This should be a `Map` type, which is equivalent to the `RawSourceMap`\n     * type from the `source-map` module.\n     * @type {Map|undefined}\n     */\n    this.map\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (prop in options && options[prop] !== undefined) {\n        // @ts-expect-error: TS is confused by the different types for `history`.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) this[prop] = options[prop]\n    }\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   * @returns {string}\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   * @param {string|URL} path\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   * Cannot be set if there\u2019s no `path` yet.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there\u2019s no `path` yet.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.charCodeAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * @param {BufferEncoding} [encoding='utf8']\n   *   When `value` is a `Buffer`, `encoding` is a character encoding to\n   *   understand it as (default: `'utf8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    return (this.value || '').toString(encoding)\n  }\n\n  /**\n   * Constructs a new `VFileMessage`, where `fatal` is set to `false`, and\n   * associates it with the file by adding it to `vfile.messages` and setting\n   * `message.file` to the current filepath.\n   *\n   * @param {string|Error} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(reason, place, origin) {\n    const message = new VFileMessage(reason, place, origin)\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Like `VFile#message()`, but associates an informational message where\n   * `fatal` is set to `null`.\n   *\n   * @param {string|Error} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = null\n\n    return message\n  }\n\n  /**\n   * Like `VFile#message()`, but associates a fatal message where `fatal` is\n   * set to `true`, and then immediately throws it.\n   *\n   * > \uD83D\uDC49 **Note**: a fatal error means that a file is no longer processable.\n   *\n   * @param {string|Error} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {never}\n   *   Message.\n   */\n  fail(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {void}\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {asserts part is string}\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string|undefined} path\n * @param {string} name\n * @returns {asserts path is string}\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n", "/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {object & {type: string, position?: Position|undefined}} NodeLike\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\nexport class VFileMessage extends Error {\n  /**\n   * Constructor of a message for `reason` at `place` from `origin`.\n   * When an error is passed in as `reason`, copies the `stack`.\n   *\n   * @param {string|Error} reason Reason for message (`string` or `Error`). Uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place] Place at which the message occurred in a file (`Node`, `Position`, or `Point`, optional).\n   * @param {string} [origin] Place in code the message originates from (`string`, optional).\n   */\n  constructor(reason, place, origin) {\n    /** @type {[string|null, string|null]} */\n    const parts = [null, null]\n    /** @type {Position} */\n    let position = {\n      // @ts-expect-error: we always follows the structure of `position`.\n      start: {line: null, column: null},\n      // @ts-expect-error: \"\n      end: {line: null, column: null}\n    }\n\n    super()\n\n    if (typeof place === 'string') {\n      origin = place\n      place = undefined\n    }\n\n    if (typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        parts[1] = origin\n      } else {\n        parts[0] = origin.slice(0, index)\n        parts[1] = origin.slice(index + 1)\n      }\n    }\n\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          position = place.position\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        position = place\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        position.start = place\n      }\n    }\n\n    // Fields from `Error`\n    this.name = stringifyPosition(place) || '1:1'\n    this.message = typeof reason === 'object' ? reason.message : reason\n    this.stack = typeof reason === 'object' ? reason.stack : ''\n\n    /**\n     * Reason for message.\n     * @type {string}\n     */\n    this.reason = this.message\n    /**\n     * If true, marks associated file as no longer processable.\n     * @type {boolean?}\n     */\n    // eslint-disable-next-line no-unused-expressions\n    this.fatal\n    /**\n     * Starting line of error.\n     * @type {number?}\n     */\n    this.line = position.start.line\n    /**\n     * Starting column of error.\n     * @type {number?}\n     */\n    this.column = position.start.column\n    /**\n     * Namespace of warning.\n     * @type {string?}\n     */\n    this.source = parts[0]\n    /**\n     * Category of message.\n     * @type {string?}\n     */\n    this.ruleId = parts[1]\n    /**\n     * Full range information, when available.\n     * Has start and end properties, both set to an object with line and column, set to number?.\n     * @type {Position?}\n     */\n    this.position = position\n\n    // The following fields are \u201Cwell known\u201D.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * You can use this to specify the source value that\u2019s being reported, which\n     * is deemed incorrect.\n     * @type {string?}\n     */\n    this.actual\n    /**\n     * You can use this to suggest values that should be used instead of\n     * `actual`, one or more values that are deemed as acceptable.\n     * @type {Array<string>?}\n     */\n    this.expected\n    /**\n     * You may add a file property with a path of a file (used throughout the VFile ecosystem).\n     * @type {string?}\n     */\n    this.file\n    /**\n     * You may add a url property with a link to documentation for the message.\n     * @type {string?}\n     */\n    this.url\n    /**\n     * You may add a note property with a long form description of the message (supported by vfile-reporter).\n     * @type {string?}\n     */\n    this.note\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.fatal = null\nVFileMessage.prototype.column = null\nVFileMessage.prototype.line = null\nVFileMessage.prototype.source = null\nVFileMessage.prototype.ruleId = null\nVFileMessage.prototype.position = null\n", "/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {object & {type: string, position?: Position|undefined}} NodeLike\n */\n\n/**\n * Stringify one point, a position (start and end points), or a node\u2019s\n * positional information.\n *\n * @param {Node|NodeLike|Position|Point|null} [value]\n * @returns {string}\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point|undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position|undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number|undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n", "export {default as path} from 'path'\n", "export {default as proc} from 'process'\n", "export {fileURLToPath as urlToPath} from 'url'\nexport {isUrl} from './minurl.shared.js'\n", "/**\n * @typedef URL\n * @property {string} hash\n * @property {string} host\n * @property {string} hostname\n * @property {string} href\n * @property {string} origin\n * @property {string} password\n * @property {string} pathname\n * @property {string} port\n * @property {string} protocol\n * @property {string} search\n * @property {any} searchParams\n * @property {string} username\n * @property {() => string} toString\n * @property {() => string} toJSON\n */\n\n/**\n * @param {unknown} fileURLOrPath\n * @returns {fileURLOrPath is URL}\n */\n// From: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js#L1501>\nexport function isUrl(fileURLOrPath) {\n  return (\n    fileURLOrPath !== null &&\n    typeof fileURLOrPath === 'object' &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.href &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.origin\n  )\n}\n", "export {unified} from './lib/index.js'\n", "/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\n * @typedef {import('vfile').VFileValue} VFileValue\n * @typedef {import('..').Processor} Processor\n * @typedef {import('..').Plugin} Plugin\n * @typedef {import('..').Preset} Preset\n * @typedef {import('..').Pluggable} Pluggable\n * @typedef {import('..').PluggableList} PluggableList\n * @typedef {import('..').Transformer} Transformer\n * @typedef {import('..').Parser} Parser\n * @typedef {import('..').Compiler} Compiler\n * @typedef {import('..').RunCallback} RunCallback\n * @typedef {import('..').ProcessCallback} ProcessCallback\n *\n * @typedef Context\n * @property {Node} tree\n * @property {VFile} file\n */\n\nimport {bail} from 'bail'\nimport isBuffer from 'is-buffer'\nimport extend from 'extend'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\n\n// Expose a frozen processor.\nexport const unified = base().freeze()\n\nconst own = {}.hasOwnProperty\n\n// Function to create the first processor.\n/**\n * @returns {Processor}\n */\nfunction base() {\n  const transformers = trough()\n  /** @type {Processor['attachers']} */\n  const attachers = []\n  /** @type {Record<string, unknown>} */\n  let namespace = {}\n  /** @type {boolean|undefined} */\n  let frozen\n  let freezeIndex = -1\n\n  // Data management.\n  // @ts-expect-error: overloads are handled.\n  processor.data = data\n  processor.Parser = undefined\n  processor.Compiler = undefined\n\n  // Lock.\n  processor.freeze = freeze\n\n  // Plugins.\n  processor.attachers = attachers\n  // @ts-expect-error: overloads are handled.\n  processor.use = use\n\n  // API.\n  processor.parse = parse\n  processor.stringify = stringify\n  // @ts-expect-error: overloads are handled.\n  processor.run = run\n  processor.runSync = runSync\n  // @ts-expect-error: overloads are handled.\n  processor.process = process\n  processor.processSync = processSync\n\n  // Expose.\n  return processor\n\n  // Create a new processor based on the processor in the current scope.\n  /** @type {Processor} */\n  function processor() {\n    const destination = base()\n    let index = -1\n\n    while (++index < attachers.length) {\n      destination.use(...attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  /**\n   * @param {string|Record<string, unknown>} [key]\n   * @param {unknown} [value]\n   * @returns {unknown}\n   */\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n        namespace[key] = value\n        return processor\n      }\n\n      // Get `key`.\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    // Get space.\n    return namespace\n  }\n\n  /** @type {Processor['freeze']} */\n  function freeze() {\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      const [attacher, ...options] = attachers[freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      /** @type {Transformer|void} */\n      const transformer = attacher.call(processor, ...options)\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Number.POSITIVE_INFINITY\n\n    return processor\n  }\n\n  /**\n   * @param {Pluggable|null|undefined} [value]\n   * @param {...unknown} options\n   * @returns {Processor}\n   */\n  function use(value, ...options) {\n    /** @type {Record<string, unknown>|undefined} */\n    let settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, ...options)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = Object.assign(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    /**\n     * @param {import('..').Pluggable<unknown[]>} value\n     * @returns {void}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...options] = value\n          addPlugin(plugin, ...options)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {void}\n     */\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = Object.assign(settings || {}, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList|null|undefined} [plugins]\n     * @returns {void}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {...unknown} [value]\n     * @returns {void}\n     */\n    function addPlugin(plugin, value) {\n      let index = -1\n      /** @type {Processor['attachers'][number]|undefined} */\n      let entry\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entry = attachers[index]\n          break\n        }\n      }\n\n      if (entry) {\n        if (isPlainObj(entry[1]) && isPlainObj(value)) {\n          value = extend(true, entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        // @ts-expect-error: fine.\n        attachers.push([...arguments])\n      }\n    }\n  }\n\n  /** @type {Processor['parse']} */\n  function parse(doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser, 'parse')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Parser(String(file), file).parse()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  /** @type {Processor['stringify']} */\n  function stringify(node, doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler, 'compile')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Compiler(node, file).compile()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  /**\n   * @param {Node} node\n   * @param {VFileCompatible|RunCallback} [doc]\n   * @param {RunCallback} [callback]\n   * @returns {Promise<Node>|void}\n   */\n  function run(node, doc, callback) {\n    assertNode(node)\n    processor.freeze()\n\n    if (!callback && typeof doc === 'function') {\n      callback = doc\n      doc = undefined\n    }\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((node: Node) => void)} resolve\n     * @param {(error: Error) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      // @ts-expect-error: `doc` can\u2019t be a callback anymore, we checked.\n      transformers.run(node, vfile(doc), done)\n\n      /**\n       * @param {Error|null} error\n       * @param {Node} tree\n       * @param {VFile} file\n       * @returns {void}\n       */\n      function done(error, tree, file) {\n        tree = tree || node\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, tree, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['runSync']} */\n  function runSync(node, file) {\n    /** @type {Node|undefined} */\n    let result\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    // @ts-expect-error: we either bailed on an error or have a tree.\n    return result\n\n    /**\n     * @param {Error|null} [error]\n     * @param {Node} [tree]\n     * @returns {void}\n     */\n    function done(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * @param {VFileCompatible} doc\n   * @param {ProcessCallback} [callback]\n   * @returns {Promise<VFile>|undefined}\n   */\n  function process(doc, callback) {\n    processor.freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((file: VFile) => void)} resolve\n     * @param {(error?: Error|null|undefined) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      const file = vfile(doc)\n\n      processor.run(processor.parse(file), file, (error, tree, file) => {\n        if (error || !tree || !file) {\n          done(error)\n        } else {\n          /** @type {unknown} */\n          const result = processor.stringify(tree, file)\n\n          if (result === undefined || result === null) {\n            // Empty.\n          } else if (looksLikeAVFileValue(result)) {\n            file.value = result\n          } else {\n            file.result = result\n          }\n\n          done(error, file)\n        }\n      })\n\n      /**\n       * @param {Error|null|undefined} [error]\n       * @param {VFile|undefined} [file]\n       * @returns {void}\n       */\n      function done(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['processSync']} */\n  function processSync(doc) {\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n\n    const file = vfile(doc)\n\n    processor.process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    /**\n     * @param {Error|null|undefined} [error]\n     * @returns {void}\n     */\n    function done(error) {\n      complete = true\n      bail(error)\n    }\n  }\n}\n\n/**\n * Check if `value` is a constructor.\n *\n * @param {unknown} value\n * @param {string} name\n * @returns {boolean}\n */\nfunction newable(value, name) {\n  return (\n    typeof value === 'function' &&\n    // Prototypes do exist.\n    // type-coverage:ignore-next-line\n    value.prototype &&\n    // A function with keys in its prototype is probably a constructor.\n    // Classes\u2019 prototype methods are not enumerable, so we check if some value\n    // exists in the prototype.\n    // type-coverage:ignore-next-line\n    (keys(value.prototype) || name in value.prototype)\n  )\n}\n\n/**\n * Check if `value` is an object with keys.\n *\n * @param {Record<string, unknown>} value\n * @returns {boolean}\n */\nfunction keys(value) {\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is VFileValue}\n */\nfunction looksLikeAVFileValue(value) {\n  return typeof value === 'string' || isBuffer(value)\n}\n", "/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n", "/**\n * @typedef {(error?: Error|null|undefined, ...output: Array<any>) => void} Callback\n * @typedef {(...input: Array<any>) => any} Middleware\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add `fn` (middleware) to the list.\n * @typedef {{run: Run, use: Use}} Pipeline\n *   Middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we\u2019re done.\n     *\n     * @param {Error|null|undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware`.\n * Can be sync or async; return a promise, receive a callback, or return new\n * values and errors.\n *\n * @param {Middleware} middleware\n * @param {Callback} callback\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n", "import remarkParse from './lib/index.js'\n\nexport default remarkParse\n", "/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/** @type {import('unified').Plugin<[Options?] | void[], string, Root>} */\nexport default function remarkParse(options) {\n  /** @type {import('unified').ParserFunction<Root>} */\n  const parser = (doc) => {\n    // Assume options.\n    const settings = /** @type {Options} */ (this.data('settings'))\n\n    return fromMarkdown(\n      doc,\n      Object.assign({}, settings, options, {\n        // Note: these options are not in the readme.\n        // The goal is for them to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: this.data('micromarkExtensions') || [],\n        mdastExtensions: this.data('fromMarkdownExtensions') || []\n      })\n    )\n  }\n\n  Object.assign(this, {Parser: parser})\n}\n", "/**\n * @typedef {import('./lib/index.js').Value} Value\n * @typedef {import('./lib/index.js').Encoding} Encoding\n * @typedef {import('./lib/index.js').Options} Options\n * @typedef {import('./lib/index.js').Extension} Extension\n * @typedef {import('./lib/index.js').Handle} Handle\n * @typedef {import('./lib/index.js').Transform} Transform\n * @typedef {import('./lib/index.js').Token} Token\n * @typedef {import('./lib/index.js').CompileContext} CompileContext\n * @typedef {import('./lib/index.js').OnEnterError} OnEnterError\n * @typedef {import('./lib/index.js').OnExitError} OnExitError\n *\n * @typedef {import('./lib/index.js').OnEnterError} OnError\n *   To do: deprecate next major.\n */\nexport {fromMarkdown} from './lib/index.js'\n", "/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist').Point} Point\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Content} Content\n * @typedef {Root|Content} Node\n * @typedef {Extract<Node, UnistParent>} Parent\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n *\n * @typedef {UnistParent & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @typedef _CompileDataFields\n * @property {boolean|undefined} expectingFirstListItemValue\n * @property {boolean|undefined} flowCodeInside\n * @property {boolean|undefined} setextHeadingSlurpLineEnding\n * @property {boolean|undefined} atHardBreak\n * @property {'collapsed'|'full'} referenceType\n * @property {boolean|undefined} inReference\n * @property {'characterReferenceMarkerHexadecimal'|'characterReferenceMarkerNumeric'} characterReferenceType\n *\n * @typedef {Record<string, unknown> & Partial<_CompileDataFields>} CompileData\n *\n * @typedef {(tree: Root) => Root|void} Transform\n * @typedef {(this: CompileContext, token: Token) => void} Handle\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n * @typedef {Record<string, Record<string, unknown>|Array<unknown>> & {canContainEols: Array<string>, transforms: Array<Transform>, enter: Handles, exit: Handles}} NormalizedExtension\n * @typedef {Partial<NormalizedExtension>} Extension\n *   An mdast extension changes how markdown tokens are turned into mdast.\n *\n * @typedef {(this: Omit<CompileContext, 'sliceSerialize'>, left: Token|undefined, right: Token) => void} OnEnterError\n * @typedef {(this: Omit<CompileContext, 'sliceSerialize'>, left: Token, right: Token) => void} OnExitError\n *\n * @typedef CompileContext\n *   mdast compiler context\n * @property {Array<Node | Fragment>} stack\n * @property {Array<[Token, OnEnterError|undefined]>} tokenStack\n * @property {(key: string, value?: unknown) => void} setData\n *   Set data into the key-value store.\n * @property {<K extends string>(key: K) => CompileData[K]} getData\n *   Get data from the key-value store.\n * @property {(this: CompileContext) => void} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {<N extends Node>(this: CompileContext, node: N, token: Token, onError?: OnEnterError) => N} enter\n *   Enter a token.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => Node} exit\n *   Exit a token.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {NormalizedExtension} config\n *   Configuration.\n *\n * @typedef {{mdastExtensions?: Array<Extension|Array<Extension>>}} FromMarkdownOptions\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n */\nimport {toString} from 'mdast-util-to-string'\nimport {parse} from 'micromark/lib/parse.js'\nimport {preprocess} from 'micromark/lib/preprocess.js'\nimport {postprocess} from 'micromark/lib/postprocess.js'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n/**\n * @param value Markdown to parse (`string` or `Buffer`).\n * @param [encoding] Character encoding to understand `value` as when it\u2019s a `Buffer` (`string`, default: `'utf8'`).\n * @param [options] Configuration\n */\n\nexport const fromMarkdown =\n  /**\n   * @type {(\n   *   ((value: Value, encoding: Encoding, options?: Options) => Root) &\n   *   ((value: Value, options?: Options) => Root)\n   * )}\n   */\n\n  /**\n   * @param {Value} value\n   * @param {Encoding} [encoding]\n   * @param {Options} [options]\n   * @returns {Root}\n   */\n  function (value, encoding, options) {\n    if (typeof encoding !== 'string') {\n      options = encoding\n      encoding = undefined\n    }\n\n    return compiler(options)(\n      postprocess(\n        parse(options).document().write(preprocess()(value, encoding, true))\n      )\n    )\n  }\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options} [options]\n */\n\nfunction compiler(options = {}) {\n  /** @type {NormalizedExtension} */\n  // @ts-expect-error: our base has all required fields, so the result will too.\n  const config = configure(\n    {\n      transforms: [],\n      canContainEols: [\n        'emphasis',\n        'fragment',\n        'heading',\n        'paragraph',\n        'strong'\n      ],\n      enter: {\n        autolink: opener(link),\n        autolinkProtocol: onenterdata,\n        autolinkEmail: onenterdata,\n        atxHeading: opener(heading),\n        blockQuote: opener(blockQuote),\n        characterEscape: onenterdata,\n        characterReference: onenterdata,\n        codeFenced: opener(codeFlow),\n        codeFencedFenceInfo: buffer,\n        codeFencedFenceMeta: buffer,\n        codeIndented: opener(codeFlow, buffer),\n        codeText: opener(codeText, buffer),\n        codeTextData: onenterdata,\n        data: onenterdata,\n        codeFlowValue: onenterdata,\n        definition: opener(definition),\n        definitionDestinationString: buffer,\n        definitionLabelString: buffer,\n        definitionTitleString: buffer,\n        emphasis: opener(emphasis),\n        hardBreakEscape: opener(hardBreak),\n        hardBreakTrailing: opener(hardBreak),\n        htmlFlow: opener(html, buffer),\n        htmlFlowData: onenterdata,\n        htmlText: opener(html, buffer),\n        htmlTextData: onenterdata,\n        image: opener(image),\n        label: buffer,\n        link: opener(link),\n        listItem: opener(listItem),\n        listItemValue: onenterlistitemvalue,\n        listOrdered: opener(list, onenterlistordered),\n        listUnordered: opener(list),\n        paragraph: opener(paragraph),\n        reference: onenterreference,\n        referenceString: buffer,\n        resourceDestinationString: buffer,\n        resourceTitleString: buffer,\n        setextHeading: opener(heading),\n        strong: opener(strong),\n        thematicBreak: opener(thematicBreak)\n      },\n      exit: {\n        atxHeading: closer(),\n        atxHeadingSequence: onexitatxheadingsequence,\n        autolink: closer(),\n        autolinkEmail: onexitautolinkemail,\n        autolinkProtocol: onexitautolinkprotocol,\n        blockQuote: closer(),\n        characterEscapeValue: onexitdata,\n        characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n        characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n        characterReferenceValue: onexitcharacterreferencevalue,\n        codeFenced: closer(onexitcodefenced),\n        codeFencedFence: onexitcodefencedfence,\n        codeFencedFenceInfo: onexitcodefencedfenceinfo,\n        codeFencedFenceMeta: onexitcodefencedfencemeta,\n        codeFlowValue: onexitdata,\n        codeIndented: closer(onexitcodeindented),\n        codeText: closer(onexitcodetext),\n        codeTextData: onexitdata,\n        data: onexitdata,\n        definition: closer(),\n        definitionDestinationString: onexitdefinitiondestinationstring,\n        definitionLabelString: onexitdefinitionlabelstring,\n        definitionTitleString: onexitdefinitiontitlestring,\n        emphasis: closer(),\n        hardBreakEscape: closer(onexithardbreak),\n        hardBreakTrailing: closer(onexithardbreak),\n        htmlFlow: closer(onexithtmlflow),\n        htmlFlowData: onexitdata,\n        htmlText: closer(onexithtmltext),\n        htmlTextData: onexitdata,\n        image: closer(onexitimage),\n        label: onexitlabel,\n        labelText: onexitlabeltext,\n        lineEnding: onexitlineending,\n        link: closer(onexitlink),\n        listItem: closer(),\n        listOrdered: closer(),\n        listUnordered: closer(),\n        paragraph: closer(),\n        referenceString: onexitreferencestring,\n        resourceDestinationString: onexitresourcedestinationstring,\n        resourceTitleString: onexitresourcetitlestring,\n        resource: onexitresource,\n        setextHeading: closer(onexitsetextheading),\n        setextHeadingLineSequence: onexitsetextheadinglinesequence,\n        setextHeadingText: onexitsetextheadingtext,\n        strong: closer(),\n        thematicBreak: closer()\n      }\n    },\n    options.mdastExtensions || []\n  )\n  /** @type {CompileData} */\n\n  const data = {}\n  return compile\n  /**\n   * @param {Array<Event>} events\n   * @returns {Root}\n   */\n\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {CompileContext['stack']} */\n\n    const stack = [tree]\n    /** @type {CompileContext['tokenStack']} */\n\n    const tokenStack = []\n    /** @type {Array<number>} */\n\n    const listStack = []\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n\n    const context = {\n      stack,\n      tokenStack,\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      setData,\n      getData\n    }\n    let index = -1\n\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n\n    index = -1\n\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    if (tokenStack.length > 0) {\n      const tail = tokenStack[tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    } // Figure out `root` position.\n\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n    index = -1\n\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n\n    return tree\n  }\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token|undefined} */\n\n    let listItem\n    /** @type {number|undefined} */\n\n    let lineIndex\n    /** @type {number|undefined} */\n\n    let firstBlankLineIndex\n    /** @type {boolean|undefined} */\n\n    let atMarker\n\n    while (++index <= length) {\n      const event = events[index]\n\n      if (\n        event[1].type === 'listUnordered' ||\n        event[1].type === 'listOrdered' ||\n        event[1].type === 'blockQuote'\n      ) {\n        if (event[0] === 'enter') {\n          containerBalance++\n        } else {\n          containerBalance--\n        }\n\n        atMarker = undefined\n      } else if (event[1].type === 'lineEndingBlank') {\n        if (event[0] === 'enter') {\n          if (\n            listItem &&\n            !atMarker &&\n            !containerBalance &&\n            !firstBlankLineIndex\n          ) {\n            firstBlankLineIndex = index\n          }\n\n          atMarker = undefined\n        }\n      } else if (\n        event[1].type === 'linePrefix' ||\n        event[1].type === 'listItemValue' ||\n        event[1].type === 'listItemMarker' ||\n        event[1].type === 'listItemPrefix' ||\n        event[1].type === 'listItemPrefixWhitespace'\n      ) {\n        // Empty.\n      } else {\n        atMarker = undefined\n      }\n\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            // @ts-expect-error Patched.\n            listItem._spread = true\n          } // Fix position.\n\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        } // Create a new list item.\n\n        if (event[1].type === 'listItemPrefix') {\n          listItem = {\n            type: 'listItem',\n            // @ts-expect-error Patched\n            _spread: false,\n            start: Object.assign({}, event[1].start)\n          } // @ts-expect-error: `listItem` is most definitely defined, TS...\n\n          events.splice(index, 0, ['enter', listItem, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    } // @ts-expect-error Patched.\n\n    events[start][1]._spread = listSpread\n    return length\n  }\n  /**\n   * @type {CompileContext['setData']}\n   * @param [value]\n   */\n\n  function setData(key, value) {\n    data[key] = value\n  }\n  /**\n   * @type {CompileContext['getData']}\n   * @template {string} K\n   * @param {K} key\n   * @returns {CompileData[K]}\n   */\n\n  function getData(key) {\n    return data[key]\n  }\n  /**\n   * @param {Point} d\n   * @returns {Point}\n   */\n\n  function point(d) {\n    return {\n      line: d.line,\n      column: d.column,\n      offset: d.offset\n    }\n  }\n  /**\n   * @param {(token: Token) => Node} create\n   * @param {Handle} [and]\n   * @returns {Handle}\n   */\n\n  function opener(create, and) {\n    return open\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n  /** @type {CompileContext['buffer']} */\n\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n  /**\n   * @type {CompileContext['enter']}\n   * @template {Node} N\n   * @this {CompileContext}\n   * @param {N} node\n   * @param {Token} token\n   * @param {OnEnterError} [errorHandler]\n   * @returns {N}\n   */\n\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    // @ts-expect-error: Assume `Node` can exist as a child of `parent`.\n    parent.children.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler]) // @ts-expect-error: `end` will be patched later.\n\n    node.position = {\n      start: point(token.start)\n    }\n    return node\n  }\n  /**\n   * @param {Handle} [and]\n   * @returns {Handle}\n   */\n\n  function closer(and) {\n    return close\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n  /**\n   * @type {CompileContext['exit']}\n   * @this {CompileContext}\n   * @param {Token} token\n   * @param {OnExitError} [onExitError]\n   * @returns {Node}\n   */\n\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it\u2019s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n\n    node.position.end = point(token.end)\n    return node\n  }\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n\n  function resume() {\n    return toString(this.stack.pop())\n  } //\n  // Handlers.\n  //\n\n  /** @type {Handle} */\n\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true)\n  }\n  /** @type {Handle} */\n\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      const ancestor =\n        /** @type {List} */\n        this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      setData('expectingFirstListItemValue')\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return\n    this.buffer()\n    setData('flowCodeInside', true)\n  }\n  /** @type {Handle} */\n\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    setData('flowCodeInside')\n  }\n  /** @type {Handle} */\n\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitionlabelstring(token) {\n    // Discard label, use the source content instead.\n    const label = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.title = data\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.url = data\n  }\n  /** @type {Handle} */\n\n  function onexitatxheadingsequence(token) {\n    const node =\n      /** @type {Heading} */\n      this.stack[this.stack.length - 1]\n\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true)\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheadinglinesequence(token) {\n    const node =\n      /** @type {Heading} */\n      this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding')\n  }\n  /** @type {Handle} */\n\n  function onenterdata(token) {\n    const parent =\n      /** @type {Parent} */\n      this.stack[this.stack.length - 1]\n    /** @type {Node} */\n\n    let tail = parent.children[parent.children.length - 1]\n\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text() // @ts-expect-error: we\u2019ll add `end` later.\n\n      tail.position = {\n        start: point(token.start)\n      } // @ts-expect-error: Assume `parent` accepts `text`.\n\n      parent.children.push(tail)\n    }\n\n    this.stack.push(tail)\n  }\n  /** @type {Handle} */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n  /** @type {Handle} */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n\n    // If we\u2019re at a hard break, include the line ending in there.\n    if (getData('atHardBreak')) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      setData('atHardBreak')\n      return\n    }\n\n    if (\n      !getData('setextHeadingSlurpLineEnding') &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n  /** @type {Handle} */\n\n  function onexithardbreak() {\n    setData('atHardBreak', true)\n  }\n  /** @type {Handle} */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node =\n      /** @type {HTML} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node =\n      /** @type {HTML} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node =\n      /** @type {InlineCode} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexitlink() {\n    const context =\n      /** @type {Link & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // To do: clean.\n\n    if (getData('inReference')) {\n      context.type += 'Reference' // @ts-expect-error: mutate.\n\n      context.referenceType = getData('referenceType') || 'shortcut' // @ts-expect-error: mutate.\n\n      delete context.url\n      delete context.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete context.identifier // @ts-expect-error: mutate.\n\n      delete context.label\n    }\n\n    setData('referenceType')\n  }\n  /** @type {Handle} */\n\n  function onexitimage() {\n    const context =\n      /** @type {Image & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // To do: clean.\n\n    if (getData('inReference')) {\n      context.type += 'Reference' // @ts-expect-error: mutate.\n\n      context.referenceType = getData('referenceType') || 'shortcut' // @ts-expect-error: mutate.\n\n      delete context.url\n      delete context.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete context.identifier // @ts-expect-error: mutate.\n\n      delete context.label\n    }\n\n    setData('referenceType')\n  }\n  /** @type {Handle} */\n\n  function onexitlabeltext(token) {\n    const ancestor =\n      /** @type {(Link|Image) & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 2]\n    const string = this.sliceSerialize(token)\n    ancestor.label = decodeString(string)\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n  /** @type {Handle} */\n\n  function onexitlabel() {\n    const fragment =\n      /** @type {Fragment} */\n      this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node =\n      /** @type {(Link|Image) & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // Assume a reference.\n\n    setData('inReference', true)\n\n    if (node.type === 'link') {\n      // @ts-expect-error: Assume static phrasing content.\n      node.children = fragment.children\n    } else {\n      node.alt = value\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node =\n      /** @type {Link|Image} */\n      this.stack[this.stack.length - 1]\n    node.url = data\n  }\n  /** @type {Handle} */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node =\n      /** @type {Link|Image} */\n      this.stack[this.stack.length - 1]\n    node.title = data\n  }\n  /** @type {Handle} */\n\n  function onexitresource() {\n    setData('inReference')\n  }\n  /** @type {Handle} */\n\n  function onenterreference() {\n    setData('referenceType', 'collapsed')\n  }\n  /** @type {Handle} */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node =\n      /** @type {LinkReference|ImageReference} */\n      this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    setData('referenceType', 'full')\n  }\n  /** @type {Handle} */\n\n  function onexitcharacterreferencemarker(token) {\n    setData('characterReferenceType', token.type)\n  }\n  /** @type {Handle} */\n\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = getData('characterReferenceType')\n    /** @type {string} */\n\n    let value\n\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      setData('characterReferenceType')\n    } else {\n      // @ts-expect-error `decodeNamedCharacterReference` can return false for\n      // invalid named character references, but everything we\u2019ve tokenized is\n      // valid.\n      value = decodeNamedCharacterReference(data)\n    }\n\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n  /** @type {Handle} */\n\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node =\n      /** @type {Link} */\n      this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n  /** @type {Handle} */\n\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node =\n      /** @type {Link} */\n      this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  } //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n  /** @returns {Code} */\n\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n  /** @returns {InlineCode} */\n\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n  /** @returns {Definition} */\n\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n  /** @returns {Emphasis} */\n\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n  /** @returns {Heading} */\n\n  function heading() {\n    // @ts-expect-error `depth` will be set later.\n    return {\n      type: 'heading',\n      depth: undefined,\n      children: []\n    }\n  }\n  /** @returns {Break} */\n\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n  /** @returns {HTML} */\n\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n  /** @returns {Image} */\n\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n  /** @returns {Link} */\n\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      children: []\n    }\n  }\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n  /** @returns {Paragraph} */\n\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n  /** @returns {Strong} */\n\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n  /** @returns {Text} */\n\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n  /** @returns {ThematicBreak} */\n\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n/**\n * @param {Extension} combined\n * @param {Array<Extension|Array<Extension>>} extensions\n * @returns {Extension}\n */\n\nfunction configure(combined, extensions) {\n  let index = -1\n\n  while (++index < extensions.length) {\n    const value = extensions[index]\n\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n\n  return combined\n}\n/**\n * @param {Extension} combined\n * @param {Extension} extension\n * @returns {void}\n */\n\nfunction extension(combined, extension) {\n  /** @type {string} */\n  let key\n\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      const list = key === 'canContainEols' || key === 'transforms'\n      const maybe = own.call(combined, key) ? combined[key] : undefined\n      /* c8 ignore next */\n\n      const left = maybe || (combined[key] = list ? [] : {})\n      const right = extension[key]\n\n      if (right) {\n        if (list) {\n          // @ts-expect-error: `left` is an array.\n          combined[key] = [...left, ...right]\n        } else {\n          Object.assign(left, right)\n        }\n      }\n    }\n  }\n}\n/** @type {OnEnterError} */\n\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n", "/**\n * @typedef Options\n * @property {boolean} [includeImageAlt=true]\n */\n\n/**\n * Get the text content of a node.\n * Prefer the node\u2019s plain-text fields, otherwise serialize its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} node\n * @param {Options} [options]\n * @returns {string}\n */\nexport function toString(node, options) {\n  var {includeImageAlt = true} = options || {}\n  return one(node, includeImageAlt)\n}\n\n/**\n * @param {unknown} node\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction one(node, includeImageAlt) {\n  return (\n    (node &&\n      typeof node === 'object' &&\n      // @ts-ignore looks like a literal.\n      (node.value ||\n        // @ts-ignore looks like an image.\n        (includeImageAlt ? node.alt : '') ||\n        // @ts-ignore looks like a parent.\n        ('children' in node && all(node.children, includeImageAlt)) ||\n        (Array.isArray(node) && all(node, includeImageAlt)))) ||\n    ''\n  )\n}\n\n/**\n * @param {Array.<unknown>} values\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction all(values, includeImageAlt) {\n  /** @type {Array.<string>} */\n  var result = []\n  var index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt)\n  }\n\n  return result.join('')\n}\n", "/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Create} Create\n */\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {text, string} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n/**\n * @param {ParseOptions} [options]\n * @returns {ParseContext}\n */\n\nexport function parse(options = {}) {\n  /** @type {FullNormalizedExtension} */\n  // @ts-expect-error `defaultConstructs` is full, so the result will be too.\n  const constructs = combineExtensions(\n    // @ts-expect-error Same as above.\n    [defaultConstructs].concat(options.extensions || [])\n  )\n  /** @type {ParseContext} */\n\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n  /**\n   * @param {InitialConstruct} initial\n   */\n\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine several syntax extensions into one.\n *\n * @param {Extension[]} extensions List of syntax extensions.\n * @returns {NormalizedExtension} A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all Extension to merge into.\n * @param {Extension} extension Extension to merge.\n * @returns {void}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    for (code in right) {\n      if (!hasOwnProperty.call(left, code)) left[code] = []\n      const value = right[code]\n      constructs(\n        // @ts-expect-error Looks like a list.\n        left[code],\n        Array.isArray(value) ? value : value ? [value] : []\n      )\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {unknown[]} existing\n * @param {unknown[]} list\n * @returns {void}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {unknown[]} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine several HTML extensions into one.\n *\n * @param {HtmlExtension[]} htmlExtensions List of HTML extensions.\n * @returns {HtmlExtension} A single combined extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all Extension to merge into.\n * @param {HtmlExtension} extension Extension to merge.\n * @returns {void}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        left[type] = right[type]\n      }\n    }\n  }\n}\n", "/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {number} start\n * @param {number} remove\n * @param {T[]} items\n * @returns {void}\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {unknown[]} */\n\n  let parameters // Make start between zero and `end` (included).\n\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0 // No need to chunk the items if there\u2019s only a couple (10k) items.\n\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove) // @ts-expect-error Hush, it\u2019s fine.\n    ;[].splice.apply(list, parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) [].splice.apply(list, [start, remove]) // Insert the items in chunks to not cause stack overflows.\n\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0) // @ts-expect-error Hush, it\u2019s fine.\n      ;[].splice.apply(list, parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {T[]} items\n * @returns {T[]}\n */\n\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n\n  return items\n}\n", "/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n/** @type {Initializer} */\n\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n\n  let previous\n  return contentStart\n  /** @type {State} */\n\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n  /** @type {State} */\n\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n\n    if (previous) {\n      previous.next = token\n    }\n\n    previous = token\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownSpace} from 'micromark-util-character'\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {string} type\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n */\n\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n */\n\nexport const asciiDigit = regexCheck(/\\d/)\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n */\n\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n */\n\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n */\n\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n */\n\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n\nexport const unicodeWhitespace = regexCheck(/\\s/)\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => code is number}\n */\n\nfunction regexCheck(regex) {\n  return check\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code Character code\n   * @returns {code is number} Whether the character code matches the bound regex\n   */\n\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n", "// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\nexport const unicodePunctuationRegex =\n  /[!-/:-@[-`{-~\\u00A1\\u00A7\\u00AB\\u00B6\\u00B7\\u00BB\\u00BF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n", "/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Point} Point\n */\n\n/**\n * @typedef {Record<string, unknown>} StackState\n * @typedef {[Construct, StackState]} StackItem\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\n\nexport const document = {\n  tokenize: initializeDocument\n}\n/** @type {Construct} */\n\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n/** @type {Initializer} */\n\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {StackItem[]} */\n\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext|undefined} */\n\n  let childFlow\n  /** @type {Token|undefined} */\n\n  let childToken\n  /** @type {number} */\n\n  let lineStartOffset\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    } // Done.\n\n    return checkNewContainers(code)\n  }\n  /** @type {State} */\n\n  function documentContinue(code) {\n    continued++ // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it\u2019s already used in the wild by\n    // extensions.\n\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n\n      if (childFlow) {\n        closeFlow()\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point|undefined} */\n\n      let point // Find the flow chunk.\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      let index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they\u2019re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n\n    return start(code)\n  }\n  /** @type {State} */\n\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there\u2019s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      } // If we have concrete content, such as block HTML or fenced code,\n      // we can\u2019t have containers \u201Cpierce\u201D into them, so we can immediately\n      // start.\n\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      } // If we do have flow, it could still be a blank line,\n      // but we\u2019d be interrupting it w/ a new container if there\u2019s a current\n      // construct.\n\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    } // Check if there is a new container.\n\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n  /** @type {State} */\n\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n  /** @type {State} */\n\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n  /** @type {State} */\n\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState]) // Try another.\n\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n  /** @type {State} */\n\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow')) // Get ready for the next line.\n\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n\n    effects.consume(code)\n    return flowContinue\n  }\n  /**\n   * @param {Token} token\n   * @param {boolean} [eof]\n   * @returns {void}\n   */\n\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream) // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can\u2019t \u201Cunmake\u201D it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which \u201Cunmakes\u201D the first line\n    // and turns the whole into one content block.\n    //\n    // We\u2019ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n\n      while (index--) {\n        if (\n          // The token starts before the line ending\u2026\n          childFlow.events[index][1].start.offset < lineStartOffset && // \u2026and either is not ended yet\u2026\n          (!childFlow.events[index][1].end || // \u2026or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there\u2019s still something open, which means it\u2019s a lazy line\n          // part of something.\n          return\n        }\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean|undefined} */\n\n      let seen\n      /** @type {Point|undefined} */\n\n      let point // Find the previous chunk (the one before the lazy line).\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n\n          seen = true\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they\u2019re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n    }\n  }\n  /**\n   * @param {number} size\n   * @returns {void}\n   */\n\n  function exitContainers(size) {\n    let index = stack.length // Exit open containers.\n\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n\n    stack.length = size\n  }\n\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContainer(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n", "/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n/** @type {Initializer} */\n\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding, // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n  /** @type {State} */\n\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n  /** @type {State} */\n\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n", "export {attention} from './lib/attention.js'\nexport {autolink} from './lib/autolink.js'\nexport {blankLine} from './lib/blank-line.js'\nexport {blockQuote} from './lib/block-quote.js'\nexport {characterEscape} from './lib/character-escape.js'\nexport {characterReference} from './lib/character-reference.js'\nexport {codeFenced} from './lib/code-fenced.js'\nexport {codeIndented} from './lib/code-indented.js'\nexport {codeText} from './lib/code-text.js'\nexport {content} from './lib/content.js'\nexport {definition} from './lib/definition.js'\nexport {hardBreakEscape} from './lib/hard-break-escape.js'\nexport {headingAtx} from './lib/heading-atx.js'\nexport {htmlFlow} from './lib/html-flow.js'\nexport {htmlText} from './lib/html-text.js'\nexport {labelEnd} from './lib/label-end.js'\nexport {labelStartImage} from './lib/label-start-image.js'\nexport {labelStartLink} from './lib/label-start-link.js'\nexport {lineEnding} from './lib/line-ending.js'\nexport {list} from './lib/list.js'\nexport {setextUnderline} from './lib/setext-underline.js'\nexport {thematicBreak} from './lib/thematic-break.js'\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Point} Point\n */\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n\n  let open\n  /** @type {Token} */\n\n  let group\n  /** @type {Token} */\n\n  let text\n  /** @type {Token} */\n\n  let openingSequence\n  /** @type {Token} */\n\n  let closingSequence\n  /** @type {number} */\n\n  let use\n  /** @type {Event[]} */\n\n  let nextEvents\n  /** @type {number} */\n\n  let offset // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it\u2019s\n  // a bottleneck for malicious stuff.\n\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index // Now walk back to find an opener.\n\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open && // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don\u2019t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          } // Number of markers to use from the sequence.\n\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = [] // If there are more markers in the opening, add them before.\n\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          } // Opening.\n\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ]) // Between.\n\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          ) // Closing.\n\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ]) // If there are more markers in the closing, add them after.\n\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  } // Remove remaining sequences.\n\n  index = -1\n\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('attentionSequence')\n    marker = code\n    return sequence(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return sequence\n    }\n\n    const token = effects.exit('attentionSequence')\n    const after = classifyCharacter(code)\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It\u2019s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {void}\n */\n\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n", "/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n\n/**\n * Classify whether a character code represents whitespace, punctuation, or\n * something else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * Note that eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n * @returns {number|undefined}\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {{resolveAll?: Resolver}[]} constructs\n * @param {Event[]} events\n * @param {TokenizeContext} context\n * @returns {Event[]}\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Resolver[]} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 1\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n\n    return asciiAtext(code) ? emailAtext(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function schemeOrEmailAtext(code) {\n    return code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)\n      ? schemeInsideOrEmailAtext(code)\n      : emailAtext(code)\n  }\n  /** @type {State} */\n\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return urlInside\n    }\n\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n\n    return emailAtext(code)\n  }\n  /** @type {State} */\n\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      return end(code)\n    }\n\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return urlInside\n  }\n  /** @type {State} */\n\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (code === 62) {\n      // Exit, then change the type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      return end(code)\n    }\n\n    return emailValue(code)\n  }\n  /** @type {State} */\n\n  function emailValue(code) {\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      effects.consume(code)\n      return code === 45 ? emailValue : emailLabel\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.exit('autolink')\n    return ok\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return factorySpace(effects, afterWhitespace, 'linePrefix')\n  /** @type {State} */\n\n  function afterWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(blockQuote, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n/** @type {Exiter} */\n\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {asciiPunctuation} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n\n  let max\n  /** @type {(code: Code) => code is number} */\n\n  let test\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n  /** @type {State} */\n\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n  /** @type {State} */\n\n  function value(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === 59 && size) {\n      token = effects.exit('characterReferenceValue')\n\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n\n    return nok(code)\n  }\n}\n", "import {characterEntities} from 'character-entities'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Decode a single character reference (without the `&` or `;`).\n * You probably only need this when you\u2019re building parsers yourself that follow\n * different rules compared to HTML.\n * This is optimized to be tiny in browsers.\n *\n * @param {string} value\n *   `notin` (named), `#123` (deci), `#x123` (hexa).\n * @returns {string|false}\n *   Decoded reference.\n */\nexport function decodeNamedCharacterReference(value) {\n  return own.call(characterEntities, value) ? characterEntities[value] : false\n}\n", "/**\n * Map of named character references.\n *\n * @type {Record<string, string>}\n */\nexport const characterEntities = {\n  AElig: '\u00C6',\n  AMP: '&',\n  Aacute: '\u00C1',\n  Abreve: '\u0102',\n  Acirc: '\u00C2',\n  Acy: '\u0410',\n  Afr: '\uD835\uDD04',\n  Agrave: '\u00C0',\n  Alpha: '\u0391',\n  Amacr: '\u0100',\n  And: '\u2A53',\n  Aogon: '\u0104',\n  Aopf: '\uD835\uDD38',\n  ApplyFunction: '\u2061',\n  Aring: '\u00C5',\n  Ascr: '\uD835\uDC9C',\n  Assign: '\u2254',\n  Atilde: '\u00C3',\n  Auml: '\u00C4',\n  Backslash: '\u2216',\n  Barv: '\u2AE7',\n  Barwed: '\u2306',\n  Bcy: '\u0411',\n  Because: '\u2235',\n  Bernoullis: '\u212C',\n  Beta: '\u0392',\n  Bfr: '\uD835\uDD05',\n  Bopf: '\uD835\uDD39',\n  Breve: '\u02D8',\n  Bscr: '\u212C',\n  Bumpeq: '\u224E',\n  CHcy: '\u0427',\n  COPY: '\u00A9',\n  Cacute: '\u0106',\n  Cap: '\u22D2',\n  CapitalDifferentialD: '\u2145',\n  Cayleys: '\u212D',\n  Ccaron: '\u010C',\n  Ccedil: '\u00C7',\n  Ccirc: '\u0108',\n  Cconint: '\u2230',\n  Cdot: '\u010A',\n  Cedilla: '\u00B8',\n  CenterDot: '\u00B7',\n  Cfr: '\u212D',\n  Chi: '\u03A7',\n  CircleDot: '\u2299',\n  CircleMinus: '\u2296',\n  CirclePlus: '\u2295',\n  CircleTimes: '\u2297',\n  ClockwiseContourIntegral: '\u2232',\n  CloseCurlyDoubleQuote: '\u201D',\n  CloseCurlyQuote: '\u2019',\n  Colon: '\u2237',\n  Colone: '\u2A74',\n  Congruent: '\u2261',\n  Conint: '\u222F',\n  ContourIntegral: '\u222E',\n  Copf: '\u2102',\n  Coproduct: '\u2210',\n  CounterClockwiseContourIntegral: '\u2233',\n  Cross: '\u2A2F',\n  Cscr: '\uD835\uDC9E',\n  Cup: '\u22D3',\n  CupCap: '\u224D',\n  DD: '\u2145',\n  DDotrahd: '\u2911',\n  DJcy: '\u0402',\n  DScy: '\u0405',\n  DZcy: '\u040F',\n  Dagger: '\u2021',\n  Darr: '\u21A1',\n  Dashv: '\u2AE4',\n  Dcaron: '\u010E',\n  Dcy: '\u0414',\n  Del: '\u2207',\n  Delta: '\u0394',\n  Dfr: '\uD835\uDD07',\n  DiacriticalAcute: '\u00B4',\n  DiacriticalDot: '\u02D9',\n  DiacriticalDoubleAcute: '\u02DD',\n  DiacriticalGrave: '`',\n  DiacriticalTilde: '\u02DC',\n  Diamond: '\u22C4',\n  DifferentialD: '\u2146',\n  Dopf: '\uD835\uDD3B',\n  Dot: '\u00A8',\n  DotDot: '\u20DC',\n  DotEqual: '\u2250',\n  DoubleContourIntegral: '\u222F',\n  DoubleDot: '\u00A8',\n  DoubleDownArrow: '\u21D3',\n  DoubleLeftArrow: '\u21D0',\n  DoubleLeftRightArrow: '\u21D4',\n  DoubleLeftTee: '\u2AE4',\n  DoubleLongLeftArrow: '\u27F8',\n  DoubleLongLeftRightArrow: '\u27FA',\n  DoubleLongRightArrow: '\u27F9',\n  DoubleRightArrow: '\u21D2',\n  DoubleRightTee: '\u22A8',\n  DoubleUpArrow: '\u21D1',\n  DoubleUpDownArrow: '\u21D5',\n  DoubleVerticalBar: '\u2225',\n  DownArrow: '\u2193',\n  DownArrowBar: '\u2913',\n  DownArrowUpArrow: '\u21F5',\n  DownBreve: '\u0311',\n  DownLeftRightVector: '\u2950',\n  DownLeftTeeVector: '\u295E',\n  DownLeftVector: '\u21BD',\n  DownLeftVectorBar: '\u2956',\n  DownRightTeeVector: '\u295F',\n  DownRightVector: '\u21C1',\n  DownRightVectorBar: '\u2957',\n  DownTee: '\u22A4',\n  DownTeeArrow: '\u21A7',\n  Downarrow: '\u21D3',\n  Dscr: '\uD835\uDC9F',\n  Dstrok: '\u0110',\n  ENG: '\u014A',\n  ETH: '\u00D0',\n  Eacute: '\u00C9',\n  Ecaron: '\u011A',\n  Ecirc: '\u00CA',\n  Ecy: '\u042D',\n  Edot: '\u0116',\n  Efr: '\uD835\uDD08',\n  Egrave: '\u00C8',\n  Element: '\u2208',\n  Emacr: '\u0112',\n  EmptySmallSquare: '\u25FB',\n  EmptyVerySmallSquare: '\u25AB',\n  Eogon: '\u0118',\n  Eopf: '\uD835\uDD3C',\n  Epsilon: '\u0395',\n  Equal: '\u2A75',\n  EqualTilde: '\u2242',\n  Equilibrium: '\u21CC',\n  Escr: '\u2130',\n  Esim: '\u2A73',\n  Eta: '\u0397',\n  Euml: '\u00CB',\n  Exists: '\u2203',\n  ExponentialE: '\u2147',\n  Fcy: '\u0424',\n  Ffr: '\uD835\uDD09',\n  FilledSmallSquare: '\u25FC',\n  FilledVerySmallSquare: '\u25AA',\n  Fopf: '\uD835\uDD3D',\n  ForAll: '\u2200',\n  Fouriertrf: '\u2131',\n  Fscr: '\u2131',\n  GJcy: '\u0403',\n  GT: '>',\n  Gamma: '\u0393',\n  Gammad: '\u03DC',\n  Gbreve: '\u011E',\n  Gcedil: '\u0122',\n  Gcirc: '\u011C',\n  Gcy: '\u0413',\n  Gdot: '\u0120',\n  Gfr: '\uD835\uDD0A',\n  Gg: '\u22D9',\n  Gopf: '\uD835\uDD3E',\n  GreaterEqual: '\u2265',\n  GreaterEqualLess: '\u22DB',\n  GreaterFullEqual: '\u2267',\n  GreaterGreater: '\u2AA2',\n  GreaterLess: '\u2277',\n  GreaterSlantEqual: '\u2A7E',\n  GreaterTilde: '\u2273',\n  Gscr: '\uD835\uDCA2',\n  Gt: '\u226B',\n  HARDcy: '\u042A',\n  Hacek: '\u02C7',\n  Hat: '^',\n  Hcirc: '\u0124',\n  Hfr: '\u210C',\n  HilbertSpace: '\u210B',\n  Hopf: '\u210D',\n  HorizontalLine: '\u2500',\n  Hscr: '\u210B',\n  Hstrok: '\u0126',\n  HumpDownHump: '\u224E',\n  HumpEqual: '\u224F',\n  IEcy: '\u0415',\n  IJlig: '\u0132',\n  IOcy: '\u0401',\n  Iacute: '\u00CD',\n  Icirc: '\u00CE',\n  Icy: '\u0418',\n  Idot: '\u0130',\n  Ifr: '\u2111',\n  Igrave: '\u00CC',\n  Im: '\u2111',\n  Imacr: '\u012A',\n  ImaginaryI: '\u2148',\n  Implies: '\u21D2',\n  Int: '\u222C',\n  Integral: '\u222B',\n  Intersection: '\u22C2',\n  InvisibleComma: '\u2063',\n  InvisibleTimes: '\u2062',\n  Iogon: '\u012E',\n  Iopf: '\uD835\uDD40',\n  Iota: '\u0399',\n  Iscr: '\u2110',\n  Itilde: '\u0128',\n  Iukcy: '\u0406',\n  Iuml: '\u00CF',\n  Jcirc: '\u0134',\n  Jcy: '\u0419',\n  Jfr: '\uD835\uDD0D',\n  Jopf: '\uD835\uDD41',\n  Jscr: '\uD835\uDCA5',\n  Jsercy: '\u0408',\n  Jukcy: '\u0404',\n  KHcy: '\u0425',\n  KJcy: '\u040C',\n  Kappa: '\u039A',\n  Kcedil: '\u0136',\n  Kcy: '\u041A',\n  Kfr: '\uD835\uDD0E',\n  Kopf: '\uD835\uDD42',\n  Kscr: '\uD835\uDCA6',\n  LJcy: '\u0409',\n  LT: '<',\n  Lacute: '\u0139',\n  Lambda: '\u039B',\n  Lang: '\u27EA',\n  Laplacetrf: '\u2112',\n  Larr: '\u219E',\n  Lcaron: '\u013D',\n  Lcedil: '\u013B',\n  Lcy: '\u041B',\n  LeftAngleBracket: '\u27E8',\n  LeftArrow: '\u2190',\n  LeftArrowBar: '\u21E4',\n  LeftArrowRightArrow: '\u21C6',\n  LeftCeiling: '\u2308',\n  LeftDoubleBracket: '\u27E6',\n  LeftDownTeeVector: '\u2961',\n  LeftDownVector: '\u21C3',\n  LeftDownVectorBar: '\u2959',\n  LeftFloor: '\u230A',\n  LeftRightArrow: '\u2194',\n  LeftRightVector: '\u294E',\n  LeftTee: '\u22A3',\n  LeftTeeArrow: '\u21A4',\n  LeftTeeVector: '\u295A',\n  LeftTriangle: '\u22B2',\n  LeftTriangleBar: '\u29CF',\n  LeftTriangleEqual: '\u22B4',\n  LeftUpDownVector: '\u2951',\n  LeftUpTeeVector: '\u2960',\n  LeftUpVector: '\u21BF',\n  LeftUpVectorBar: '\u2958',\n  LeftVector: '\u21BC',\n  LeftVectorBar: '\u2952',\n  Leftarrow: '\u21D0',\n  Leftrightarrow: '\u21D4',\n  LessEqualGreater: '\u22DA',\n  LessFullEqual: '\u2266',\n  LessGreater: '\u2276',\n  LessLess: '\u2AA1',\n  LessSlantEqual: '\u2A7D',\n  LessTilde: '\u2272',\n  Lfr: '\uD835\uDD0F',\n  Ll: '\u22D8',\n  Lleftarrow: '\u21DA',\n  Lmidot: '\u013F',\n  LongLeftArrow: '\u27F5',\n  LongLeftRightArrow: '\u27F7',\n  LongRightArrow: '\u27F6',\n  Longleftarrow: '\u27F8',\n  Longleftrightarrow: '\u27FA',\n  Longrightarrow: '\u27F9',\n  Lopf: '\uD835\uDD43',\n  LowerLeftArrow: '\u2199',\n  LowerRightArrow: '\u2198',\n  Lscr: '\u2112',\n  Lsh: '\u21B0',\n  Lstrok: '\u0141',\n  Lt: '\u226A',\n  Map: '\u2905',\n  Mcy: '\u041C',\n  MediumSpace: '\u205F',\n  Mellintrf: '\u2133',\n  Mfr: '\uD835\uDD10',\n  MinusPlus: '\u2213',\n  Mopf: '\uD835\uDD44',\n  Mscr: '\u2133',\n  Mu: '\u039C',\n  NJcy: '\u040A',\n  Nacute: '\u0143',\n  Ncaron: '\u0147',\n  Ncedil: '\u0145',\n  Ncy: '\u041D',\n  NegativeMediumSpace: '\u200B',\n  NegativeThickSpace: '\u200B',\n  NegativeThinSpace: '\u200B',\n  NegativeVeryThinSpace: '\u200B',\n  NestedGreaterGreater: '\u226B',\n  NestedLessLess: '\u226A',\n  NewLine: '\\n',\n  Nfr: '\uD835\uDD11',\n  NoBreak: '\u2060',\n  NonBreakingSpace: '\u00A0',\n  Nopf: '\u2115',\n  Not: '\u2AEC',\n  NotCongruent: '\u2262',\n  NotCupCap: '\u226D',\n  NotDoubleVerticalBar: '\u2226',\n  NotElement: '\u2209',\n  NotEqual: '\u2260',\n  NotEqualTilde: '\u2242\u0338',\n  NotExists: '\u2204',\n  NotGreater: '\u226F',\n  NotGreaterEqual: '\u2271',\n  NotGreaterFullEqual: '\u2267\u0338',\n  NotGreaterGreater: '\u226B\u0338',\n  NotGreaterLess: '\u2279',\n  NotGreaterSlantEqual: '\u2A7E\u0338',\n  NotGreaterTilde: '\u2275',\n  NotHumpDownHump: '\u224E\u0338',\n  NotHumpEqual: '\u224F\u0338',\n  NotLeftTriangle: '\u22EA',\n  NotLeftTriangleBar: '\u29CF\u0338',\n  NotLeftTriangleEqual: '\u22EC',\n  NotLess: '\u226E',\n  NotLessEqual: '\u2270',\n  NotLessGreater: '\u2278',\n  NotLessLess: '\u226A\u0338',\n  NotLessSlantEqual: '\u2A7D\u0338',\n  NotLessTilde: '\u2274',\n  NotNestedGreaterGreater: '\u2AA2\u0338',\n  NotNestedLessLess: '\u2AA1\u0338',\n  NotPrecedes: '\u2280',\n  NotPrecedesEqual: '\u2AAF\u0338',\n  NotPrecedesSlantEqual: '\u22E0',\n  NotReverseElement: '\u220C',\n  NotRightTriangle: '\u22EB',\n  NotRightTriangleBar: '\u29D0\u0338',\n  NotRightTriangleEqual: '\u22ED',\n  NotSquareSubset: '\u228F\u0338',\n  NotSquareSubsetEqual: '\u22E2',\n  NotSquareSuperset: '\u2290\u0338',\n  NotSquareSupersetEqual: '\u22E3',\n  NotSubset: '\u2282\u20D2',\n  NotSubsetEqual: '\u2288',\n  NotSucceeds: '\u2281',\n  NotSucceedsEqual: '\u2AB0\u0338',\n  NotSucceedsSlantEqual: '\u22E1',\n  NotSucceedsTilde: '\u227F\u0338',\n  NotSuperset: '\u2283\u20D2',\n  NotSupersetEqual: '\u2289',\n  NotTilde: '\u2241',\n  NotTildeEqual: '\u2244',\n  NotTildeFullEqual: '\u2247',\n  NotTildeTilde: '\u2249',\n  NotVerticalBar: '\u2224',\n  Nscr: '\uD835\uDCA9',\n  Ntilde: '\u00D1',\n  Nu: '\u039D',\n  OElig: '\u0152',\n  Oacute: '\u00D3',\n  Ocirc: '\u00D4',\n  Ocy: '\u041E',\n  Odblac: '\u0150',\n  Ofr: '\uD835\uDD12',\n  Ograve: '\u00D2',\n  Omacr: '\u014C',\n  Omega: '\u03A9',\n  Omicron: '\u039F',\n  Oopf: '\uD835\uDD46',\n  OpenCurlyDoubleQuote: '\u201C',\n  OpenCurlyQuote: '\u2018',\n  Or: '\u2A54',\n  Oscr: '\uD835\uDCAA',\n  Oslash: '\u00D8',\n  Otilde: '\u00D5',\n  Otimes: '\u2A37',\n  Ouml: '\u00D6',\n  OverBar: '\u203E',\n  OverBrace: '\u23DE',\n  OverBracket: '\u23B4',\n  OverParenthesis: '\u23DC',\n  PartialD: '\u2202',\n  Pcy: '\u041F',\n  Pfr: '\uD835\uDD13',\n  Phi: '\u03A6',\n  Pi: '\u03A0',\n  PlusMinus: '\u00B1',\n  Poincareplane: '\u210C',\n  Popf: '\u2119',\n  Pr: '\u2ABB',\n  Precedes: '\u227A',\n  PrecedesEqual: '\u2AAF',\n  PrecedesSlantEqual: '\u227C',\n  PrecedesTilde: '\u227E',\n  Prime: '\u2033',\n  Product: '\u220F',\n  Proportion: '\u2237',\n  Proportional: '\u221D',\n  Pscr: '\uD835\uDCAB',\n  Psi: '\u03A8',\n  QUOT: '\"',\n  Qfr: '\uD835\uDD14',\n  Qopf: '\u211A',\n  Qscr: '\uD835\uDCAC',\n  RBarr: '\u2910',\n  REG: '\u00AE',\n  Racute: '\u0154',\n  Rang: '\u27EB',\n  Rarr: '\u21A0',\n  Rarrtl: '\u2916',\n  Rcaron: '\u0158',\n  Rcedil: '\u0156',\n  Rcy: '\u0420',\n  Re: '\u211C',\n  ReverseElement: '\u220B',\n  ReverseEquilibrium: '\u21CB',\n  ReverseUpEquilibrium: '\u296F',\n  Rfr: '\u211C',\n  Rho: '\u03A1',\n  RightAngleBracket: '\u27E9',\n  RightArrow: '\u2192',\n  RightArrowBar: '\u21E5',\n  RightArrowLeftArrow: '\u21C4',\n  RightCeiling: '\u2309',\n  RightDoubleBracket: '\u27E7',\n  RightDownTeeVector: '\u295D',\n  RightDownVector: '\u21C2',\n  RightDownVectorBar: '\u2955',\n  RightFloor: '\u230B',\n  RightTee: '\u22A2',\n  RightTeeArrow: '\u21A6',\n  RightTeeVector: '\u295B',\n  RightTriangle: '\u22B3',\n  RightTriangleBar: '\u29D0',\n  RightTriangleEqual: '\u22B5',\n  RightUpDownVector: '\u294F',\n  RightUpTeeVector: '\u295C',\n  RightUpVector: '\u21BE',\n  RightUpVectorBar: '\u2954',\n  RightVector: '\u21C0',\n  RightVectorBar: '\u2953',\n  Rightarrow: '\u21D2',\n  Ropf: '\u211D',\n  RoundImplies: '\u2970',\n  Rrightarrow: '\u21DB',\n  Rscr: '\u211B',\n  Rsh: '\u21B1',\n  RuleDelayed: '\u29F4',\n  SHCHcy: '\u0429',\n  SHcy: '\u0428',\n  SOFTcy: '\u042C',\n  Sacute: '\u015A',\n  Sc: '\u2ABC',\n  Scaron: '\u0160',\n  Scedil: '\u015E',\n  Scirc: '\u015C',\n  Scy: '\u0421',\n  Sfr: '\uD835\uDD16',\n  ShortDownArrow: '\u2193',\n  ShortLeftArrow: '\u2190',\n  ShortRightArrow: '\u2192',\n  ShortUpArrow: '\u2191',\n  Sigma: '\u03A3',\n  SmallCircle: '\u2218',\n  Sopf: '\uD835\uDD4A',\n  Sqrt: '\u221A',\n  Square: '\u25A1',\n  SquareIntersection: '\u2293',\n  SquareSubset: '\u228F',\n  SquareSubsetEqual: '\u2291',\n  SquareSuperset: '\u2290',\n  SquareSupersetEqual: '\u2292',\n  SquareUnion: '\u2294',\n  Sscr: '\uD835\uDCAE',\n  Star: '\u22C6',\n  Sub: '\u22D0',\n  Subset: '\u22D0',\n  SubsetEqual: '\u2286',\n  Succeeds: '\u227B',\n  SucceedsEqual: '\u2AB0',\n  SucceedsSlantEqual: '\u227D',\n  SucceedsTilde: '\u227F',\n  SuchThat: '\u220B',\n  Sum: '\u2211',\n  Sup: '\u22D1',\n  Superset: '\u2283',\n  SupersetEqual: '\u2287',\n  Supset: '\u22D1',\n  THORN: '\u00DE',\n  TRADE: '\u2122',\n  TSHcy: '\u040B',\n  TScy: '\u0426',\n  Tab: '\\t',\n  Tau: '\u03A4',\n  Tcaron: '\u0164',\n  Tcedil: '\u0162',\n  Tcy: '\u0422',\n  Tfr: '\uD835\uDD17',\n  Therefore: '\u2234',\n  Theta: '\u0398',\n  ThickSpace: '\u205F\u200A',\n  ThinSpace: '\u2009',\n  Tilde: '\u223C',\n  TildeEqual: '\u2243',\n  TildeFullEqual: '\u2245',\n  TildeTilde: '\u2248',\n  Topf: '\uD835\uDD4B',\n  TripleDot: '\u20DB',\n  Tscr: '\uD835\uDCAF',\n  Tstrok: '\u0166',\n  Uacute: '\u00DA',\n  Uarr: '\u219F',\n  Uarrocir: '\u2949',\n  Ubrcy: '\u040E',\n  Ubreve: '\u016C',\n  Ucirc: '\u00DB',\n  Ucy: '\u0423',\n  Udblac: '\u0170',\n  Ufr: '\uD835\uDD18',\n  Ugrave: '\u00D9',\n  Umacr: '\u016A',\n  UnderBar: '_',\n  UnderBrace: '\u23DF',\n  UnderBracket: '\u23B5',\n  UnderParenthesis: '\u23DD',\n  Union: '\u22C3',\n  UnionPlus: '\u228E',\n  Uogon: '\u0172',\n  Uopf: '\uD835\uDD4C',\n  UpArrow: '\u2191',\n  UpArrowBar: '\u2912',\n  UpArrowDownArrow: '\u21C5',\n  UpDownArrow: '\u2195',\n  UpEquilibrium: '\u296E',\n  UpTee: '\u22A5',\n  UpTeeArrow: '\u21A5',\n  Uparrow: '\u21D1',\n  Updownarrow: '\u21D5',\n  UpperLeftArrow: '\u2196',\n  UpperRightArrow: '\u2197',\n  Upsi: '\u03D2',\n  Upsilon: '\u03A5',\n  Uring: '\u016E',\n  Uscr: '\uD835\uDCB0',\n  Utilde: '\u0168',\n  Uuml: '\u00DC',\n  VDash: '\u22AB',\n  Vbar: '\u2AEB',\n  Vcy: '\u0412',\n  Vdash: '\u22A9',\n  Vdashl: '\u2AE6',\n  Vee: '\u22C1',\n  Verbar: '\u2016',\n  Vert: '\u2016',\n  VerticalBar: '\u2223',\n  VerticalLine: '|',\n  VerticalSeparator: '\u2758',\n  VerticalTilde: '\u2240',\n  VeryThinSpace: '\u200A',\n  Vfr: '\uD835\uDD19',\n  Vopf: '\uD835\uDD4D',\n  Vscr: '\uD835\uDCB1',\n  Vvdash: '\u22AA',\n  Wcirc: '\u0174',\n  Wedge: '\u22C0',\n  Wfr: '\uD835\uDD1A',\n  Wopf: '\uD835\uDD4E',\n  Wscr: '\uD835\uDCB2',\n  Xfr: '\uD835\uDD1B',\n  Xi: '\u039E',\n  Xopf: '\uD835\uDD4F',\n  Xscr: '\uD835\uDCB3',\n  YAcy: '\u042F',\n  YIcy: '\u0407',\n  YUcy: '\u042E',\n  Yacute: '\u00DD',\n  Ycirc: '\u0176',\n  Ycy: '\u042B',\n  Yfr: '\uD835\uDD1C',\n  Yopf: '\uD835\uDD50',\n  Yscr: '\uD835\uDCB4',\n  Yuml: '\u0178',\n  ZHcy: '\u0416',\n  Zacute: '\u0179',\n  Zcaron: '\u017D',\n  Zcy: '\u0417',\n  Zdot: '\u017B',\n  ZeroWidthSpace: '\u200B',\n  Zeta: '\u0396',\n  Zfr: '\u2128',\n  Zopf: '\u2124',\n  Zscr: '\uD835\uDCB5',\n  aacute: '\u00E1',\n  abreve: '\u0103',\n  ac: '\u223E',\n  acE: '\u223E\u0333',\n  acd: '\u223F',\n  acirc: '\u00E2',\n  acute: '\u00B4',\n  acy: '\u0430',\n  aelig: '\u00E6',\n  af: '\u2061',\n  afr: '\uD835\uDD1E',\n  agrave: '\u00E0',\n  alefsym: '\u2135',\n  aleph: '\u2135',\n  alpha: '\u03B1',\n  amacr: '\u0101',\n  amalg: '\u2A3F',\n  amp: '&',\n  and: '\u2227',\n  andand: '\u2A55',\n  andd: '\u2A5C',\n  andslope: '\u2A58',\n  andv: '\u2A5A',\n  ang: '\u2220',\n  ange: '\u29A4',\n  angle: '\u2220',\n  angmsd: '\u2221',\n  angmsdaa: '\u29A8',\n  angmsdab: '\u29A9',\n  angmsdac: '\u29AA',\n  angmsdad: '\u29AB',\n  angmsdae: '\u29AC',\n  angmsdaf: '\u29AD',\n  angmsdag: '\u29AE',\n  angmsdah: '\u29AF',\n  angrt: '\u221F',\n  angrtvb: '\u22BE',\n  angrtvbd: '\u299D',\n  angsph: '\u2222',\n  angst: '\u00C5',\n  angzarr: '\u237C',\n  aogon: '\u0105',\n  aopf: '\uD835\uDD52',\n  ap: '\u2248',\n  apE: '\u2A70',\n  apacir: '\u2A6F',\n  ape: '\u224A',\n  apid: '\u224B',\n  apos: \"'\",\n  approx: '\u2248',\n  approxeq: '\u224A',\n  aring: '\u00E5',\n  ascr: '\uD835\uDCB6',\n  ast: '*',\n  asymp: '\u2248',\n  asympeq: '\u224D',\n  atilde: '\u00E3',\n  auml: '\u00E4',\n  awconint: '\u2233',\n  awint: '\u2A11',\n  bNot: '\u2AED',\n  backcong: '\u224C',\n  backepsilon: '\u03F6',\n  backprime: '\u2035',\n  backsim: '\u223D',\n  backsimeq: '\u22CD',\n  barvee: '\u22BD',\n  barwed: '\u2305',\n  barwedge: '\u2305',\n  bbrk: '\u23B5',\n  bbrktbrk: '\u23B6',\n  bcong: '\u224C',\n  bcy: '\u0431',\n  bdquo: '\u201E',\n  becaus: '\u2235',\n  because: '\u2235',\n  bemptyv: '\u29B0',\n  bepsi: '\u03F6',\n  bernou: '\u212C',\n  beta: '\u03B2',\n  beth: '\u2136',\n  between: '\u226C',\n  bfr: '\uD835\uDD1F',\n  bigcap: '\u22C2',\n  bigcirc: '\u25EF',\n  bigcup: '\u22C3',\n  bigodot: '\u2A00',\n  bigoplus: '\u2A01',\n  bigotimes: '\u2A02',\n  bigsqcup: '\u2A06',\n  bigstar: '\u2605',\n  bigtriangledown: '\u25BD',\n  bigtriangleup: '\u25B3',\n  biguplus: '\u2A04',\n  bigvee: '\u22C1',\n  bigwedge: '\u22C0',\n  bkarow: '\u290D',\n  blacklozenge: '\u29EB',\n  blacksquare: '\u25AA',\n  blacktriangle: '\u25B4',\n  blacktriangledown: '\u25BE',\n  blacktriangleleft: '\u25C2',\n  blacktriangleright: '\u25B8',\n  blank: '\u2423',\n  blk12: '\u2592',\n  blk14: '\u2591',\n  blk34: '\u2593',\n  block: '\u2588',\n  bne: '=\u20E5',\n  bnequiv: '\u2261\u20E5',\n  bnot: '\u2310',\n  bopf: '\uD835\uDD53',\n  bot: '\u22A5',\n  bottom: '\u22A5',\n  bowtie: '\u22C8',\n  boxDL: '\u2557',\n  boxDR: '\u2554',\n  boxDl: '\u2556',\n  boxDr: '\u2553',\n  boxH: '\u2550',\n  boxHD: '\u2566',\n  boxHU: '\u2569',\n  boxHd: '\u2564',\n  boxHu: '\u2567',\n  boxUL: '\u255D',\n  boxUR: '\u255A',\n  boxUl: '\u255C',\n  boxUr: '\u2559',\n  boxV: '\u2551',\n  boxVH: '\u256C',\n  boxVL: '\u2563',\n  boxVR: '\u2560',\n  boxVh: '\u256B',\n  boxVl: '\u2562',\n  boxVr: '\u255F',\n  boxbox: '\u29C9',\n  boxdL: '\u2555',\n  boxdR: '\u2552',\n  boxdl: '\u2510',\n  boxdr: '\u250C',\n  boxh: '\u2500',\n  boxhD: '\u2565',\n  boxhU: '\u2568',\n  boxhd: '\u252C',\n  boxhu: '\u2534',\n  boxminus: '\u229F',\n  boxplus: '\u229E',\n  boxtimes: '\u22A0',\n  boxuL: '\u255B',\n  boxuR: '\u2558',\n  boxul: '\u2518',\n  boxur: '\u2514',\n  boxv: '\u2502',\n  boxvH: '\u256A',\n  boxvL: '\u2561',\n  boxvR: '\u255E',\n  boxvh: '\u253C',\n  boxvl: '\u2524',\n  boxvr: '\u251C',\n  bprime: '\u2035',\n  breve: '\u02D8',\n  brvbar: '\u00A6',\n  bscr: '\uD835\uDCB7',\n  bsemi: '\u204F',\n  bsim: '\u223D',\n  bsime: '\u22CD',\n  bsol: '\\\\',\n  bsolb: '\u29C5',\n  bsolhsub: '\u27C8',\n  bull: '\u2022',\n  bullet: '\u2022',\n  bump: '\u224E',\n  bumpE: '\u2AAE',\n  bumpe: '\u224F',\n  bumpeq: '\u224F',\n  cacute: '\u0107',\n  cap: '\u2229',\n  capand: '\u2A44',\n  capbrcup: '\u2A49',\n  capcap: '\u2A4B',\n  capcup: '\u2A47',\n  capdot: '\u2A40',\n  caps: '\u2229\uFE00',\n  caret: '\u2041',\n  caron: '\u02C7',\n  ccaps: '\u2A4D',\n  ccaron: '\u010D',\n  ccedil: '\u00E7',\n  ccirc: '\u0109',\n  ccups: '\u2A4C',\n  ccupssm: '\u2A50',\n  cdot: '\u010B',\n  cedil: '\u00B8',\n  cemptyv: '\u29B2',\n  cent: '\u00A2',\n  centerdot: '\u00B7',\n  cfr: '\uD835\uDD20',\n  chcy: '\u0447',\n  check: '\u2713',\n  checkmark: '\u2713',\n  chi: '\u03C7',\n  cir: '\u25CB',\n  cirE: '\u29C3',\n  circ: '\u02C6',\n  circeq: '\u2257',\n  circlearrowleft: '\u21BA',\n  circlearrowright: '\u21BB',\n  circledR: '\u00AE',\n  circledS: '\u24C8',\n  circledast: '\u229B',\n  circledcirc: '\u229A',\n  circleddash: '\u229D',\n  cire: '\u2257',\n  cirfnint: '\u2A10',\n  cirmid: '\u2AEF',\n  cirscir: '\u29C2',\n  clubs: '\u2663',\n  clubsuit: '\u2663',\n  colon: ':',\n  colone: '\u2254',\n  coloneq: '\u2254',\n  comma: ',',\n  commat: '@',\n  comp: '\u2201',\n  compfn: '\u2218',\n  complement: '\u2201',\n  complexes: '\u2102',\n  cong: '\u2245',\n  congdot: '\u2A6D',\n  conint: '\u222E',\n  copf: '\uD835\uDD54',\n  coprod: '\u2210',\n  copy: '\u00A9',\n  copysr: '\u2117',\n  crarr: '\u21B5',\n  cross: '\u2717',\n  cscr: '\uD835\uDCB8',\n  csub: '\u2ACF',\n  csube: '\u2AD1',\n  csup: '\u2AD0',\n  csupe: '\u2AD2',\n  ctdot: '\u22EF',\n  cudarrl: '\u2938',\n  cudarrr: '\u2935',\n  cuepr: '\u22DE',\n  cuesc: '\u22DF',\n  cularr: '\u21B6',\n  cularrp: '\u293D',\n  cup: '\u222A',\n  cupbrcap: '\u2A48',\n  cupcap: '\u2A46',\n  cupcup: '\u2A4A',\n  cupdot: '\u228D',\n  cupor: '\u2A45',\n  cups: '\u222A\uFE00',\n  curarr: '\u21B7',\n  curarrm: '\u293C',\n  curlyeqprec: '\u22DE',\n  curlyeqsucc: '\u22DF',\n  curlyvee: '\u22CE',\n  curlywedge: '\u22CF',\n  curren: '\u00A4',\n  curvearrowleft: '\u21B6',\n  curvearrowright: '\u21B7',\n  cuvee: '\u22CE',\n  cuwed: '\u22CF',\n  cwconint: '\u2232',\n  cwint: '\u2231',\n  cylcty: '\u232D',\n  dArr: '\u21D3',\n  dHar: '\u2965',\n  dagger: '\u2020',\n  daleth: '\u2138',\n  darr: '\u2193',\n  dash: '\u2010',\n  dashv: '\u22A3',\n  dbkarow: '\u290F',\n  dblac: '\u02DD',\n  dcaron: '\u010F',\n  dcy: '\u0434',\n  dd: '\u2146',\n  ddagger: '\u2021',\n  ddarr: '\u21CA',\n  ddotseq: '\u2A77',\n  deg: '\u00B0',\n  delta: '\u03B4',\n  demptyv: '\u29B1',\n  dfisht: '\u297F',\n  dfr: '\uD835\uDD21',\n  dharl: '\u21C3',\n  dharr: '\u21C2',\n  diam: '\u22C4',\n  diamond: '\u22C4',\n  diamondsuit: '\u2666',\n  diams: '\u2666',\n  die: '\u00A8',\n  digamma: '\u03DD',\n  disin: '\u22F2',\n  div: '\u00F7',\n  divide: '\u00F7',\n  divideontimes: '\u22C7',\n  divonx: '\u22C7',\n  djcy: '\u0452',\n  dlcorn: '\u231E',\n  dlcrop: '\u230D',\n  dollar: '$',\n  dopf: '\uD835\uDD55',\n  dot: '\u02D9',\n  doteq: '\u2250',\n  doteqdot: '\u2251',\n  dotminus: '\u2238',\n  dotplus: '\u2214',\n  dotsquare: '\u22A1',\n  doublebarwedge: '\u2306',\n  downarrow: '\u2193',\n  downdownarrows: '\u21CA',\n  downharpoonleft: '\u21C3',\n  downharpoonright: '\u21C2',\n  drbkarow: '\u2910',\n  drcorn: '\u231F',\n  drcrop: '\u230C',\n  dscr: '\uD835\uDCB9',\n  dscy: '\u0455',\n  dsol: '\u29F6',\n  dstrok: '\u0111',\n  dtdot: '\u22F1',\n  dtri: '\u25BF',\n  dtrif: '\u25BE',\n  duarr: '\u21F5',\n  duhar: '\u296F',\n  dwangle: '\u29A6',\n  dzcy: '\u045F',\n  dzigrarr: '\u27FF',\n  eDDot: '\u2A77',\n  eDot: '\u2251',\n  eacute: '\u00E9',\n  easter: '\u2A6E',\n  ecaron: '\u011B',\n  ecir: '\u2256',\n  ecirc: '\u00EA',\n  ecolon: '\u2255',\n  ecy: '\u044D',\n  edot: '\u0117',\n  ee: '\u2147',\n  efDot: '\u2252',\n  efr: '\uD835\uDD22',\n  eg: '\u2A9A',\n  egrave: '\u00E8',\n  egs: '\u2A96',\n  egsdot: '\u2A98',\n  el: '\u2A99',\n  elinters: '\u23E7',\n  ell: '\u2113',\n  els: '\u2A95',\n  elsdot: '\u2A97',\n  emacr: '\u0113',\n  empty: '\u2205',\n  emptyset: '\u2205',\n  emptyv: '\u2205',\n  emsp13: '\u2004',\n  emsp14: '\u2005',\n  emsp: '\u2003',\n  eng: '\u014B',\n  ensp: '\u2002',\n  eogon: '\u0119',\n  eopf: '\uD835\uDD56',\n  epar: '\u22D5',\n  eparsl: '\u29E3',\n  eplus: '\u2A71',\n  epsi: '\u03B5',\n  epsilon: '\u03B5',\n  epsiv: '\u03F5',\n  eqcirc: '\u2256',\n  eqcolon: '\u2255',\n  eqsim: '\u2242',\n  eqslantgtr: '\u2A96',\n  eqslantless: '\u2A95',\n  equals: '=',\n  equest: '\u225F',\n  equiv: '\u2261',\n  equivDD: '\u2A78',\n  eqvparsl: '\u29E5',\n  erDot: '\u2253',\n  erarr: '\u2971',\n  escr: '\u212F',\n  esdot: '\u2250',\n  esim: '\u2242',\n  eta: '\u03B7',\n  eth: '\u00F0',\n  euml: '\u00EB',\n  euro: '\u20AC',\n  excl: '!',\n  exist: '\u2203',\n  expectation: '\u2130',\n  exponentiale: '\u2147',\n  fallingdotseq: '\u2252',\n  fcy: '\u0444',\n  female: '\u2640',\n  ffilig: '\uFB03',\n  fflig: '\uFB00',\n  ffllig: '\uFB04',\n  ffr: '\uD835\uDD23',\n  filig: '\uFB01',\n  fjlig: 'fj',\n  flat: '\u266D',\n  fllig: '\uFB02',\n  fltns: '\u25B1',\n  fnof: '\u0192',\n  fopf: '\uD835\uDD57',\n  forall: '\u2200',\n  fork: '\u22D4',\n  forkv: '\u2AD9',\n  fpartint: '\u2A0D',\n  frac12: '\u00BD',\n  frac13: '\u2153',\n  frac14: '\u00BC',\n  frac15: '\u2155',\n  frac16: '\u2159',\n  frac18: '\u215B',\n  frac23: '\u2154',\n  frac25: '\u2156',\n  frac34: '\u00BE',\n  frac35: '\u2157',\n  frac38: '\u215C',\n  frac45: '\u2158',\n  frac56: '\u215A',\n  frac58: '\u215D',\n  frac78: '\u215E',\n  frasl: '\u2044',\n  frown: '\u2322',\n  fscr: '\uD835\uDCBB',\n  gE: '\u2267',\n  gEl: '\u2A8C',\n  gacute: '\u01F5',\n  gamma: '\u03B3',\n  gammad: '\u03DD',\n  gap: '\u2A86',\n  gbreve: '\u011F',\n  gcirc: '\u011D',\n  gcy: '\u0433',\n  gdot: '\u0121',\n  ge: '\u2265',\n  gel: '\u22DB',\n  geq: '\u2265',\n  geqq: '\u2267',\n  geqslant: '\u2A7E',\n  ges: '\u2A7E',\n  gescc: '\u2AA9',\n  gesdot: '\u2A80',\n  gesdoto: '\u2A82',\n  gesdotol: '\u2A84',\n  gesl: '\u22DB\uFE00',\n  gesles: '\u2A94',\n  gfr: '\uD835\uDD24',\n  gg: '\u226B',\n  ggg: '\u22D9',\n  gimel: '\u2137',\n  gjcy: '\u0453',\n  gl: '\u2277',\n  glE: '\u2A92',\n  gla: '\u2AA5',\n  glj: '\u2AA4',\n  gnE: '\u2269',\n  gnap: '\u2A8A',\n  gnapprox: '\u2A8A',\n  gne: '\u2A88',\n  gneq: '\u2A88',\n  gneqq: '\u2269',\n  gnsim: '\u22E7',\n  gopf: '\uD835\uDD58',\n  grave: '`',\n  gscr: '\u210A',\n  gsim: '\u2273',\n  gsime: '\u2A8E',\n  gsiml: '\u2A90',\n  gt: '>',\n  gtcc: '\u2AA7',\n  gtcir: '\u2A7A',\n  gtdot: '\u22D7',\n  gtlPar: '\u2995',\n  gtquest: '\u2A7C',\n  gtrapprox: '\u2A86',\n  gtrarr: '\u2978',\n  gtrdot: '\u22D7',\n  gtreqless: '\u22DB',\n  gtreqqless: '\u2A8C',\n  gtrless: '\u2277',\n  gtrsim: '\u2273',\n  gvertneqq: '\u2269\uFE00',\n  gvnE: '\u2269\uFE00',\n  hArr: '\u21D4',\n  hairsp: '\u200A',\n  half: '\u00BD',\n  hamilt: '\u210B',\n  hardcy: '\u044A',\n  harr: '\u2194',\n  harrcir: '\u2948',\n  harrw: '\u21AD',\n  hbar: '\u210F',\n  hcirc: '\u0125',\n  hearts: '\u2665',\n  heartsuit: '\u2665',\n  hellip: '\u2026',\n  hercon: '\u22B9',\n  hfr: '\uD835\uDD25',\n  hksearow: '\u2925',\n  hkswarow: '\u2926',\n  hoarr: '\u21FF',\n  homtht: '\u223B',\n  hookleftarrow: '\u21A9',\n  hookrightarrow: '\u21AA',\n  hopf: '\uD835\uDD59',\n  horbar: '\u2015',\n  hscr: '\uD835\uDCBD',\n  hslash: '\u210F',\n  hstrok: '\u0127',\n  hybull: '\u2043',\n  hyphen: '\u2010',\n  iacute: '\u00ED',\n  ic: '\u2063',\n  icirc: '\u00EE',\n  icy: '\u0438',\n  iecy: '\u0435',\n  iexcl: '\u00A1',\n  iff: '\u21D4',\n  ifr: '\uD835\uDD26',\n  igrave: '\u00EC',\n  ii: '\u2148',\n  iiiint: '\u2A0C',\n  iiint: '\u222D',\n  iinfin: '\u29DC',\n  iiota: '\u2129',\n  ijlig: '\u0133',\n  imacr: '\u012B',\n  image: '\u2111',\n  imagline: '\u2110',\n  imagpart: '\u2111',\n  imath: '\u0131',\n  imof: '\u22B7',\n  imped: '\u01B5',\n  in: '\u2208',\n  incare: '\u2105',\n  infin: '\u221E',\n  infintie: '\u29DD',\n  inodot: '\u0131',\n  int: '\u222B',\n  intcal: '\u22BA',\n  integers: '\u2124',\n  intercal: '\u22BA',\n  intlarhk: '\u2A17',\n  intprod: '\u2A3C',\n  iocy: '\u0451',\n  iogon: '\u012F',\n  iopf: '\uD835\uDD5A',\n  iota: '\u03B9',\n  iprod: '\u2A3C',\n  iquest: '\u00BF',\n  iscr: '\uD835\uDCBE',\n  isin: '\u2208',\n  isinE: '\u22F9',\n  isindot: '\u22F5',\n  isins: '\u22F4',\n  isinsv: '\u22F3',\n  isinv: '\u2208',\n  it: '\u2062',\n  itilde: '\u0129',\n  iukcy: '\u0456',\n  iuml: '\u00EF',\n  jcirc: '\u0135',\n  jcy: '\u0439',\n  jfr: '\uD835\uDD27',\n  jmath: '\u0237',\n  jopf: '\uD835\uDD5B',\n  jscr: '\uD835\uDCBF',\n  jsercy: '\u0458',\n  jukcy: '\u0454',\n  kappa: '\u03BA',\n  kappav: '\u03F0',\n  kcedil: '\u0137',\n  kcy: '\u043A',\n  kfr: '\uD835\uDD28',\n  kgreen: '\u0138',\n  khcy: '\u0445',\n  kjcy: '\u045C',\n  kopf: '\uD835\uDD5C',\n  kscr: '\uD835\uDCC0',\n  lAarr: '\u21DA',\n  lArr: '\u21D0',\n  lAtail: '\u291B',\n  lBarr: '\u290E',\n  lE: '\u2266',\n  lEg: '\u2A8B',\n  lHar: '\u2962',\n  lacute: '\u013A',\n  laemptyv: '\u29B4',\n  lagran: '\u2112',\n  lambda: '\u03BB',\n  lang: '\u27E8',\n  langd: '\u2991',\n  langle: '\u27E8',\n  lap: '\u2A85',\n  laquo: '\u00AB',\n  larr: '\u2190',\n  larrb: '\u21E4',\n  larrbfs: '\u291F',\n  larrfs: '\u291D',\n  larrhk: '\u21A9',\n  larrlp: '\u21AB',\n  larrpl: '\u2939',\n  larrsim: '\u2973',\n  larrtl: '\u21A2',\n  lat: '\u2AAB',\n  latail: '\u2919',\n  late: '\u2AAD',\n  lates: '\u2AAD\uFE00',\n  lbarr: '\u290C',\n  lbbrk: '\u2772',\n  lbrace: '{',\n  lbrack: '[',\n  lbrke: '\u298B',\n  lbrksld: '\u298F',\n  lbrkslu: '\u298D',\n  lcaron: '\u013E',\n  lcedil: '\u013C',\n  lceil: '\u2308',\n  lcub: '{',\n  lcy: '\u043B',\n  ldca: '\u2936',\n  ldquo: '\u201C',\n  ldquor: '\u201E',\n  ldrdhar: '\u2967',\n  ldrushar: '\u294B',\n  ldsh: '\u21B2',\n  le: '\u2264',\n  leftarrow: '\u2190',\n  leftarrowtail: '\u21A2',\n  leftharpoondown: '\u21BD',\n  leftharpoonup: '\u21BC',\n  leftleftarrows: '\u21C7',\n  leftrightarrow: '\u2194',\n  leftrightarrows: '\u21C6',\n  leftrightharpoons: '\u21CB',\n  leftrightsquigarrow: '\u21AD',\n  leftthreetimes: '\u22CB',\n  leg: '\u22DA',\n  leq: '\u2264',\n  leqq: '\u2266',\n  leqslant: '\u2A7D',\n  les: '\u2A7D',\n  lescc: '\u2AA8',\n  lesdot: '\u2A7F',\n  lesdoto: '\u2A81',\n  lesdotor: '\u2A83',\n  lesg: '\u22DA\uFE00',\n  lesges: '\u2A93',\n  lessapprox: '\u2A85',\n  lessdot: '\u22D6',\n  lesseqgtr: '\u22DA',\n  lesseqqgtr: '\u2A8B',\n  lessgtr: '\u2276',\n  lesssim: '\u2272',\n  lfisht: '\u297C',\n  lfloor: '\u230A',\n  lfr: '\uD835\uDD29',\n  lg: '\u2276',\n  lgE: '\u2A91',\n  lhard: '\u21BD',\n  lharu: '\u21BC',\n  lharul: '\u296A',\n  lhblk: '\u2584',\n  ljcy: '\u0459',\n  ll: '\u226A',\n  llarr: '\u21C7',\n  llcorner: '\u231E',\n  llhard: '\u296B',\n  lltri: '\u25FA',\n  lmidot: '\u0140',\n  lmoust: '\u23B0',\n  lmoustache: '\u23B0',\n  lnE: '\u2268',\n  lnap: '\u2A89',\n  lnapprox: '\u2A89',\n  lne: '\u2A87',\n  lneq: '\u2A87',\n  lneqq: '\u2268',\n  lnsim: '\u22E6',\n  loang: '\u27EC',\n  loarr: '\u21FD',\n  lobrk: '\u27E6',\n  longleftarrow: '\u27F5',\n  longleftrightarrow: '\u27F7',\n  longmapsto: '\u27FC',\n  longrightarrow: '\u27F6',\n  looparrowleft: '\u21AB',\n  looparrowright: '\u21AC',\n  lopar: '\u2985',\n  lopf: '\uD835\uDD5D',\n  loplus: '\u2A2D',\n  lotimes: '\u2A34',\n  lowast: '\u2217',\n  lowbar: '_',\n  loz: '\u25CA',\n  lozenge: '\u25CA',\n  lozf: '\u29EB',\n  lpar: '(',\n  lparlt: '\u2993',\n  lrarr: '\u21C6',\n  lrcorner: '\u231F',\n  lrhar: '\u21CB',\n  lrhard: '\u296D',\n  lrm: '\u200E',\n  lrtri: '\u22BF',\n  lsaquo: '\u2039',\n  lscr: '\uD835\uDCC1',\n  lsh: '\u21B0',\n  lsim: '\u2272',\n  lsime: '\u2A8D',\n  lsimg: '\u2A8F',\n  lsqb: '[',\n  lsquo: '\u2018',\n  lsquor: '\u201A',\n  lstrok: '\u0142',\n  lt: '<',\n  ltcc: '\u2AA6',\n  ltcir: '\u2A79',\n  ltdot: '\u22D6',\n  lthree: '\u22CB',\n  ltimes: '\u22C9',\n  ltlarr: '\u2976',\n  ltquest: '\u2A7B',\n  ltrPar: '\u2996',\n  ltri: '\u25C3',\n  ltrie: '\u22B4',\n  ltrif: '\u25C2',\n  lurdshar: '\u294A',\n  luruhar: '\u2966',\n  lvertneqq: '\u2268\uFE00',\n  lvnE: '\u2268\uFE00',\n  mDDot: '\u223A',\n  macr: '\u00AF',\n  male: '\u2642',\n  malt: '\u2720',\n  maltese: '\u2720',\n  map: '\u21A6',\n  mapsto: '\u21A6',\n  mapstodown: '\u21A7',\n  mapstoleft: '\u21A4',\n  mapstoup: '\u21A5',\n  marker: '\u25AE',\n  mcomma: '\u2A29',\n  mcy: '\u043C',\n  mdash: '\u2014',\n  measuredangle: '\u2221',\n  mfr: '\uD835\uDD2A',\n  mho: '\u2127',\n  micro: '\u00B5',\n  mid: '\u2223',\n  midast: '*',\n  midcir: '\u2AF0',\n  middot: '\u00B7',\n  minus: '\u2212',\n  minusb: '\u229F',\n  minusd: '\u2238',\n  minusdu: '\u2A2A',\n  mlcp: '\u2ADB',\n  mldr: '\u2026',\n  mnplus: '\u2213',\n  models: '\u22A7',\n  mopf: '\uD835\uDD5E',\n  mp: '\u2213',\n  mscr: '\uD835\uDCC2',\n  mstpos: '\u223E',\n  mu: '\u03BC',\n  multimap: '\u22B8',\n  mumap: '\u22B8',\n  nGg: '\u22D9\u0338',\n  nGt: '\u226B\u20D2',\n  nGtv: '\u226B\u0338',\n  nLeftarrow: '\u21CD',\n  nLeftrightarrow: '\u21CE',\n  nLl: '\u22D8\u0338',\n  nLt: '\u226A\u20D2',\n  nLtv: '\u226A\u0338',\n  nRightarrow: '\u21CF',\n  nVDash: '\u22AF',\n  nVdash: '\u22AE',\n  nabla: '\u2207',\n  nacute: '\u0144',\n  nang: '\u2220\u20D2',\n  nap: '\u2249',\n  napE: '\u2A70\u0338',\n  napid: '\u224B\u0338',\n  napos: '\u0149',\n  napprox: '\u2249',\n  natur: '\u266E',\n  natural: '\u266E',\n  naturals: '\u2115',\n  nbsp: '\u00A0',\n  nbump: '\u224E\u0338',\n  nbumpe: '\u224F\u0338',\n  ncap: '\u2A43',\n  ncaron: '\u0148',\n  ncedil: '\u0146',\n  ncong: '\u2247',\n  ncongdot: '\u2A6D\u0338',\n  ncup: '\u2A42',\n  ncy: '\u043D',\n  ndash: '\u2013',\n  ne: '\u2260',\n  neArr: '\u21D7',\n  nearhk: '\u2924',\n  nearr: '\u2197',\n  nearrow: '\u2197',\n  nedot: '\u2250\u0338',\n  nequiv: '\u2262',\n  nesear: '\u2928',\n  nesim: '\u2242\u0338',\n  nexist: '\u2204',\n  nexists: '\u2204',\n  nfr: '\uD835\uDD2B',\n  ngE: '\u2267\u0338',\n  nge: '\u2271',\n  ngeq: '\u2271',\n  ngeqq: '\u2267\u0338',\n  ngeqslant: '\u2A7E\u0338',\n  nges: '\u2A7E\u0338',\n  ngsim: '\u2275',\n  ngt: '\u226F',\n  ngtr: '\u226F',\n  nhArr: '\u21CE',\n  nharr: '\u21AE',\n  nhpar: '\u2AF2',\n  ni: '\u220B',\n  nis: '\u22FC',\n  nisd: '\u22FA',\n  niv: '\u220B',\n  njcy: '\u045A',\n  nlArr: '\u21CD',\n  nlE: '\u2266\u0338',\n  nlarr: '\u219A',\n  nldr: '\u2025',\n  nle: '\u2270',\n  nleftarrow: '\u219A',\n  nleftrightarrow: '\u21AE',\n  nleq: '\u2270',\n  nleqq: '\u2266\u0338',\n  nleqslant: '\u2A7D\u0338',\n  nles: '\u2A7D\u0338',\n  nless: '\u226E',\n  nlsim: '\u2274',\n  nlt: '\u226E',\n  nltri: '\u22EA',\n  nltrie: '\u22EC',\n  nmid: '\u2224',\n  nopf: '\uD835\uDD5F',\n  not: '\u00AC',\n  notin: '\u2209',\n  notinE: '\u22F9\u0338',\n  notindot: '\u22F5\u0338',\n  notinva: '\u2209',\n  notinvb: '\u22F7',\n  notinvc: '\u22F6',\n  notni: '\u220C',\n  notniva: '\u220C',\n  notnivb: '\u22FE',\n  notnivc: '\u22FD',\n  npar: '\u2226',\n  nparallel: '\u2226',\n  nparsl: '\u2AFD\u20E5',\n  npart: '\u2202\u0338',\n  npolint: '\u2A14',\n  npr: '\u2280',\n  nprcue: '\u22E0',\n  npre: '\u2AAF\u0338',\n  nprec: '\u2280',\n  npreceq: '\u2AAF\u0338',\n  nrArr: '\u21CF',\n  nrarr: '\u219B',\n  nrarrc: '\u2933\u0338',\n  nrarrw: '\u219D\u0338',\n  nrightarrow: '\u219B',\n  nrtri: '\u22EB',\n  nrtrie: '\u22ED',\n  nsc: '\u2281',\n  nsccue: '\u22E1',\n  nsce: '\u2AB0\u0338',\n  nscr: '\uD835\uDCC3',\n  nshortmid: '\u2224',\n  nshortparallel: '\u2226',\n  nsim: '\u2241',\n  nsime: '\u2244',\n  nsimeq: '\u2244',\n  nsmid: '\u2224',\n  nspar: '\u2226',\n  nsqsube: '\u22E2',\n  nsqsupe: '\u22E3',\n  nsub: '\u2284',\n  nsubE: '\u2AC5\u0338',\n  nsube: '\u2288',\n  nsubset: '\u2282\u20D2',\n  nsubseteq: '\u2288',\n  nsubseteqq: '\u2AC5\u0338',\n  nsucc: '\u2281',\n  nsucceq: '\u2AB0\u0338',\n  nsup: '\u2285',\n  nsupE: '\u2AC6\u0338',\n  nsupe: '\u2289',\n  nsupset: '\u2283\u20D2',\n  nsupseteq: '\u2289',\n  nsupseteqq: '\u2AC6\u0338',\n  ntgl: '\u2279',\n  ntilde: '\u00F1',\n  ntlg: '\u2278',\n  ntriangleleft: '\u22EA',\n  ntrianglelefteq: '\u22EC',\n  ntriangleright: '\u22EB',\n  ntrianglerighteq: '\u22ED',\n  nu: '\u03BD',\n  num: '#',\n  numero: '\u2116',\n  numsp: '\u2007',\n  nvDash: '\u22AD',\n  nvHarr: '\u2904',\n  nvap: '\u224D\u20D2',\n  nvdash: '\u22AC',\n  nvge: '\u2265\u20D2',\n  nvgt: '>\u20D2',\n  nvinfin: '\u29DE',\n  nvlArr: '\u2902',\n  nvle: '\u2264\u20D2',\n  nvlt: '<\u20D2',\n  nvltrie: '\u22B4\u20D2',\n  nvrArr: '\u2903',\n  nvrtrie: '\u22B5\u20D2',\n  nvsim: '\u223C\u20D2',\n  nwArr: '\u21D6',\n  nwarhk: '\u2923',\n  nwarr: '\u2196',\n  nwarrow: '\u2196',\n  nwnear: '\u2927',\n  oS: '\u24C8',\n  oacute: '\u00F3',\n  oast: '\u229B',\n  ocir: '\u229A',\n  ocirc: '\u00F4',\n  ocy: '\u043E',\n  odash: '\u229D',\n  odblac: '\u0151',\n  odiv: '\u2A38',\n  odot: '\u2299',\n  odsold: '\u29BC',\n  oelig: '\u0153',\n  ofcir: '\u29BF',\n  ofr: '\uD835\uDD2C',\n  ogon: '\u02DB',\n  ograve: '\u00F2',\n  ogt: '\u29C1',\n  ohbar: '\u29B5',\n  ohm: '\u03A9',\n  oint: '\u222E',\n  olarr: '\u21BA',\n  olcir: '\u29BE',\n  olcross: '\u29BB',\n  oline: '\u203E',\n  olt: '\u29C0',\n  omacr: '\u014D',\n  omega: '\u03C9',\n  omicron: '\u03BF',\n  omid: '\u29B6',\n  ominus: '\u2296',\n  oopf: '\uD835\uDD60',\n  opar: '\u29B7',\n  operp: '\u29B9',\n  oplus: '\u2295',\n  or: '\u2228',\n  orarr: '\u21BB',\n  ord: '\u2A5D',\n  order: '\u2134',\n  orderof: '\u2134',\n  ordf: '\u00AA',\n  ordm: '\u00BA',\n  origof: '\u22B6',\n  oror: '\u2A56',\n  orslope: '\u2A57',\n  orv: '\u2A5B',\n  oscr: '\u2134',\n  oslash: '\u00F8',\n  osol: '\u2298',\n  otilde: '\u00F5',\n  otimes: '\u2297',\n  otimesas: '\u2A36',\n  ouml: '\u00F6',\n  ovbar: '\u233D',\n  par: '\u2225',\n  para: '\u00B6',\n  parallel: '\u2225',\n  parsim: '\u2AF3',\n  parsl: '\u2AFD',\n  part: '\u2202',\n  pcy: '\u043F',\n  percnt: '%',\n  period: '.',\n  permil: '\u2030',\n  perp: '\u22A5',\n  pertenk: '\u2031',\n  pfr: '\uD835\uDD2D',\n  phi: '\u03C6',\n  phiv: '\u03D5',\n  phmmat: '\u2133',\n  phone: '\u260E',\n  pi: '\u03C0',\n  pitchfork: '\u22D4',\n  piv: '\u03D6',\n  planck: '\u210F',\n  planckh: '\u210E',\n  plankv: '\u210F',\n  plus: '+',\n  plusacir: '\u2A23',\n  plusb: '\u229E',\n  pluscir: '\u2A22',\n  plusdo: '\u2214',\n  plusdu: '\u2A25',\n  pluse: '\u2A72',\n  plusmn: '\u00B1',\n  plussim: '\u2A26',\n  plustwo: '\u2A27',\n  pm: '\u00B1',\n  pointint: '\u2A15',\n  popf: '\uD835\uDD61',\n  pound: '\u00A3',\n  pr: '\u227A',\n  prE: '\u2AB3',\n  prap: '\u2AB7',\n  prcue: '\u227C',\n  pre: '\u2AAF',\n  prec: '\u227A',\n  precapprox: '\u2AB7',\n  preccurlyeq: '\u227C',\n  preceq: '\u2AAF',\n  precnapprox: '\u2AB9',\n  precneqq: '\u2AB5',\n  precnsim: '\u22E8',\n  precsim: '\u227E',\n  prime: '\u2032',\n  primes: '\u2119',\n  prnE: '\u2AB5',\n  prnap: '\u2AB9',\n  prnsim: '\u22E8',\n  prod: '\u220F',\n  profalar: '\u232E',\n  profline: '\u2312',\n  profsurf: '\u2313',\n  prop: '\u221D',\n  propto: '\u221D',\n  prsim: '\u227E',\n  prurel: '\u22B0',\n  pscr: '\uD835\uDCC5',\n  psi: '\u03C8',\n  puncsp: '\u2008',\n  qfr: '\uD835\uDD2E',\n  qint: '\u2A0C',\n  qopf: '\uD835\uDD62',\n  qprime: '\u2057',\n  qscr: '\uD835\uDCC6',\n  quaternions: '\u210D',\n  quatint: '\u2A16',\n  quest: '?',\n  questeq: '\u225F',\n  quot: '\"',\n  rAarr: '\u21DB',\n  rArr: '\u21D2',\n  rAtail: '\u291C',\n  rBarr: '\u290F',\n  rHar: '\u2964',\n  race: '\u223D\u0331',\n  racute: '\u0155',\n  radic: '\u221A',\n  raemptyv: '\u29B3',\n  rang: '\u27E9',\n  rangd: '\u2992',\n  range: '\u29A5',\n  rangle: '\u27E9',\n  raquo: '\u00BB',\n  rarr: '\u2192',\n  rarrap: '\u2975',\n  rarrb: '\u21E5',\n  rarrbfs: '\u2920',\n  rarrc: '\u2933',\n  rarrfs: '\u291E',\n  rarrhk: '\u21AA',\n  rarrlp: '\u21AC',\n  rarrpl: '\u2945',\n  rarrsim: '\u2974',\n  rarrtl: '\u21A3',\n  rarrw: '\u219D',\n  ratail: '\u291A',\n  ratio: '\u2236',\n  rationals: '\u211A',\n  rbarr: '\u290D',\n  rbbrk: '\u2773',\n  rbrace: '}',\n  rbrack: ']',\n  rbrke: '\u298C',\n  rbrksld: '\u298E',\n  rbrkslu: '\u2990',\n  rcaron: '\u0159',\n  rcedil: '\u0157',\n  rceil: '\u2309',\n  rcub: '}',\n  rcy: '\u0440',\n  rdca: '\u2937',\n  rdldhar: '\u2969',\n  rdquo: '\u201D',\n  rdquor: '\u201D',\n  rdsh: '\u21B3',\n  real: '\u211C',\n  realine: '\u211B',\n  realpart: '\u211C',\n  reals: '\u211D',\n  rect: '\u25AD',\n  reg: '\u00AE',\n  rfisht: '\u297D',\n  rfloor: '\u230B',\n  rfr: '\uD835\uDD2F',\n  rhard: '\u21C1',\n  rharu: '\u21C0',\n  rharul: '\u296C',\n  rho: '\u03C1',\n  rhov: '\u03F1',\n  rightarrow: '\u2192',\n  rightarrowtail: '\u21A3',\n  rightharpoondown: '\u21C1',\n  rightharpoonup: '\u21C0',\n  rightleftarrows: '\u21C4',\n  rightleftharpoons: '\u21CC',\n  rightrightarrows: '\u21C9',\n  rightsquigarrow: '\u219D',\n  rightthreetimes: '\u22CC',\n  ring: '\u02DA',\n  risingdotseq: '\u2253',\n  rlarr: '\u21C4',\n  rlhar: '\u21CC',\n  rlm: '\u200F',\n  rmoust: '\u23B1',\n  rmoustache: '\u23B1',\n  rnmid: '\u2AEE',\n  roang: '\u27ED',\n  roarr: '\u21FE',\n  robrk: '\u27E7',\n  ropar: '\u2986',\n  ropf: '\uD835\uDD63',\n  roplus: '\u2A2E',\n  rotimes: '\u2A35',\n  rpar: ')',\n  rpargt: '\u2994',\n  rppolint: '\u2A12',\n  rrarr: '\u21C9',\n  rsaquo: '\u203A',\n  rscr: '\uD835\uDCC7',\n  rsh: '\u21B1',\n  rsqb: ']',\n  rsquo: '\u2019',\n  rsquor: '\u2019',\n  rthree: '\u22CC',\n  rtimes: '\u22CA',\n  rtri: '\u25B9',\n  rtrie: '\u22B5',\n  rtrif: '\u25B8',\n  rtriltri: '\u29CE',\n  ruluhar: '\u2968',\n  rx: '\u211E',\n  sacute: '\u015B',\n  sbquo: '\u201A',\n  sc: '\u227B',\n  scE: '\u2AB4',\n  scap: '\u2AB8',\n  scaron: '\u0161',\n  sccue: '\u227D',\n  sce: '\u2AB0',\n  scedil: '\u015F',\n  scirc: '\u015D',\n  scnE: '\u2AB6',\n  scnap: '\u2ABA',\n  scnsim: '\u22E9',\n  scpolint: '\u2A13',\n  scsim: '\u227F',\n  scy: '\u0441',\n  sdot: '\u22C5',\n  sdotb: '\u22A1',\n  sdote: '\u2A66',\n  seArr: '\u21D8',\n  searhk: '\u2925',\n  searr: '\u2198',\n  searrow: '\u2198',\n  sect: '\u00A7',\n  semi: ';',\n  seswar: '\u2929',\n  setminus: '\u2216',\n  setmn: '\u2216',\n  sext: '\u2736',\n  sfr: '\uD835\uDD30',\n  sfrown: '\u2322',\n  sharp: '\u266F',\n  shchcy: '\u0449',\n  shcy: '\u0448',\n  shortmid: '\u2223',\n  shortparallel: '\u2225',\n  shy: '\u00AD',\n  sigma: '\u03C3',\n  sigmaf: '\u03C2',\n  sigmav: '\u03C2',\n  sim: '\u223C',\n  simdot: '\u2A6A',\n  sime: '\u2243',\n  simeq: '\u2243',\n  simg: '\u2A9E',\n  simgE: '\u2AA0',\n  siml: '\u2A9D',\n  simlE: '\u2A9F',\n  simne: '\u2246',\n  simplus: '\u2A24',\n  simrarr: '\u2972',\n  slarr: '\u2190',\n  smallsetminus: '\u2216',\n  smashp: '\u2A33',\n  smeparsl: '\u29E4',\n  smid: '\u2223',\n  smile: '\u2323',\n  smt: '\u2AAA',\n  smte: '\u2AAC',\n  smtes: '\u2AAC\uFE00',\n  softcy: '\u044C',\n  sol: '/',\n  solb: '\u29C4',\n  solbar: '\u233F',\n  sopf: '\uD835\uDD64',\n  spades: '\u2660',\n  spadesuit: '\u2660',\n  spar: '\u2225',\n  sqcap: '\u2293',\n  sqcaps: '\u2293\uFE00',\n  sqcup: '\u2294',\n  sqcups: '\u2294\uFE00',\n  sqsub: '\u228F',\n  sqsube: '\u2291',\n  sqsubset: '\u228F',\n  sqsubseteq: '\u2291',\n  sqsup: '\u2290',\n  sqsupe: '\u2292',\n  sqsupset: '\u2290',\n  sqsupseteq: '\u2292',\n  squ: '\u25A1',\n  square: '\u25A1',\n  squarf: '\u25AA',\n  squf: '\u25AA',\n  srarr: '\u2192',\n  sscr: '\uD835\uDCC8',\n  ssetmn: '\u2216',\n  ssmile: '\u2323',\n  sstarf: '\u22C6',\n  star: '\u2606',\n  starf: '\u2605',\n  straightepsilon: '\u03F5',\n  straightphi: '\u03D5',\n  strns: '\u00AF',\n  sub: '\u2282',\n  subE: '\u2AC5',\n  subdot: '\u2ABD',\n  sube: '\u2286',\n  subedot: '\u2AC3',\n  submult: '\u2AC1',\n  subnE: '\u2ACB',\n  subne: '\u228A',\n  subplus: '\u2ABF',\n  subrarr: '\u2979',\n  subset: '\u2282',\n  subseteq: '\u2286',\n  subseteqq: '\u2AC5',\n  subsetneq: '\u228A',\n  subsetneqq: '\u2ACB',\n  subsim: '\u2AC7',\n  subsub: '\u2AD5',\n  subsup: '\u2AD3',\n  succ: '\u227B',\n  succapprox: '\u2AB8',\n  succcurlyeq: '\u227D',\n  succeq: '\u2AB0',\n  succnapprox: '\u2ABA',\n  succneqq: '\u2AB6',\n  succnsim: '\u22E9',\n  succsim: '\u227F',\n  sum: '\u2211',\n  sung: '\u266A',\n  sup1: '\u00B9',\n  sup2: '\u00B2',\n  sup3: '\u00B3',\n  sup: '\u2283',\n  supE: '\u2AC6',\n  supdot: '\u2ABE',\n  supdsub: '\u2AD8',\n  supe: '\u2287',\n  supedot: '\u2AC4',\n  suphsol: '\u27C9',\n  suphsub: '\u2AD7',\n  suplarr: '\u297B',\n  supmult: '\u2AC2',\n  supnE: '\u2ACC',\n  supne: '\u228B',\n  supplus: '\u2AC0',\n  supset: '\u2283',\n  supseteq: '\u2287',\n  supseteqq: '\u2AC6',\n  supsetneq: '\u228B',\n  supsetneqq: '\u2ACC',\n  supsim: '\u2AC8',\n  supsub: '\u2AD4',\n  supsup: '\u2AD6',\n  swArr: '\u21D9',\n  swarhk: '\u2926',\n  swarr: '\u2199',\n  swarrow: '\u2199',\n  swnwar: '\u292A',\n  szlig: '\u00DF',\n  target: '\u2316',\n  tau: '\u03C4',\n  tbrk: '\u23B4',\n  tcaron: '\u0165',\n  tcedil: '\u0163',\n  tcy: '\u0442',\n  tdot: '\u20DB',\n  telrec: '\u2315',\n  tfr: '\uD835\uDD31',\n  there4: '\u2234',\n  therefore: '\u2234',\n  theta: '\u03B8',\n  thetasym: '\u03D1',\n  thetav: '\u03D1',\n  thickapprox: '\u2248',\n  thicksim: '\u223C',\n  thinsp: '\u2009',\n  thkap: '\u2248',\n  thksim: '\u223C',\n  thorn: '\u00FE',\n  tilde: '\u02DC',\n  times: '\u00D7',\n  timesb: '\u22A0',\n  timesbar: '\u2A31',\n  timesd: '\u2A30',\n  tint: '\u222D',\n  toea: '\u2928',\n  top: '\u22A4',\n  topbot: '\u2336',\n  topcir: '\u2AF1',\n  topf: '\uD835\uDD65',\n  topfork: '\u2ADA',\n  tosa: '\u2929',\n  tprime: '\u2034',\n  trade: '\u2122',\n  triangle: '\u25B5',\n  triangledown: '\u25BF',\n  triangleleft: '\u25C3',\n  trianglelefteq: '\u22B4',\n  triangleq: '\u225C',\n  triangleright: '\u25B9',\n  trianglerighteq: '\u22B5',\n  tridot: '\u25EC',\n  trie: '\u225C',\n  triminus: '\u2A3A',\n  triplus: '\u2A39',\n  trisb: '\u29CD',\n  tritime: '\u2A3B',\n  trpezium: '\u23E2',\n  tscr: '\uD835\uDCC9',\n  tscy: '\u0446',\n  tshcy: '\u045B',\n  tstrok: '\u0167',\n  twixt: '\u226C',\n  twoheadleftarrow: '\u219E',\n  twoheadrightarrow: '\u21A0',\n  uArr: '\u21D1',\n  uHar: '\u2963',\n  uacute: '\u00FA',\n  uarr: '\u2191',\n  ubrcy: '\u045E',\n  ubreve: '\u016D',\n  ucirc: '\u00FB',\n  ucy: '\u0443',\n  udarr: '\u21C5',\n  udblac: '\u0171',\n  udhar: '\u296E',\n  ufisht: '\u297E',\n  ufr: '\uD835\uDD32',\n  ugrave: '\u00F9',\n  uharl: '\u21BF',\n  uharr: '\u21BE',\n  uhblk: '\u2580',\n  ulcorn: '\u231C',\n  ulcorner: '\u231C',\n  ulcrop: '\u230F',\n  ultri: '\u25F8',\n  umacr: '\u016B',\n  uml: '\u00A8',\n  uogon: '\u0173',\n  uopf: '\uD835\uDD66',\n  uparrow: '\u2191',\n  updownarrow: '\u2195',\n  upharpoonleft: '\u21BF',\n  upharpoonright: '\u21BE',\n  uplus: '\u228E',\n  upsi: '\u03C5',\n  upsih: '\u03D2',\n  upsilon: '\u03C5',\n  upuparrows: '\u21C8',\n  urcorn: '\u231D',\n  urcorner: '\u231D',\n  urcrop: '\u230E',\n  uring: '\u016F',\n  urtri: '\u25F9',\n  uscr: '\uD835\uDCCA',\n  utdot: '\u22F0',\n  utilde: '\u0169',\n  utri: '\u25B5',\n  utrif: '\u25B4',\n  uuarr: '\u21C8',\n  uuml: '\u00FC',\n  uwangle: '\u29A7',\n  vArr: '\u21D5',\n  vBar: '\u2AE8',\n  vBarv: '\u2AE9',\n  vDash: '\u22A8',\n  vangrt: '\u299C',\n  varepsilon: '\u03F5',\n  varkappa: '\u03F0',\n  varnothing: '\u2205',\n  varphi: '\u03D5',\n  varpi: '\u03D6',\n  varpropto: '\u221D',\n  varr: '\u2195',\n  varrho: '\u03F1',\n  varsigma: '\u03C2',\n  varsubsetneq: '\u228A\uFE00',\n  varsubsetneqq: '\u2ACB\uFE00',\n  varsupsetneq: '\u228B\uFE00',\n  varsupsetneqq: '\u2ACC\uFE00',\n  vartheta: '\u03D1',\n  vartriangleleft: '\u22B2',\n  vartriangleright: '\u22B3',\n  vcy: '\u0432',\n  vdash: '\u22A2',\n  vee: '\u2228',\n  veebar: '\u22BB',\n  veeeq: '\u225A',\n  vellip: '\u22EE',\n  verbar: '|',\n  vert: '|',\n  vfr: '\uD835\uDD33',\n  vltri: '\u22B2',\n  vnsub: '\u2282\u20D2',\n  vnsup: '\u2283\u20D2',\n  vopf: '\uD835\uDD67',\n  vprop: '\u221D',\n  vrtri: '\u22B3',\n  vscr: '\uD835\uDCCB',\n  vsubnE: '\u2ACB\uFE00',\n  vsubne: '\u228A\uFE00',\n  vsupnE: '\u2ACC\uFE00',\n  vsupne: '\u228B\uFE00',\n  vzigzag: '\u299A',\n  wcirc: '\u0175',\n  wedbar: '\u2A5F',\n  wedge: '\u2227',\n  wedgeq: '\u2259',\n  weierp: '\u2118',\n  wfr: '\uD835\uDD34',\n  wopf: '\uD835\uDD68',\n  wp: '\u2118',\n  wr: '\u2240',\n  wreath: '\u2240',\n  wscr: '\uD835\uDCCC',\n  xcap: '\u22C2',\n  xcirc: '\u25EF',\n  xcup: '\u22C3',\n  xdtri: '\u25BD',\n  xfr: '\uD835\uDD35',\n  xhArr: '\u27FA',\n  xharr: '\u27F7',\n  xi: '\u03BE',\n  xlArr: '\u27F8',\n  xlarr: '\u27F5',\n  xmap: '\u27FC',\n  xnis: '\u22FB',\n  xodot: '\u2A00',\n  xopf: '\uD835\uDD69',\n  xoplus: '\u2A01',\n  xotime: '\u2A02',\n  xrArr: '\u27F9',\n  xrarr: '\u27F6',\n  xscr: '\uD835\uDCCD',\n  xsqcup: '\u2A06',\n  xuplus: '\u2A04',\n  xutri: '\u25B3',\n  xvee: '\u22C1',\n  xwedge: '\u22C0',\n  yacute: '\u00FD',\n  yacy: '\u044F',\n  ycirc: '\u0177',\n  ycy: '\u044B',\n  yen: '\u00A5',\n  yfr: '\uD835\uDD36',\n  yicy: '\u0457',\n  yopf: '\uD835\uDD6A',\n  yscr: '\uD835\uDCCE',\n  yucy: '\u044E',\n  yuml: '\u00FF',\n  zacute: '\u017A',\n  zcaron: '\u017E',\n  zcy: '\u0437',\n  zdot: '\u017C',\n  zeetrf: '\u2128',\n  zeta: '\u03B6',\n  zfr: '\uD835\uDD37',\n  zhcy: '\u0436',\n  zigrarr: '\u21DD',\n  zopf: '\uD835\uDD6B',\n  zscr: '\uD835\uDCCF',\n  zwj: '\u200D',\n  zwnj: '\u200C'\n}\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n\n  const closingFenceConstruct = {\n    tokenize: tokenizeClosingFence,\n    partial: true\n  }\n  /** @type {Construct} */\n\n  const nonLazyLine = {\n    tokenize: tokenizeNonLazyLine,\n    partial: true\n  }\n  const tail = this.events[this.events.length - 1]\n  const initialPrefix =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    marker = code\n    return sequenceOpen(code)\n  }\n  /** @type {State} */\n\n  function sequenceOpen(code) {\n    if (code === marker) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n\n    effects.exit('codeFencedFenceSequence')\n    return sizeOpen < 3\n      ? nok(code)\n      : factorySpace(effects, infoOpen, 'whitespace')(code)\n  }\n  /** @type {State} */\n\n  function infoOpen(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n  /** @type {State} */\n\n  function info(code) {\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, infoAfter, 'whitespace')(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return info\n  }\n  /** @type {State} */\n\n  function infoAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n  /** @type {State} */\n\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return openAfter(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return meta\n  }\n  /** @type {State} */\n\n  function openAfter(code) {\n    effects.exit('codeFencedFence')\n    return self.interrupt ? ok(code) : contentStart(code)\n  }\n  /** @type {State} */\n\n  function contentStart(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        nonLazyLine,\n        effects.attempt(\n          closingFenceConstruct,\n          after,\n          initialPrefix\n            ? factorySpace(\n                effects,\n                contentStart,\n                'linePrefix',\n                initialPrefix + 1\n              )\n            : contentStart\n        ),\n        after\n      )(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return contentContinue(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return contentStart(code)\n    }\n\n    effects.consume(code)\n    return contentContinue\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeNonLazyLine(effects, ok, nok) {\n    const self = this\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeClosingFence(effects, ok, nok) {\n    let size = 0\n    return factorySpace(\n      effects,\n      closingSequenceStart,\n      'linePrefix',\n      this.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n    /** @type {State} */\n\n    function closingSequenceStart(code) {\n      effects.enter('codeFencedFence')\n      effects.enter('codeFencedFenceSequence')\n      return closingSequence(code)\n    }\n    /** @type {State} */\n\n    function closingSequence(code) {\n      if (code === marker) {\n        effects.consume(code)\n        size++\n        return closingSequence\n      }\n\n      if (size < sizeOpen) return nok(code)\n      effects.exit('codeFencedFenceSequence')\n      return factorySpace(effects, closingSequenceEnd, 'whitespace')(code)\n    }\n    /** @type {State} */\n\n    function closingSequenceEnd(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n\n      return nok(code)\n    }\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n/** @type {Construct} */\n\nconst indentedContent = {\n  tokenize: tokenizeIndentedContent,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeIndented')\n    return factorySpace(effects, afterStartPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterStartPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? afterPrefix(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(indentedContent, afterPrefix, after)(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return content(code)\n  }\n  /** @type {State} */\n\n  function content(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return afterPrefix(code)\n    }\n\n    effects.consume(code)\n    return content\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeIndented')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeIndentedContent(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // If this is a lazy line, it can\u2019t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? start(code)\n      : nok(code)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n/** @type {Resolver} */\n\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n\n  let index\n  /** @type {number|undefined} */\n\n  let enter // If we start and end with an EOL or a space.\n\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex // And we have data.\n\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  } // Merge adjacent spaces and data.\n\n  index = headEnterIndex - 1\n  tailExitIndex++\n\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n\n      enter = undefined\n    }\n  }\n\n  return events\n}\n/** @type {Previous} */\n\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n\n  let size\n  /** @type {Token} */\n\n  let token\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return openingSequence(code)\n  }\n  /** @type {State} */\n\n  function openingSequence(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return openingSequence\n    }\n\n    effects.exit('codeTextSequence')\n    return gap(code)\n  }\n  /** @type {State} */\n\n  function gap(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    } // Closing fence?\n    // Could also be data.\n\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return closingSequence(code)\n    } // Tabs don\u2019t work, and virtual spaces don\u2019t make sense.\n\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return gap\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return gap\n    } // Data.\n\n    effects.enter('codeTextData')\n    return data(code)\n  } // In code.\n\n  /** @type {State} */\n\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return gap(code)\n    }\n\n    effects.consume(code)\n    return data\n  } // Closing fence.\n\n  /** @type {State} */\n\n  function closingSequence(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return closingSequence\n    } // Done!\n\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    } // More or less accents: mark as data.\n\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n/** @type {Construct} */\n\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n/**\n * Content is transparent: it\u2019s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\n\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token} */\n  let previous\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n  /** @type {State} */\n\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return data\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n  /** @type {State} */\n\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    const tail = self.events[self.events.length - 1]\n\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {splice} from 'micromark-util-chunked'\n\n/**\n * Tokenize subcontent.\n *\n * @param {Event[]} events\n * @returns {boolean}\n */\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n\n  let event\n  /** @type {number|undefined} */\n\n  let lineIndex\n  /** @type {number} */\n\n  let otherIndex\n  /** @type {Event} */\n\n  let otherEvent\n  /** @type {Event[]} */\n\n  let parameters\n  /** @type {Event[]} */\n\n  let subevents\n  /** @type {boolean|undefined} */\n\n  let more\n\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n\n    event = events[index] // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    } // Enter.\n\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    } // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start) // Switch container exit w/ line endings.\n\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n\n  return !more\n}\n/**\n * Tokenize embedded tokens.\n *\n * @param {Event[]} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\n\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {number[]} */\n\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {[number, number][]} */\n\n  const jumps = []\n  /** @type {Record<string, number>} */\n\n  const gaps = {}\n  /** @type {Chunk[]} */\n\n  let stream\n  /** @type {Token|undefined} */\n\n  let previous\n  let index = -1\n  /** @type {Token|undefined} */\n\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start] // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n\n    startPositions.push(startPosition)\n\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n\n      if (!current.next) {\n        stream.push(null)\n      }\n\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n\n      tokenizer.write(stream)\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    } // Unravel the next token.\n\n    previous = current\n    current = current.next\n  } // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n\n  current = token\n\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start) // Help GC.\n\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  } // Help GC.\n\n  tokenizer.events = [] // If there\u2019s one more token (which is the cases for lines that end in an\n  // EOF), that\u2019s perfect: the last point we found starts it.\n  // If there isn\u2019t then make sure any remaining content is added to it.\n\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  } // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren\u2019t affected.\n\n  index = breaks.length\n\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n\n  index = -1\n\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n\n  return gaps\n}\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n/** @type {Construct} */\n\nconst titleConstruct = {\n  tokenize: tokenizeTitle,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n\n  let identifier\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('definition')\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Note: blank lines can\u2019t exist in content.\n\n      return factoryWhitespace(\n        effects,\n        factoryDestination(\n          effects,\n          effects.attempt(\n            titleConstruct,\n            factorySpace(effects, after, 'whitespace'),\n            factorySpace(effects, after, 'whitespace')\n          ),\n          nok,\n          'definitionDestination',\n          'definitionDestinationLiteral',\n          'definitionDestinationLiteralMarker',\n          'definitionDestinationRaw',\n          'definitionDestinationString'\n        )\n      )\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      if (!self.parser.defined.includes(identifier)) {\n        self.parser.defined.push(identifier)\n      }\n\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTitle(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, before)(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function before(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factorySpace(effects, after, 'whitespace'),\n        nok,\n        'definitionTitle',\n        'definitionTitleMarker',\n        'definitionTitleString'\n      )(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} literalType\n * @param {string} literalMarkerType\n * @param {string} rawType\n * @param {string} stringType\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return destinationEnclosedBefore\n    }\n\n    if (code === null || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationRaw(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return destinationEnclosedBefore(code)\n    }\n\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? destinationEnclosedEscape : destinationEnclosed\n  }\n  /** @type {State} */\n\n  function destinationEnclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return destinationEnclosed\n    }\n\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationRaw(code) {\n    if (code === 40) {\n      if (++balance > limit) return nok(code)\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === 41) {\n      if (!balance--) {\n        effects.exit('chunkString')\n        effects.exit(stringType)\n        effects.exit(rawType)\n        effects.exit(type)\n        return ok(code)\n      }\n\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      if (balance) return nok(code)\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (asciiControl(code)) return nok(code)\n    effects.consume(code)\n    return code === 92 ? destinationRawEscape : destinationRaw\n  }\n  /** @type {State} */\n\n  function destinationRawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    return destinationRaw(code)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @this {TokenizeContext}\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      (code === 93 && !data) ||\n      /* To do: remove in the future once we\u2019ve switched from\n       * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n       * which doesn\u2019t need this */\n\n      /* Hidden footnotes hook */\n\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs) ||\n      size > 999\n    ) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return label(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    data = data || !markdownSpace(code)\n    return code === 92 ? labelEscape : label\n  }\n  /** @type {State} */\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    marker = code === 40 ? 41 : code\n    return atFirstTitleBreak\n  }\n  /** @type {State} */\n\n  function atFirstTitleBreak(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    return atTitleBreak(code)\n  }\n  /** @type {State} */\n\n  function atTitleBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return atFirstTitleBreak(marker)\n    }\n\n    if (code === null) {\n      return nok(code)\n    } // Note: blank lines can\u2019t exist in content.\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atTitleBreak, 'linePrefix')\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return title(code)\n  }\n  /** @type {State} */\n\n  function title(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atTitleBreak(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? titleEscape : title\n  }\n  /** @type {State} */\n\n  function titleEscape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return title\n    }\n\n    return title(code)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n\n    return ok(code)\n  }\n}\n", "/**\n * Normalize an identifier (such as used in definitions).\n *\n * @param {string} value\n * @returns {string}\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value // Collapse Markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ') // Trim.\n      .replace(/^ | $/g, '') // Some characters are considered \u201Cuppercase\u201D, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('escapeMarker')\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n/** @type {Resolver} */\n\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n\n  let content\n  /** @type {Token} */\n\n  let text // Prefix whitespace, part of the opening.\n\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  } // Suffix whitespace, part of the closing.\n\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      // @ts-expect-error Constants are fine to assign.\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  const self = this\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('atxHeading')\n    effects.enter('atxHeadingSequence')\n    return fenceOpenInside(code)\n  }\n  /** @type {State} */\n\n  function fenceOpenInside(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return fenceOpenInside\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return self.interrupt ? ok(code) : headingBreak(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function headingBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequence(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      return ok(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headingBreak, 'whitespace')(code)\n    }\n\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequence\n    }\n\n    effects.exit('atxHeadingSequence')\n    return headingBreak(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return headingBreak(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n/** @type {Construct} */\n\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n/** @type {Construct} */\n\nconst nextBlankConstruct = {\n  tokenize: tokenizeNextBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start // Add the prefix start to the HTML line token.\n\n    events[index + 1][1].start = events[index - 2][1].start // Remove the line prefix.\n\n    events.splice(index - 2, 2)\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n\n  let kind\n  /** @type {boolean} */\n\n  let startTag\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {Code} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationStart\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      kind = 3 // While we\u2019re in an instruction instead of a declaration, we\u2019re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      startTag = true\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationStart(code) {\n    if (code === 45) {\n      effects.consume(code)\n      kind = 2\n      return commentOpenInside\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      kind = 5\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpenInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      kind = 4\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdataOpenInside(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length\n        ? self.interrupt\n          ? ok\n          : continuation\n        : cdataOpenInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      if (\n        code !== 47 &&\n        startTag &&\n        htmlRawNames.includes(buffer.toLowerCase())\n      ) {\n        kind = 1\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        kind = 6\n\n        if (code === 47) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      kind = 7 // Do not support complete HTML when interrupting\n\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : startTag\n        ? completeAttributeNameBefore(code)\n        : completeClosingTagAfter(code)\n    }\n\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuation\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    return completeAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n\n    return completeAttributeNameBefore(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return completeAttributeValueQuoted\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    marker = null\n    return completeAttributeValueUnquoted(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuoted(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    if (code === marker) {\n      effects.consume(code)\n      return completeAttributeValueQuotedAfter\n    }\n\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return code === null || markdownLineEnding(code)\n      ? continuation(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function continuation(code) {\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n\n    if (code === 60 && kind === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n\n    if (code === 62 && kind === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (code === 63 && kind === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    if (code === 93 && kind === 5) {\n      effects.consume(code)\n      return continuationCharacterDataInside\n    }\n\n    if (markdownLineEnding(code) && (kind === 6 || kind === 7)) {\n      return effects.check(\n        nextBlankConstruct,\n        continuationClose,\n        continuationAtLineEnding\n      )(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return continuationAtLineEnding(code)\n    }\n\n    effects.consume(code)\n    return continuation\n  }\n  /** @type {State} */\n\n  function continuationAtLineEnding(code) {\n    effects.exit('htmlFlowData')\n    return htmlContinueStart(code)\n  }\n  /** @type {State} */\n\n  function htmlContinueStart(code) {\n    if (code === null) {\n      return done(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        {\n          tokenize: htmlLineEnd,\n          partial: true\n        },\n        htmlContinueStart,\n        done\n      )(code)\n    }\n\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n  /** @type {Tokenizer} */\n\n  function htmlLineEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {State} */\n\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawEndTag(code) {\n    if (code === 62 && htmlRawNames.includes(buffer.toLowerCase())) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationCharacterDataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    } // More dashes.\n\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return done(code)\n    }\n\n    effects.consume(code)\n    return continuationClose\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('htmlFlow')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.exit('htmlFlowData')\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n", "/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result\n * in more relaxed rules (condition 6): because they are known blocks, the\n * HTML-like syntax doesn\u2019t have to be strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result in\n * HTML that can include lines w/o exiting, until a closing tag also in this\n * list is found (condition 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * Note that `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>|undefined} */\n\n  let marker\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {State} */\n\n  let returnState\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpen\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpen\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentStart\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentStart(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentStartDash\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function commentStartDash(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return comment\n  }\n  /** @type {State} */\n\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return end\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function cdataOpen(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length ? cdata : cdataOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return cdata\n  }\n  /** @type {State} */\n\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return declaration\n  }\n  /** @type {State} */\n\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return instruction\n  }\n  /** @type {State} */\n\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagClose(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return tagCloseBetween(code)\n  }\n  /** @type {State} */\n\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpen(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    return tagOpenAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n\n    return tagOpenBetween(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    effects.consume(code)\n    marker = undefined\n    return tagOpenAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return tagOpenAttributeValueQuotedAfter\n    }\n\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 62 || code === 47 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  } // We can\u2019t have blank lines in content, so no need to worry about empty\n  // tokens.\n\n  /** @type {State} */\n\n  function atLineEnding(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(\n      effects,\n      afterPrefix,\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n/** @type {Construct} */\n\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\n\nconst fullReferenceConstruct = {\n  tokenize: tokenizeFullReference\n}\n/** @type {Construct} */\n\nconst collapsedReferenceConstruct = {\n  tokenize: tokenizeCollapsedReference\n}\n/** @type {Resolver} */\n\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  /** @type {Token} */\n\n  let token\n\n  while (++index < events.length) {\n    token = events[index][1]\n\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n\n  return events\n}\n/** @type {Resolver} */\n\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n\n  let token\n  /** @type {number|undefined} */\n\n  let open\n  /** @type {number|undefined} */\n\n  let close\n  /** @type {Event[]} */\n\n  let media // Find an opening.\n\n  while (index--) {\n    token = events[index][1]\n\n    if (open) {\n      // If we see another link, or inactive link label, we\u2019ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      } // Mark other link openings as inactive, as we can\u2019t have links in\n      // links.\n\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ] // Opening marker.\n\n  media = push(media, events.slice(open + 1, open + offset + 3)) // Text open.\n\n  media = push(media, [['enter', text, context]]) // Between.\n\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  ) // Text close, marker close, label close.\n\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ]) // Reference, resource, or so.\n\n  media = push(media, events.slice(close + 1)) // Media close.\n\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n\n  let labelStart\n  /** @type {boolean} */\n\n  let defined // Find an opening.\n\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart) {\n      return nok(code)\n    } // It\u2019s a balanced bracket, but contains a link.\n\n    if (labelStart._inactive) return balanced(code)\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return afterLabelEnd\n  }\n  /** @type {State} */\n\n  function afterLabelEnd(code) {\n    // Resource: `[asd](fgh)`.\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        ok,\n        defined ? ok : balanced\n      )(code)\n    } // Collapsed (`[asd][]`) or full (`[asd][fgh]`) reference?\n\n    if (code === 91) {\n      return effects.attempt(\n        fullReferenceConstruct,\n        ok,\n        defined\n          ? effects.attempt(collapsedReferenceConstruct, ok, balanced)\n          : balanced\n      )(code)\n    } // Shortcut reference: `[asd]`?\n\n    return defined ? ok(code) : balanced(code)\n  }\n  /** @type {State} */\n\n  function balanced(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeResource(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return factoryWhitespace(effects, open)\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 41) {\n      return end(code)\n    }\n\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      nok,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n  /** @type {State} */\n\n  function destinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, between)(code)\n      : end(code)\n  }\n  /** @type {State} */\n\n  function between(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factoryWhitespace(effects, end),\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeFullReference(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      afterLabel,\n      nok,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function afterLabel(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCollapsedReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we\u2019ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn\u2019t need this */\n\n    /* Hidden footnotes hook */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we\u2019ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn\u2019t need this */\n\n    /* Hidden footnotes hook. */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @typedef {Record<string, unknown> & {marker: Code, type: string, size: number}} ListContainerState\n * @typedef {TokenizeContext & {containerState: ListContainerState}} TokenizeContextWithState\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n/** @type {Construct} */\n\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n/** @type {Construct} */\n\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n/** @type {Construct} */\n\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n\n    return nok(code)\n  }\n  /**\n   * @type {State}\n   **/\n\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine, // Can\u2019t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n  /** @type {State} */\n\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine // We have a blank line.\n    // Still, try to consume at most the items size.\n\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n  /** @type {State} */\n\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n  /** @type {State} */\n\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true // As we\u2019re closing flow, we\u2019re no longer interrupting.\n\n    self.interrupt = undefined\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n/**\n * @type {Exiter}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('thematicBreak')\n    marker = code\n    return atBreak(code)\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    if (size < 3 || (code !== null && !markdownLineEnding(code))) {\n      return nok(code)\n    }\n\n    effects.exit('thematicBreak')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n\n    effects.exit('thematicBreakSequence')\n    return atBreak(code)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n/** @type {Resolver} */\n\nfunction resolveToSetextUnderline(events, context) {\n  let index = events.length\n  /** @type {number|undefined} */\n\n  let content\n  /** @type {number|undefined} */\n\n  let text\n  /** @type {number|undefined} */\n\n  let definition // Find the opening of the content.\n  // It\u2019ll always exist: we don\u2019t tokenize if it isn\u2019t there.\n\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    } // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we\u2019ll add it later)\n        events.splice(index, 1)\n      }\n\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  } // Change the paragraph to setext heading text.\n\n  events[text][1].type = 'setextHeadingText' // If we have definitions in the content, we\u2019ll keep on having content,\n  // but we need move it.\n\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  } // Add the heading exit at the end.\n\n  events.push(['exit', heading, context])\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  /** @type {boolean} */\n\n  let paragraph // Find an opening.\n\n  while (index--) {\n    // Skip enter/exit of line ending, line prefix, and content.\n    // We can now either have a definition or a paragraph.\n    if (\n      self.events[index][1].type !== 'lineEnding' &&\n      self.events[index][1].type !== 'linePrefix' &&\n      self.events[index][1].type !== 'content'\n    ) {\n      paragraph = self.events[index][1].type === 'paragraph'\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      effects.enter('setextHeadingLineSequence')\n      marker = code\n      return closingSequence(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function closingSequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return closingSequence\n    }\n\n    effects.exit('setextHeadingLineSequence')\n    return factorySpace(effects, closingSequenceEnd, 'lineSuffix')(code)\n  }\n  /** @type {State} */\n\n  function closingSequenceEnd(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n/**\n * @param {'string'|'text'} field\n * @returns {InitialConstruct}\n */\n\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n  /** @type {Initializer} */\n\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n    /** @type {State} */\n\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n    /** @type {State} */\n\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      } // Data.\n\n      effects.consume(code)\n      return data\n    }\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n\n      const list = constructs[code]\n      let index = -1\n\n      if (list) {\n        while (++index < list.length) {\n          const item = list[index]\n\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n\n      return false\n    }\n  }\n}\n/**\n * @param {Resolver} [extraResolver]\n * @returns {Resolver}\n */\n\nfunction createResolver(extraResolver) {\n  return resolveAllText\n  /** @type {Resolver} */\n\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number|undefined} */\n\n    let enter // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don\u2019t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n\n        enter = undefined\n      }\n    }\n\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can\u2019t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\n\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean|undefined} */\n\n      let tabs\n\n      while (index--) {\n        const chunk = chunks[index]\n\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n\n          if (bufferIndex) break\n          bufferIndex = -1\n        } // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n\n      eventIndex++\n    }\n  }\n\n  return events\n}\n", "/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n */\n\n/**\n * @typedef Info\n * @property {() => void} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {void}\n */\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn\u2019t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_index'|'_bufferIndex'>} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n\n  const columnStart = {}\n  /** @type {Construct[]} */\n\n  const resolveAllConstructs = []\n  /** @type {Chunk[]} */\n\n  let chunks = []\n  /** @type {Token[]} */\n\n  let stack = []\n  /** @type {boolean|undefined} */\n\n  let consumed = true\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n  /**\n   * The state function.\n   *\n   * @type {State|void}\n   */\n\n  let state = initialize.tokenize.call(context, effects)\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n\n  let expectedCode\n\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n\n  return context\n  /** @type {TokenizeContext['write']} */\n\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main() // Exit if we\u2019re not done, resolve might change stuff.\n\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n\n    addResult(initialize, 0) // Otherwise, resolve, and exit.\n\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  } //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n  /** @type {TokenizeContext['sliceStream']} */\n\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n  /** @type {TokenizeContext['now']} */\n\n  function now() {\n    return Object.assign({}, point)\n  }\n  /** @type {TokenizeContext['defineSkip']} */\n\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  } //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {void}\n   */\n\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index] // If we\u2019re in a buffer chunk, loop through it.\n\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {void}\n   */\n\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n  /** @type {Effects['consume']} */\n\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    } // Not in a string chunk.\n\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++ // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    } // Expose the previous character.\n\n    context.previous = code // Mark as consumed.\n\n    consumed = true\n  }\n  /** @type {Effects['enter']} */\n\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n  /** @type {Effects['exit']} */\n\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {Record<string, unknown>} [fields]\n   */\n\n  function constructFactory(onreturn, fields) {\n    return hook\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Construct|Construct[]|ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State} [bogusState]\n     * @returns {State}\n     */\n\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Construct[]} */\n      let listOfConstructs\n      /** @type {number} */\n\n      let constructIndex\n      /** @type {Construct} */\n\n      let currentConstruct\n      /** @type {Info} */\n\n      let info\n      return Array.isArray(constructs)\n        ? /* c8 ignore next 1 */\n          handleListOfConstructs(constructs)\n        : 'tokenize' in constructs // @ts-expect-error Looks like a construct.\n        ? handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n\n      function handleMapOfConstructs(map) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Construct[]} list\n       * @returns {State}\n       */\n\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n\n        if (list.length === 0) {\n          return bogusState\n        }\n\n        return handleConstruct(list[constructIndex])\n      }\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n\n      function handleConstruct(construct) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn\u2019t work because `inspect` in document does a check\n          // w/o a bogus, which doesn\u2019t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a \u201Clive binding\u201D, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n      /** @type {State} */\n\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n      /** @type {State} */\n\n      function nok(code) {\n        consumed = true\n        info.restore()\n\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n\n        return bogusState\n      }\n    }\n  }\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {void}\n   */\n\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n    /**\n     * Restore state.\n     *\n     * @returns {void}\n     */\n\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n  /**\n   * Move the current point a bit forward in the line when it\u2019s on a column\n   * skip.\n   *\n   * @returns {void}\n   */\n\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Chunk[]} chunks\n * @param {Pick<Token, 'start'|'end'>} token\n * @returns {Chunk[]}\n */\n\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Chunk[]} */\n\n  let view\n\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n\n    if (startBufferIndex > -1) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view[0] = view[0].slice(startBufferIndex)\n    }\n\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n\n  return view\n}\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Chunk[]} chunks\n * @param {boolean} [expandTabs=false]\n * @returns {string}\n */\n\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {string[]} */\n\n  const result = []\n  /** @type {boolean|undefined} */\n\n  let atTab\n\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n\n    let value\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n\n        case -4: {\n          value = '\\n'\n          break\n        }\n\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n\n    atTab = chunk === -2\n    result.push(value)\n  }\n\n  return result.join('')\n}\n", "/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n/** @type {Extension['document']} */\n\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n/** @type {Extension['contentInitial']} */\n\nexport const contentInitial = {\n  [91]: definition\n}\n/** @type {Extension['flowInitial']} */\n\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n/** @type {Extension['flow']} */\n\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n/** @type {Extension['string']} */\n\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n/** @type {Extension['text']} */\n\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n/** @type {Extension['insideSpan']} */\n\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n/** @type {Extension['attentionMarkers']} */\n\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n/** @type {Extension['disable']} */\n\nexport const disable = {\n  null: []\n}\n", "/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding} [encoding]\n * @param {boolean} [end=false]\n * @returns {Chunk[]}\n */\nconst search = /[\\0\\t\\n\\r]/g\n/**\n * @returns {Preprocessor}\n */\n\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean|undefined} */\n\n  let start = true\n  /** @type {boolean|undefined} */\n\n  let atCarriageReturn\n  return preprocessor\n  /** @type {Preprocessor} */\n\n  function preprocessor(value, encoding, end) {\n    /** @type {Chunk[]} */\n    const chunks = []\n    /** @type {RegExpMatchArray|null} */\n\n    let match\n    /** @type {number} */\n\n    let next\n    /** @type {number} */\n\n    let startPosition\n    /** @type {number} */\n\n    let endPosition\n    /** @type {Code} */\n\n    let code // @ts-expect-error `Buffer` does allow an encoding.\n\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n\n    if (start) {\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n\n      start = undefined\n    }\n\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n\n            while (column++ < next) chunks.push(-1)\n\n            break\n          }\n\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n\n      startPosition = endPosition + 1\n    }\n\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n\n    return chunks\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * @param {Event[]} events\n * @returns {Event[]}\n */\n\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n\n  return events\n}\n", "/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) || // Control character (DEL) of the basic block and C1 controls.\n    (code > 126 && code < 160) || // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) || // Noncharacters.\n    (code > 64975 && code < 65008) ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 || // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n\n  return String.fromCharCode(code)\n}\n", "import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n/**\n * Utility to decode markdown strings (which occur in places such as fenced\n * code info strings, destinations, labels, and titles).\n * The \u201Cstring\u201D content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\n\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  } // Reference.\n\n  const head = $2.charCodeAt(0)\n\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n\n  return decodeNamedCharacterReference($2) || $0\n}\n", "/**\n * @typedef {import('./lib/index.js').Options} Options\n * @typedef {import('./lib/index.js').Processor} Processor\n */\n\nexport {defaultHandlers, all, one} from 'mdast-util-to-hast'\n\nexport {default} from './lib/index.js'\n", "/**\n * @typedef {import('./lib/index.js').Options} Options\n * @typedef {import('./lib/index.js').Handler} Handler\n * @typedef {import('./lib/index.js').Handlers} Handlers\n * @typedef {import('./lib/index.js').H} H\n * @typedef {import('./complex-types').Raw} Raw\n */\n\nexport {one, all} from './lib/traverse.js'\nexport {defaultHandlers, toHast} from './lib/index.js'\n", "/**\n * @typedef {import('mdast').Root|import('mdast').Parent['children'][number]} MdastNode\n * @typedef {import('./index.js').H} H\n * @typedef {import('./index.js').Handler} Handler\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Transform an unknown node.\n * @type {Handler}\n * @param {MdastNode} node\n */\nfunction unknown(h, node) {\n  const data = node.data || {}\n\n  if (\n    'value' in node &&\n    !(\n      own.call(data, 'hName') ||\n      own.call(data, 'hProperties') ||\n      own.call(data, 'hChildren')\n    )\n  ) {\n    return h.augment(node, u('text', node.value))\n  }\n\n  return h(node, 'div', all(h, node))\n}\n\n/**\n * @type {Handler}\n * @param {MdastNode} node\n */\nexport function one(h, node, parent) {\n  const type = node && node.type\n  /** @type {Handler} */\n  let fn\n\n  // Fail on non-nodes.\n  if (!type) {\n    throw new Error('Expected node, got `' + node + '`')\n  }\n\n  if (own.call(h.handlers, type)) {\n    fn = h.handlers[type]\n  } else if (h.passThrough && h.passThrough.includes(type)) {\n    fn = returnNode\n  } else {\n    fn = h.unknownHandler\n  }\n\n  return (typeof fn === 'function' ? fn : unknown)(h, node, parent)\n}\n\n/**\n * @type {Handler}\n * @param {MdastNode} node\n */\nfunction returnNode(h, node) {\n  // @ts-expect-error: Pass through custom node.\n  return 'children' in node ? {...node, children: all(h, node)} : node\n}\n\n/**\n * @param {H} h\n * @param {MdastNode} parent\n */\nexport function all(h, parent) {\n  /** @type {Array<Content>} */\n  const values = []\n\n  if ('children' in parent) {\n    const nodes = parent.children\n    let index = -1\n\n    while (++index < nodes.length) {\n      const result = one(h, nodes[index], parent)\n\n      if (result) {\n        if (index && nodes[index - 1].type === 'break') {\n          if (!Array.isArray(result) && result.type === 'text') {\n            result.value = result.value.replace(/^\\s+/, '')\n          }\n\n          if (!Array.isArray(result) && result.type === 'element') {\n            const head = result.children[0]\n\n            if (head && head.type === 'text') {\n              head.value = head.value.replace(/^\\s+/, '')\n            }\n          }\n        }\n\n        if (Array.isArray(result)) {\n          values.push(...result)\n        } else {\n          values.push(result)\n        }\n      }\n    }\n  }\n\n  return values\n}\n", "/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist').Literal} Literal\n * @typedef {Object.<string, unknown>} Props\n * @typedef {Array.<Node>|string} ChildrenOrValue\n *\n * @typedef {(<T extends string, P extends Record<string, unknown>, C extends Node[]>(type: T, props: P, children: C) => {type: T, children: C} & P)} BuildParentWithProps\n * @typedef {(<T extends string, P extends Record<string, unknown>>(type: T, props: P, value: string) => {type: T, value: string} & P)} BuildLiteralWithProps\n * @typedef {(<T extends string, P extends Record<string, unknown>>(type: T, props: P) => {type: T} & P)} BuildVoidWithProps\n * @typedef {(<T extends string, C extends Node[]>(type: T, children: C) => {type: T, children: C})} BuildParent\n * @typedef {(<T extends string>(type: T, value: string) => {type: T, value: string})} BuildLiteral\n * @typedef {(<T extends string>(type: T) => {type: T})} BuildVoid\n */\n\nexport var u = /**\n * @type {BuildVoid & BuildVoidWithProps & BuildLiteral & BuildLiteralWithProps & BuildParent & BuildParentWithProps}\n */ (\n  /**\n   * @param {string} type Type of node\n   * @param {Props|ChildrenOrValue} [props] Additional properties for node (or `children` or `value`)\n   * @param {ChildrenOrValue} [value] `children` or `value` of node\n   * @returns {Node}\n   */\n  function (type, props, value) {\n    /** @type {Node} */\n    var node = {type: String(type)}\n\n    if (\n      (value === undefined || value === null) &&\n      (typeof props === 'string' || Array.isArray(props))\n    ) {\n      value = props\n    } else {\n      Object.assign(node, props)\n    }\n\n    if (Array.isArray(value)) {\n      node.children = value\n    } else if (value !== undefined && value !== null) {\n      node.value = String(value)\n    }\n\n    return node\n  }\n)\n", "/**\n * @typedef {import('mdast').Root|import('mdast').Parent['children'][number]} MdastNode\n * @typedef {import('hast').Root|import('hast').Parent['children'][number]} HastNode\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} Content\n * @typedef {import('unist-util-position').PositionLike} PositionLike\n *\n * @typedef EmbeddedHastFields\n * @property {string} [hName]\n *   Defines the tag name of an element.\n * @property {Properties} [hProperties]\n *   Defines the properties of an element.\n * @property {Array<Content>} [hChildren]\n *   Defines the (hast) children of an element.\n *\n * @typedef {Record<string, unknown> & EmbeddedHastFields} Data\n *   unist data with embedded hast fields.\n *\n * @typedef {MdastNode & {data?: Data}} NodeWithData\n *   unist node with embedded hast data.\n *\n * @callback Handler\n *   Handle a node.\n * @param {H} h\n *   Handle context.\n * @param {any} node\n *   mdast node to handle.\n * @param {Parent|null} parent\n *   Parent of `node`.\n * @returns {Content|Array<Content>|null|undefined}\n *   hast node.\n *\n * @callback HFunctionProps\n * @param {MdastNode|PositionLike|null|undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {Properties} props\n *   Properties.\n * @param {Array<Content>?} [children]\n *   hast content.\n * @returns {Element}\n *   Compiled element.\n *\n * @callback HFunctionNoProps\n * @param {MdastNode|PositionLike|null|undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {Array<Content>?} [children]\n *   hast content\n * @returns {Element}\n *   Compiled element.\n *\n * @typedef HFields\n * @property {boolean} dangerous\n *   Whether HTML is allowed.\n * @property {string} clobberPrefix\n *   Prefix to use to prevent DOM clobbering.\n * @property {string} footnoteLabel\n *   Label to use to introduce the footnote section.\n * @property {string} footnoteLabelTagName\n *   HTML used for the footnote label.\n * @property {Properties} footnoteLabelProperties\n *   Properties on the HTML tag used for the footnote label.\n * @property {string} footnoteBackLabel\n *   Label to use to go back to a footnote call from the footnote section.\n * @property {(identifier: string) => Definition|null} definition\n *   Definition cache.\n * @property {Record<string, FootnoteDefinition>} footnoteById\n *   Footnote cache.\n * @property {Array<string>} footnoteOrder\n *   Order in which footnotes occur.\n * @property {Record<string, number>} footnoteCounts\n *   Counts the same footnote was used.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {Handler} unknownHandler\n *   Handler for any none not in `passThrough` or otherwise handled.\n * @property {(left: NodeWithData|PositionLike|null|undefined, right: Content) => Content} augment\n *   Like `h` but lower-level and usable on non-elements.\n * @property {Array<string>} passThrough\n *   List of node types to pass through untouched (except for their children).\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean} [allowDangerousHtml=false]\n *   Whether to allow `html` nodes and inject them as `raw` HTML.\n * @property {string} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` attribute to prevent it from *clobbering*.\n *   attributes.\n *   DOM clobbering is this:\n *\n *   ```html\n *   <p id=x></p>\n *   <script>alert(x)</script>\n *   ```\n *\n *   Elements by their ID are made available in browsers on the `window` object.\n *   Using a prefix prevents this from being a problem.\n * @property {string} [footnoteLabel='Footnotes']\n *   Label to use for the footnotes section.\n *   Affects screen reader users.\n *   Change it if you\u2019re authoring in a different language.\n * @property {string} [footnoteLabelTagName='h2']\n *   HTML tag to use for the footnote label.\n *   Can be changed to match your document structure and play well with your choice of css.\n * @property {Properties} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label.\n *   A 'sr-only' class is added by default to hide this from sighted users.\n *   Change it to make the label visible, or add classes for other purposes.\n * @property {string} [footnoteBackLabel='Back to content']\n *   Label to use from backreferences back to their footnote call.\n *   Affects screen reader users.\n *   Change it if you\u2019re authoring in a different language.\n * @property {Handlers} [handlers]\n *   Object mapping mdast nodes to functions handling them\n * @property {Array<string>} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast\n * @property {Handler} [unknownHandler]\n *   Handler for all unknown nodes.\n *\n * @typedef {Record<string, Handler>} Handlers\n *   Map of node types to handlers\n * @typedef {HFunctionProps & HFunctionNoProps & HFields} H\n *   Handle context\n */\n\nimport {u} from 'unist-builder'\nimport {visit} from 'unist-util-visit'\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {generated} from 'unist-util-generated'\nimport {definitions} from 'mdast-util-definitions'\nimport {one} from './traverse.js'\nimport {footer} from './footer.js'\nimport {handlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Turn mdast into hast.\n *\n * @param {MdastNode} tree\n *   mdast node.\n * @param {Options} [options]\n *   Configuration (optional).\n * @returns {H}\n *   `h` function.\n */\nfunction factory(tree, options) {\n  const settings = options || {}\n  const dangerous = settings.allowDangerousHtml || false\n  /** @type {Record<string, FootnoteDefinition>} */\n  const footnoteById = {}\n\n  h.dangerous = dangerous\n  h.clobberPrefix =\n    settings.clobberPrefix === undefined || settings.clobberPrefix === null\n      ? 'user-content-'\n      : settings.clobberPrefix\n  h.footnoteLabel = settings.footnoteLabel || 'Footnotes'\n  h.footnoteLabelTagName = settings.footnoteLabelTagName || 'h2'\n  h.footnoteLabelProperties = settings.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  h.footnoteBackLabel = settings.footnoteBackLabel || 'Back to content'\n  h.definition = definitions(tree)\n  h.footnoteById = footnoteById\n  /** @type {Array<string>} */\n  h.footnoteOrder = []\n  /** @type {Record<string, number>} */\n  h.footnoteCounts = {}\n  h.augment = augment\n  h.handlers = {...handlers, ...settings.handlers}\n  h.unknownHandler = settings.unknownHandler\n  h.passThrough = settings.passThrough\n\n  visit(tree, 'footnoteDefinition', (definition) => {\n    const id = String(definition.identifier).toUpperCase()\n\n    // Mimick CM behavior of link definitions.\n    // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/8290999/index.js#L26>.\n    if (!own.call(footnoteById, id)) {\n      footnoteById[id] = definition\n    }\n  })\n\n  // @ts-expect-error Hush, it\u2019s fine!\n  return h\n\n  /**\n   * Finalise the created `right`, a hast node, from `left`, an mdast node.\n   *\n   * @param {(NodeWithData|PositionLike)?} left\n   * @param {Content} right\n   * @returns {Content}\n   */\n  function augment(left, right) {\n    // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n    if (left && 'data' in left && left.data) {\n      /** @type {Data} */\n      const data = left.data\n\n      if (data.hName) {\n        if (right.type !== 'element') {\n          right = {\n            type: 'element',\n            tagName: '',\n            properties: {},\n            children: []\n          }\n        }\n\n        right.tagName = data.hName\n      }\n\n      if (right.type === 'element' && data.hProperties) {\n        right.properties = {...right.properties, ...data.hProperties}\n      }\n\n      if ('children' in right && right.children && data.hChildren) {\n        right.children = data.hChildren\n      }\n    }\n\n    if (left) {\n      const ctx = 'type' in left ? left : {position: left}\n\n      if (!generated(ctx)) {\n        // @ts-expect-error: fine.\n        right.position = {start: pointStart(ctx), end: pointEnd(ctx)}\n      }\n    }\n\n    return right\n  }\n\n  /**\n   * Create an element for `node`.\n   *\n   * @type {HFunctionProps}\n   */\n  function h(node, tagName, props, children) {\n    if (Array.isArray(props)) {\n      children = props\n      props = {}\n    }\n\n    // @ts-expect-error augmenting an element yields an element.\n    return augment(node, {\n      type: 'element',\n      tagName,\n      properties: props || {},\n      children: children || []\n    })\n  }\n}\n\n/**\n * Transform `tree` (an mdast node) to a hast node.\n *\n * @param {MdastNode} tree mdast node\n * @param {Options} [options] Configuration\n * @returns {HastNode|null|undefined} hast node\n */\nexport function toHast(tree, options) {\n  const h = factory(tree, options)\n  const node = one(h, tree, null)\n  const foot = footer(h)\n\n  if (foot) {\n    // @ts-expect-error If there\u2019s a footer, there were definitions, meaning block\n    // content.\n    // So assume `node` is a parent node.\n    node.children.push(u('text', '\\n'), foot)\n  }\n\n  return Array.isArray(node) ? {type: 'root', children: node} : node\n}\n\nexport {handlers as defaultHandlers} from './handlers/index.js'\n", "/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n * @typedef {import('./complex-types.js').Visitor} Visitor\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\n/**\n * Visit children of tree which pass test.\n *\n * @param tree\n *   Tree to walk\n * @param [test]\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Function called for nodes that pass `test`.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of preorder (NLR) (default).\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types.js').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types.js').BuildVisitor<Tree>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {import('./complex-types.js').Visitor} visitor\n     * @param {boolean} [reverse]\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n", "/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('./complex-types.js').Action} Action\n * @typedef {import('./complex-types.js').Index} Index\n * @typedef {import('./complex-types.js').ActionTuple} ActionTuple\n * @typedef {import('./complex-types.js').VisitorResult} VisitorResult\n * @typedef {import('./complex-types.js').Visitor} Visitor\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal\n */\nexport const CONTINUE = true\n/**\n * Do not traverse this node\u2019s children\n */\nexport const SKIP = 'skip'\n/**\n * Stop traversing immediately\n */\nexport const EXIT = false\n\n/**\n * Visit children of tree which pass test.\n *\n * @param tree\n *   Tree to walk\n * @param [test]\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Function called for nodes that pass `test`.\n * @param [reverse=false]\n *   Traverse in reverse preorder (NRL) instead of preorder (NLR) (default).\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types.js').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types.js').BuildVisitor<Tree>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {import('./complex-types.js').Visitor<Node>} visitor\n     * @param {boolean} [reverse=false]\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, null, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number?} index\n       * @param {Array<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Record<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = typeof node === 'object' && node !== null ? node : {}\n        /** @type {string|undefined} */\n        let name\n\n        if (typeof value.type === 'string') {\n          name =\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' +\n              color(value.type + (name ? '<' + name + '>' : '')) +\n              ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * @param {VisitorResult} value\n * @returns {ActionTuple}\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n", "/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n *\n * @typedef {string} Type\n * @typedef {Object<string, unknown>} Props\n *\n * @typedef {null|undefined|Type|Props|TestFunctionAnything|Array.<Type|Props|TestFunctionAnything>} Test\n */\n\n/**\n * Check if a node passes a test\n *\n * @callback TestFunctionAnything\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean|void}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} X\n * @callback TestFunctionPredicate\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is X}\n */\n\n/**\n * @callback AssertAnything\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} Y\n * @callback AssertPredicate\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is Y}\n */\n\nexport const is =\n  /**\n   * Check if a node passes a test.\n   * When a `parent` node is known the `index` of node should also be given.\n   *\n   * @type {(\n   *   (<T extends Node>(node: unknown, test: T['type']|Partial<T>|TestFunctionPredicate<T>|Array.<T['type']|Partial<T>|TestFunctionPredicate<T>>, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => node is T) &\n   *   ((node?: unknown, test?: Test, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * Check if a node passes a test.\n     * When a `parent` node is known the `index` of node should also be given.\n     *\n     * @param {unknown} [node] Node to check\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @param {number|null|undefined} [index] Position of `node` in `parent`\n     * @param {Parent|null|undefined} [parent] Parent of `node`\n     * @param {unknown} [context] Context object to invoke `test` with\n     * @returns {boolean} Whether test passed and `node` is a `Node` (object with `type` set to non-empty `string`).\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\nexport const convert =\n  /**\n   * @type {(\n   *   (<T extends Node>(test: T['type']|Partial<T>|TestFunctionPredicate<T>) => AssertPredicate<T>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * Generate an assertion from a check.\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n/**\n * @param {Array.<Type|Props|TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array.<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {unknown[]} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Utility to assert each property in `test` is represented in `node`, and each\n * values are strictly equal.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node\u2019s type\n * for said string.\n *\n * @param {Type} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node\u2019s type\n * for said string.\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {Array.<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(...parameters) {\n    // @ts-expect-error: spreading is fine.\n    return Boolean(check.call(this, ...parameters))\n  }\n}\n\n// Utility to return true.\nfunction ok() {\n  return true\n}\n", "/**\n * @param {string} d\n * @returns {string}\n */\nexport function color(d) {\n  return '\\u001B[33m' + d + '\\u001B[39m'\n}\n", "/**\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Node} Node\n * @typedef {Record<string, unknown> & {type: string, position?: PositionLike|undefined}} NodeLike\n * @typedef {import('unist').Point} Point\n *\n * @typedef {Partial<Point>} PointLike\n *\n * @typedef PositionLike\n * @property {PointLike} [start]\n * @property {PointLike} [end]\n */\n\nexport const pointStart = point('start')\nexport const pointEnd = point('end')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {NodeLike|Node} [node]\n * @returns {Position}\n */\nexport function position(node) {\n  return {start: pointStart(node), end: pointEnd(node)}\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'start'|'end'} type\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the positional info of `node`.\n   *\n   * @param {NodeLike|Node} [node]\n   * @returns {Point}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    return {\n      line: point.line || null,\n      column: point.column || null,\n      offset: point.offset > -1 ? point.offset : null\n    }\n  }\n}\n", "/**\n * @typedef {Object} PointLike\n * @property {number} [line]\n * @property {number} [column]\n * @property {number} [offset]\n *\n * @typedef {Object} PositionLike\n * @property {PointLike} [start]\n * @property {PointLike} [end]\n *\n * @typedef {Object} NodeLike\n * @property {PositionLike} [position]\n */\n\n/**\n * Check if `node` is *generated*.\n *\n * @param {NodeLike} [node]\n * @returns {boolean}\n */\nexport function generated(node) {\n  return (\n    !node ||\n    !node.position ||\n    !node.position.start ||\n    !node.position.start.line ||\n    !node.position.start.column ||\n    !node.position.end ||\n    !node.position.end.line ||\n    !node.position.end.column\n  )\n}\n", "/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n * @typedef {import('mdast').Definition} Definition\n */\n\nimport {visit} from 'unist-util-visit'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find definitions in `node`.\n * Uses CommonMark precedence, which means that earlier definitions are\n * preferred over duplicate later definitions.\n *\n * @param {Node} node\n */\nexport function definitions(node) {\n  /** @type {Record<string, Definition>} */\n  const cache = Object.create(null)\n\n  if (!node || !node.type) {\n    throw new Error('mdast-util-definitions expected node')\n  }\n\n  visit(node, 'definition', (definition) => {\n    const id = clean(definition.identifier)\n    if (id && !own.call(cache, id)) {\n      cache[id] = definition\n    }\n  })\n\n  return definition\n\n  /**\n   * Get a node from the bound definition cache.\n   *\n   * @param {string} identifier\n   * @returns {Definition|null}\n   */\n  function definition(identifier) {\n    const id = clean(identifier)\n    return id && own.call(cache, id) ? cache[id] : null\n  }\n}\n\n/**\n * @param {string} [value]\n * @returns {string}\n */\nfunction clean(value) {\n  return String(value || '').toUpperCase()\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('./index.js').H} H\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {u} from 'unist-builder'\nimport {all} from './traverse.js'\nimport {wrap} from './wrap.js'\n\n/**\n * @param {H} h\n * @returns {Element|null}\n */\nexport function footer(h) {\n  let index = -1\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n\n  while (++index < h.footnoteOrder.length) {\n    const def = h.footnoteById[h.footnoteOrder[index].toUpperCase()]\n\n    if (!def) {\n      continue\n    }\n\n    const content = all(h, def)\n    const id = String(def.identifier)\n    const safeId = normalizeUri(id.toLowerCase())\n    let referenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n\n    while (++referenceIndex <= h.footnoteCounts[id]) {\n      /** @type {Element} */\n      const backReference = {\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            h.clobberPrefix +\n            'fnref-' +\n            safeId +\n            (referenceIndex > 1 ? '-' + referenceIndex : ''),\n          dataFootnoteBackref: true,\n          className: ['data-footnote-backref'],\n          ariaLabel: h.footnoteBackLabel\n        },\n        children: [{type: 'text', value: '\u21A9'}]\n      }\n\n      if (referenceIndex > 1) {\n        backReference.children.push({\n          type: 'element',\n          tagName: 'sup',\n          children: [{type: 'text', value: String(referenceIndex)}]\n        })\n      }\n\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      backReferences.push(backReference)\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: h.clobberPrefix + 'fn-' + safeId},\n      children: wrap(content, true)\n    }\n\n    if (def.position) {\n      listItem.position = def.position\n    }\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return null\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: h.footnoteLabelTagName,\n        properties: {\n          ...JSON.parse(JSON.stringify(h.footnoteLabelProperties)),\n          id: 'footnote-label'\n        },\n        children: [u('text', h.footnoteLabel)]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n", "import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\n\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri` below).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * Then, a regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`,\n * or `/^https?$/i` for `img[src]`.\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string|undefined} url\n * @param {RegExp} [protocol]\n * @returns {string}\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n\n  if (!protocol) {\n    return value\n  }\n\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it\u2019s relative.\n    colon < 0 || // If the first colon is after a `?`, `#`, or `/`, it\u2019s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) || // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n/**\n * Normalize a URL (such as used in definitions).\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n\n    let replace = '' // A correct percent encoded value.\n\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    } // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    } // Astral.\n    else if (code > 55295 && code < 57344) {\n      const next = value.charCodeAt(index + 1) // A correct surrogate pair.\n\n      if (code < 56320 && next > 56319 && next < 57344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      } // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    } // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n\n  return result.join('') + value.slice(start)\n}\n", "/**\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * Wrap `nodes` with line feeds between each entry.\n * Optionally adds line feeds at the start and end.\n *\n * @param {Array<Content>} nodes\n * @param {boolean} [loose=false]\n * @returns {Array<Content>}\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<Content>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push(u('text', '\\n'))\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push(u('text', '\\n'))\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push(u('text', '\\n'))\n  }\n\n  return result\n}\n", "import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {footnote} from './footnote.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  footnote,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  root,\n  strong,\n  table,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return null\n}\n", "/**\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Blockquote} node\n */\nexport function blockquote(h, node) {\n  return h(node, 'blockquote', wrap(all(h, node), true))\n}\n", "/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Break} node\n * @returns {Array<Element|Text>}\n */\nexport function hardBreak(h, node) {\n  return [h(node, 'br'), u('text', '\\n')]\n}\n", "/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Code} node\n */\nexport function code(h, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  // To do: next major, use `node.lang` w/o regex, the splitting\u2019s been going\n  // on for years in remark now.\n  const lang = node.lang && node.lang.match(/^[^ \\t]+(?=[ \\t]|$)/)\n  /** @type {Properties} */\n  const props = {}\n\n  if (lang) {\n    props.className = ['language-' + lang]\n  }\n\n  const code = h(node, 'code', props, [u('text', value)])\n\n  if (node.meta) {\n    code.data = {meta: node.meta}\n  }\n\n  return h(node.position, 'pre', [code])\n}\n", "/**\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Delete} node\n */\nexport function strikethrough(h, node) {\n  return h(node, 'del', all(h, node))\n}\n", "/**\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Emphasis} node\n */\nexport function emphasis(h, node) {\n  return h(node, 'em', all(h, node))\n}\n", "/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {FootnoteReference} node\n */\nexport function footnoteReference(h, node) {\n  const id = String(node.identifier)\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = h.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  if (index === -1) {\n    h.footnoteOrder.push(id)\n    h.footnoteCounts[id] = 1\n    counter = h.footnoteOrder.length\n  } else {\n    h.footnoteCounts[id]++\n    counter = index + 1\n  }\n\n  const reuseCounter = h.footnoteCounts[id]\n\n  return h(node, 'sup', [\n    h(\n      node.position,\n      'a',\n      {\n        href: '#' + h.clobberPrefix + 'fn-' + safeId,\n        id:\n          h.clobberPrefix +\n          'fnref-' +\n          safeId +\n          (reuseCounter > 1 ? '-' + reuseCounter : ''),\n        dataFootnoteRef: true,\n        ariaDescribedBy: 'footnote-label'\n      },\n      [u('text', String(counter))]\n    )\n  ])\n}\n", "/**\n * @typedef {import('mdast').Footnote} Footnote\n * @typedef {import('../index.js').Handler} Handler\n *\n * @todo\n *   `footnote` (or \u201Cinline note\u201D) are a pandoc footnotes feature (`^[a note]`)\n *   that does not exist in GFM.\n *   We still have support for it, so that things remain working with\n *   `micromark-extension-footnote` and `mdast-util-footnote`, but in the future\n *   we might be able to remove it?\n */\n\nimport {footnoteReference} from './footnote-reference.js'\n\n/**\n * @type {Handler}\n * @param {Footnote} node\n */\nexport function footnote(h, node) {\n  const footnoteById = h.footnoteById\n  let no = 1\n\n  while (no in footnoteById) no++\n\n  const identifier = String(no)\n\n  footnoteById[identifier] = {\n    type: 'footnoteDefinition',\n    identifier,\n    children: [{type: 'paragraph', children: node.children}],\n    position: node.position\n  }\n\n  return footnoteReference(h, {\n    type: 'footnoteReference',\n    identifier,\n    position: node.position\n  })\n}\n", "/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Heading} node\n */\nexport function heading(h, node) {\n  return h(node, 'h' + node.depth, all(h, node))\n}\n", "/**\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * Return either a `raw` node in dangerous mode, otherwise nothing.\n *\n * @type {Handler}\n * @param {HTML} node\n */\nexport function html(h, node) {\n  return h.dangerous ? h.augment(node, u('raw', node.value)) : null\n}\n", "/**\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * @type {Handler}\n * @param {ImageReference} node\n */\nexport function imageReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {src: normalizeUri(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'img', props)\n}\n", "/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('./index.js').Handler} Handler\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\nimport {all} from './traverse.js'\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @type {Handler}\n * @param {ImageReference|LinkReference} node\n * @returns {Content|Array<Content>}\n */\nexport function revert(h, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return u('text', '![' + node.alt + suffix)\n  }\n\n  const contents = all(h, node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift(u('text', '['))\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push(u('text', suffix))\n  }\n\n  return contents\n}\n", "/**\n * @typedef {import('mdast').Image} Image\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * @type {Handler}\n * @param {Image} node\n */\nexport function image(h, node) {\n  /** @type {Properties} */\n  const props = {src: normalizeUri(node.url), alt: node.alt}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'img', props)\n}\n", "/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {InlineCode} node\n */\nexport function inlineCode(h, node) {\n  return h(node, 'code', [u('text', node.value.replace(/\\r?\\n|\\r/g, ' '))])\n}\n", "/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {LinkReference} node\n */\nexport function linkReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {href: normalizeUri(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n", "/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Link} node\n */\nexport function link(h, node) {\n  /** @type {Properties} */\n  const props = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n", "/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n * @typedef {import('../index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {ListItem} node\n * @param {List} parent\n */\nexport function listItem(h, node, parent) {\n  const result = all(h, node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const props = {}\n  /** @type {Array<Content>} */\n  const wrapped = []\n\n  if (typeof node.checked === 'boolean') {\n    /** @type {Element} */\n    let paragraph\n\n    if (\n      result[0] &&\n      result[0].type === 'element' &&\n      result[0].tagName === 'p'\n    ) {\n      paragraph = result[0]\n    } else {\n      paragraph = h(null, 'p', [])\n      result.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift(u('text', ' '))\n    }\n\n    paragraph.children.unshift(\n      h(null, 'input', {\n        type: 'checkbox',\n        checked: node.checked,\n        disabled: true\n      })\n    )\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    props.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < result.length) {\n    const child = result[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      wrapped.push(u('text', '\\n'))\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      wrapped.push(...child.children)\n    } else {\n      wrapped.push(child)\n    }\n  }\n\n  const tail = result[result.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || !('tagName' in tail) || tail.tagName !== 'p')) {\n    wrapped.push(u('text', '\\n'))\n  }\n\n  return h(node, 'li', props, wrapped)\n}\n\n/**\n * @param {List} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = node.spread\n  const children = node.children\n  let index = -1\n\n  while (!loose && ++index < children.length) {\n    loose = listItemLoose(children[index])\n  }\n\n  return Boolean(loose)\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === undefined || spread === null\n    ? node.children.length > 1\n    : spread\n}\n", "/**\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {List} node\n * @returns {Element}\n */\nexport function list(h, node) {\n  /** @type {Properties} */\n  const props = {}\n  const name = node.ordered ? 'ol' : 'ul'\n  const items = all(h, node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    props.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < items.length) {\n    const item = items[index]\n\n    if (\n      item.type === 'element' &&\n      item.tagName === 'li' &&\n      item.properties &&\n      Array.isArray(item.properties.className) &&\n      item.properties.className.includes('task-list-item')\n    ) {\n      props.className = ['contains-task-list']\n      break\n    }\n  }\n\n  return h(node, name, props, wrap(items, true))\n}\n", "/**\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Paragraph} node\n */\nexport function paragraph(h, node) {\n  return h(node, 'p', all(h, node))\n}\n", "/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\nimport {all} from '../traverse.js'\nimport {wrap} from '../wrap.js'\n\n/**\n * @type {Handler}\n * @param {Root} node\n */\nexport function root(h, node) {\n  // @ts-expect-error `root`s are also fine.\n  return h.augment(node, u('root', wrap(all(h, node))))\n}\n", "/**\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Strong} node\n */\nexport function strong(h, node) {\n  return h(node, 'strong', all(h, node))\n}\n", "/**\n * @typedef {import('mdast').Table} Table\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n * @typedef {import('../index.js').Content} Content\n */\n\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Table} node\n */\nexport function table(h, node) {\n  const rows = node.children\n  let index = -1\n  const align = node.align || []\n  /** @type {Array<Element>} */\n  const result = []\n\n  while (++index < rows.length) {\n    const row = rows[index].children\n    const name = index === 0 ? 'th' : 'td'\n    /** @type {Array<Content>} */\n    const out = []\n    let cellIndex = -1\n    const length = node.align ? align.length : row.length\n\n    while (++cellIndex < length) {\n      const cell = row[cellIndex]\n      out.push(\n        h(cell, name, {align: align[cellIndex]}, cell ? all(h, cell) : [])\n      )\n    }\n\n    result[index] = h(rows[index], 'tr', wrap(out, true))\n  }\n\n  return h(\n    node,\n    'table',\n    wrap(\n      [h(result[0].position, 'thead', wrap([result[0]], true))].concat(\n        result[1]\n          ? h(\n              {\n                start: pointStart(result[1]),\n                end: pointEnd(result[result.length - 1])\n              },\n              'tbody',\n              wrap(result.slice(1), true)\n            )\n          : []\n      ),\n      true\n    )\n  )\n}\n", "/**\n * @typedef {import('mdast').Text} Text\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {trimLines} from 'trim-lines'\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Text} node\n */\nexport function text(h, node) {\n  return h.augment(node, u('text', trimLines(String(node.value))))\n}\n", "const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n", "/**\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n */\n\n/**\n * @type {Handler}\n * @param {ThematicBreak} [node]\n * @returns {Element}\n */\nexport function thematicBreak(h, node) {\n  return h(node, 'hr')\n}\n", "/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} Options\n * @typedef {import('unified').Processor<any, any, any, any>} Processor\n *\n * @typedef {import('mdast-util-to-hast')} DoNotTouchAsThisImportIncludesRawInTree\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n// Note: the `<MdastRoot, HastRoot>` overload doesn\u2019t seem to work :'(\n\n/**\n * Plugin that turns markdown into HTML to support rehype.\n *\n * *   If a destination processor is given, that processor runs with a new HTML\n *     (hast) tree (bridge-mode).\n *     As the given processor runs with a hast tree, and rehype plugins support\n *     hast, that means rehype plugins can be used with the given processor.\n *     The hast tree is discarded in the end.\n *     It\u2019s highly unlikely that you want to do this.\n * *   The common case is to not pass a destination processor, in which case the\n *     current processor continues running with a new HTML (hast) tree\n *     (mutate-mode).\n *     As the current processor continues with a hast tree, and rehype plugins\n *     support hast, that means rehype plugins can be used after\n *     `remark-rehype`.\n *     It\u2019s likely that this is what you want to do.\n *\n * @param destination\n *   Optional unified processor.\n * @param options\n *   Options passed to `mdast-util-to-hast`.\n */\nconst remarkRehype =\n  /** @type {(import('unified').Plugin<[Processor, Options?]|[null|undefined, Options?]|[Options]|[], MdastRoot>)} */\n  (\n    function (destination, options) {\n      return destination && 'run' in destination\n        ? bridge(destination, options)\n        : mutate(destination || options)\n    }\n  )\n\nexport default remarkRehype\n\n/**\n * Bridge-mode.\n * Runs the destination with the new hast tree.\n *\n * @type {import('unified').Plugin<[Processor, Options?], MdastRoot>}\n */\nfunction bridge(destination, options) {\n  return (node, file, next) => {\n    destination.run(toHast(node, options), file, (error) => {\n      next(error)\n    })\n  }\n}\n\n/**\n * Mutate-mode.\n * Further plugins run on the hast tree.\n *\n * @type {import('unified').Plugin<[Options?]|void[], MdastRoot, HastRoot>}\n */\nfunction mutate(options) {\n  // @ts-expect-error: assume a corresponding node is returned by `toHast`.\n  return (node) => toHast(node, options)\n}\n", "/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n", "/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n", "/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n", "import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n", "/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n", "/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n", "import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n", "export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n", "let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n", "import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n", "import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n", "import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n", "/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n", "import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n", "import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n", "import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n", "/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n", "export const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n", "import {visit} from 'unist-util-visit'\n\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n *\n * @callback AllowElement\n * @param {Element} element\n * @param {number} index\n * @param {Element|Root} parent\n * @returns {boolean|undefined}\n *\n * @typedef Options\n * @property {Array<string>} [allowedElements]\n * @property {Array<string>} [disallowedElements=[]]\n * @property {AllowElement} [allowElement]\n * @property {boolean} [unwrapDisallowed=false]\n */\n\n/**\n * @type {import('unified').Plugin<[Options], Root>}\n */\nexport default function rehypeFilter(options) {\n  if (options.allowedElements && options.disallowedElements) {\n    throw new TypeError(\n      'Only one of `allowedElements` and `disallowedElements` should be defined'\n    )\n  }\n\n  if (\n    options.allowedElements ||\n    options.disallowedElements ||\n    options.allowElement\n  ) {\n    return (tree) => {\n      visit(tree, 'element', (node, index, parent_) => {\n        const parent = /** @type {Element|Root} */ (parent_)\n        /** @type {boolean|undefined} */\n        let remove\n\n        if (options.allowedElements) {\n          remove = !options.allowedElements.includes(node.tagName)\n        } else if (options.disallowedElements) {\n          remove = options.disallowedElements.includes(node.tagName)\n        }\n\n        if (!remove && options.allowElement && typeof index === 'number') {\n          remove = !options.allowElement(node, index, parent)\n        }\n\n        if (remove && typeof index === 'number') {\n          if (options.unwrapDisallowed && node.children) {\n            parent.children.splice(index, 1, ...node.children)\n          } else {\n            parent.children.splice(index, 1)\n          }\n\n          return index\n        }\n\n        return undefined\n      })\n    }\n  }\n}\n", "/**\n * @template T\n * @typedef {import('react').ComponentType<T>} ComponentType<T>\n */\n\n/**\n * @template T\n * @typedef {import('react').ComponentPropsWithoutRef<T>} ComponentPropsWithoutRef<T>\n */\n\n/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('unist').Position} Position\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('./complex-types').ReactMarkdownProps} ReactMarkdownProps\n *\n * @typedef Raw\n * @property {'raw'} type\n * @property {string} value\n *\n * @typedef Context\n * @property {Options} options\n * @property {Schema} schema\n * @property {number} listDepth\n *\n * @callback TransformLink\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {string}\n *\n * @callback TransformImage\n * @param {string} src\n * @param {string} alt\n * @param {string?} title\n * @returns {string}\n *\n * @typedef {import('react').HTMLAttributeAnchorTarget} TransformLinkTargetType\n *\n * @callback TransformLinkTarget\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {TransformLinkTargetType|undefined}\n *\n * @typedef {keyof JSX.IntrinsicElements} ReactMarkdownNames\n *\n * To do: is `data-sourcepos` typeable?\n *\n * @typedef {ComponentPropsWithoutRef<'code'> & ReactMarkdownProps & {inline?: boolean}} CodeProps\n * @typedef {ComponentPropsWithoutRef<'h1'> & ReactMarkdownProps & {level: number}} HeadingProps\n * @typedef {ComponentPropsWithoutRef<'li'> & ReactMarkdownProps & {checked: boolean|null, index: number, ordered: boolean}} LiProps\n * @typedef {ComponentPropsWithoutRef<'ol'> & ReactMarkdownProps & {depth: number, ordered: true}} OrderedListProps\n * @typedef {ComponentPropsWithoutRef<'table'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: boolean}} TableCellProps\n * @typedef {ComponentPropsWithoutRef<'tr'> & ReactMarkdownProps & {isHeader: boolean}} TableRowProps\n * @typedef {ComponentPropsWithoutRef<'ul'> & ReactMarkdownProps & {depth: number, ordered: false}} UnorderedListProps\n *\n * @typedef {ComponentType<CodeProps>} CodeComponent\n * @typedef {ComponentType<HeadingProps>} HeadingComponent\n * @typedef {ComponentType<LiProps>} LiComponent\n * @typedef {ComponentType<OrderedListProps>} OrderedListComponent\n * @typedef {ComponentType<TableCellProps>} TableCellComponent\n * @typedef {ComponentType<TableRowProps>} TableRowComponent\n * @typedef {ComponentType<UnorderedListProps>} UnorderedListComponent\n *\n * @typedef SpecialComponents\n * @property {CodeComponent|ReactMarkdownNames} code\n * @property {HeadingComponent|ReactMarkdownNames} h1\n * @property {HeadingComponent|ReactMarkdownNames} h2\n * @property {HeadingComponent|ReactMarkdownNames} h3\n * @property {HeadingComponent|ReactMarkdownNames} h4\n * @property {HeadingComponent|ReactMarkdownNames} h5\n * @property {HeadingComponent|ReactMarkdownNames} h6\n * @property {LiComponent|ReactMarkdownNames} li\n * @property {OrderedListComponent|ReactMarkdownNames} ol\n * @property {TableCellComponent|ReactMarkdownNames} td\n * @property {TableCellComponent|ReactMarkdownNames} th\n * @property {TableRowComponent|ReactMarkdownNames} tr\n * @property {UnorderedListComponent|ReactMarkdownNames} ul\n *\n * @typedef {Partial<Omit<import('./complex-types').NormalComponents, keyof SpecialComponents> & SpecialComponents>} Components\n *\n * @typedef Options\n * @property {boolean} [sourcePos=false]\n * @property {boolean} [rawSourcePos=false]\n * @property {boolean} [skipHtml=false]\n * @property {boolean} [includeElementIndex=false]\n * @property {null|false|TransformLink} [transformLinkUri]\n * @property {TransformImage} [transformImageUri]\n * @property {TransformLinkTargetType|TransformLinkTarget} [linkTarget]\n * @property {Components} [components]\n */\n\nimport React from 'react'\nimport ReactIs from 'react-is'\nimport {whitespace} from 'hast-util-whitespace'\nimport {svg, find, hastToReact} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport style from 'style-to-object'\n\nconst own = {}.hasOwnProperty\n\n// The table-related elements that must not contain whitespace text according\n// to React.\nconst tableElements = new Set(['table', 'thead', 'tbody', 'tfoot', 'tr'])\n\n/**\n * @param {Context} context\n * @param {Element|Root} node\n */\nexport function childrenToReact(context, node) {\n  /** @type {Array<ReactNode>} */\n  const children = []\n  let childIndex = -1\n  /** @type {Comment|Doctype|Element|Raw|Text} */\n  let child\n\n  while (++childIndex < node.children.length) {\n    child = node.children[childIndex]\n\n    if (child.type === 'element') {\n      children.push(toReact(context, child, childIndex, node))\n    } else if (child.type === 'text') {\n      // Currently, a warning is triggered by react for *any* white space in\n      // tables.\n      // So we drop it.\n      // See: <https://github.com/facebook/react/pull/7081>.\n      // See: <https://github.com/facebook/react/pull/7515>.\n      // See: <https://github.com/remarkjs/remark-react/issues/64>.\n      // See: <https://github.com/remarkjs/react-markdown/issues/576>.\n      if (\n        node.type !== 'element' ||\n        !tableElements.has(node.tagName) ||\n        !whitespace(child)\n      ) {\n        children.push(child.value)\n      }\n    } else if (child.type === 'raw' && !context.options.skipHtml) {\n      // Default behavior is to show (encoded) HTML.\n      children.push(child.value)\n    }\n  }\n\n  return children\n}\n\n/**\n * @param {Context} context\n * @param {Element} node\n * @param {number} index\n * @param {Element|Root} parent\n */\nfunction toReact(context, node, index, parent) {\n  const options = context.options\n  const parentSchema = context.schema\n  /** @type {ReactMarkdownNames} */\n  // @ts-expect-error assume a known HTML/SVG element.\n  const name = node.tagName\n  /** @type {Record<string, unknown>} */\n  const properties = {}\n  let schema = parentSchema\n  /** @type {string} */\n  let property\n\n  if (parentSchema.space === 'html' && name === 'svg') {\n    schema = svg\n    context.schema = schema\n  }\n\n  if (node.properties) {\n    for (property in node.properties) {\n      if (own.call(node.properties, property)) {\n        addProperty(properties, property, node.properties[property], context)\n      }\n    }\n  }\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth++\n  }\n\n  const children = childrenToReact(context, node)\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth--\n  }\n\n  // Restore parent schema.\n  context.schema = parentSchema\n\n  // Nodes created by plugins do not have positional info, in which case we use\n  // an object that matches the position interface.\n  const position = node.position || {\n    start: {line: null, column: null, offset: null},\n    end: {line: null, column: null, offset: null}\n  }\n  const component =\n    options.components && own.call(options.components, name)\n      ? options.components[name]\n      : name\n  const basic = typeof component === 'string' || component === React.Fragment\n\n  if (!ReactIs.isValidElementType(component)) {\n    throw new TypeError(\n      `Component for name \\`${name}\\` not defined or is not renderable`\n    )\n  }\n\n  properties.key = [\n    name,\n    position.start.line,\n    position.start.column,\n    index\n  ].join('-')\n\n  if (name === 'a' && options.linkTarget) {\n    properties.target =\n      typeof options.linkTarget === 'function'\n        ? options.linkTarget(\n            String(properties.href || ''),\n            node.children,\n            typeof properties.title === 'string' ? properties.title : null\n          )\n        : options.linkTarget\n  }\n\n  if (name === 'a' && options.transformLinkUri) {\n    properties.href = options.transformLinkUri(\n      String(properties.href || ''),\n      node.children,\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (\n    !basic &&\n    name === 'code' &&\n    parent.type === 'element' &&\n    parent.tagName !== 'pre'\n  ) {\n    properties.inline = true\n  }\n\n  if (\n    !basic &&\n    (name === 'h1' ||\n      name === 'h2' ||\n      name === 'h3' ||\n      name === 'h4' ||\n      name === 'h5' ||\n      name === 'h6')\n  ) {\n    properties.level = Number.parseInt(name.charAt(1), 10)\n  }\n\n  if (name === 'img' && options.transformImageUri) {\n    properties.src = options.transformImageUri(\n      String(properties.src || ''),\n      String(properties.alt || ''),\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (!basic && name === 'li' && parent.type === 'element') {\n    const input = getInputElement(node)\n    properties.checked =\n      input && input.properties ? Boolean(input.properties.checked) : null\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.ordered = parent.tagName === 'ol'\n  }\n\n  if (!basic && (name === 'ol' || name === 'ul')) {\n    properties.ordered = name === 'ol'\n    properties.depth = context.listDepth\n  }\n\n  if (name === 'td' || name === 'th') {\n    if (properties.align) {\n      if (!properties.style) properties.style = {}\n      // @ts-expect-error assume `style` is an object\n      properties.style.textAlign = properties.align\n      delete properties.align\n    }\n\n    if (!basic) {\n      properties.isHeader = name === 'th'\n    }\n  }\n\n  if (!basic && name === 'tr' && parent.type === 'element') {\n    properties.isHeader = Boolean(parent.tagName === 'thead')\n  }\n\n  // If `sourcePos` is given, pass source information (line/column info from markdown source).\n  if (options.sourcePos) {\n    properties['data-sourcepos'] = flattenPosition(position)\n  }\n\n  if (!basic && options.rawSourcePos) {\n    properties.sourcePosition = node.position\n  }\n\n  // If `includeElementIndex` is given, pass node index info to components.\n  if (!basic && options.includeElementIndex) {\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.siblingCount = getElementsBeforeCount(parent)\n  }\n\n  if (!basic) {\n    properties.node = node\n  }\n\n  // Ensure no React warnings are emitted for void elements w/ children.\n  return children.length > 0\n    ? React.createElement(component, properties, children)\n    : React.createElement(component, properties)\n}\n\n/**\n * @param {Element|Root} node\n * @returns {Element?}\n */\nfunction getInputElement(node) {\n  let index = -1\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n\n    if (child.type === 'element' && child.tagName === 'input') {\n      return child\n    }\n  }\n\n  return null\n}\n\n/**\n * @param {Element|Root} parent\n * @param {Element} [node]\n * @returns {number}\n */\nfunction getElementsBeforeCount(parent, node) {\n  let index = -1\n  let count = 0\n\n  while (++index < parent.children.length) {\n    if (parent.children[index] === node) break\n    if (parent.children[index].type === 'element') count++\n  }\n\n  return count\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string} prop\n * @param {unknown} value\n * @param {Context} ctx\n */\nfunction addProperty(props, prop, value, ctx) {\n  const info = find(ctx.schema, prop)\n  let result = value\n\n  // Ignore nullish and `NaN` values.\n  // eslint-disable-next-line no-self-compare\n  if (result === null || result === undefined || result !== result) {\n    return\n  }\n\n  // Accept `array`.\n  // Most props are space-separated.\n  if (Array.isArray(result)) {\n    result = info.commaSeparated ? commas(result) : spaces(result)\n  }\n\n  if (info.property === 'style' && typeof result === 'string') {\n    result = parseStyle(result)\n  }\n\n  if (info.space && info.property) {\n    props[\n      own.call(hastToReact, info.property)\n        ? hastToReact[info.property]\n        : info.property\n    ] = result\n  } else if (info.attribute) {\n    props[info.attribute] = result\n  }\n}\n\n/**\n * @param {string} value\n * @returns {Record<string, string>}\n */\nfunction parseStyle(value) {\n  /** @type {Record<string, string>} */\n  const result = {}\n\n  try {\n    style(value, iterator)\n  } catch {\n    // Silent.\n  }\n\n  return result\n\n  /**\n   * @param {string} name\n   * @param {string} v\n   */\n  function iterator(name, v) {\n    const k = name.slice(0, 4) === '-ms-' ? `ms-${name.slice(4)}` : name\n    result[k.replace(/-([a-z])/g, styleReplacer)] = v\n  }\n}\n\n/**\n * @param {unknown} _\n * @param {string} $1\n */\nfunction styleReplacer(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * @param {Position|{start: {line: null, column: null, offset: null}, end: {line: null, column: null, offset: null}}} pos\n * @returns {string}\n */\nfunction flattenPosition(pos) {\n  return [\n    pos.start.line,\n    ':',\n    pos.start.column,\n    '-',\n    pos.end.line,\n    ':',\n    pos.end.column\n  ]\n    .map((d) => String(d))\n    .join('')\n}\n", "/**\n * @param {unknown} thing\n * @returns {boolean}\n */\nexport function whitespace(thing) {\n  /** @type {string} */\n  var value =\n    // @ts-ignore looks like a node.\n    thing && typeof thing === 'object' && thing.type === 'text'\n      ? // @ts-ignore looks like a text.\n        thing.value || ''\n      : thing\n\n  // HTML whitespace expression.\n  // See <https://html.spec.whatwg.org/#space-character>.\n  return typeof value === 'string' && value.replace(/[ \\t\\n\\f\\r]/g, '') === ''\n}\n", "/**\n * Parse space separated tokens to an array of strings.\n *\n * @param {string} value Space separated tokens\n * @returns {Array.<string>} Tokens\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated tokens.\n *\n * @param {Array.<string|number>} values Tokens\n * @returns {string} Space separated tokens\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n", "/**\n * @typedef {Object} StringifyOptions\n * @property {boolean} [padLeft=true] Whether to pad a space before a token (`boolean`, default: `true`).\n * @property {boolean} [padRight=false] Whether to pad a space after a token (`boolean`, default: `false`).\n */\n\n/**\n * Parse comma separated tokens to an array.\n *\n * @param {string} value\n * @returns {Array.<string>}\n */\nexport function parse(value) {\n  /** @type {Array.<string>} */\n  var tokens = []\n  var input = String(value || '')\n  var index = input.indexOf(',')\n  var start = 0\n  /** @type {boolean} */\n  var end\n  /** @type {string} */\n  var token\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings to comma separated tokens.\n *\n * @param {Array.<string|number>} values\n * @param {StringifyOptions} [options]\n * @returns {string}\n */\nexport function stringify(values, options) {\n  var settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  if (values[values.length - 1] === '') {\n    values = values.concat('')\n  }\n\n  return values\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n", "import XSS from 'xss';\r\nimport { SHOW_LESS_TEXT, SHOW_MORE_TEXT } from './constants';\r\n\r\nexport function deleteNoMarkupFormatHTML(content) {\r\n  const token = '`';\r\n  const options = {\r\n    whiteList: [],\r\n    stripIgnoreTag: true,\r\n    stripIgnoreTagBody: ['script'],\r\n    escapeHtml: (html) => html,\r\n  };\r\n\r\n  const splitContent = content.split(token);\r\n  const contentLength = splitContent.length;\r\n  let finalContent = '';\r\n  for (let i = 1; i < contentLength; i += 2) {\r\n    finalContent += XSS(splitContent[i - 1], options);\r\n    finalContent += token + splitContent[i] + token;\r\n  }\r\n  if (contentLength % 2 === 1) {\r\n    finalContent += XSS(splitContent[contentLength - 1], options);\r\n  }\r\n  return finalContent;\r\n}\r\n\r\nexport function addS(text, num) {\r\n  return num === 1 ? text : `${text}s`;\r\n}\r\n\r\n// eslint-disable-next-line max-len\r\nexport const showCollapseOrExpandMessage = (isCollapsed) => (isCollapsed ? SHOW_MORE_TEXT : SHOW_LESS_TEXT);\r\n\r\nexport const formatCollapsingText = (text, shouldCollapse, isCollapsed, minLength) => {\r\n  if (shouldCollapse && isCollapsed) {\r\n    const indexOfLastSpace = text.lastIndexOf(' ', minLength);\r\n    return `${text.substring(0, indexOfLastSpace).trim()}...`;\r\n  }\r\n\r\n  return text;\r\n};\r\n", "import React from 'react';\r\nimport { renderToStaticMarkup } from 'react-dom/server';\r\nimport Markdown from 'react-markdown';\r\nimport SearchedLinkRenderer from 'app/components/SearchedLinkRenderer';\r\nimport { HIGHLIGHT_END, HIGHLIGHT_START } from './constants';\r\n\r\nconst addTagsToText = (srcText) => srcText.replace(\r\n  /(#[a-z\\d]+)/ig,\r\n  (x) => ` [${x}](/?tag=${x.slice(1)})`,\r\n);\r\n\r\nconst removeQuestionLinksInsideCode = (srcText) => srcText.replace(\r\n  /`.*?`/g,\r\n  (x) => x.replace(\r\n    /\\[(Q\\d+)\\]\\(\\/\\?questionId=\\d+\\)/g,\r\n    '$1',\r\n  ),\r\n);\r\n\r\n/*\r\n * Substitute Q{number} for a link to a question.\r\n *\r\n * All formats are supported but code `Q23`, in this case the link is not inserted\r\n */\r\nconst addQuestionsToText = (srcText) => removeQuestionLinksInsideCode(srcText.replace(\r\n  /\\b(?!`)\\b(Q[0-9]+)\\b(?!`)/g,\r\n  (x) => `[${x}](/?questionId=${x.slice(1)})`,\r\n));\r\n\r\nconst highlightText = (srcText, searchTerm) => {\r\n  const searchRegExp = new RegExp(\r\n    searchTerm.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'),\r\n    'gi',\r\n  );\r\n\r\n  let formattedText = srcText.replace(\r\n    searchRegExp,\r\n    (text) => HIGHLIGHT_START + text + HIGHLIGHT_END,\r\n  );\r\n\r\n  formattedText = renderToStaticMarkup((\r\n    <Markdown\r\n      source={formattedText}\r\n      escapeHtml={false}\r\n      renderers={{\r\n        link: SearchedLinkRenderer,\r\n      }}\r\n    />\r\n  ));\r\n\r\n  formattedText = formattedText.replace(new RegExp(HIGHLIGHT_START, 'g'), '<highlight>');\r\n  formattedText = formattedText.replace(new RegExp(HIGHLIGHT_END, 'g'), '</highlight>');\r\n  return formattedText;\r\n};\r\n\r\nexport const markdownFormat = (srcText, searchTerm) => {\r\n  let formattedText = addTagsToText(srcText);\r\n\r\n  if (searchTerm) {\r\n    formattedText = highlightText(formattedText, searchTerm);\r\n  }\r\n\r\n  return formattedText;\r\n};\r\n\r\nexport const markdownFormatQuestion = (srcText, searchTerm) => {\r\n  const formattedText = addQuestionsToText(srcText);\r\n  return markdownFormat(formattedText, searchTerm);\r\n};\r\n\r\nexport default markdownFormatQuestion;\r\n", "export { default } from './SearchedLinkRenderer';\r\n", "import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { HIGHLIGHT_END, HIGHLIGHT_START } from 'app/utils/constants';\r\nimport MarkdownLinkRenderer from 'app/components/MarkdownLinkRenderer';\r\n\r\nconst propTypes = {\r\n  href: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nfunction SearchedLinkRenderer({ href, children }) {\r\n  let cleanedUrl = href.replace(new RegExp(HIGHLIGHT_START, 'g'), '');\r\n  cleanedUrl = cleanedUrl.replace(new RegExp(HIGHLIGHT_END, 'g'), '');\r\n  return (\r\n    <MarkdownLinkRenderer href={cleanedUrl}>\r\n      {children}\r\n    </MarkdownLinkRenderer>\r\n  );\r\n}\r\n\r\nSearchedLinkRenderer.propTypes = propTypes;\r\n\r\nexport default SearchedLinkRenderer;\r\n", "export { default } from './MarkdownLinkRenderer';\r\n", "import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst propTypes = {\r\n  href: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nconst buildLinkAttributes = (href) => {\r\n  let target = '_blank';\r\n  let rel = 'nofollow noopener noreferrer';\r\n\r\n  if (href.startsWith('/')) {\r\n    target = '_self';\r\n    rel = '';\r\n  }\r\n\r\n  return { target, rel };\r\n};\r\n\r\nfunction MarkdownLinkRenderer({ href, children }) {\r\n  const { target, rel } = buildLinkAttributes(href);\r\n  return (\r\n    <a href={href} target={target} rel={rel}>\r\n      {children}\r\n    </a>\r\n  );\r\n}\r\n\r\nMarkdownLinkRenderer.propTypes = propTypes;\r\n\r\nexport default MarkdownLinkRenderer;\r\n", "/* eslint-disable max-len */\r\n/* eslint-disable no-underscore-dangle */\r\n/* eslint-disable no-param-reassign */\r\n/* eslint-disable camelcase */\r\nimport {\r\n  DEFAULT_LIMIT, DEFAULT_OFFSET, COMMUNITY_ANSWER_COMMENT_VOTES_THRESHOLD, DEFAULT_MONTHS,\r\n} from 'app/utils/backend/constants';\r\nimport { ALL_DEPARTMENTS, NOT_ASSIGNED_DEPARTMENT_ID } from 'app/utils/backend/filterConstants';\r\nimport createDateRange from 'app/utils/backend/dateUtils';\r\nimport { db } from 'app/utils/db.server';\r\n\r\nconst getOrderBy = (order) => {\r\n  const orderListBy = {\r\n    oldest: [\r\n      {\r\n        is_pinned: 'desc',\r\n      },\r\n      {\r\n        question_id: 'asc',\r\n      },\r\n    ],\r\n    newest: [\r\n      {\r\n        is_pinned: 'desc',\r\n      },\r\n      {\r\n        question_id: 'desc',\r\n      },\r\n    ],\r\n    most_commented: [\r\n      {\r\n        is_pinned: 'desc',\r\n      },\r\n      {\r\n        Comments: {\r\n          _count: 'desc',\r\n        },\r\n      },\r\n    ],\r\n  };\r\n  return orderListBy[order] || orderListBy.newest;\r\n};\r\n\r\nconst buildWhereStatus = (status) => {\r\n  let filter = {};\r\n\r\n  switch (status) {\r\n    case 'answered':\r\n      filter = {\r\n        Answers: {\r\n          some: {},\r\n        },\r\n      };\r\n      break;\r\n    case 'not_answered':\r\n      filter = {\r\n        Answers: {\r\n          none: {},\r\n        },\r\n      };\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n\r\n  return filter;\r\n};\r\n\r\n// For approved or not approved comments.\r\nconst buildWhereCommentStatus = (commentStatus) => {\r\n  let filter = {};\r\n\r\n  switch (commentStatus) {\r\n    case 'approved':\r\n      filter = {\r\n        Comments: {\r\n          some: {\r\n            approvedBy: {\r\n              not: null,\r\n            },\r\n          },\r\n        },\r\n      };\r\n      break;\r\n    case 'not_approved':\r\n      filter = {\r\n        OR: [\r\n          {\r\n            Comments: {\r\n              some: {\r\n                approvedBy: null,\r\n              },\r\n            },\r\n          },\r\n          {\r\n            Comments: {\r\n              none: {},\r\n            },\r\n          },\r\n        ],\r\n      };\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n\r\n  return filter;\r\n};\r\n\r\n// For approved or not approved comments by community.\r\nconst buildWhereCommentVote = (commentVote) => {\r\n  let filter = {};\r\n\r\n  switch (commentVote) {\r\n    case 'approved':\r\n      filter = {\r\n        Comments: {\r\n          some: {\r\n            CommentVote: {\r\n              some: {\r\n                value: {\r\n                  gte: 10,\r\n                },\r\n              },\r\n            },\r\n          },\r\n        },\r\n      };\r\n      break;\r\n    case 'not_approved':\r\n      filter = {\r\n        Comments: {\r\n          none: {\r\n            CommentVote: {\r\n              some: {\r\n                value: {\r\n                  gte: 10,\r\n                },\r\n              },\r\n            },\r\n          },\r\n        },\r\n      };\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n\r\n  return filter;\r\n};\r\n\r\nconst buildWhereLocation = (location) => {\r\n  if (!location) return {};\r\n\r\n  return {\r\n    location,\r\n  };\r\n};\r\n\r\nconst buildWhereDepartment = (department) => {\r\n  if (department === undefined || department === ALL_DEPARTMENTS) return {};\r\n\r\n  if (department === NOT_ASSIGNED_DEPARTMENT_ID) {\r\n    return {\r\n      assigned_department: null,\r\n    };\r\n  }\r\n\r\n  return { assigned_department: department };\r\n};\r\n\r\nconst buildWhereDateRange = (dateRange) => {\r\n  if (dateRange && dateRange.startDate && dateRange.endDate) {\r\n    return {\r\n      createdAt: {\r\n        lte: new Date(dateRange.endDate),\r\n        gte: new Date(dateRange.startDate),\r\n      },\r\n    };\r\n  }\r\n\r\n  return {};\r\n};\r\n\r\nconst buildWhereSearch = (search) => {\r\n  if (!search) return {};\r\n\r\n  return {\r\n    OR: [\r\n      {\r\n        question: {\r\n          contains: search,\r\n        },\r\n      },\r\n      {\r\n        Answers: {\r\n          some: {\r\n            answer_text: {\r\n              contains: search,\r\n            },\r\n          },\r\n        },\r\n      },\r\n    ],\r\n  };\r\n};\r\n\r\nconst buildWhereLastXMonths = (numMonths, dateRange, search) => {\r\n  if (typeof numMonths === 'number' && (!dateRange && !search)) {\r\n    const { initialDate, lastDate } = createDateRange(new Date(), numMonths);\r\n    return {\r\n      OR: [{\r\n        createdAt: {\r\n          lte: new Date(lastDate),\r\n          gte: new Date(initialDate),\r\n        },\r\n      }, {\r\n        is_pinned: true,\r\n      },\r\n      ],\r\n    };\r\n  }\r\n  return {};\r\n};\r\nconst buildWhereIsAdminSearch = (isAdmin) => {\r\n  if (isAdmin) {\r\n    return {};\r\n  }\r\n\r\n  return { is_enabled: true };\r\n};\r\n\r\nconst buildWhere = ({\r\n  status, commentStatus, commentVote, search, location, department, dateRange, isAdmin,\r\n}) => {\r\n  const where = {\r\n    ...buildWhereStatus(status),\r\n    ...buildWhereCommentStatus(commentStatus),\r\n    ...buildWhereCommentVote(commentVote),\r\n    ...buildWhereLocation(location),\r\n    ...buildWhereDepartment(department),\r\n    ...buildWhereDateRange(dateRange),\r\n    ...buildWhereSearch(search),\r\n    ...buildWhereLastXMonths(DEFAULT_MONTHS, dateRange, search),\r\n    ...buildWhereIsAdminSearch(isAdmin),\r\n  };\r\n  return where;\r\n};\r\n\r\nconst sortQuestions = (sortType, questions) => {\r\n  let _sortQuestions;\r\n  switch (sortType) {\r\n    case 'popular':\r\n      _sortQuestions = questions.sort((a, b) => {\r\n        if (a.numVotes > b.numVotes) return -1;\r\n        if (a.numVotes < b.numVotes) return 1;\r\n        return 0;\r\n      });\r\n      break;\r\n    case 'unpopular':\r\n      _sortQuestions = questions.sort((a, b) => {\r\n        if (a.numVotes > b.numVotes) return 1;\r\n        if (a.numVotes < b.numVotes) return -1;\r\n        return 0;\r\n      });\r\n      break;\r\n    default:\r\n      _sortQuestions = [...questions];\r\n      break;\r\n  }\r\n  return _sortQuestions.sort((a, b) => {\r\n    if (a.is_pinned && !b.is_pinned) return -1;\r\n    if (!a.is_pinned && b.is_pinned) return 1;\r\n    return 0;\r\n  });\r\n};\r\n\r\nconst listQuestions = async (params) => {\r\n  const {\r\n    limit, offset, orderBy, status, commentStatus, commentVote, location, department, dateRange, search, user,\r\n  } = params;\r\n\r\n  const fetchedQuestions = await db.Questions.findMany({\r\n    where: buildWhere({\r\n      status,\r\n      commentStatus,\r\n      commentVote,\r\n      location,\r\n      department,\r\n      dateRange,\r\n      search,\r\n      isAdmin: user ? user.is_admin : false,\r\n    }),\r\n    take: limit || DEFAULT_LIMIT,\r\n    skip: offset || DEFAULT_OFFSET,\r\n    orderBy: getOrderBy(orderBy),\r\n    include: {\r\n      _count: {\r\n        select: {\r\n          Comments: true,\r\n          Votes: true,\r\n        },\r\n      },\r\n      Votes: true,\r\n      Answers: {\r\n        include: {\r\n          Nps: true,\r\n          AnsweredBy: true,\r\n        },\r\n      },\r\n      Comments: {\r\n        include: {\r\n          CommentVote: true,\r\n          Approver: true,\r\n          User: true,\r\n        },\r\n      },\r\n      created_by: true,\r\n      assigned_to: { select: { full_name: true } },\r\n      Department: true,\r\n    },\r\n  });\r\n\r\n  const hasUserData = user && user.id;\r\n\r\n  let questions = fetchedQuestions.map((question) => {\r\n    const hasAnswer = question.Answers.length > 0;\r\n\r\n    let can_edit;\r\n\r\n    // eslint-disable-next-line array-callback-return, consistent-return\r\n    const numLikes = question.Votes.filter((vote) => {\r\n      if (vote.is_upvote || vote.is_upvote === null) {\r\n        return { ...vote };\r\n      }\r\n    }).length;\r\n\r\n    // eslint-disable-next-line array-callback-return, consistent-return\r\n    const numDisklike = question.Votes.filter((vote) => {\r\n      if (!vote.is_upvote && vote.is_upvote !== null) {\r\n        return { ...vote };\r\n      }\r\n    }).length;\r\n\r\n    const hasLike = (hasUserData\r\n    && question.Votes.some(\r\n      (vote) => (vote.is_upvote || vote.is_upvote === null) && vote.user === user.id,\r\n    )\r\n    ) ?? false;\r\n\r\n    const hasDislike = (hasUserData\r\n      && question.Votes.some(\r\n        (vote) => (!vote.is_upvote && vote.is_upvote !== null) && vote.user === user.id,\r\n      )\r\n    ) ?? false;\r\n\r\n    if (question.created_by) {\r\n      can_edit = user && user.email && user.email === question.created_by.email;\r\n    } else {\r\n      // TODO: Check for anonymous comments\r\n    }\r\n    const hasCommentApproved = question.Comments.some((comment) => comment.approvedBy !== null);\r\n    const CommentsComplete = question.Comments.map((comment) => {\r\n      const value = comment.CommentVote.reduce((prev, current) => prev + current.value, 0);\r\n\r\n      return {\r\n        ...comment,\r\n        votes: value,\r\n      };\r\n    });\r\n    const hasCommunityAnswer = CommentsComplete.some((comment) => comment.votes >= COMMUNITY_ANSWER_COMMENT_VOTES_THRESHOLD);\r\n    delete question.Comments;\r\n\r\n    return {\r\n      ...question,\r\n      hasVoted: (hasUserData && question.Votes.some((vote) => vote.user === user.id)) ?? false,\r\n      hasScored: (hasUserData\r\n        && hasAnswer && question.Answers[0].Nps.some((nps) => nps.user === user.id)) ?? false,\r\n      numComments: question._count.Comments,\r\n      numVotes: numLikes - numDisklike,\r\n      can_edit,\r\n      hasCommentApproved,\r\n      hasCommunityAnswer,\r\n      Comments: CommentsComplete,\r\n      numLikes,\r\n      numDisklike,\r\n      hasLike,\r\n      hasDislike,\r\n    };\r\n  });\r\n\r\n  questions = sortQuestions(orderBy, questions);\r\n  return questions;\r\n};\r\n\r\nexport default listQuestions;\r\n", "const createDateRange = (startDate, months) => {\r\n  // january = 0 ... december = 11\r\n  const startDateCopy = new Date(startDate);\r\n  const newDate = new Date(startDateCopy.setMonth(startDate.getMonth() + (months)));\r\n  const initialDate = months < 0 ? newDate : startDate;\r\n  const lastDate = months < 0 ? startDate : newDate;\r\n  return {\r\n    initialDate,\r\n    lastDate: new Date(lastDate.setDate(lastDate.getDate() + 1)),\r\n  };\r\n};\r\n\r\nexport default createDateRange;\r\n", "import { PrismaClient } from \"@prisma/client\";\r\n\r\nlet db;\r\n\r\n// this is needed because in development we don't want to restart\r\n// the server with every change, but we want to make sure we don't\r\n// create a new connection to the DB with every change either.\r\nif (process.env.NODE_ENV === \"production\") {\r\n  db = new PrismaClient();\r\n} else {\r\n  if (!global.__db) {\r\n    global.__db = new PrismaClient();\r\n  }\r\n  db = global.__db;\r\n}\r\n\r\nexport { db };", "import listEmployees from 'app/controllers/employees/list';\r\n\r\nexport const loader = async (data) => {\r\n  const { params } = data;\r\n  if (params.id === -1 || params.id === 'undefined') {\r\n    return [];\r\n  }\r\n  const employess = await listEmployees(params.id);\r\n  return employess;\r\n};\r\n\r\nexport default loader;\r\n", "import { db } from 'app/utils/db.server';\r\n\r\nconst listEmployees = async (id) => {\r\n  const idValue = parseInt(id, 10);\r\n  const relations = await db.EmployeesDepartments.findMany({\r\n    where: {\r\n      department_id: idValue,\r\n    },\r\n    distinct: ['email'],\r\n    include: {\r\n      users: true,\r\n    },\r\n  });\r\n  return relations.map((rel) => ({ name: rel.users.full_name, id: rel.employee_id }));\r\n};\r\n\r\nexport default listEmployees;\r\n", "/* eslint-disable react/no-array-index-key */\r\n/* eslint-disable no-shadow */\r\n/* eslint-disable camelcase */\r\nimport React from 'react';\r\nimport { useLoaderData } from '@remix-run/react';\r\nimport { MdArrowBackIosNew } from 'react-icons/md';\r\nimport { BsCircleFill } from 'react-icons/bs';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { json, redirect } from '@remix-run/node';\r\nimport * as Styled from 'app/styles/QuestionDetails.Styled';\r\nimport { requireAuth, getAuthenticatedUser } from 'app/session.server';\r\nimport Button from 'app/components/Atoms/Button';\r\nimport QuestionDetail from 'app/components/QuestionDetail';\r\nimport QuestionDetailInfo from 'app/components/QuestionDetailInfo';\r\nimport Notifications from 'app/components/Notifications';\r\nimport { COMMENT_INPUT_PLACEHOLDER, RECOMMENDATIONS_QUESTION, DEFAULT_QUESTION_COMMENT_SORTING } from 'app/utils/constants';\r\nimport getQuestionById from 'app/controllers/questions/getQuestionById';\r\nimport listLocations from 'app/controllers/locations/list';\r\nimport modifyPinStatus from 'app/controllers/questions/modifyPinStatus';\r\nimport voteQuestion from 'app/controllers/questionVotes/voteQuestion';\r\nimport createAnswer from 'app/controllers/answers/create';\r\nimport updateAnswer from 'app/controllers/answers/update';\r\nimport deleteAnswer from 'app/controllers/answers/delete';\r\nimport listComments from 'app/controllers/comments/list';\r\nimport createComment from 'app/controllers/comments/create';\r\nimport updateComment from 'app/controllers/comments/update';\r\nimport upsertCommentVote from 'app/controllers/commentVotes/voteComment';\r\nimport deleteComment from 'app/controllers/comments/delete';\r\nimport createNPS from 'app/controllers/answers/nps/create';\r\nimport approvedByComment from 'app/controllers/comments/approvedBy';\r\nimport ACTIONS from 'app/utils/actions';\r\nimport assignQuestion from 'app/controllers/questions/assignQuestion';\r\nimport listDepartments from 'app/controllers/departments/list';\r\nimport deleteNPS from 'app/controllers/answers/nps/delete';\r\nimport modifyEnabledValue from 'app/controllers/questions/modifyEnableStatus';\r\nimport { updateAnswers } from 'app/controllers/answerBot/pdfConv.js'; // Update the Bots database with a recently created answer\r\n\r\nconst replacer = (key, value) => (typeof value === 'bigint' ? value.toString() : value);\r\n\r\nconst jsonCustom = (data, init = {}) => {\r\n  const responseInit = typeof init === 'number' ? {\r\n    status: init,\r\n  } : init;\r\n  const headers = new Headers(responseInit.headers);\r\n\r\n  if (!headers.has('Content-Type')) {\r\n    headers.set('Content-Type', 'application/json; charset=utf-8');\r\n  }\r\n\r\n  return new Response(JSON.stringify(data, replacer), {\r\n    ...responseInit,\r\n    headers,\r\n  });\r\n};\r\n\r\nexport const loader = async ({ request, params }) => {\r\n  await requireAuth(request);\r\n  const user = await getAuthenticatedUser(request);\r\n  const url = new URL(request.url);\r\n  const order = url.searchParams.get('order');\r\n\r\n  const { questionId } = params;\r\n  const { question } = await getQuestionById(parseInt(questionId, 10), user);\r\n\r\n  if (!question) {\r\n    return redirect('/404');\r\n  }\r\n\r\n  const locations = await listLocations();\r\n  const departments = await listDepartments();\r\n\r\n  const parametros = {\r\n    questionId: parseInt(questionId, 10),\r\n    userEmail: user.email,\r\n    userId: user.id,\r\n    sortBy: order !== undefined && order !== null ? order : DEFAULT_QUESTION_COMMENT_SORTING,\r\n    sessionToken: user.accessToken,\r\n  };\r\n  const { comments } = await listComments(parametros);\r\n\r\n  return jsonCustom({\r\n    question,\r\n    locations,\r\n    departments,\r\n    comments,\r\n  });\r\n};\r\n\r\nexport const action = async ({ request }) => {\r\n  const formData = await request.formData();\r\n  const action = formData.get('action');\r\n  let response;\r\n  let answer_id;\r\n  let questionId;\r\n  const user = await getAuthenticatedUser(request);\r\n  switch (action) {\r\n    case ACTIONS.PINNIN:\r\n      questionId = parseInt(formData.get('questionId'), 10);\r\n      const value = formData.get('value') !== 'false';\r\n      response = await modifyPinStatus(questionId, value);\r\n      break;\r\n    case ACTIONS.ENABLED_ACTION:\r\n      questionId = parseInt(formData.get('questionId'), 10);\r\n      const enabledValue = formData.get('enabledValue') !== 'false';\r\n      response = await modifyEnabledValue(questionId, enabledValue);\r\n      break;\r\n    case ACTIONS.VOTE_QUESTION:\r\n      const voteQuestionId = parseInt(formData.get('questionId'), 10);\r\n      const voteQuestionUser = JSON.parse(formData.get('user'));\r\n      const isUpVote = formData.get('isUpVote') === 'true';\r\n      response = await voteQuestion(voteQuestionId, voteQuestionUser, isUpVote);\r\n      break;\r\n    case ACTIONS.CREATE_QUESTION_ANSWER:\r\n      const createAnswerBody = {\r\n        answered_question_id: parseInt(formData.get('questionId'), 10),\r\n        answered_by_employee_id: parseInt(formData.get('employee_id'), 10),\r\n        answer_text: formData.get('answer'),\r\n      };\r\n      response = await createAnswer(createAnswerBody);\r\n      updateAnswers(); // Called as soon as the answer is properly registered in the DB.\r\n      break;\r\n    case ACTIONS.UPDATE_QUESTION_ANSWER:\r\n      const updateAnswerBody = {\r\n        answer_id: parseInt(formData.get('answerId'), 10),\r\n        answer_text: formData.get('answer'),\r\n      };\r\n      response = await updateAnswer(updateAnswerBody);\r\n      break;\r\n    case ACTIONS.DELETE_ANSWER:\r\n      const deleteAnswerBody = {\r\n        answer_id: parseInt(formData.get('answerId'), 10),\r\n      };\r\n      response = await deleteAnswer(deleteAnswerBody);\r\n      break;\r\n    case ACTIONS.ASSIGN_QUESTION:\r\n      const assignQuestionBody = {\r\n        question_id: parseInt(formData.get('questionId'), 10),\r\n        assigned_department: parseInt(formData.get('assigned_department'), 10),\r\n      };\r\n      response = await assignQuestion(assignQuestionBody);\r\n      break;\r\n    case ACTIONS.CREATE_COMMENT:\r\n      const commentToSubmit = JSON.parse(formData.get('commentToSubmit'));\r\n      response = await createComment(commentToSubmit);\r\n      break;\r\n    case ACTIONS.UPDATE_COMMENT:\r\n      const newCommentData = JSON.parse(formData.get('newCommentData'));\r\n      response = await updateComment(newCommentData);\r\n      break;\r\n    case ACTIONS.VOTE_COMMENT:\r\n      const comment_id = parseInt(formData.get('comment_id'), 10);\r\n      const vote = parseInt(formData.get('value'), 10);\r\n      response = await upsertCommentVote({ comment_id, value: vote, user: user.id });\r\n      break;\r\n    case ACTIONS.DELETE_COMMENT:\r\n      const commentId = parseInt(formData.get('comment_id'), 10);\r\n      const { accessToken } = user;\r\n      const userEmail = user.email;\r\n      response = await deleteComment({ commentId, accessToken, userEmail });\r\n      break;\r\n    case ACTIONS.SCORE_ANSWER:\r\n      answer_id = parseInt(formData.get('answer_id'), 10);\r\n      const score = parseInt(formData.get('score'), 10);\r\n      response = await createNPS({\r\n        score, answer_id, user, accessToken: user.accessToken,\r\n      });\r\n      break;\r\n    case ACTIONS.DELETE_SCORE:\r\n      answer_id = parseInt(formData.get('answer_id'), 10);\r\n      response = await deleteNPS({ id: answer_id, user });\r\n      break;\r\n    case ACTIONS.APPROVED_COMMENT:\r\n      const params = JSON.parse(formData.get('params'));\r\n      params.employeeId = user.employee_id;\r\n      response = await approvedByComment(params);\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return json(response);\r\n};\r\n\r\nfunction QuestionDetailPage() {\r\n  const { question } = useLoaderData();\r\n  const navigate = useNavigate();\r\n\r\n  const renderBulletPoint = () => {\r\n    <div>\r\n      <BsCircleFill color=\"var(--color-secondary)\" size=\"7px\" style={{ marginTop: '3px', marginRight: '10px' }} />\r\n    </div>;\r\n  };\r\n\r\n  return (\r\n    <Styled.Container>\r\n      <Notifications />\r\n      <Styled.BackToHomeQuestion>\r\n        <Button onClick={() => { navigate(-1); }}>\r\n          <strong>\r\n            <MdArrowBackIosNew style={{ verticalAlign: 'middle' }} />\r\n            {' '}\r\n            Back\r\n            {' '}\r\n          </strong>\r\n        </Button>\r\n        <QuestionDetailInfo\r\n          location={question.location}\r\n          department={question.Department}\r\n          employeeName={question.assigned_to?.full_name}\r\n        />\r\n      </Styled.BackToHomeQuestion>\r\n      <Styled.QuestionDetail>\r\n        <QuestionDetail question={question} />\r\n      </Styled.QuestionDetail>\r\n      <Styled.QuestionRecommendations>\r\n        <Styled.RecommendationsContainer>\r\n          <Styled.Recommendations>\r\n            <span> Things to keep in mind</span>\r\n            <span>\r\n              {renderBulletPoint()}\r\n              {COMMENT_INPUT_PLACEHOLDER}\r\n            </span>\r\n            {\r\n                  RECOMMENDATIONS_QUESTION.map((text, index) => (\r\n                    <span key={index}>\r\n                      {renderBulletPoint()}\r\n                      {text}\r\n                    </span>\r\n                  ))\r\n                }\r\n          </Styled.Recommendations>\r\n        </Styled.RecommendationsContainer>\r\n      </Styled.QuestionRecommendations>\r\n    </Styled.Container>\r\n  );\r\n}\r\n\r\nexport default QuestionDetailPage;\r\n", "/* eslint-disable import/prefer-default-export */\r\nimport styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\nbackground-color: #f4f7f9;\r\ndisplay: flex;\r\nwidth: 100%;\r\nheight: 100%;\r\nflex-direction: row;\r\npadding-top: 30px;\r\noverflow: auto;\r\n\r\n@media (max-width: 1025px) {\r\n  flex-direction: column;\r\n  height: auto;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  height: auto;\r\n  overflow: hidden;\r\n}\r\n`;\r\n\r\nexport const BackToHomeQuestion = styled.div`\r\nflex: 1;\r\n\r\n    @media (max-width: 1025px) {\r\n        padding: 20px 0; \r\n    }\r\n\r\n    button {\r\n        padding: 0 24px;\r\n        color: var(--color-secondary);\r\n        font-weight: bolder;\r\n    }\r\n`;\r\n\r\nexport const QuestionDetail = styled.div`\r\nflex: 2;\r\nheight: 100%;\r\nwidth: 100%;\r\n`;\r\nexport const RecommendationsContainer = styled.div`\r\n  padding: 0 40px;\r\n\r\n  @media (max-width: 768px) {\r\n    padding: 0 25px 0 20px;\r\n  }\r\n`;\r\n\r\nexport const QuestionRecommendations = styled.div`\r\nflex: 1;\r\n\r\n    @media (max-width: 1025px){\r\n        display:none;\r\n    }\r\n`;\r\n\r\nexport const Recommendations = styled.div`\r\nbackground-color: var(--color-secondary-light);\r\nborder-radius: 15px;\r\ndisplay: flex;\r\nflex-direction: column;\r\nfont-size: 13px;\r\npadding: 20px;\r\n\r\nspan {\r\ndisplay: flex; \r\nflex-direction: row;\r\n\r\n    &:first-child {\r\n        justify-content: center;\r\n        color: var(--color-secondary);\r\n        font-weight: 600;\r\n        font-size: 14px;\r\n        margin-bottom: 15px;\r\n    }\r\n\r\n    &:nth-child(2),\r\n    &:nth-child(3),\r\n    &:nth-child(4) {\r\n        margin-bottom: 10px;\r\n    }\r\n}\r\n`;\r\n", "export { default } from './QuestionDetail';\r\n", "/* eslint-disable camelcase */\r\nimport React, { useState, useRef } from 'react';\r\nimport { useSubmit, useTransition, useSearchParams } from '@remix-run/react';\r\nimport { useParams } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport likeIcon from 'app/images/ic_like.svg';\r\nimport likeIconVoted from 'app/images/ic_like_pressed.svg';\r\nimport diskilike from 'app/images/ic_dislike.svg';\r\nimport dislikeIconVoted from 'app/images/ic_dislike_pressed.svg';\r\nimport {\r\n  shouldRenderAdminButtons,\r\n  renderAdminButtons,\r\n  renderAnswer,\r\n} from 'app/utils/questionUtils';\r\nimport { addS } from 'app/utils/stringOperations';\r\nimport { PRIMARY_BUTTON, LSPIN_SMALL } from 'app/utils/constants';\r\nimport Button from 'app/components/Atoms/Button';\r\nimport CounterButton from 'app/components/CounterButton';\r\nimport QuestionCommentList from 'app/components/QuestionCommentList';\r\nimport AssignAnswerModal from 'app/components/Modals/AssignAnswerModal/AssignAnswerModal';\r\nimport CommentInput from 'app/components/CommentInput/CommentInput';\r\nimport QuestionRow from 'app/components/QuestionRow';\r\nimport AnswerModal from 'app/components/Modals/AnswerModal/AnswerModal';\r\nimport DeleteAnswerModal from 'app/components/Modals/DeleteAnswerModal/DeleteAnswerModal';\r\nimport NetPromoterScoreRow from 'app/components/NetPromoterScoreRow/NetPromoterScoreRow';\r\nimport {\r\n  QuestionCardActions, QuestionCardContainer, QuestionCardWrapper, QuestionCardBorder,\r\n} from 'app/components/QuestionCard/QuestionCard.Styled';\r\nimport * as Styled from 'app/components/QuestionDetail/QuestionDetail.Styled';\r\nimport Loader from 'app/components/Loader';\r\nimport logomark from 'app/images/logomark_small.png';\r\nimport useUser from 'app/utils/hooks/useUser';\r\nimport ACTIONS from 'app/utils/actions';\r\n\r\nfunction QuestionDetails(props) {\r\n  const submit = useSubmit();\r\n  const transition = useTransition();\r\n  const voteQuestionForm = useRef();\r\n  const profile = useUser();\r\n  const isAdmin = profile.is_admin;\r\n  const currentUserEmail = profile.email;\r\n\r\n  const { question } = props;\r\n\r\n  const initialState = {\r\n    showAnswerModal: false,\r\n    showAssignAnswerModal: false,\r\n    showDeleteAnswerModal: false,\r\n  };\r\n\r\n  const [state, setState] = useState(initialState);\r\n  const [writingCommentOnMobile, setWritingCommentOnMobile] = useState(false);\r\n  const [searchParams] = useSearchParams();\r\n\r\n  const { questionId } = useParams();\r\n\r\n  const addComment = () => {\r\n    setWritingCommentOnMobile(true);\r\n  };\r\n\r\n  const renderQuestionButtons = () => {\r\n    const onLikeButtonClick = (isUpVote) => {\r\n      if (transition.state !== 'idle') {\r\n        return;\r\n      }\r\n      const data = new FormData(voteQuestionForm.current);\r\n      data.set('action', ACTIONS.VOTE_QUESTION);\r\n      data.set('questionId', question.question_id);\r\n      data.set('user', JSON.stringify(profile));\r\n      data.set('isUpVote', isUpVote);\r\n      let url = `/questions/${question.question_id}`;\r\n      const urlSearchParam = searchParams.get('order');\r\n      url = urlSearchParam !== null ? `${url}?order=${urlSearchParam}` : url;\r\n      submit(data, {\r\n        method: 'post',\r\n        action: url,\r\n        replace: true,\r\n      });\r\n    };\r\n\r\n    const icon = !question.hasLike ? likeIcon : likeIconVoted;\r\n    const dislikeicon = !question.hasDislike ? diskilike : dislikeIconVoted;\r\n\r\n    return (\r\n      <Styled.CounterButtonsWrapper\r\n        isAdmin={isAdmin}\r\n        hasAnswer={question.Answer}\r\n      >\r\n        <CounterButton\r\n          selected={question.hasLike}\r\n          icon={icon}\r\n          count={question.numLikes}\r\n          processingFormSubmission={transition.state !== 'idle'}\r\n          onClick={() => { onLikeButtonClick(true); }}\r\n          isDisabled={question.hasDislike}\r\n        />\r\n        <CounterButton\r\n          selected={question.hasDislike}\r\n          icon={dislikeicon}\r\n          count={question.numDisklike}\r\n          processingFormSubmission={transition.state !== 'idle'}\r\n          onClick={() => { onLikeButtonClick(false); }}\r\n          isDisabled={question.hasLike}\r\n        />\r\n      </Styled.CounterButtonsWrapper>\r\n    );\r\n  };\r\n\r\n  const renderNumCommentsRow = () => (\r\n    <Styled.NumComments>\r\n      {question.numComments}\r\n      {' '}\r\n      {addS('Comment', question.numComments)}\r\n    </Styled.NumComments>\r\n  );\r\n\r\n  const openAssignAnswerModal = () => {\r\n    setState({\r\n      ...state,\r\n      showAssignAnswerModal: true,\r\n    });\r\n  };\r\n\r\n  const openAnswerModal = () => {\r\n    setState({\r\n      ...state,\r\n      showAnswerModal: true,\r\n    });\r\n  };\r\n\r\n  const openDeleteAnswerModal = () => {\r\n    setState({\r\n      ...state,\r\n      showDeleteAnswerModal: true,\r\n    });\r\n  };\r\n\r\n  const handleAnswerModalClose = () => {\r\n    setState({\r\n      ...state,\r\n      showAnswerModal: false,\r\n    });\r\n  };\r\n\r\n  const handleDeleteAnswerModalClose = () => {\r\n    setState({ ...state, showDeleteAnswerModal: false });\r\n  };\r\n\r\n  const answerModal = state.showAnswerModal ? (\r\n    <AnswerModal\r\n      question={question}\r\n      onClose={handleAnswerModalClose}\r\n      openAssignAnswerModal={openAssignAnswerModal}\r\n    />\r\n  ) : null;\r\n\r\n  const deleteAnswerModal = state.showDeleteAnswerModal ? (\r\n    <DeleteAnswerModal\r\n      question={question}\r\n      onClose={handleDeleteAnswerModalClose}\r\n    />\r\n  ) : null;\r\n\r\n  const scoreAnswer = (score, answer_id) => {\r\n    const data = new FormData();\r\n    data.set('score', score);\r\n    data.set('answer_id', answer_id);\r\n    data.set('action', ACTIONS.SCORE_ANSWER);\r\n    let url = `/questions/${question.question_id}`;\r\n    const urlSearchParam = searchParams.get('order');\r\n    url = urlSearchParam !== null ? `${url}?order=${urlSearchParam}` : url;\r\n    submit(data, { method: 'post', action: url, replace: true });\r\n  };\r\n\r\n  const deleteScore = (answer_id) => {\r\n    const data = new FormData();\r\n    data.set('answer_id', answer_id);\r\n    data.set('action', ACTIONS.DELETE_SCORE);\r\n    let url = `/questions/${question.question_id}`;\r\n    const urlSearchParam = searchParams.get('order');\r\n    url = urlSearchParam !== null ? `${url}?order=${urlSearchParam}` : url;\r\n    submit(data, { method: 'post', action: url, replace: true });\r\n  };\r\n\r\n  const renderNPS = (answer) => answer\r\n  && answer.AnsweredBy.email !== currentUserEmail\r\n  && (\r\n  <div>\r\n    <NetPromoterScoreRow\r\n      answer_id={answer.answer_id}\r\n      hasScored={!!answer.hasScored}\r\n      canUndoNps={!!answer.canUndoNps}\r\n      scoreAnswer={scoreAnswer}\r\n      deleteScore={deleteScore}\r\n    />\r\n  </div>\r\n  );\r\n\r\n  const isEmpty = (obj) => Object.keys(obj).length === 0;\r\n\r\n  const handleAssignAnswerModalClose = () => {\r\n    setState({ ...state, showAssignAnswerModal: false });\r\n  };\r\n  const handleAssignAnswerModalSubmitSuccess = () => {\r\n    setState({\r\n      ...state,\r\n      showAssignAnswerModal: false,\r\n      showAnswerModal: false,\r\n    });\r\n  };\r\n  const assignAnswerModal = state.showAssignAnswerModal ? (\r\n    <AssignAnswerModal\r\n      question={question}\r\n      onClose={handleAssignAnswerModalClose}\r\n      onSubmitSuccess={handleAssignAnswerModalSubmitSuccess}\r\n    />\r\n  ) : null;\r\n\r\n  return (\r\n    <Styled.Container>\r\n      {!isEmpty(question)\r\n      && question.question_id === parseInt(questionId, 10)\r\n      && isAdmin !== undefined ? (\r\n        <Styled.QuestionDetail>\r\n          <Styled.QuestionDetailHeader>\r\n            <QuestionCardContainer>\r\n              <QuestionCardWrapper>\r\n                <QuestionCardBorder>\r\n                  <QuestionRow question={question} isFromList={false} />\r\n                  <QuestionCardActions\r\n                    hasDetail\r\n                    hasAnswer={question.Answer}\r\n                    isQuestionModalOpen\r\n                  >\r\n                    {renderQuestionButtons()}\r\n                    {shouldRenderAdminButtons(question, isAdmin)\r\n                      && renderAdminButtons({\r\n                        question,\r\n                        onAnswerClick: () => {\r\n                          setState({ ...state, showAnswerModal: true });\r\n                        },\r\n                        onAssignAnswerClick: () => { openAssignAnswerModal(question); },\r\n                      })}\r\n                  </QuestionCardActions>\r\n                </QuestionCardBorder>\r\n              </QuestionCardWrapper>\r\n              {renderAnswer({\r\n                Answer: question.Answer,\r\n                isAdmin,\r\n                currentUserEmail,\r\n                onAnswerClick: () => {\r\n                  openAnswerModal(question);\r\n                },\r\n                openDeleteAnswerModal: () => {\r\n                  openDeleteAnswerModal(question);\r\n                },\r\n                question,\r\n                isQuestionModalOpen: true,\r\n                isFromList: false,\r\n              })}\r\n            </QuestionCardContainer>\r\n            {renderNPS(question.Answer)}\r\n          </Styled.QuestionDetailHeader>\r\n          <Styled.QuestionDetailBody>\r\n            <QuestionCommentList\r\n              questionId={parseInt(questionId, 10)}\r\n              isAdmin={isAdmin}\r\n              hasAnswer={question.Answer !== null}\r\n            >\r\n              {renderNumCommentsRow()}\r\n            </QuestionCommentList>\r\n          </Styled.QuestionDetailBody>\r\n          <Styled.QuestionDetailFooter\r\n            className={writingCommentOnMobile ? 'writing-mobile' : ''}\r\n          >\r\n            <Button\r\n              type=\"button\"\r\n              category={PRIMARY_BUTTON}\r\n              className={\r\n                writingCommentOnMobile ? 'writing-mobile' : 'add-comment-button'\r\n              }\r\n              onClick={addComment}\r\n            >\r\n              Add Comment\r\n            </Button>\r\n            <CommentInput\r\n              isWritingCommentMobile={writingCommentOnMobile}\r\n              setWritingCommentOnMobile={setWritingCommentOnMobile}\r\n              questionId={parseInt(questionId, 10)}\r\n            />\r\n\r\n          </Styled.QuestionDetailFooter>\r\n        </Styled.QuestionDetail>\r\n        ) : (\r\n          <Loader src={logomark} size={LSPIN_SMALL} />\r\n        )}\r\n      {answerModal}\r\n      {deleteAnswerModal}\r\n      {assignAnswerModal}\r\n    </Styled.Container>\r\n  );\r\n}\r\n\r\nQuestionDetails.propTypes = {\r\n  question: PropTypes.shape({\r\n    question_id: PropTypes.number.isRequired,\r\n    question: PropTypes.string.isRequired,\r\n    user_hash: PropTypes.string,\r\n    can_edit: PropTypes.bool,\r\n    AnsweredBy: PropTypes.shape({\r\n      email: PropTypes.string,\r\n      employee_id: PropTypes.number,\r\n      full_name: PropTypes.string,\r\n      is_admin: PropTypes.bool,\r\n      job_title: PropTypes.string,\r\n      profile_picture: PropTypes.string,\r\n    }),\r\n    createdAt: PropTypes.string.isRequired,\r\n    location: PropTypes.string.isRequired,\r\n    numComments: PropTypes.number.isRequired,\r\n    hasVoted: PropTypes.bool.isRequired,\r\n    Answer: PropTypes.shape({\r\n      answer: PropTypes.string,\r\n      answer_id: PropTypes.number.isRequired,\r\n      answered_at: PropTypes.string,\r\n      answered_by_id: PropTypes.number,\r\n      hasScored: PropTypes.bool,\r\n      canUndoNps: PropTypes.bool,\r\n    }),\r\n    mostUpvoted: PropTypes.bool,\r\n    numLikes: PropTypes.number.isRequired,\r\n    numDisklike: PropTypes.number.isRequired,\r\n    hasLike: PropTypes.bool.isRequired,\r\n    hasDislike: PropTypes.bool.isRequired,\r\n  }),\r\n};\r\n\r\nQuestionDetails.defaultProps = {\r\n  question: null,\r\n};\r\n\r\nexport default QuestionDetails;\r\n", "import React from 'react';\r\nimport AnswerRow from 'app/components/AnswerRow';\r\nimport {\r\n  DEPARTMENT_NOT_ASSIGNED,\r\n  ANSWER,\r\n  REASSIGN,\r\n  TEXT_BUTTON,\r\n} from 'app/utils/constants';\r\nimport Button from 'app/components/Atoms/Button';\r\nimport AnswerAdminOptions from 'app/components/AnswerAdminOptions';\r\n\r\nconst renderDepartment = (department) => (department ? department.name : DEPARTMENT_NOT_ASSIGNED);\r\n\r\nfunction shouldRenderAdminButtons(question, isAdmin) {\r\n  return !question.Answer && isAdmin;\r\n}\r\n\r\nfunction hasJobTitle(createdBy) {\r\n  if (!createdBy) return '';\r\n\r\n  return createdBy.job_title;\r\n}\r\n\r\nfunction renderAdminButtons(renderAdminBtnProps) {\r\n  const { question, onAnswerClick, onAssignAnswerClick } = renderAdminBtnProps;\r\n  return (\r\n    <div className=\"question-row__admin-buttons--container\" style={{ display: 'flex' }}>\r\n      <Button\r\n        type=\"button\"\r\n        category={TEXT_BUTTON}\r\n        className=\"admin-button\"\r\n        onClick={() => onAnswerClick(question)}\r\n      >\r\n        {ANSWER}\r\n      </Button>\r\n      <Button\r\n        type=\"button\"\r\n        category={TEXT_BUTTON}\r\n        className=\"admin-button\"\r\n        onClick={() => onAssignAnswerClick(question)}\r\n      >\r\n        {REASSIGN}\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction renderAnswer(renderAnswerProps) {\r\n  const {\r\n    isAdmin,\r\n    currentUserEmail,\r\n    onAnswerClick,\r\n    openDeleteAnswerModal,\r\n    question,\r\n    searchTerm,\r\n    isPreview,\r\n    isQuestionModalOpen,\r\n    isFromList,\r\n  } = renderAnswerProps;\r\n\r\n  let Answer;\r\n  if (question.Answers.length > 0) {\r\n    // eslint-disable-next-line prefer-destructuring\r\n    Answer = question.Answers[0];\r\n  }\r\n\r\n  if (!Answer) {\r\n    return null;\r\n  }\r\n  let actionsEnabled = false;\r\n  if (Answer.num_scores <= 1) {\r\n    actionsEnabled = true;\r\n  }\r\n\r\n  return (\r\n    <AnswerRow\r\n      {...Answer}\r\n      searchTerm={searchTerm}\r\n      isPreview={isPreview}\r\n      isQuestionModalOpen={isQuestionModalOpen}\r\n      questionId={question.question_id}\r\n      isFromList={isFromList}\r\n      user={Answer.AnsweredBy}\r\n      isAnswer\r\n      isCommunityAnswer={false}\r\n      isCommentApproved={false}\r\n    >\r\n      { isAdmin && Answer.AnsweredBy.email === currentUserEmail && (\r\n        <AnswerAdminOptions\r\n          isPreview={isPreview}\r\n          isDisabled={!actionsEnabled}\r\n          onAnswerClick={onAnswerClick}\r\n          openDeleteAnswerModal={openDeleteAnswerModal}\r\n          question={question}\r\n        />\r\n      )}\r\n    </AnswerRow>\r\n  );\r\n}\r\n\r\nexport {\r\n  renderDepartment,\r\n  shouldRenderAdminButtons,\r\n  hasJobTitle,\r\n  renderAdminButtons,\r\n  renderAnswer,\r\n};\r\n", "export { default } from './AnswerRow';\r\n", "/* eslint-disable react/no-children-prop */\r\nimport React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { getDateData } from 'app/utils/timeOperations';\r\nimport { showCollapseOrExpandMessage, formatCollapsingText } from 'app/utils/stringOperations';\r\nimport { markdownFormat } from 'app/utils/markdownFormatQuestions';\r\nimport { COLLAPSED_ANSWER_MIN_LENGTH, TEXT_BUTTON } from 'app/utils/constants';\r\nimport * as Styled from 'app/components/AnswerRow/AnswerRow.Styled';\r\nimport MarkdownLinkRenderer from 'app/components/MarkdownLinkRenderer';\r\nimport ConditionalLinkTo from 'app/components/Atoms/ConditionalLinkTo';\r\nimport QuestionResponderInfo from 'app/components/QuestionResponderInfo';\r\nimport Button from 'app/components/Atoms/Button';\r\nimport Label from 'app/components/Atoms/Label';\r\nimport { CircleIcon, DateContainer } from 'app/components/QuestionResponderInfo/QuestionResponderInfo.Styled';\r\n\r\nfunction AnswerRow({\r\n  searchTerm, isPreview, isQuestionModalOpen, ...props\r\n}) {\r\n  const shouldCollapse = () => props.answer_text.length > COLLAPSED_ANSWER_MIN_LENGTH;\r\n  const [collapsed, setCollapsed] = useState(shouldCollapse);\r\n\r\n  const renderAnswer = () => (\r\n    <Styled.AnswerRow>\r\n      <ConditionalLinkTo to={`/questions/${props.questionId}`} condition={props.isFromList}>\r\n        <Styled.AnswerMarkdown\r\n          children={formatCollapsingText(\r\n            markdownFormat(props.answer_text, searchTerm),\r\n            shouldCollapse(),\r\n            collapsed,\r\n            COLLAPSED_ANSWER_MIN_LENGTH,\r\n          )}\r\n          components={{ link: MarkdownLinkRenderer }}\r\n        />\r\n      </ConditionalLinkTo>\r\n      {shouldCollapse() && (\r\n        <Button type=\"button\" category={TEXT_BUTTON} onClick={() => setCollapsed(!collapsed)}>\r\n          {' '}\r\n          {showCollapseOrExpandMessage(collapsed)}\r\n        </Button>\r\n      )}\r\n    </Styled.AnswerRow>\r\n  );\r\n\r\n  const renderAnswerLabel = () => {\r\n    if (props.isCommentApproved) {\r\n      return <Label type=\"Answer\" text=\"Approved\" approvedBy={props.approver.full_name} />;\r\n    }\r\n    if (props.isCommunityAnswer) {\r\n      return <Label type=\"Answer\" text=\"Community answer\" />;\r\n    }\r\n\r\n    return (\r\n      <Label type=\"Answer\" text=\"Best Answer\" />\r\n    );\r\n  };\r\n\r\n  const getAnswerDate = () => {\r\n    if (props.isCommunityAnswer || props.isCommentApproved) {\r\n      return props.answered_at;\r\n    }\r\n\r\n    return props.answer_date;\r\n  };\r\n\r\n  const { user, children } = props;\r\n\r\n  const anwserDate = getAnswerDate();\r\n\r\n  return (\r\n    <Styled.AnswerContainer isPreview={isPreview} isQuestionModalOpen={isQuestionModalOpen}>\r\n      <Styled.AnsweredMetadata isPreview={isPreview}>\r\n        <Styled.AnsweredMetadataLeft hasJobTitle={user !== null ? user.job_title : ''}>\r\n          <ConditionalLinkTo to={`/questions/${props.questionId}`} condition={props.isFromList}>\r\n            <QuestionResponderInfo createdBy={user} isAnswer>\r\n              <DateContainer hasJobTitle={user !== null ? user.job_title : ''}>\r\n                <CircleIcon />\r\n                <Styled.AnswerRowDate isQuestionModalOpen={isQuestionModalOpen}>\r\n                  {getDateData(anwserDate)}\r\n                </Styled.AnswerRowDate>\r\n              </DateContainer>\r\n            </QuestionResponderInfo>\r\n          </ConditionalLinkTo>\r\n          <Styled.AnsweredRightContainer>\r\n            {renderAnswerLabel()}\r\n            {children}\r\n          </Styled.AnsweredRightContainer>\r\n        </Styled.AnsweredMetadataLeft>\r\n      </Styled.AnsweredMetadata>\r\n      {renderAnswer({ isQuestionModalOpen })}\r\n    </Styled.AnswerContainer>\r\n  );\r\n}\r\n\r\nAnswerRow.propTypes = {\r\n  answer_text: PropTypes.string.isRequired,\r\n  user: PropTypes.shape({\r\n    email: PropTypes.string.isRequired,\r\n    full_name: PropTypes.string.isRequired,\r\n    profile_picture: PropTypes.string.isRequired,\r\n    job_title: PropTypes.string,\r\n  }).isRequired,\r\n  createdAt: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n  searchTerm: PropTypes.string,\r\n  isPreview: PropTypes.bool,\r\n  isQuestionModalOpen: PropTypes.bool,\r\n  isFromList: PropTypes.bool,\r\n  questionId: PropTypes.number.isRequired,\r\n  isAnswer: PropTypes.bool.isRequired,\r\n  isCommunityAnswer: PropTypes.bool.isRequired,\r\n  isCommentApproved: PropTypes.bool.isRequired,\r\n  approver: PropTypes.shape({\r\n    email: PropTypes.string.isRequired,\r\n    full_name: PropTypes.string.isRequired,\r\n    profile_picture: PropTypes.string.isRequired,\r\n    job_title: PropTypes.string,\r\n  }),\r\n  answer_date: PropTypes.string,\r\n  answered_at: PropTypes.string,\r\n};\r\n\r\nAnswerRow.defaultProps = {\r\n  searchTerm: '',\r\n  isPreview: false,\r\n  isQuestionModalOpen: false,\r\n  isFromList: true,\r\n  approver: {},\r\n  answer_date: '',\r\n  answered_at: '',\r\n};\r\n\r\nexport default AnswerRow;\r\n", "import moment from 'moment';\r\nimport getFormattedDate from './dateFormat';\r\n\r\nexport function getTimeDiff(time) {\r\n  return moment(time).fromNow();\r\n}\r\n\r\nexport function getDateData(time) {\r\n  const diff = moment.duration(moment().diff(time)).years();\r\n  if (diff > 0) {\r\n    return getFormattedDate(time);\r\n  }\r\n  return getTimeDiff(time);\r\n}\r\n", "import moment from 'moment';\r\n\r\nfunction getFormattedDate(date) {\r\n  return moment(date).format('DD/MMM/YYYY');\r\n}\r\n\r\nexport default getFormattedDate;\r\n", "import styled, { css } from 'styled-components';\r\nimport Markdown from 'react-markdown';\r\nimport { QuestionerResponderContainer } from 'app/components/QuestionResponderInfo/QuestionResponderInfo.Styled';\r\n\r\nexport const AnswerRow = styled.div` \r\n  font-family: 'Nunito', sans-serif;\r\n  font-size: 14px;\r\n  letter-spacing: 0.6px;\r\n  line-height: 1.71;\r\n  width: 100%;\r\n`;\r\n\r\nexport const AnswerMarkdown = styled(Markdown)`\r\n  color: var(--color-dark-50);\r\n  overflow-wrap: break-word;\r\n  p {\r\n    color: var(--color-dark-50);\r\n    overflow-wrap: break-word;\r\n    @media screen and (max-width: 480px) {\r\n      margin-bottom: 0\r\n    }\r\n  }\r\n  a {\r\n    color: var(--color-secondary);\r\n    cursor: pointer;\r\n  }\r\n  @media screen and (max-width: 480px) {\r\n    margin-bottom: 0\r\n  }\r\n`;\r\n\r\nexport const AnswerContainer = styled.div`\r\n  width: 100%;\r\n  background-color: #EDF5FF;\r\n  border-radius: 0px 0px 15px 15px;\r\n  padding: 15px 20px 10px;\r\n\r\n  @media screen and (max-width: 480px) {\r\n    padding: 15px 12px 10px;\r\n  }\r\n`;\r\n\r\nexport const AnsweredBy = styled.div`\r\n  color: var(--color-secondary);\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n  margin-bottom: ${(props) => (props.isPreview ? '14px' : '4px')};\r\n`;\r\n\r\nexport const AnsweredMetadata = styled.div`\r\n  align-items: flex-start;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  flex-direction: row;\r\n  margin-bottom: 17px;\r\n  position: relative;\r\n  width: 100%;\r\n  display: flex;\r\n\r\n  @media screen and (max-width: 480px) {\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n  }\r\n`;\r\n\r\nexport const AnsweredRightContainer = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const AnsweredMetadataLeft = styled.div`\r\n    display: flex;\r\n    align-items: flex-start;\r\n    width: 100%;\r\n\r\n    ${(props) => !props.hasJobTitle && css`\r\n      align-items: center;\r\n\r\n      @media screen and (max-width: 480px) {\r\n        flex-direction: column;\r\n        align-items: flex-start;\r\n      }\r\n    `}\r\n\r\n    @media screen and (max-width: 480px) {\r\n      flex-direction: column;\r\n\r\n      ${QuestionerResponderContainer} {\r\n        margin-bottom: 5px;\r\n      }\r\n    }\r\n`;\r\n\r\nexport const AnswerRowDate = styled.div`\r\n  color: var(--color-dark-metadata);\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-family: \"Nunito\", sans-serif;\r\n  font-size: 12px;\r\n  align-items: end;\r\n  letter-spacing: 0.7px;\r\n  margin-right: 8px;\r\n`;\r\n\r\nexport const AnswerRowBorderBottom = styled.div`\r\n  margin-top: 8px;\r\n  width: 100%;\r\n`;\r\n", "import styled, { css } from 'styled-components';\r\nimport { BsFillCircleFill } from 'react-icons/bs';\r\n\r\nexport const QuestionerResponderContainer = styled.div`\r\n  align-items: flex-start;\r\n  color: var(--color-dark-50);\r\n  display: inline-flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n\r\n  ${(props) => !props.hasJobTitle && css`\r\n    align-items: center;\r\n  `}\r\n`;\r\n\r\nexport const QuestionResponderWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: max-content;\r\n`;\r\n\r\nexport const QuestionerResponderInfoContainer = styled.div`\r\n  font-family: \"Nunito\", sans-serif;\r\n  font-size: 12px;\r\n  margin-left: 8px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const QuestionerResponderName = styled.span`\r\n  font-family: \"Nunito\", sans-serif;\r\n  font-size: 13px;\r\n  font-weight: 700;\r\n  letter-spacing: 0.5px;\r\n  margin-bottom: -3px;\r\n`;\r\n\r\nexport const QuestionerResponderJobTitle = styled.span`\r\n  margin-top: 4px;\r\n  font-size: 12px;\r\n`;\r\n\r\nexport const QuestionerResponderCircumstance = styled.span`\r\n  letter-spacing: 0.7px;\r\n  margin-top: 8px;\r\n`;\r\n\r\nexport const TopContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\n\r\nexport const CircleIcon = styled(BsFillCircleFill)`\r\n    font-size: 5px;\r\n    color: var(--color-dark-metadata);\r\n    margin: 0 5px;\r\n`;\r\n\r\nexport const DateContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: max-content;\r\n\r\n  ${(props) => (props.hasJobTitle) && css`\r\n        margin-top: 3px;\r\n  `};\r\n\r\n  @media screen and (max-width: 480px) {\r\n    ${(props) => props.isComment && css`\r\n      margin-left: 40px;\r\n      margin-top: -13px;\r\n    `};\r\n\r\n    ${(props) => (props.isComment && props.hasJobTitle) && css`\r\n        margin-top: -5px;\r\n    `};\r\n  }\r\n`;\r\n", "export { default } from './ConditionalLinkTo';\r\n", "import React from 'react';\r\nimport { Link } from '@remix-run/react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction ConditionalLinkTo({ children, to, condition }) {\r\n  if (condition) {\r\n    return <Link style={{ textDecoration: 'none' }} to={to}>{children}</Link>;\r\n  }\r\n  return <div>{children}</div>;\r\n}\r\n\r\nConditionalLinkTo.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  to: PropTypes.string.isRequired,\r\n  condition: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default ConditionalLinkTo;\r\n", "export { default } from './QuestionResponder';\r\n", "import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as Styled from 'app/components/QuestionResponderInfo/QuestionResponderInfo.Styled';\r\nimport UserImage from 'app/components/Atoms/UserImage';\r\nimport { ANONYMOUS_USER } from 'app/utils/constants';\r\n\r\nfunction QuestionerResponderInfo(props) {\r\n  const renderName = (createdBy) => {\r\n    if (createdBy && createdBy.full_name) {\r\n      return createdBy.full_name;\r\n    }\r\n    return ANONYMOUS_USER.username;\r\n  };\r\n\r\n  const renderProfilePicture = (createdBy) => {\r\n    if (createdBy && createdBy.profile_picture) {\r\n      return createdBy.profile_picture;\r\n    }\r\n    return ANONYMOUS_USER.profilePicture;\r\n  };\r\n\r\n  const renderJobTitle = (createdBy) => {\r\n    if (createdBy && createdBy.is_admin && createdBy.job_title) {\r\n      return createdBy.job_title;\r\n    }\r\n    return '';\r\n  };\r\n\r\n  const { children, createdBy } = props;\r\n  const fullName = renderName(createdBy);\r\n  const jobTitle = renderJobTitle(createdBy);\r\n  const profilePicture = renderProfilePicture(createdBy);\r\n  return (\r\n    <Styled.QuestionerResponderContainer hasJobTitle={jobTitle}>\r\n      <Styled.QuestionResponderWrapper>\r\n        <UserImage src={profilePicture} size={props.userImgSize} />\r\n        <Styled.QuestionerResponderInfoContainer>\r\n          <Styled.QuestionerResponderName>\r\n            {fullName}\r\n          </Styled.QuestionerResponderName>\r\n          <Styled.QuestionerResponderJobTitle>\r\n            {jobTitle}\r\n          </Styled.QuestionerResponderJobTitle>\r\n        </Styled.QuestionerResponderInfoContainer>\r\n      </Styled.QuestionResponderWrapper>\r\n      {children}\r\n    </Styled.QuestionerResponderContainer>\r\n  );\r\n}\r\n\r\nQuestionerResponderInfo.defaultProps = {\r\n  createdBy: {\r\n    full_name: ANONYMOUS_USER.username,\r\n    profile_picture: ANONYMOUS_USER.profilePicture,\r\n  },\r\n  userImgSize: 'medium',\r\n  children: null,\r\n};\r\n\r\nQuestionerResponderInfo.propTypes = {\r\n  createdBy: PropTypes.shape({\r\n    full_name: PropTypes.string.isRequired,\r\n    profile_picture: PropTypes.string.isRequired,\r\n  }),\r\n  userImgSize: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default QuestionerResponderInfo;\r\n", "export { default } from './Label';\r\n", "import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as Styled from './Label.Styled';\r\n\r\nfunction Label({ text, type, approvedBy }) {\r\n  return (\r\n    <Styled.LabelContainer>\r\n      <Styled.Label type={type} text={text}>\r\n        {text}\r\n      </Styled.Label>\r\n      {approvedBy && (\r\n      <Styled.ApproverName>\r\n        by\r\n        <strong>{approvedBy}</strong>\r\n      </Styled.ApproverName>\r\n      )}\r\n    </Styled.LabelContainer>\r\n  );\r\n}\r\n\r\nLabel.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  approvedBy: PropTypes.string,\r\n};\r\n\r\nLabel.defaultProps = {\r\n  approvedBy: null,\r\n};\r\n\r\nexport default Label;\r\n", "import styled, { css } from 'styled-components';\r\n\r\nexport const LabelContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Label = styled.div`\r\n  background-color: var(--color-secondary-lowOpacity);\r\n  border-radius: 20px;\r\n  color: var(--color-secondary);\r\n  display: flex;\r\n  font-weight: 600;\r\n  font-size: 11px;\r\n  line-height: normal;\r\n  letter-spacing: 0.5px;\r\n  margin-right: 7px;\r\n  padding: 5px 10px;\r\n  width: fit-content;\r\n  height: fit-content;\r\n\r\n  ${(props) => props.text === 'Not Assigned' && css`\r\n    display: none;\r\n  `}\r\n\r\n  ${(props) => props.type === 'Location' && css`\r\n    background-color: var(--color-primary-lowOpacity);\r\n    color: var(--color-primary);\r\n  `}\r\n\r\n  ${(props) => props.type === 'Department' && css`\r\n    background-color: var(--color-secondary-lowOpacity);\r\n    color: var(--color-secondary);\r\n  `}\r\n\r\n  ${(props) => props.type === 'Employee' && css`\r\n    background-color: var(--color-green-lowOpacity);\r\n    color: var(--color-green);\r\n  `}\r\n\r\n  ${(props) => props.type === 'Answer' && css`\r\n    background-color: var(--color-green-bg);\r\n    color: var(--color-green);\r\n    text-transform: uppercase;\r\n    font-weight: 700;\r\n    font-size: 10px;\r\n  `}\r\n  \r\n  ${(props) => props.text === 'Community answer' && css`\r\n    background-color: var(--color-gold-bg);\r\n    color: var(--color-gold);\r\n  `}\r\n`;\r\n\r\nexport const ApproverName = styled.span`\r\n  font-family: \"Nunito\", sans-serif;\r\n  font-size: 12px;\r\n  color: var(--color-green);\r\n`;\r\n", "export { default } from './AnswerAdminOptions';\r\n", "import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport * as Styled from 'app/components/AnswerAdminOptions/AnswerAdminOptions.Styled';\r\n\r\nimport editIcon from 'app/images/ic_edit.svg';\r\nimport deleteIcon from 'app/images/ic_delete.svg';\r\nimport { DISABLED_ANSWER_ICONS_TOOLTIP_MESSAGE } from 'app/utils/constants';\r\n\r\nfunction AnswerAdminOptions({\r\n  isPreview,\r\n  isDisabled,\r\n  onAnswerClick,\r\n  openDeleteAnswerModal,\r\n  question,\r\n}) {\r\n  const [showTootip, setShowTooltip] = useState(false);\r\n  return (\r\n    <Styled.AnswerOptions isPreview={isPreview} isDisabled={isDisabled}>\r\n      <button\r\n        type=\"button\"\r\n        onMouseOver={() => isDisabled && setShowTooltip(true)}\r\n        onFocus={() => isDisabled && setShowTooltip(true)}\r\n        onMouseOut={() => isDisabled && setShowTooltip(false)}\r\n        onBlur={() => isDisabled && setShowTooltip(false)}\r\n        onClick={() => !isDisabled && onAnswerClick(question)}\r\n        disabled={isDisabled}\r\n      >\r\n        <img src={editIcon} alt=\"Edit\" />\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        onMouseOver={() => isDisabled && setShowTooltip(true)}\r\n        onFocus={() => isDisabled && setShowTooltip(true)}\r\n        onMouseOut={() => isDisabled && setShowTooltip(false)}\r\n        onBlur={() => isDisabled && setShowTooltip(false)}\r\n        onClick={() => !isDisabled && openDeleteAnswerModal(question)}\r\n        disabled={isDisabled}\r\n      >\r\n        <img src={deleteIcon} alt=\"Delete\" />\r\n      </button>\r\n      {isDisabled && showTootip && (\r\n        <Styled.OptionsTooltip show={showTootip}>\r\n          {DISABLED_ANSWER_ICONS_TOOLTIP_MESSAGE}\r\n        </Styled.OptionsTooltip>\r\n      )}\r\n    </Styled.AnswerOptions>\r\n  );\r\n}\r\n\r\nAnswerAdminOptions.propTypes = {\r\n  isDisabled: PropTypes.bool.isRequired,\r\n  isPreview: PropTypes.bool,\r\n  onAnswerClick: PropTypes.func.isRequired,\r\n  openDeleteAnswerModal: PropTypes.func.isRequired,\r\n  question: PropTypes.shape().isRequired,\r\n};\r\n\r\nAnswerAdminOptions.defaultProps = {\r\n  isPreview: false,\r\n};\r\n\r\nexport default AnswerAdminOptions;\r\n", "import styled, { css } from 'styled-components';\r\n\r\nexport const AnswerOptions = styled.div`\r\n  display: flex;\r\n  button {\r\n    background: transparent;\r\n    border: 0;\r\n    &:first-child {\r\n      margin-right: 16px;\r\n    }\r\n    :disabled {\r\n      opacity: 0.5;\r\n    }\r\n    > img {\r\n      height: 15px;\r\n      width: 15px;\r\n    }\r\n  }\r\n  ${(props) => !props.isPreview && css`\r\n    @media screen and (max-width: 480px) {\r\n      min-width: fit-content;\r\n    }\r\n    & > img:first-child {\r\n      @media screen and (max-width: 480px) {\r\n        margin-right: 24px;\r\n      }\r\n    }\r\n  `}\r\n  ${(props) => props.isDisabled && css`\r\n    display: inline-block;\r\n    position: relative;\r\n  `}\r\n`;\r\n\r\nexport const OptionsTooltip = styled.div`\r\n  font-family: 'Nunito', sans-serif;\r\n  background-color: #31425a;\r\n  border-radius: 6px;\r\n  bottom: 150%;\r\n  color: #fff;\r\n  left: 50%;\r\n  margin-left: -60px;\r\n  padding: 8px;\r\n  position: absolute;\r\n  text-align: center;\r\n  width: 120px;\r\n  z-index: 1;\r\n  font-size: 14px;\r\n  letter-spacing: 0.6px;\r\n  &::after {\r\n    border: 5px solid transparent;\r\n    border-top-color: #31425a;\r\n    content: \" \";\r\n    left: 50%;\r\n    margin-left: -5px;\r\n    position: absolute;\r\n    top: 100%;\r\n  }\r\n`;\r\n", "export { default } from './CounterButton';\r\n", "import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as Styled from './CounterButton.Styled';\r\n\r\nfunction CounterButton({\r\n  id, icon, text, count, selected, onClick, notButton, processingFormSubmission, isDisabled,\r\n}) {\r\n  const validIcon = React.isValidElement(icon);\r\n  return (\r\n    <Styled.ContainerCounterButton\r\n      id={id}\r\n      onClick={onClick}\r\n      selected={selected}\r\n      notButton={notButton}\r\n      processingFormSubmission={processingFormSubmission}\r\n      disabled={isDisabled}\r\n    >\r\n      {validIcon ? icon : <img src={icon} alt=\"Icon\" />}\r\n\r\n      <span>\r\n        {count}\r\n        {\r\n        text\r\n        && (\r\n        <Styled.ContainerCounterButtonNotMobile>\r\n          {text}\r\n        </Styled.ContainerCounterButtonNotMobile>\r\n        )\r\n      }\r\n      </span>\r\n    </Styled.ContainerCounterButton>\r\n  );\r\n}\r\n\r\nCounterButton.defaultProps = {\r\n  id: '',\r\n  count: '0',\r\n  selected: false,\r\n  notButton: false,\r\n  onClick: null,\r\n  processingFormSubmission: false,\r\n  isDisabled: false,\r\n};\r\n\r\nCounterButton.propTypes = {\r\n  id: PropTypes.string,\r\n  icon: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.element,\r\n  ]).isRequired,\r\n  text: PropTypes.string.isRequired,\r\n  count: PropTypes.string,\r\n  selected: PropTypes.bool,\r\n  onClick: PropTypes.func,\r\n  notButton: PropTypes.bool,\r\n  processingFormSubmission: PropTypes.bool,\r\n  isDisabled: PropTypes.bool,\r\n};\r\n\r\nexport default CounterButton;\r\n", "/* eslint-disable import/prefer-default-export */\r\nimport styled from 'styled-components';\r\n\r\nconst handleColorType = (props) => {\r\n  if (props.selected) {\r\n    return 'var(--color-secondary-active)';\r\n  } if (props.notButton) {\r\n    return 'var(--color-secondary)';\r\n  }\r\n  return '#31425a';\r\n};\r\n\r\nconst setCursorType = (props) => {\r\n  if (props.processingFormSubmission) {\r\n    return 'not-allowed';\r\n  }\r\n  return 'pointer';\r\n};\r\n\r\nexport const ContainerCounterButton = styled.button`\r\n  align-items: center;\r\n  background-color: transparent;\r\n  border: none;\r\n  border-radius: 3px;\r\n  color: ${(props) => handleColorType(props)};\r\n  cursor: ${(props) => setCursorType(props)};\r\n  display: inline-flex;\r\n  flex-direction: row;\r\n  font-family: \"Nunito\", sans-serif;\r\n  font-size: 12px;\r\n  font-weight: 600;\r\n  justify-content: center;\r\n  padding: 3px 7px;\r\n  transition: all 0.3s ease-in-out;\r\n  :hover {\r\n    background-color: #f4f7f9;\r\n  }\r\n  :disabled {\r\n    cursor: not-allowed;\r\n  }\r\n  img,\r\n  span {\r\n    align-items: flex-end;\r\n    display: flex;\r\n    min-height: 20px;\r\n  }\r\n  img {\r\n    height: 17px;\r\n    margin-right: 10px;\r\n    width: 17px;\r\n  }\r\n`;\r\n\r\nexport const ContainerCounterButtonNotMobile = styled.div`\r\n  display: unset;\r\n  @media screen and (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`;\r\n", "export { default } from './QuestionCommentList';\r\n", "import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useLoaderData } from '@remix-run/react';\r\nimport * as Styled from 'app/components/QuestionCommentList/QuestionCommentList.styled';\r\nimport reorderHighlightedComments from 'app/utils/commentUtils';\r\nimport QuestionComment from 'app/components/QuestionComment';\r\nimport SortQuestionCommentsDropdown from 'app/components/SortQuestionCommentsDropdown';\r\n\r\nfunction QuestionCommentList(props) {\r\n  const { comments } = useLoaderData();\r\n\r\n  QuestionCommentList.propTypes = {\r\n    questionId: PropTypes.number.isRequired,\r\n    isAdmin: PropTypes.bool.isRequired,\r\n    hasAnswer: PropTypes.bool.isRequired,\r\n    children: PropTypes.node,\r\n  };\r\n\r\n  QuestionCommentList.defaultProps = {\r\n    children: null,\r\n  };\r\n\r\n  const initialState = {\r\n    isLoading: true,\r\n    sortCommentsOption: 'votes',\r\n  };\r\n\r\n  const { isAdmin, hasAnswer } = props;\r\n  const [, setState] = useState(initialState);\r\n\r\n  // const handleDeleteCommentSuccess = () => fetchComments();\r\n\r\n  const renderCommentsList = (_comments) => {\r\n    const [\r\n      communityAnswerCommentId,\r\n      reorderedByPriorityComments,\r\n    ] = reorderHighlightedComments(_comments);\r\n    return reorderedByPriorityComments.map((comment) => (\r\n      <QuestionComment\r\n        {...comment}\r\n        key={comment.id}\r\n       // onSubmitSuccess={handleDeleteCommentSuccess}\r\n        commentData={comment}\r\n        isAdmin={isAdmin}\r\n        hasCommentAsAnswer={comments.some((_comment) => _comment.approvedBy !== null)}\r\n        hasAnswer={hasAnswer}\r\n        isCommunityAnswer={comment.id === communityAnswerCommentId}\r\n      />\r\n    ));\r\n  };\r\n\r\n  const sortCommentsOptionChangeHandler = (sortCommentsOption) => {\r\n    setState((prevState) => ({\r\n      isLoading: prevState.isLoading,\r\n      sortCommentsOption,\r\n    }));\r\n  };\r\n\r\n  const sortCommentsDropdown = (\r\n    <Styled.SortSelectorContainer>\r\n      <Styled.SortSelectorText>Order by:</Styled.SortSelectorText>\r\n      <SortQuestionCommentsDropdown\r\n        questionId={props.questionId}\r\n        onSortCommentsOptionChange={sortCommentsOptionChangeHandler}\r\n        defaultSortingOptionText=\"Most voted\"\r\n      />\r\n    </Styled.SortSelectorContainer>\r\n  );\r\n\r\n  return (\r\n    <Styled.CommentListContainer>\r\n      <Styled.CommentListHeader>\r\n        {props.children}\r\n        {comments.length > 0 && sortCommentsDropdown}\r\n      </Styled.CommentListHeader>\r\n      {renderCommentsList(comments)}\r\n    </Styled.CommentListContainer>\r\n  );\r\n}\r\n\r\nexport default QuestionCommentList;\r\n", "/* eslint-disable import/prefer-default-export */\r\n/* eslint-disable import/prefer-default-export */\r\nimport styled from 'styled-components';\r\n\r\nexport const CommentListContainer = styled.div`\r\n  @media screen and (max-width: 768px) {\r\n    margin-top: 12px;\r\n    padding: 0 8px;\r\n  }\r\n\r\n  & .question-comment {\r\n    @media screen and (max-width: 768px) {\r\n      padding-top: 12px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const SortSelectorContainer = styled.div`\r\n  float: right;\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  margin-right: 0.6em;\r\n  margin-bottom: 0.8em;\r\n`;\r\n\r\nexport const SortSelectorText = styled.span`\r\n  font-size: 1.3rem;\r\n  margin-right: 8px;\r\n`;\r\n\r\nexport const CommentListHeader = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n`;\r\n", "import { COMMUNITY_ANSWER_COMMENT_VOTES_THRESHOLD } from './constants';\r\n\r\nfunction reorderHighlightedComments(comments) {\r\n  if (comments.length === 0) {\r\n    return [null, comments];\r\n  }\r\n  if (comments.length === 1) {\r\n    const communityAnswerCommentId = (parseInt(comments[0].votes, 10)\r\n        >= COMMUNITY_ANSWER_COMMENT_VOTES_THRESHOLD)\r\n      ? comments[0].id : null;\r\n    return [communityAnswerCommentId, comments];\r\n  }\r\n  let mostVotesInComment = comments.reduce((previous, current) => {\r\n    const votesPrevious = previous.votes ? parseInt(previous.votes, 10) : 0;\r\n    const votesCurrent = current.votes ? parseInt(current.votes, 10) : 0;\r\n    return (votesCurrent > votesPrevious ? current : previous);\r\n  });\r\n  mostVotesInComment = mostVotesInComment.votes ? parseInt(mostVotesInComment.votes, 10) : 0;\r\n  const hasCommunityAnswer = mostVotesInComment >= COMMUNITY_ANSWER_COMMENT_VOTES_THRESHOLD;\r\n  if (!hasCommunityAnswer) {\r\n    return [null, comments];\r\n  }\r\n\r\n  const maxVotesComments = comments.filter((comment) => {\r\n    const votesForComment = comment.votes ? parseInt(comment.votes, 10) : 0;\r\n    return votesForComment === mostVotesInComment;\r\n  });\r\n\r\n  const recentActivitySortingFunction = (a, b) => {\r\n    const createdFirst = a.createdAt ? a.createdAt : new Date().toISOString();\r\n    const createdSecond = b.createdAt ? b.createdAt : new Date().toISOString();\r\n    let firstComparingTimestamp = createdFirst;\r\n    let secondComparingTimestamp = createdSecond;\r\n    if (a.updatedAt !== null && a.updatedAt !== undefined && a.updatedAt > createdFirst) {\r\n      firstComparingTimestamp = a.updatedAt;\r\n    }\r\n    if (b.updatedAt !== null && b.updatedAt !== undefined && b.updatedAt > createdSecond) {\r\n      secondComparingTimestamp = b.updatedAt;\r\n    }\r\n    if (secondComparingTimestamp > firstComparingTimestamp) {\r\n      return 1;\r\n    } if (secondComparingTimestamp < firstComparingTimestamp) {\r\n      return -1;\r\n    }\r\n    return 0;\r\n  };\r\n\r\n  const selectedCommunityAnswerComment = maxVotesComments.length > 1\r\n    ? (maxVotesComments.sort(recentActivitySortingFunction))[0]\r\n    : maxVotesComments[0];\r\n  const approvedByAdminCommentInList = comments.some((comm) => comm.approvedBy);\r\n\r\n  if (comments.length < 3 && approvedByAdminCommentInList) {\r\n    return [selectedCommunityAnswerComment.id, comments];\r\n  }\r\n  const commentsWithoutCommunityAnswer = comments.filter(\r\n    (comm) => comm.id !== selectedCommunityAnswerComment.id,\r\n  );\r\n  if (approvedByAdminCommentInList && selectedCommunityAnswerComment.approvedBy) {\r\n    return [selectedCommunityAnswerComment.id, comments];\r\n  } if (approvedByAdminCommentInList && !selectedCommunityAnswerComment.approvedBy) {\r\n    const reorderedComments = [...commentsWithoutCommunityAnswer];\r\n    reorderedComments.splice(1, 0, selectedCommunityAnswerComment);\r\n    return [selectedCommunityAnswerComment.id, reorderedComments];\r\n  } if (!approvedByAdminCommentInList) {\r\n    const reorderedComments = [...commentsWithoutCommunityAnswer];\r\n    reorderedComments.unshift(selectedCommunityAnswerComment);\r\n    return [selectedCommunityAnswerComment.id, reorderedComments];\r\n  }\r\n  return [null, comments];\r\n}\r\n\r\nexport default reorderHighlightedComments;\r\n", "export { default } from './QuestionComment';\r\n", "/* eslint-disable camelcase */\r\n/* eslint-disable react/no-children-prop */\r\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\r\nimport React, { useState } from 'react';\r\nimport {\r\n  BsThreeDotsVertical, BsCheckCircle, BsArrowDownCircle, BsArrowUpCircle,\r\n} from 'react-icons/bs';\r\nimport PropTypes from 'prop-types';\r\nimport { useSubmit, useSearchParams } from '@remix-run/react';\r\nimport * as Styled from 'app/components/QuestionComment/QuestionComment.styled';\r\nimport CounterButton from 'app/components/CounterButton';\r\nimport QuestionerResponderInfo from 'app/components/QuestionResponderInfo';\r\nimport Button from 'app/components/Atoms/Button';\r\nimport Label from 'app/components/Atoms/Label';\r\nimport { CircleIcon, DateContainer } from 'app/components/QuestionResponderInfo/QuestionResponderInfo.Styled';\r\nimport editIconUnselected from 'app/images/ic_edit.svg';\r\nimport deleteIconUnselected from 'app/images/ic_delete.svg';\r\nimport editIconSelected from 'app/images/ic_edit_selected.svg';\r\nimport deleteIconSelected from 'app/images/ic_delete_selected.svg';\r\nimport { getTimeDiff } from 'app/utils/timeOperations';\r\nimport useClickOutside from 'app/utils/hooks/useClickOutside';\r\nimport {\r\n  DANGER_BUTTON,\r\n  DISABLED_BUTTON,\r\n  SECONDARY_BUTTON,\r\n  COMMENT_EDIT_PLACEHOLDER,\r\n  COMMUNITY_ANSWER_TAG_TEXT,\r\n} from 'app/utils/constants';\r\nimport MarkdownLinkRenderer from 'app/components/MarkdownLinkRenderer';\r\nimport CommentInputText from 'app/components/CommentInput/CommentInputText';\r\nimport ACTIONS from 'app/utils/actions';\r\nimport useUser from 'app/utils/hooks/useUser';\r\n\r\nfunction QuestionComment({ commentData, onSubmitSuccess, ...props }) {\r\n  const submit = useSubmit();\r\n  const profile = useUser();\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n  const [commentHasChanged, setCommentHasChanged] = useState(false);\r\n  const [editIcon, setEditIcon] = useState(editIconUnselected);\r\n  const [deleteIcon, setDeleteIcon] = useState(deleteIconUnselected);\r\n  const [updatedComment, setUpdatedComment] = useState('');\r\n  const [upVote, setUpVote] = useState(\r\n    commentData.votes === undefined ? 0 : Number(commentData.votes),\r\n  );\r\n  const [upVoteActive, setUpVoteActive] = useState(\r\n    commentData.has_upvoted === undefined ? false : commentData.has_upvoted,\r\n  );\r\n  const [downVoteActive, setDownVoteActive] = useState(\r\n    commentData.has_downvoted === undefined ? false : commentData.has_downvoted,\r\n  );\r\n  const [searchParams] = useSearchParams();\r\n  const isAnswer = props.hasCommentAsAnswer;\r\n\r\n  const {\r\n    state: showCommentOptionsState,\r\n    setState: setShowCommentOptions,\r\n    wrapperRef,\r\n  } = useClickOutside(isEditing || isDeleting);\r\n\r\n  function voteComment(comment_id, value) {\r\n    const data = new FormData();\r\n    data.set('action', ACTIONS.VOTE_COMMENT);\r\n    data.set('comment_id', comment_id);\r\n    data.set('value', value);\r\n    let url = `/questions/${commentData.questionId}`;\r\n    const urlSearchParam = searchParams.get('order');\r\n    url = urlSearchParam !== null ? `${url}?order=${urlSearchParam}` : url;\r\n\r\n    submit(data, { method: 'post', action: url, replace: true });\r\n  }\r\n\r\n  function upVoteF() {\r\n    voteComment(commentData.id, 1);\r\n\r\n    if (downVoteActive) {\r\n      setDownVoteActive(false);\r\n      setUpVoteActive(true);\r\n      setUpVote(upVote + 2);\r\n    } else if (upVoteActive) {\r\n      setUpVoteActive(false);\r\n      setUpVote(upVote - 1);\r\n    } else {\r\n      setUpVoteActive(true);\r\n      setUpVote(upVote + 1);\r\n    }\r\n  }\r\n\r\n  function downVoteF() {\r\n    voteComment(commentData.id, -1);\r\n    if (upVoteActive) {\r\n      setUpVoteActive(false);\r\n      setDownVoteActive(true);\r\n      setUpVote(upVote - 2);\r\n    } else if (downVoteActive) {\r\n      setDownVoteActive(false);\r\n      setUpVote(upVote + 1);\r\n    } else {\r\n      setDownVoteActive(true);\r\n      setUpVote(upVote - 1);\r\n    }\r\n  }\r\n\r\n  function markAsAnswer(check) {\r\n    const data = new FormData();\r\n    data.set('action', ACTIONS.APPROVED_COMMENT);\r\n    data.set('params', JSON.stringify({ questionId: commentData.questionId, commentId: commentData.id, checked: check }));\r\n    let url = `/questions/${commentData.questionId}`;\r\n    const urlSearchParam = searchParams.get('order');\r\n    url = urlSearchParam !== null ? `${url}?order=${urlSearchParam}` : url;\r\n    submit(data, { method: 'post', action: url, replace: true });\r\n  }\r\n\r\n  const onSubmit = () => {\r\n    const newCommentData = {\r\n      commentId: commentData.id,\r\n      comment: updatedComment,\r\n      accessToken: profile.accessToken,\r\n      userEmail: profile.email,\r\n    };\r\n\r\n    setUpdatedComment('');\r\n    setIsEditing(false);\r\n    setEditIcon(editIconUnselected);\r\n\r\n    const data = new FormData();\r\n    data.set('action', ACTIONS.UPDATE_COMMENT);\r\n    data.set('newCommentData', JSON.stringify(newCommentData));\r\n    let url = `/questions/${commentData.questionId}`;\r\n    const urlSearchParam = searchParams.get('order');\r\n    url = urlSearchParam !== null ? `${url}?order=${urlSearchParam}` : url;\r\n    submit(data, { method: 'post', action: url, replace: true });\r\n  };\r\n\r\n  const changeEditState = () => {\r\n    setIsEditing(!isEditing);\r\n    setIsDeleting(false);\r\n    setEditIcon(isEditing ? editIconUnselected : editIconSelected);\r\n    setDeleteIcon(deleteIconUnselected);\r\n  };\r\n\r\n  const changeDeleteState = () => {\r\n    setIsDeleting(!isDeleting);\r\n    setIsEditing(false);\r\n    setDeleteIcon(isDeleting ? deleteIconUnselected : deleteIconSelected);\r\n    setEditIcon(editIconUnselected);\r\n  };\r\n\r\n  const handleDeleteComment = () => {\r\n    const data = new FormData();\r\n    data.set('action', ACTIONS.DELETE_COMMENT);\r\n    data.set('comment_id', commentData.id);\r\n    let url = `/questions/${commentData.questionId}`;\r\n    const urlSearchParam = searchParams.get('order');\r\n    url = urlSearchParam !== null ? `${url}?order=${urlSearchParam}` : url;\r\n    submit(data, { method: 'delete', action: url, replace: true });\r\n  };\r\n\r\n  const handleCommentUpdate = (comment) => {\r\n    const commentChanged = comment !== commentData.comment && comment.length > 2;\r\n    setCommentHasChanged(commentChanged);\r\n    setUpdatedComment(comment);\r\n  };\r\n\r\n  const renderArrowIcon = (direction) => {\r\n    if (direction === 'up') {\r\n      return (\r\n        <Styled.ArrowUp upVoteActive={upVoteActive}>\r\n          <BsArrowUpCircle size=\"1.8em\" color={upVoteActive ? 'var(--color-green)' : 'var(--color-dark-metadata)'} />\r\n        </Styled.ArrowUp>\r\n      );\r\n    }\r\n    return (\r\n      <Styled.ArrowDown downVoteActive={downVoteActive}>\r\n        <BsArrowDownCircle size=\"1.8em\" color={downVoteActive ? 'var(--color-primary)' : 'var(--color-dark-metadata)'} />\r\n      </Styled.ArrowDown>\r\n    );\r\n  };\r\n\r\n  const renderCommentOptions = () => (\r\n    <div ref={wrapperRef}>\r\n      {showCommentOptionsState === true\r\n        ? (\r\n          <div>\r\n            <img\r\n              src={editIcon}\r\n              alt=\"Edit comment\"\r\n              onClick={() => changeEditState()}\r\n            />\r\n            <img\r\n              src={deleteIcon}\r\n              alt=\"Delete comment\"\r\n              onClick={changeDeleteState}\r\n            />\r\n          </div>\r\n        )\r\n        : (\r\n          <div>\r\n            <Styled.QuestionCommentDotsWrapper onClick={() => setShowCommentOptions(true)}>\r\n              <BsThreeDotsVertical size=\"1.3em\" />\r\n            </Styled.QuestionCommentDotsWrapper>\r\n          </div>\r\n        )}\r\n    </div>\r\n  );\r\n\r\n  const renderButtonOption = () => {\r\n    if (props.hasCommentAsAnswer && commentData.approvedBy !== null) {\r\n      return <BsCheckCircle color=\"green\" size=\"20px\" />;\r\n    }\r\n    return <BsCheckCircle color=\"var(--color-dark-25)\" size=\"20px\" />;\r\n  };\r\n\r\n  const renderNotAdminOption = () => {\r\n    if (props.hasCommentAsAnswer && commentData.approvedBy !== null) {\r\n      return <BsCheckCircle color=\"green\" size=\"20px\" />;\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const renderToolTip = (msg) => (\r\n    <Styled.CommentAsAnswerToolTipText>\r\n      {msg}\r\n    </Styled.CommentAsAnswerToolTipText>\r\n  );\r\n\r\n  const renderAdminToolTips = () => {\r\n    if (!props.hasAnswer && !props.hasCommentAsAnswer) {\r\n      return renderToolTip('Click to approve the comment as an answer');\r\n    } if (commentData.approvedBy !== null) {\r\n      return renderToolTip('Click to unmark the comment as an answer');\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const {\r\n    comment, createdAt, updatedAt, User, canEdit,\r\n  } = commentData;\r\n\r\n  const renderCommunityAnswerLabel = () => props.isCommunityAnswer && <Label type=\"Answer\" text={COMMUNITY_ANSWER_TAG_TEXT} />;\r\n\r\n  const renderApproverNameLabel = () => (\r\n    <Label type=\"Answer\" text=\"Approved\" approvedBy={commentData.Approver.full_name} />\r\n  );\r\n\r\n  return (\r\n    <Styled.QuestionCommentContainer\r\n      hadApprover={commentData.approvedBy}\r\n      isDeleting={isDeleting}\r\n      isEditing={isEditing}\r\n      isCommunityAnswer={props.isCommunityAnswer}\r\n    >\r\n      <Styled.QuestionCommentButtons>\r\n        <CounterButton\r\n          selected={upVoteActive}\r\n          icon={renderArrowIcon('up')}\r\n          text=\"\"\r\n          count={' '}\r\n          onClick={upVoteF}\r\n        />\r\n        <Styled.QuestionCommentCounterSpan\r\n          upVoteActive={upVoteActive}\r\n          downVoteActive={downVoteActive}\r\n        >\r\n          {upVote}\r\n        </Styled.QuestionCommentCounterSpan>\r\n        <CounterButton\r\n          selected={downVoteActive}\r\n          icon={renderArrowIcon('down')}\r\n          text=\"\"\r\n          count=\"\"\r\n          onClick={downVoteF}\r\n        />\r\n        {(commentData.approvedBy !== null) && renderApproverNameLabel()}\r\n        {renderCommunityAnswerLabel()}\r\n      </Styled.QuestionCommentButtons>\r\n      <Styled.QuestionCommentWrapper\r\n        isDeleting={isDeleting}\r\n        isEditing={isEditing}\r\n      >\r\n        <Styled.QuestionCommentMetadata>\r\n          <QuestionerResponderInfo\r\n            createdBy={User}\r\n            isUpdated={updatedAt !== null}\r\n            userImgSize=\"medium\"\r\n          >\r\n            <DateContainer isComment hasJobTitle={User.job_title}>\r\n              <CircleIcon />\r\n              <Styled.QuestionCommentDate\r\n                isAdmin={props.isAdmin}\r\n                hadApprover={commentData.approvedBy}\r\n              >\r\n                {updatedAt && <em>edited</em>}\r\n                {getTimeDiff(updatedAt || createdAt)}\r\n              </Styled.QuestionCommentDate>\r\n            </DateContainer>\r\n          </QuestionerResponderInfo>\r\n          <Styled.QuestionCommentOptionsWrapper>\r\n            {\r\n                (props.isAdmin && !props.hasAnswer)\r\n                  ? (\r\n                    <Styled.CommentAsAnswerToolTip\r\n                      onClick={() => { markAsAnswer(!isAnswer); }}\r\n                      disabled={props.hasCommentAsAnswer && commentData.approvedBy === null}\r\n                    >\r\n                      {renderButtonOption()}\r\n                      {renderAdminToolTips()}\r\n                    </Styled.CommentAsAnswerToolTip>\r\n                  )\r\n                  : (\r\n                    <Styled.CommentAsAnswerToolTip>\r\n                      {renderNotAdminOption()}\r\n                      {commentData.Approver !== null && renderToolTip('Approved as answer')}\r\n                    </Styled.CommentAsAnswerToolTip>\r\n                  )\r\n}\r\n            {canEdit && (\r\n            <Styled.QuestionCommentOptions>\r\n              {renderCommentOptions()}\r\n            </Styled.QuestionCommentOptions>\r\n            )}\r\n          </Styled.QuestionCommentOptionsWrapper>\r\n        </Styled.QuestionCommentMetadata>\r\n        <Styled.QuestionCommentText isEditing={isEditing}>\r\n          {!isEditing ? (\r\n            <Styled.QuestionCommentMarkdown\r\n              children={comment}\r\n              components={{ link: MarkdownLinkRenderer }}\r\n            />\r\n          ) : (\r\n            <Styled.QuestionCommentEdit>\r\n              <CommentInputText\r\n                inputValue={comment}\r\n                placeholder={COMMENT_EDIT_PLACEHOLDER}\r\n                onInputChange={handleCommentUpdate}\r\n              />\r\n              <Button\r\n                type=\"button\"\r\n                category={SECONDARY_BUTTON}\r\n                className=\"edit-comment-button\"\r\n                onClick={() => {\r\n                  changeEditState();\r\n                  setShowCommentOptions(false);\r\n                }}\r\n              >\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                type=\"button\"\r\n                category={DISABLED_BUTTON}\r\n                className=\"edit-comment-button\"\r\n                onClick={onSubmit}\r\n                disabled={!commentHasChanged}\r\n              >\r\n                Save changes\r\n              </Button>\r\n            </Styled.QuestionCommentEdit>\r\n          )}\r\n          {isDeleting && (\r\n            <Styled.QuestionCommentDeleteConfirmation>\r\n              <p>You are about to delete this comment</p>\r\n              <Button\r\n                type=\"button\"\r\n                category={SECONDARY_BUTTON}\r\n                onClick={() => {\r\n                  changeDeleteState();\r\n                  setShowCommentOptions(false);\r\n                }}\r\n              >\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                type=\"button\"\r\n                category={DANGER_BUTTON}\r\n                onClick={handleDeleteComment}\r\n              >\r\n                Delete\r\n              </Button>\r\n            </Styled.QuestionCommentDeleteConfirmation>\r\n          )}\r\n        </Styled.QuestionCommentText>\r\n      </Styled.QuestionCommentWrapper>\r\n    </Styled.QuestionCommentContainer>\r\n\r\n  );\r\n}\r\n\r\nQuestionComment.propTypes = {\r\n  commentData: PropTypes.shape({\r\n    comment: PropTypes.string.isRequired,\r\n    createdAt: PropTypes.string.isRequired,\r\n    updatedAt: PropTypes.string,\r\n    id: PropTypes.number.isRequired,\r\n    User: PropTypes.shape({\r\n      email: PropTypes.string.isRequired,\r\n      full_name: PropTypes.string.isRequired,\r\n      profile_picture: PropTypes.string.isRequired,\r\n      job_title: PropTypes.string,\r\n    }),\r\n    Approver: PropTypes.shape({\r\n      email: PropTypes.string.isRequired,\r\n      full_name: PropTypes.string.isRequired,\r\n      profile_picture: PropTypes.string.isRequired,\r\n    }),\r\n    canEdit: PropTypes.bool.isRequired,\r\n    questionId: PropTypes.number.isRequired,\r\n    approvedBy: PropTypes.bool,\r\n    has_upvoted: PropTypes.bool.isRequired,\r\n    has_downvoted: PropTypes.bool.isRequired,\r\n    votes: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n  onSubmitSuccess: PropTypes.func.isRequired,\r\n  isAdmin: PropTypes.bool.isRequired,\r\n  hasCommentAsAnswer: PropTypes.bool.isRequired,\r\n  hasAnswer: PropTypes.bool.isRequired,\r\n  isCommunityAnswer: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default QuestionComment;\r\n", "import styled, { css } from 'styled-components';\r\nimport Markdown from 'react-markdown';\r\nimport { ContainerCounterButton } from 'app/components/CounterButton/CounterButton.Styled';\r\nimport { CommentInputTextArea } from 'app/components/CommentInput/CommentInput.styled';\r\nimport {\r\n  CircleIcon,\r\n  QuestionerResponderContainer,\r\n  QuestionerResponderName,\r\n} from 'app/components/QuestionResponderInfo/QuestionResponderInfo.Styled';\r\n\r\nexport const QuestionCommentContainer = styled.div`\r\n  border-radius: 20px;\r\n  margin-bottom: 24px;\r\n  width: 100%;\r\n  padding-bottom: ${(props) => (!props.isDeleting ? '16px' : '10px')};\r\n  display: flex;\r\n  flex-direction: column-reverse;\r\n  justify-content: space-between;\r\n  background-color: #fff;\r\n  box-shadow: 0 2px 4px 0 rgba(225, 229, 233, 0.8);\r\n  padding: 15px 20px 10px;\r\n  ${(props) => props.isDeleting && css`border: 1px solid #cd3140;`}\r\n  ${(props) => props.hadApprover && css`border: 1px solid var(--color-green-border);`}\r\n  ${(props) => props.isCommunityAnswer && css`border: 1px solid var(--color-gold-border);`}\r\n\r\n  ${ContainerCounterButton} {\r\n    :hover {\r\n      background-color: transparent;\r\n    }\r\n  }\r\n\r\n  &:last-child {\r\n    margin: 0;\r\n  }\r\n\r\n  @media screen and (max-width: 768px) {\r\n    ${(props) => (props.isEditing && `\r\n      position: relative;\r\n    `)};\r\n  }\r\n`;\r\n\r\nexport const QuestionCommentMetadata = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  margin-bottom: 5px;\r\n  padding-bottom: 8px;\r\n\r\n  p {\r\n    display: flex;\r\n    margin: 0;\r\n  }\r\n\r\n  @media screen and (max-width: 480px) {\r\n    ${CircleIcon} {\r\n      display: none;\r\n    }\r\n\r\n    ${QuestionerResponderContainer} {\r\n      flex-direction: column;\r\n      align-items: flex-start;\r\n    }\r\n\r\n    ${QuestionerResponderName} {\r\n      margin-top: -8px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QuestionCommentText = styled.div`\r\n  font-family: \"Nunito\", sans-serif;\r\n  font-size: 14px;\r\n  letter-spacing: 0.6px;\r\n  line-height: 1.71;\r\n  padding-left: 43px;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    ${(props) => (props.isEditing && `\r\n    max-height: 100%;\r\n    overflow-y: auto;\r\n    `)};\r\n  }\r\n`;\r\n\r\nexport const QuestionCommentMarkdown = styled(Markdown)`\r\n  display: inline;\r\n\r\n  p {\r\n    color: var(--color-dark-50);\r\n    margin: 0;\r\n    overflow-wrap: break-word;\r\n  }\r\n`;\r\n\r\nexport const QuestionCommentOptionsWrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n`;\r\n\r\nexport const QuestionCommentOptions = styled.div`\r\n  margin-left: 5px;\r\n\r\n  img {\r\n    cursor: pointer;\r\n    height: 15px;\r\n    width: 15px;\r\n  }\r\n\r\n  img:first-child {\r\n    margin-right: 16px;\r\n  }\r\n`;\r\n\r\nexport const QuestionCommentDeleteConfirmation = styled.div`\r\n  align-items: center;\r\n  border-top: 1px solid #e5e5e5;\r\n  display: flex;\r\n  padding-top: 10px;\r\n\r\n  p {\r\n    font-family: \"NunitoSans Semibold\", sans-serif;\r\n    margin-right: auto;\r\n    margin-top: 10px;\r\n  }\r\n`;\r\n\r\nexport const QuestionCommentEdit = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: flex-end;\r\n\r\n  div {\r\n    line-height: 15px;\r\n    padding-right: unset;\r\n    position: static;\r\n  }\r\n`;\r\n\r\nexport const QuestionCommentShowMore = styled.span`\r\n  color: var(--color-secondary);\r\n  cursor: pointer;\r\n  display:${(props) => (props.isEditing && 'none')};\r\n`;\r\n\r\nexport const QuestionCommentButtons = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  margin-top: 15px;\r\n  width: fit-content;\r\n    \r\n`;\r\n\r\nexport const QuestionCommentWrapper = styled.div`\r\n  border-radius: 15px;\r\n  width: 100%;\r\n\r\n  ${CommentInputTextArea} {\r\n    @media screen and (max-width: 768px) {\r\n      ${(props) => (props.isEditing && `\r\n        height: 200px;\r\n      `)};\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 768px) {\r\n    ${(props) => (props.isEditing && `\r\n      background-color: #fff;\r\n      position: fixed;\r\n      padding: 20px 15px;\r\n      border-radius: 0;\r\n      top: 0;\r\n      left: 0;\r\n      z-index: 1000;\r\n      height: 100%;\r\n      width: 100%;\r\n    `)};\r\n  }\r\n`;\r\n\r\nexport const QuestionCommentCounterSpan = styled.span` \r\n  display: flex;\r\n  justify-content: center;\r\n\r\n  ${(props) => (props.upVoteActive && `\r\n    color: var(--color-green);\r\n  `)};\r\n\r\n  ${(props) => (props.downVoteActive && `\r\n    color: var(--color-primary);\r\n  `)};\r\n`;\r\n\r\nexport const QuestionCommentDotsWrapper = styled.div`\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const QuestionCommentDate = styled.div`\r\n  display: flex;\r\n  height: fit-content;\r\n  color: var(--color-dark-metadata);\r\n  font-family: \"Nunito\", sans-serif;\r\n  font-size: 12px;\r\n  letter-spacing: 0.7px;\r\n`;\r\n\r\n// tooltip\r\nexport const CommentAsAnswerToolTipText = styled.span`\r\nbackground-color: black;\r\nborder-radius: 6px;\r\ncolor: #fff;\r\ndisplay: block;\r\npadding: 5px;\r\nposition: absolute;\r\nvisibility: hidden;\r\nwidth: 168px;\r\nz-index: 100;\r\n\r\n`;\r\n\r\nexport const CommentAsAnswerToolTip = styled.button`\r\nbackground-color: transparent;\r\nborder: none;\r\nposition: relative;\r\n &:hover ${CommentAsAnswerToolTipText} {\r\n  visibility: visible;\r\n }\r\n`;\r\n\r\nexport const ArrowUp = styled.div`\r\n  border-radius: 50%;\r\n  height: 1.8em;\r\n  width: 1.8em;\r\n  margin-right: 5px;\r\n\r\n  ${(props) => (props.upVoteActive && `\r\n    background-color: var(--color-green-bg);\r\n  `)};\r\n`;\r\n\r\nexport const ArrowDown = styled.div`\r\n  border-radius: 50%;\r\n  height: 1.8em;\r\n  width: 1.8em;\r\n  margin-left: 5px;\r\n\r\n  ${(props) => (props.downVoteActive && `\r\n    background-color: var(--color-primary-lowOpacity);\r\n  `)};\r\n`;\r\n\r\nexport const ApproverName = styled.span`\r\n  font-family: \"Nunito\", sans-serif;\r\n  font-size: 12px;\r\n  color: var(--color-green);\r\n`;\r\n", "import styled, { css } from 'styled-components';\r\nimport { DropdownButton } from 'react-bootstrap';\r\nimport { InputContainer, TextAreaElement } from 'app/components/Atoms/Input/Input.Styled';\r\nimport { MainButton } from 'app/components/Atoms/Button/Button.Styled';\r\n\r\nexport const CommentInputMainContainer = styled.div`\r\n    background-color: #fff;\r\n    border-radius: 20px;\r\n    box-shadow: 0 2px 4px 0 rgba(225, 229, 233, 0.8);\r\n    padding: 15px 20px 10px;\r\n    position: relative;\r\n    \r\n    &:before {\r\n        content: \"\";\r\n        position: absolute;\r\n        background-color: #F5F7F9 ;\r\n        left: 0;\r\n        top: 0;\r\n        width: 100%;\r\n        height: 46px;\r\n    }\r\n\r\n    @media screen and (max-width: 500px) {\r\n        display: none;\r\n    }\r\n\r\n    &.writing-mobile {\r\n        display: block;\r\n        margin-left: unset;\r\n        margin-top: 16px;\r\n        padding: 0;\r\n    }\r\n`;\r\n\r\nexport const CommentInputTextArea = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    width: 100%;\r\n\r\n    ${InputContainer} {\r\n        min-height: 100px;\r\n        background-color: transparent;\r\n        padding-bottom: 10px;\r\n    }\r\n\r\n    ${TextAreaElement} {\r\n        background-color: #F5F7F9;\r\n        border-radius: 10px;\r\n        margin-top: 10px;\r\n        margin-left: 10px;\r\n        height: auto;\r\n        min-height: 100px;\r\n    }\r\n\r\n    @media screen and (max-width: 767px) {\r\n        min-width: 90px;\r\n    }\r\n`;\r\n\r\nexport const CommentInputTextAreaForm = styled.div`\r\n    display: flex;\r\n    flex: 1;\r\n`;\r\n\r\nexport const CommentInputOptions = styled.div`\r\n    padding-bottom: 1%;\r\n\r\n    @media (max-width: 500px) {\r\n        display: none;\r\n    }\r\n`;\r\n\r\nexport const CommentInputText = styled.div`\r\n    display: flex;\r\n    flex: 85%;\r\n    flex-direction: column;\r\n\r\n    @media (max-width: 500px) {\r\n        margin-top: 14px;\r\n    }\r\n`;\r\n\r\nexport const CommentInputForm = styled.form`\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: 0;\r\n    padding: 0 24px 0 0;\r\n\r\n    @media (max-width: 500px) {\r\n        padding: 0 16px 0 0;\r\n    }\r\n`;\r\n\r\nexport const CommentInputAuthor = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    margin: 48px 0 0 16px;\r\n\r\n    .open > .dropdown-menu {\r\n        margin-left: 15px;\r\n        width: auto;\r\n        @media (max-width: 500px) {\r\n          margin-left: 0;\r\n          top: 40px;\r\n          height: 100%;\r\n        }\r\n    }\r\n    \r\n    .dropdown-menu > li > a {\r\n        padding: 4px 8px;\r\n    }\r\n\r\n    @media (max-width: 500px) {\r\n        margin-top: 60px;\r\n    }\r\n`;\r\n\r\nexport const CommentInputButtonsContainer = styled.div`\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    margin-bottom: 16px;\r\n\r\n    @media (max-width: 500px) {\r\n        margin-top: 12px;\r\n    }\r\n`;\r\n\r\nexport const QuestionInputTextPreview = styled.div`\r\n    display: flex;\r\n    letter-spacing: 0.6px;\r\n    line-height: 1.5;\r\n    padding-bottom: 1%;\r\n    z-index: 999;\r\n\r\n    ${MainButton} {\r\n        width: 80px;\r\n        color: var(--color-dark-50);\r\n    }\r\n\r\n    @media (max-width: 767px) {\r\n        position: unset;\r\n    }\r\n`;\r\n\r\nexport const QuestionInputTab = styled.div`\r\n    background-color: transparent;\r\n    width: 80px;\r\n    height: fit-content;\r\n    margin-left: 10px;\r\n    border-radius: 7px 7px 0 0;\r\n\r\n    ${(props) => props.selected\r\n        && css`\r\n        background-color: #fff;\r\n    `} \r\n\r\n    ${(props) => props.selected\r\n        && !props.isNewComment\r\n        && css`\r\n        background-color: #f3f3f3;\r\n        border-radius: 7px;\r\n    `} \r\n\r\n    ${(props) => props.disabled\r\n        && css`\r\n        ${MainButton} {\r\n            color: var(--color-dark-25) !important;\r\n        }\r\n    `} \r\n`;\r\n\r\nexport const QuestionInputTextPreviewDiv = styled.div`\r\n    padding: 10px;\r\n    text-align: left;\r\n    word-wrap: break-word;\r\n    width: 100%;\r\n    letter-spacing: 0.6px;\r\n    line-height: 1.71;\r\n    word-wrap: break-word;\r\n    overflow-wrap: break-word;\r\n`;\r\n\r\nexport const AuthorImg = styled.img`\r\n    box-shadow: 0 0 0 1px var(--color-secondary);\r\n    margin-left: 5px;\r\n    margin-right: 10px;\r\n    height: 40px;\r\n    border-radius: 50%;\r\n\r\n    ${(props) => (props.variant === 'dropdown' ? 'height: 32px' : 'height: 40px')}\r\n`;\r\n\r\nexport const CommentInputAuthorPictureDiv = styled.div`\r\n    float: left;\r\n`;\r\n\r\nexport const AuthorNameContainer = styled.div`\r\n    color: var(--color-dark-50);\r\n    padding-top: 5px;\r\n    text-align: left;\r\n`;\r\n\r\nexport const AuthorNameContainerCaret = styled.span`\r\n    border-color: transparent transparent var(--color-secondary);\r\n    border-style: solid;\r\n    border-width: 0 0 7.5px 7.5px;\r\n    color: var(--color-secondary);\r\n    margin-left: -16px;\r\n    margin-top: 28px;\r\n    content: \"\";\r\n    display: inline-block;\r\n    width: 0;\r\n    height: 0;\r\n    vertical-align: middle;\r\n`;\r\n\r\nexport const DropdownButtonStyled = styled(DropdownButton)`\r\n    background-color: #f7f7f7;\r\n    border: unset;\r\n    padding: 0%;\r\n`;\r\n", "/* eslint-disable import/prefer-default-export */\r\nimport styled from 'styled-components';\r\n\r\nexport const InputContainer = styled.div`\r\n    align-items: top;\r\n    background-color: #fff;\r\n    border-bottom: 1px solid #e2e8ea;\r\n    border-radius: 3px;\r\n    display: flex;\r\n    min-height: 44px;\r\n`;\r\n\r\nexport const InputLeftElement = styled.div`\r\n`;\r\nexport const InputRightElement = styled.div`\r\n`;\r\n\r\nexport const InputElement = styled.input`\r\n    border: none;\r\n    box-shadow: none;\r\n    display: block;\r\n    font-size: 14px;\r\n    height: 100%;\r\n    width: 100%;\r\n    outline: none;\r\n`;\r\n\r\nexport const TextAreaElement = styled.textarea`\r\n    border: none;\r\n    box-shadow: none;\r\n    display: block;\r\n    font-size: 14px;\r\n    height: 100%;\r\n    width: 100%;\r\n    outline: none;\r\n    padding: 12px 8px;\r\n    resize: none;\r\n`;\r\n", "import React, {\r\n  useEffect, useState, useImperativeHandle, forwardRef,\r\n} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport CommentTextArea from 'app/components/CommentInput/CommentTextArea';\r\nimport QuestionMarkdown from 'app/components/QuestionMarkdown';\r\nimport Button from 'app/components/Atoms/Button';\r\nimport {\r\n  TEXT_BUTTON,\r\n  COMMENT_INPUT_PLACEHOLDER,\r\n  MIN_COMMENT_PREVIEW_LENGTH,\r\n} from 'app/utils/constants';\r\nimport * as Styled from 'app/components/CommentInput/CommentInput.styled';\r\n\r\nconst CommentInputText = forwardRef((props, ref) => {\r\n  const initialState = {\r\n    inputValue: props.inputValue,\r\n    commentLength: props.inputValue ? props.inputValue.trim().length : 0,\r\n    textAreaRows: 2,\r\n    placeholder: COMMENT_INPUT_PLACEHOLDER,\r\n  };\r\n\r\n  const [commentInput, setCommentInput] = useState(initialState);\r\n  const [canShowPreview, setCanShowPreview] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setCommentInput({\r\n      ...commentInput,\r\n      inputValue: props.inputValue,\r\n      commentLength: props.inputValue ? props.inputValue.trim().length : 0,\r\n    });\r\n  }, [props.inputValue]);\r\n\r\n  useEffect(() => {\r\n    setCanShowPreview(commentInput.commentLength > MIN_COMMENT_PREVIEW_LENGTH);\r\n  }, [commentInput.commentLength]);\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    resetInputText() {\r\n      setCommentInput({\r\n        ...commentInput,\r\n        inputValue: '',\r\n        commentLength: 0,\r\n      });\r\n    },\r\n  }));\r\n\r\n  const onCommentChange = (event) => {\r\n    const rawText = event.target.value;\r\n    const commentLength = rawText.trim().length;\r\n    const inputValue = rawText.replace(/^\\s+/, '');\r\n\r\n    setCommentInput({\r\n      inputValue,\r\n      commentLength,\r\n      textAreaRows: 2,\r\n      placeholder: COMMENT_INPUT_PLACEHOLDER,\r\n    });\r\n\r\n    props.onInputChange(inputValue);\r\n  };\r\n\r\n  const handlePreviewChange = (type) => {\r\n    setCommentInput({\r\n      ...commentInput,\r\n      isShowPreview: !!((type === 'preview' && canShowPreview)),\r\n    });\r\n  };\r\n\r\n  const renderPreviewButton = () => (\r\n    <Styled.QuestionInputTextPreview>\r\n      <Styled.QuestionInputTab\r\n        isNewComment={props.isNewComment}\r\n        selected={!commentInput.isShowPreview}\r\n      >\r\n        <Button\r\n          type=\"button\"\r\n          category={TEXT_BUTTON}\r\n          onClick={() => handlePreviewChange('write')}\r\n          className=\"preview-button\"\r\n        >\r\n          Write\r\n        </Button>\r\n      </Styled.QuestionInputTab>\r\n      <Styled.QuestionInputTab\r\n        isNewComment={props.isNewComment}\r\n        selected={commentInput.isShowPreview}\r\n        disabled={!canShowPreview}\r\n      >\r\n        <Button\r\n          type=\"button\"\r\n          category={TEXT_BUTTON}\r\n          onClick={() => handlePreviewChange('preview')}\r\n          className=\"preview-button\"\r\n          disabled={!canShowPreview}\r\n        >\r\n          Preview\r\n        </Button>\r\n      </Styled.QuestionInputTab>\r\n    </Styled.QuestionInputTextPreview>\r\n  );\r\n\r\n  const renderCommentPreview = (inputValue) => (\r\n    <Styled.QuestionInputTextPreviewDiv className=\"col-md-12\">\r\n      <QuestionMarkdown source={inputValue} />\r\n    </Styled.QuestionInputTextPreviewDiv>\r\n  );\r\n\r\n  const renderInputArea = () => {\r\n    if (commentInput.isShowPreview && commentInput.commentLength > MIN_COMMENT_PREVIEW_LENGTH) {\r\n      return renderCommentPreview(commentInput.inputValue);\r\n    }\r\n    return (\r\n      <CommentTextArea\r\n        inputValue={commentInput.inputValue}\r\n        onCommentChange={onCommentChange}\r\n        textAreaRows={commentInput.textAreaRows}\r\n        commentLength={commentInput.commentLength}\r\n        placeholder=\"Add a comment...\"\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Styled.CommentInputText>\r\n      {renderPreviewButton(commentInput)}\r\n      {renderInputArea(commentInput)}\r\n    </Styled.CommentInputText>\r\n  );\r\n});\r\n\r\nCommentInputText.propTypes = {\r\n  inputValue: PropTypes.string,\r\n  isNewComment: PropTypes.bool,\r\n  onInputChange: PropTypes.func.isRequired,\r\n};\r\n\r\nCommentInputText.defaultProps = {\r\n  inputValue: '',\r\n  isNewComment: false,\r\n};\r\n\r\nexport default CommentInputText;\r\n", "import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport MarkdownFormattingNote from 'app/components/MarkdownFormattingNote';\r\nimport {\r\n  MAXIMUM_ANSWER_LENGTH,\r\n  MINIMUM_INPUT_LENGTH_TO_SHOW_MARKDOWN,\r\n  MINIMUM_WIDTH_TO_SHOW_MARKDOWN,\r\n  MIN_TEXTAREA_ROWS,\r\n  MINIMUN_WINDOW_WIDTH,\r\n} from 'app/utils//constants';\r\nimport { shouldShowMarkdownSuggestions } from 'app/utils//input';\r\nimport Input from 'app/components/Atoms/Input';\r\nimport InputCounter from 'app/components/InputCounter';\r\nimport * as Styled from 'app/components/CommentInput/CommentInput.styled';\r\n\r\nfunction CommentTextArea({\r\n  inputValue,\r\n  onCommentChange,\r\n  placeholder,\r\n  textAreaRows,\r\n  commentLength,\r\n}) {\r\n  CommentTextArea.propTypes = {\r\n    inputValue: PropTypes.string,\r\n    onCommentChange: PropTypes.func.isRequired,\r\n    commentLength: PropTypes.number.isRequired,\r\n    textAreaRows: PropTypes.number,\r\n    placeholder: PropTypes.string.isRequired,\r\n  };\r\n\r\n  CommentTextArea.defaultProps = {\r\n    inputValue: '',\r\n    textAreaRows: MIN_TEXTAREA_ROWS,\r\n  };\r\n\r\n  return (\r\n    <Styled.CommentInputTextArea>\r\n      <Input\r\n        type=\"text-area\"\r\n        rows={textAreaRows}\r\n        maxLength={MAXIMUM_ANSWER_LENGTH}\r\n        value={inputValue}\r\n        placeholder={placeholder}\r\n        onChange={onCommentChange}\r\n        form=\"question-submit-form\"\r\n        inputRightElement={\r\n          <InputCounter currentLength={commentLength} maxLength={MAXIMUM_ANSWER_LENGTH} />\r\n        }\r\n      />\r\n      <Styled.CommentInputOptions>\r\n        <MarkdownFormattingNote\r\n          visible={\r\n            shouldShowMarkdownSuggestions(\r\n              commentLength,\r\n              MINIMUM_INPUT_LENGTH_TO_SHOW_MARKDOWN,\r\n              MINIMUN_WINDOW_WIDTH,\r\n              MINIMUM_WIDTH_TO_SHOW_MARKDOWN,\r\n            )\r\n          }\r\n        />\r\n      </Styled.CommentInputOptions>\r\n    </Styled.CommentInputTextArea>\r\n  );\r\n}\r\n\r\nexport default CommentTextArea;\r\n", "export { default } from './MarkdownFormattingNote';\r\n", "import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as Styled from './MarkdownFormattingNote.Styled';\r\n\r\nfunction MarkdownFormattingNote({ visible }) {\r\n  return (\r\n    <Styled.Note visible={visible}>\r\n      <b>**bold**</b>\r\n      <i>_italics_</i>\r\n      ~~strike~~\r\n      <code>`code`</code>\r\n      <code>```preformatted```</code>\r\n      <span>&gt;quote</span>\r\n    </Styled.Note>\r\n  );\r\n}\r\n\r\nMarkdownFormattingNote.defaultProps = {\r\n  visible: false,\r\n};\r\n\r\nMarkdownFormattingNote.propTypes = {\r\n  visible: PropTypes.bool,\r\n};\r\n\r\nexport default MarkdownFormattingNote;\r\n", "/* eslint-disable import/prefer-default-export */\r\nimport styled from 'styled-components';\r\n\r\n// eslint-disable-next-line import/prefer-default-export\r\nexport const Note = styled.span` \r\n  align-self: flex-start;\r\n  color: #717274;\r\n  font-size: 10.5px;\r\n  font-size: 0.7em;\r\n  height: 1rem;\r\n  line-height: 1rem;\r\n  margin-top: 3px;\r\n  opacity: ${(props) => (props.visible ? 1 : 0)};\r\n  transition: opacity 0.2s ease-in-out;\r\n  white-space: nowrap;\r\n\r\n  > b {\r\n    margin-right: 3px;\r\n  }\r\n\r\n  > i {\r\n    margin-right: 3px;\r\n  }\r\n\r\n  code {\r\n    background-color: #f7f7f9;\r\n    border: 1px solid #e1e1e8;\r\n    color: #717274;\r\n    margin-right: 3px;\r\n    &:nth-of-type(2) {\r\n      margin-left: 3px;\r\n    }\r\n  }\r\n  @media screen and (max-width: 767px){\r\n    opacity: 0;\r\n  }\r\n`;\r\n", "/* eslint-disable max-len */\r\nexport const displayTextLength = (currentValue, maxValue) => `${currentValue}/${maxValue}`;\r\n\r\nexport const validTextLength = (currentTextLength, minTextLength, maxTextLength) => currentTextLength >= minTextLength && currentTextLength <= maxTextLength;\r\n\r\nexport const shouldShowMarkdownSuggestions = (textLength, minLength, windowWidth, minWidth) => windowWidth > minWidth && textLength > minLength;\r\n", "export { default } from './Input';\r\n", "import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as Styled from './Input.Styled';\r\n\r\nconst Input = React.forwardRef((props, ref) => {\r\n  const {\r\n    id, type, classContainer, classInput, inputLeftElement,\r\n    inputRightElement, classLeftElement,\r\n    classRightElement, rows, ...inputParams\r\n  } = props;\r\n  return (\r\n    <Styled.InputContainer id={id} className={classContainer}>\r\n      {inputLeftElement && (\r\n      <Styled.InputLeftElement className={classLeftElement}>\r\n        {inputLeftElement}\r\n      </Styled.InputLeftElement>\r\n      )}\r\n      {type !== 'text-area' && <Styled.InputElement ref={ref} className={classInput} {...inputParams} />}\r\n      {type === 'text-area' && <Styled.TextAreaElement ref={ref} className={classInput} rows={rows} {...inputParams} />}\r\n      {inputRightElement && (\r\n      <Styled.InputRightElement className={classRightElement}>\r\n        {inputRightElement}\r\n      </Styled.InputRightElement>\r\n      )}\r\n    </Styled.InputContainer>\r\n  );\r\n});\r\n\r\nInput.displayName = 'Input';\r\n\r\nexport default Input;\r\n\r\nInput.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  type: PropTypes.string,\r\n  inputParams: {}.isRequired,\r\n  classContainer: PropTypes.string,\r\n  classInput: PropTypes.string,\r\n  inputLeftElement: PropTypes.element,\r\n  inputRightElement: PropTypes.element,\r\n  classLeftElement: PropTypes.element,\r\n  classRightElement: PropTypes.element,\r\n  rows: PropTypes.number,\r\n};\r\n\r\nInput.defaultProps = {\r\n  classContainer: '',\r\n  classInput: '',\r\n  type: 'text',\r\n  inputLeftElement: null,\r\n  inputRightElement: null,\r\n  classLeftElement: '',\r\n  classRightElement: '',\r\n  rows: 1,\r\n};\r\n", "export { default } from './InputCounter';\r\n", "import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport InputCounterWrapper from './InputCounter.Styled';\r\n\r\nfunction InputCounter(props) {\r\n  const { currentLength, maxLength } = props;\r\n  return (\r\n    <InputCounterWrapper className=\"input-counter\">\r\n      {currentLength}\r\n      /\r\n      {maxLength}\r\n    </InputCounterWrapper>\r\n  );\r\n}\r\nexport default InputCounter;\r\n\r\nInputCounter.propTypes = {\r\n  currentLength: PropTypes.string.isRequired,\r\n  maxLength: PropTypes.string.isRequired,\r\n};\r\n", "/* eslint-disable import/prefer-default-export */\r\nimport styled from 'styled-components';\r\n\r\nconst InputCounterWrapper = styled.p`\r\n    align-self: flex-end;\r\n    bottom: 33px;\r\n    color: #a2abaf;\r\n    font-family: 'Nunito', sans-serif;\r\n    font-size: 12px;\r\n    right: 12px;\r\n    padding: 10px;\r\n`;\r\nexport default InputCounterWrapper;\r\n", "export { default } from './QuestionMarkdown';\r\n", "/* eslint-disable react/no-children-prop */\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport gfm from 'remark-gfm';\r\nimport * as Styled from 'app/components/QuestionMarkdown/QuestionMarkdown.Styled';\r\nimport MarkdownLinkRenderer from 'app/components/MarkdownLinkRenderer';\r\n\r\nfunction QuestionMarkdown(props) {\r\n  return (\r\n    <Styled.QuestionMarkdown\r\n      children={props.source}\r\n      components={{\r\n        link: MarkdownLinkRenderer,\r\n      }}\r\n      remarkPlugins={[gfm]}\r\n    />\r\n  );\r\n}\r\n\r\nQuestionMarkdown.propTypes = {\r\n  source: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default QuestionMarkdown;\r\n", "/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('micromark-extension-gfm').Options & import('mdast-util-gfm').Options} Options\n */\n\nimport {gfm} from 'micromark-extension-gfm'\nimport {gfmFromMarkdown, gfmToMarkdown} from 'mdast-util-gfm'\n\n/**\n * Plugin to support GFM (autolink literals, footnotes, strikethrough, tables, tasklists).\n *\n * @type {import('unified').Plugin<[Options?]|void[], Root>}\n */\nexport default function remarkGfm(options = {}) {\n  const data = this.data()\n\n  add('micromarkExtensions', gfm(options))\n  add('fromMarkdownExtensions', gfmFromMarkdown())\n  add('toMarkdownExtensions', gfmToMarkdown(options))\n\n  /**\n   * @param {string} field\n   * @param {unknown} value\n   */\n  function add(field, value) {\n    const list = /** @type {unknown[]} */ (\n      // Other extensions\n      /* c8 ignore next 2 */\n      data[field] ? data[field] : (data[field] = [])\n    )\n\n    list.push(value)\n  }\n}\n", "/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n * @typedef {import('micromark-extension-gfm-strikethrough').Options} Options\n * @typedef {import('micromark-extension-gfm-footnote').HtmlOptions} HtmlOptions\n */\n\nimport {\n  combineExtensions,\n  combineHtmlExtensions\n} from 'micromark-util-combine-extensions'\nimport {\n  gfmAutolinkLiteral,\n  gfmAutolinkLiteralHtml\n} from 'micromark-extension-gfm-autolink-literal'\nimport {gfmFootnote, gfmFootnoteHtml} from 'micromark-extension-gfm-footnote'\nimport {\n  gfmStrikethrough,\n  gfmStrikethroughHtml\n} from 'micromark-extension-gfm-strikethrough'\nimport {gfmTable, gfmTableHtml} from 'micromark-extension-gfm-table'\nimport {gfmTagfilterHtml} from 'micromark-extension-gfm-tagfilter'\nimport {\n  gfmTaskListItem,\n  gfmTaskListItemHtml\n} from 'micromark-extension-gfm-task-list-item'\n\n/**\n * Support GFM or markdown on github.com.\n *\n * @param {Options} [options]\n * @returns {Extension}\n */\nexport function gfm(options) {\n  return combineExtensions([\n    gfmAutolinkLiteral,\n    gfmFootnote(),\n    gfmStrikethrough(options),\n    gfmTable,\n    gfmTaskListItem\n  ])\n}\n\n/**\n * Support to compile GFM to HTML.\n *\n * @param {HtmlOptions} [options]\n * @returns {HtmlExtension}\n */\nexport function gfmHtml(options) {\n  return combineHtmlExtensions([\n    gfmAutolinkLiteralHtml,\n    gfmFootnoteHtml(options),\n    gfmStrikethroughHtml,\n    gfmTableHtml,\n    gfmTagfilterHtml,\n    gfmTaskListItemHtml\n  ])\n}\n", "export {gfmAutolinkLiteral} from './lib/syntax.js'\nexport {gfmAutolinkLiteralHtml} from './lib/html.js'\n", "/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiControl,\n  asciiDigit,\n  markdownLineEndingOrSpace,\n  markdownLineEnding,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\nconst www = {\n  tokenize: tokenizeWww,\n  partial: true\n}\nconst domain = {\n  tokenize: tokenizeDomain,\n  partial: true\n}\nconst path = {\n  tokenize: tokenizePath,\n  partial: true\n}\nconst punctuation = {\n  tokenize: tokenizePunctuation,\n  partial: true\n}\nconst namedCharacterReference = {\n  tokenize: tokenizeNamedCharacterReference,\n  partial: true\n}\nconst wwwAutolink = {\n  tokenize: tokenizeWwwAutolink,\n  previous: previousWww\n}\nconst httpAutolink = {\n  tokenize: tokenizeHttpAutolink,\n  previous: previousHttp\n}\nconst emailAutolink = {\n  tokenize: tokenizeEmailAutolink,\n  previous: previousEmail\n}\n/** @type {ConstructRecord} */\n\nconst text = {}\n/** @type {Extension} */\n\nexport const gfmAutolinkLiteral = {\n  text\n}\nlet code = 48 // Add alphanumerics.\n\nwhile (code < 123) {\n  text[code] = emailAutolink\n  code++\n  if (code === 58) code = 65\n  else if (code === 91) code = 97\n}\n\ntext[43] = emailAutolink\ntext[45] = emailAutolink\ntext[46] = emailAutolink\ntext[95] = emailAutolink\ntext[72] = [emailAutolink, httpAutolink]\ntext[104] = [emailAutolink, httpAutolink]\ntext[87] = [emailAutolink, wwwAutolink]\ntext[119] = [emailAutolink, wwwAutolink]\n/** @type {Tokenizer} */\n\nfunction tokenizeEmailAutolink(effects, ok, nok) {\n  const self = this\n  /** @type {boolean} */\n\n  let hasDot\n  /** @type {boolean|undefined} */\n\n  let hasDigitInLastSegment\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (\n      !gfmAtext(code) ||\n      !previousEmail(self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkEmail')\n    return atext(code)\n  }\n  /** @type {State} */\n\n  function atext(code) {\n    if (gfmAtext(code)) {\n      effects.consume(code)\n      return atext\n    }\n\n    if (code === 64) {\n      effects.consume(code)\n      return label\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (code === 46) {\n      return effects.check(punctuation, done, dotContinuation)(code)\n    }\n\n    if (code === 45 || code === 95) {\n      return effects.check(punctuation, nok, dashOrUnderscoreContinuation)(code)\n    }\n\n    if (asciiAlphanumeric(code)) {\n      if (!hasDigitInLastSegment && asciiDigit(code)) {\n        hasDigitInLastSegment = true\n      }\n\n      effects.consume(code)\n      return label\n    }\n\n    return done(code)\n  }\n  /** @type {State} */\n\n  function dotContinuation(code) {\n    effects.consume(code)\n    hasDot = true\n    hasDigitInLastSegment = undefined\n    return label\n  }\n  /** @type {State} */\n\n  function dashOrUnderscoreContinuation(code) {\n    effects.consume(code)\n    return afterDashOrUnderscore\n  }\n  /** @type {State} */\n\n  function afterDashOrUnderscore(code) {\n    if (code === 46) {\n      return effects.check(punctuation, nok, dotContinuation)(code)\n    }\n\n    return label(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    if (hasDot && !hasDigitInLastSegment) {\n      effects.exit('literalAutolinkEmail')\n      effects.exit('literalAutolink')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeWwwAutolink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (\n      (code !== 87 && code !== 119) ||\n      !previousWww(self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkWww') // For `www.` we check instead of attempt, because when it matches, GH\n    // treats it as part of a domain (yes, it says a valid domain must come\n    // after `www.`, but that\u2019s not how it\u2019s implemented by them).\n\n    return effects.check(\n      www,\n      effects.attempt(domain, effects.attempt(path, done), nok),\n      nok\n    )(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('literalAutolinkWww')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHttpAutolink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (\n      (code !== 72 && code !== 104) ||\n      !previousHttp(self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkHttp')\n    effects.consume(code)\n    return t1\n  }\n  /** @type {State} */\n\n  function t1(code) {\n    if (code === 84 || code === 116) {\n      effects.consume(code)\n      return t2\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function t2(code) {\n    if (code === 84 || code === 116) {\n      effects.consume(code)\n      return p\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function p(code) {\n    if (code === 80 || code === 112) {\n      effects.consume(code)\n      return s\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function s(code) {\n    if (code === 83 || code === 115) {\n      effects.consume(code)\n      return colon\n    }\n\n    return colon(code)\n  }\n  /** @type {State} */\n\n  function colon(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return slash1\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function slash1(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return slash2\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function slash2(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null ||\n      asciiControl(code) ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)\n      ? nok(code)\n      : effects.attempt(domain, effects.attempt(path, done), nok)(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('literalAutolinkHttp')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeWww(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.consume(code)\n    return w2\n  }\n  /** @type {State} */\n\n  function w2(code) {\n    if (code === 87 || code === 119) {\n      effects.consume(code)\n      return w3\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function w3(code) {\n    if (code === 87 || code === 119) {\n      effects.consume(code)\n      return dot\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function dot(code) {\n    if (code === 46) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? nok(code) : ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDomain(effects, ok, nok) {\n  /** @type {boolean|undefined} */\n  let hasUnderscoreInLastSegment\n  /** @type {boolean|undefined} */\n\n  let hasUnderscoreInLastLastSegment\n  return domain\n  /** @type {State} */\n\n  function domain(code) {\n    if (code === 38) {\n      return effects.check(\n        namedCharacterReference,\n        done,\n        punctuationContinuation\n      )(code)\n    }\n\n    if (code === 46 || code === 95) {\n      return effects.check(punctuation, done, punctuationContinuation)(code)\n    } // GH documents that only alphanumerics (other than `-`, `.`, and `_`) can\n    // occur, which sounds like ASCII only, but they also support `www.\u9EDE\u770B.com`,\n    // so that\u2019s Unicode.\n    // Instead of some new production for Unicode alphanumerics, markdown\n    // already has that for Unicode punctuation and whitespace, so use those.\n\n    if (\n      code === null ||\n      asciiControl(code) ||\n      unicodeWhitespace(code) ||\n      (code !== 45 && unicodePunctuation(code))\n    ) {\n      return done(code)\n    }\n\n    effects.consume(code)\n    return domain\n  }\n  /** @type {State} */\n\n  function punctuationContinuation(code) {\n    if (code === 46) {\n      hasUnderscoreInLastLastSegment = hasUnderscoreInLastSegment\n      hasUnderscoreInLastSegment = undefined\n      effects.consume(code)\n      return domain\n    }\n\n    if (code === 95) hasUnderscoreInLastSegment = true\n    effects.consume(code)\n    return domain\n  }\n  /** @type {State} */\n\n  function done(code) {\n    if (!hasUnderscoreInLastLastSegment && !hasUnderscoreInLastSegment) {\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizePath(effects, ok) {\n  let balance = 0\n  return inPath\n  /** @type {State} */\n\n  function inPath(code) {\n    if (code === 38) {\n      return effects.check(\n        namedCharacterReference,\n        ok,\n        continuedPunctuation\n      )(code)\n    }\n\n    if (code === 40) {\n      balance++\n    }\n\n    if (code === 41) {\n      return effects.check(\n        punctuation,\n        parenAtPathEnd,\n        continuedPunctuation\n      )(code)\n    }\n\n    if (pathEnd(code)) {\n      return ok(code)\n    }\n\n    if (trailingPunctuation(code)) {\n      return effects.check(punctuation, ok, continuedPunctuation)(code)\n    }\n\n    effects.consume(code)\n    return inPath\n  }\n  /** @type {State} */\n\n  function continuedPunctuation(code) {\n    effects.consume(code)\n    return inPath\n  }\n  /** @type {State} */\n\n  function parenAtPathEnd(code) {\n    balance--\n    return balance < 0 ? ok(code) : continuedPunctuation(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNamedCharacterReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.consume(code)\n    return inside\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (code === 59) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    // If the named character reference is followed by the end of the path, it\u2019s\n    // not continued punctuation.\n    return pathEnd(code) ? ok(code) : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizePunctuation(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.consume(code)\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    // Check the next.\n    if (trailingPunctuation(code)) {\n      effects.consume(code)\n      return after\n    } // If the punctuation marker is followed by the end of the path, it\u2019s not\n    // continued punctuation.\n\n    return pathEnd(code) ? ok(code) : nok(code)\n  }\n}\n/**\n * @param {Code} code\n * @returns {boolean}\n */\n\nfunction trailingPunctuation(code) {\n  return (\n    code === 33 ||\n    code === 34 ||\n    code === 39 ||\n    code === 41 ||\n    code === 42 ||\n    code === 44 ||\n    code === 46 ||\n    code === 58 ||\n    code === 59 ||\n    code === 60 ||\n    code === 63 ||\n    code === 95 ||\n    code === 126\n  )\n}\n/**\n * @param {Code} code\n * @returns {boolean}\n */\n\nfunction pathEnd(code) {\n  return code === null || code === 60 || markdownLineEndingOrSpace(code)\n}\n/**\n * @param {Code} code\n * @returns {boolean}\n */\n\nfunction gfmAtext(code) {\n  return (\n    code === 43 ||\n    code === 45 ||\n    code === 46 ||\n    code === 95 ||\n    asciiAlphanumeric(code)\n  )\n}\n/** @type {Previous} */\n\nfunction previousWww(code) {\n  return (\n    code === null ||\n    code === 40 ||\n    code === 42 ||\n    code === 95 ||\n    code === 126 ||\n    markdownLineEndingOrSpace(code)\n  )\n}\n/** @type {Previous} */\n\nfunction previousHttp(code) {\n  return code === null || !asciiAlpha(code)\n}\n/** @type {Previous} */\n\nfunction previousEmail(code) {\n  return code !== 47 && previousHttp(code)\n}\n/**\n * @param {Array<Event>} events\n * @returns {boolean}\n */\n\nfunction previousUnbalanced(events) {\n  let index = events.length\n  let result = false\n\n  while (index--) {\n    const token = events[index][1]\n\n    if (\n      (token.type === 'labelLink' || token.type === 'labelImage') &&\n      !token._balanced\n    ) {\n      result = true\n      break\n    } // @ts-expect-error If we\u2019ve seen this token, and it was marked as not\n    // having any unbalanced bracket before it, we can exit.\n\n    if (token._gfmAutolinkLiteralWalkedInto) {\n      result = false\n      break\n    }\n  }\n\n  if (events.length > 0 && !result) {\n    // @ts-expect-error Mark the last token as \u201Cwalked into\u201D w/o finding\n    // anything.\n    events[events.length - 1][1]._gfmAutolinkLiteralWalkedInto = true\n  }\n\n  return result\n}\n", "/**\n * @typedef {import('./lib/html.js').Options} HtmlOptions\n */\nexport {gfmFootnote} from './lib/syntax.js'\nexport {gfmFootnoteHtml} from './lib/html.js'\n", "/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {blankLine} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nconst indent = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n/**\n * @returns {Extension}\n */\n\nexport function gfmFootnote() {\n  /** @type {Extension} */\n  return {\n    document: {\n      [91]: {\n        tokenize: tokenizeDefinitionStart,\n        continuation: {\n          tokenize: tokenizeDefinitionContinuation\n        },\n        exit: gfmFootnoteDefinitionEnd\n      }\n    },\n    text: {\n      [91]: {\n        tokenize: tokenizeGfmFootnoteCall\n      },\n      [93]: {\n        add: 'after',\n        tokenize: tokenizePotentialGfmFootnoteCall,\n        resolveTo: resolveToPotentialGfmFootnoteCall\n      }\n    }\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizePotentialGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Array<string>} */\n  // @ts-expect-error It\u2019s fine!\n\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {Token} */\n\n  let labelStart // Find an opening.\n\n  while (index--) {\n    const token = self.events[index][1]\n\n    if (token.type === 'labelImage') {\n      labelStart = token\n      break\n    } // Exit if we\u2019ve walked far enough.\n\n    if (\n      token.type === 'gfmFootnoteCall' ||\n      token.type === 'labelLink' ||\n      token.type === 'label' ||\n      token.type === 'image' ||\n      token.type === 'link'\n    ) {\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart || !labelStart._balanced) {\n      return nok(code)\n    }\n\n    const id = normalizeIdentifier(\n      self.sliceSerialize({\n        start: labelStart.end,\n        end: self.now()\n      })\n    )\n\n    if (id.charCodeAt(0) !== 94 || !defined.includes(id.slice(1))) {\n      return nok(code)\n    }\n\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return ok(code)\n  }\n}\n/** @type {Resolver} */\n\nfunction resolveToPotentialGfmFootnoteCall(events, context) {\n  let index = events.length\n  /** @type {Token|undefined} */\n\n  let labelStart // Find an opening.\n\n  while (index--) {\n    if (\n      events[index][1].type === 'labelImage' &&\n      events[index][0] === 'enter'\n    ) {\n      labelStart = events[index][1]\n      break\n    }\n  }\n\n  // Change the `labelImageMarker` to a `data`.\n  events[index + 1][1].type = 'data'\n  events[index + 3][1].type = 'gfmFootnoteCallLabelMarker' // The whole (without `!`):\n\n  const call = {\n    type: 'gfmFootnoteCall',\n    start: Object.assign({}, events[index + 3][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  } // The `^` marker\n\n  const marker = {\n    type: 'gfmFootnoteCallMarker',\n    start: Object.assign({}, events[index + 3][1].end),\n    end: Object.assign({}, events[index + 3][1].end)\n  } // Increment the end 1 character.\n\n  marker.end.column++\n  marker.end.offset++\n  marker.end._bufferIndex++\n  const string = {\n    type: 'gfmFootnoteCallString',\n    start: Object.assign({}, marker.end),\n    end: Object.assign({}, events[events.length - 1][1].start)\n  }\n  const chunk = {\n    type: 'chunkString',\n    contentType: 'string',\n    start: Object.assign({}, string.start),\n    end: Object.assign({}, string.end)\n  }\n  /** @type {Array<Event>} */\n\n  const replacement = [\n    // Take the `labelImageMarker` (now `data`, the `!`)\n    events[index + 1],\n    events[index + 2],\n    ['enter', call, context], // The `[`\n    events[index + 3],\n    events[index + 4], // The `^`.\n    ['enter', marker, context],\n    ['exit', marker, context], // Everything in between.\n    ['enter', string, context],\n    ['enter', chunk, context],\n    ['exit', chunk, context],\n    ['exit', string, context], // The ending (`]`, properly parsed and labelled).\n    events[events.length - 2],\n    events[events.length - 1],\n    ['exit', call, context]\n  ]\n  events.splice(index, events.length - index + 1, ...replacement)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  /** @type {Array<string>} */\n  // @ts-expect-error It\u2019s fine!\n\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  let size = 0\n  /** @type {boolean} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('gfmFootnoteCall')\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return callStart\n  }\n  /** @type {State} */\n\n  function callStart(code) {\n    if (code !== 94) return nok(code)\n    effects.enter('gfmFootnoteCallMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallMarker')\n    effects.enter('gfmFootnoteCallString')\n    effects.enter('chunkString').contentType = 'string'\n    return callData\n  }\n  /** @type {State} */\n\n  function callData(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === null || code === 91 || size++ > 999) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      if (!data) {\n        return nok(code)\n      }\n\n      effects.exit('chunkString')\n      token = effects.exit('gfmFootnoteCallString')\n      return defined.includes(normalizeIdentifier(self.sliceSerialize(token)))\n        ? end(code)\n        : nok(code)\n    }\n\n    effects.consume(code)\n\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n\n    return code === 92 ? callEscape : callData\n  }\n  /** @type {State} */\n\n  function callEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return callData\n    }\n\n    return callData(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    effects.exit('gfmFootnoteCall')\n    return ok\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinitionStart(effects, ok, nok) {\n  const self = this\n  /** @type {Array<string>} */\n  // @ts-expect-error It\u2019s fine!\n\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {string} */\n\n  let identifier\n  let size = 0\n  /** @type {boolean|undefined} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('gfmFootnoteDefinition')._container = true\n    effects.enter('gfmFootnoteDefinitionLabel')\n    effects.enter('gfmFootnoteDefinitionLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteDefinitionLabelMarker')\n    return labelStart\n  }\n  /** @type {State} */\n\n  function labelStart(code) {\n    if (code === 94) {\n      effects.enter('gfmFootnoteDefinitionMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionMarker')\n      effects.enter('gfmFootnoteDefinitionLabelString')\n      return atBreak\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === null || code === 91 || size > 999) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      if (!data) {\n        return nok(code)\n      }\n\n      token = effects.exit('gfmFootnoteDefinitionLabelString')\n      identifier = normalizeIdentifier(self.sliceSerialize(token))\n      effects.enter('gfmFootnoteDefinitionLabelMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionLabelMarker')\n      effects.exit('gfmFootnoteDefinitionLabel')\n      return labelAfter\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      size++\n      return atBreak\n    }\n\n    effects.enter('chunkString').contentType = 'string'\n    return label(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (\n      code === null ||\n      markdownLineEnding(code) ||\n      code === 91 ||\n      code === 93 ||\n      size > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n\n    size++\n    effects.consume(code)\n    return code === 92 ? labelEscape : label\n  }\n  /** @type {State} */\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n  /** @type {State} */\n\n  function labelAfter(code) {\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Any whitespace after the marker is eaten, forming indented code\n      // is not possible.\n      // No space is also fine, just like a block quote marker.\n\n      return factorySpace(effects, done, 'gfmFootnoteDefinitionWhitespace')\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    if (!defined.includes(identifier)) {\n      defined.push(identifier)\n    }\n\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinitionContinuation(effects, ok, nok) {\n  // Either a blank line, which is okay, or an indented thing.\n  return effects.check(blankLine, ok, effects.attempt(indent, ok, nok))\n}\n/** @type {Exiter} */\n\nfunction gfmFootnoteDefinitionEnd(effects) {\n  effects.exit('gfmFootnoteDefinition')\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'gfmFootnoteDefinitionIndent',\n    4 + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'gfmFootnoteDefinitionIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === 4\n      ? ok(code)\n      : nok(code)\n  }\n}\n", "/**\n * @typedef {import('./lib/syntax.js').Options} Options\n */\nexport {gfmStrikethroughHtml} from './lib/html.js'\nexport {gfmStrikethrough} from './lib/syntax.js'\n", "/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n */\n\n/**\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean} [singleTilde=true]\n *   Whether to support strikethrough with a single tilde (`boolean`, default:\n *   `true`).\n *   Single tildes work on github.com, but are technically prohibited by the\n *   GFM spec.\n */\nimport {splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/**\n * @param {Options} [options]\n * @returns {Extension}\n */\nexport function gfmStrikethrough(options = {}) {\n  let single = options.singleTilde\n  const tokenizer = {\n    tokenize: tokenizeStrikethrough,\n    resolveAll: resolveAllStrikethrough\n  }\n\n  if (single === null || single === undefined) {\n    single = true\n  }\n\n  return {\n    text: {\n      [126]: tokenizer\n    },\n    insideSpan: {\n      null: [tokenizer]\n    },\n    attentionMarkers: {\n      null: [126]\n    }\n  }\n  /**\n   * Take events and resolve strikethrough.\n   *\n   * @type {Resolver}\n   */\n\n  function resolveAllStrikethrough(events, context) {\n    let index = -1 // Walk through all events.\n\n    while (++index < events.length) {\n      // Find a token that can close.\n      if (\n        events[index][0] === 'enter' &&\n        events[index][1].type === 'strikethroughSequenceTemporary' &&\n        events[index][1]._close\n      ) {\n        let open = index // Now walk back to find an opener.\n\n        while (open--) {\n          // Find a token that can open the closer.\n          if (\n            events[open][0] === 'exit' &&\n            events[open][1].type === 'strikethroughSequenceTemporary' &&\n            events[open][1]._open && // If the sizes are the same:\n            events[index][1].end.offset - events[index][1].start.offset ===\n              events[open][1].end.offset - events[open][1].start.offset\n          ) {\n            events[index][1].type = 'strikethroughSequence'\n            events[open][1].type = 'strikethroughSequence'\n            const strikethrough = {\n              type: 'strikethrough',\n              start: Object.assign({}, events[open][1].start),\n              end: Object.assign({}, events[index][1].end)\n            }\n            const text = {\n              type: 'strikethroughText',\n              start: Object.assign({}, events[open][1].end),\n              end: Object.assign({}, events[index][1].start)\n            } // Opening.\n\n            const nextEvents = [\n              ['enter', strikethrough, context],\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context],\n              ['enter', text, context]\n            ] // Between.\n\n            splice(\n              nextEvents,\n              nextEvents.length,\n              0,\n              resolveAll(\n                context.parser.constructs.insideSpan.null,\n                events.slice(open + 1, index),\n                context\n              )\n            ) // Closing.\n\n            splice(nextEvents, nextEvents.length, 0, [\n              ['exit', text, context],\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context],\n              ['exit', strikethrough, context]\n            ])\n            splice(events, open - 1, index - open + 3, nextEvents)\n            index = open + nextEvents.length - 2\n            break\n          }\n        }\n      }\n    }\n\n    index = -1\n\n    while (++index < events.length) {\n      if (events[index][1].type === 'strikethroughSequenceTemporary') {\n        events[index][1].type = 'data'\n      }\n    }\n\n    return events\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeStrikethrough(effects, ok, nok) {\n    const previous = this.previous\n    const events = this.events\n    let size = 0\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      if (\n        previous === 126 &&\n        events[events.length - 1][1].type !== 'characterEscape'\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('strikethroughSequenceTemporary')\n      return more(code)\n    }\n    /** @type {State} */\n\n    function more(code) {\n      const before = classifyCharacter(previous)\n\n      if (code === 126) {\n        // If this is the third marker, exit.\n        if (size > 1) return nok(code)\n        effects.consume(code)\n        size++\n        return more\n      }\n\n      if (size < 2 && !single) return nok(code)\n      const token = effects.exit('strikethroughSequenceTemporary')\n      const after = classifyCharacter(code)\n      token._open = !after || (after === 2 && Boolean(before))\n      token._close = !before || (before === 2 && Boolean(after))\n      return ok(code)\n    }\n  }\n}\n", "export {gfmTableHtml} from './lib/html.js'\nexport {gfmTable} from './lib/syntax.js'\n", "/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n */\n\n/**\n * @typedef {'left'|'center'|'right'|'none'} Align\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Extension} */\nexport const gfmTable = {\n  flow: {\n    null: {\n      tokenize: tokenizeTable,\n      resolve: resolveTable\n    }\n  }\n}\nconst nextPrefixedOrBlank = {\n  tokenize: tokenizeNextPrefixedOrBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveTable(events, context) {\n  let index = -1\n  /** @type {boolean|undefined} */\n\n  let inHead\n  /** @type {boolean|undefined} */\n\n  let inDelimiterRow\n  /** @type {boolean|undefined} */\n\n  let inRow\n  /** @type {number|undefined} */\n\n  let contentStart\n  /** @type {number|undefined} */\n\n  let contentEnd\n  /** @type {number|undefined} */\n\n  let cellStart\n  /** @type {boolean|undefined} */\n\n  let seenCellInRow\n\n  while (++index < events.length) {\n    const token = events[index][1]\n\n    if (inRow) {\n      if (token.type === 'temporaryTableCellContent') {\n        contentStart = contentStart || index\n        contentEnd = index\n      }\n\n      if (\n        // Combine separate content parts into one.\n        (token.type === 'tableCellDivider' || token.type === 'tableRow') &&\n        contentEnd\n      ) {\n        const content = {\n          type: 'tableContent',\n          start: events[contentStart][1].start,\n          end: events[contentEnd][1].end\n        }\n        /** @type {Token} */\n\n        const text = {\n          type: 'chunkText',\n          start: content.start,\n          end: content.end,\n          // @ts-expect-error It\u2019s fine.\n          contentType: 'text'\n        }\n        events.splice(\n          contentStart,\n          contentEnd - contentStart + 1,\n          ['enter', content, context],\n          ['enter', text, context],\n          ['exit', text, context],\n          ['exit', content, context]\n        )\n        index -= contentEnd - contentStart - 3\n        contentStart = undefined\n        contentEnd = undefined\n      }\n    }\n\n    if (\n      events[index][0] === 'exit' &&\n      cellStart !== undefined &&\n      cellStart + (seenCellInRow ? 0 : 1) < index &&\n      (token.type === 'tableCellDivider' ||\n        (token.type === 'tableRow' &&\n          (cellStart + 3 < index ||\n            events[cellStart][1].type !== 'whitespace')))\n    ) {\n      const cell = {\n        type: inDelimiterRow\n          ? 'tableDelimiter'\n          : inHead\n          ? 'tableHeader'\n          : 'tableData',\n        start: events[cellStart][1].start,\n        end: events[index][1].end\n      }\n      events.splice(index + (token.type === 'tableCellDivider' ? 1 : 0), 0, [\n        'exit',\n        cell,\n        context\n      ])\n      events.splice(cellStart, 0, ['enter', cell, context])\n      index += 2\n      cellStart = index + 1\n      seenCellInRow = true\n    }\n\n    if (token.type === 'tableRow') {\n      inRow = events[index][0] === 'enter'\n\n      if (inRow) {\n        cellStart = index + 1\n        seenCellInRow = false\n      }\n    }\n\n    if (token.type === 'tableDelimiterRow') {\n      inDelimiterRow = events[index][0] === 'enter'\n\n      if (inDelimiterRow) {\n        cellStart = index + 1\n        seenCellInRow = false\n      }\n    }\n\n    if (token.type === 'tableHead') {\n      inHead = events[index][0] === 'enter'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTable(effects, ok, nok) {\n  const self = this\n  /** @type {Array<Align>} */\n\n  const align = []\n  let tableHeaderCount = 0\n  /** @type {boolean|undefined} */\n\n  let seenDelimiter\n  /** @type {boolean|undefined} */\n\n  let hasDash\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // @ts-expect-error Custom.\n    effects.enter('table')._align = align\n    effects.enter('tableHead')\n    effects.enter('tableRow') // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      return cellDividerHead(code)\n    }\n\n    tableHeaderCount++\n    effects.enter('temporaryTableCellContent') // Can\u2019t be space or eols at the start of a construct, so we\u2019re in a cell.\n\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function cellDividerHead(code) {\n    effects.enter('tableCellDivider')\n    effects.consume(code)\n    effects.exit('tableCellDivider')\n    seenDelimiter = true\n    return cellBreakHead\n  }\n  /** @type {State} */\n\n  function cellBreakHead(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return atRowEndHead(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceHead\n    }\n\n    if (seenDelimiter) {\n      seenDelimiter = undefined\n      tableHeaderCount++\n    }\n\n    if (code === 124) {\n      return cellDividerHead(code)\n    } // Anything else is cell content.\n\n    effects.enter('temporaryTableCellContent')\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceHead(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceHead\n    }\n\n    effects.exit('whitespace')\n    return cellBreakHead(code)\n  }\n  /** @type {State} */\n\n  function inCellContentHead(code) {\n    // EOF, whitespace, pipe\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit('temporaryTableCellContent')\n      return cellBreakHead(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? inCellContentEscapeHead : inCellContentHead\n  }\n  /** @type {State} */\n\n  function inCellContentEscapeHead(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return inCellContentHead\n    } // Anything else.\n\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function atRowEndHead(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    effects.exit('tableRow')\n    effects.exit('tableHead')\n    const originalInterrupt = self.interrupt\n    self.interrupt = true\n    return effects.attempt(\n      {\n        tokenize: tokenizeRowEnd,\n        partial: true\n      },\n      function (code) {\n        self.interrupt = originalInterrupt\n        effects.enter('tableDelimiterRow')\n        return atDelimiterRowBreak(code)\n      },\n      function (code) {\n        self.interrupt = originalInterrupt\n        return nok(code)\n      }\n    )(code)\n  }\n  /** @type {State} */\n\n  function atDelimiterRowBreak(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return rowEndDelimiter(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    }\n\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller')\n      effects.consume(code)\n      hasDash = true\n      align.push('none')\n      return inFillerDelimiter\n    }\n\n    if (code === 58) {\n      effects.enter('tableDelimiterAlignment')\n      effects.consume(code)\n      effects.exit('tableDelimiterAlignment')\n      align.push('left')\n      return afterLeftAlignment\n    } // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return atDelimiterRowBreak\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceDelimiter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    }\n\n    effects.exit('whitespace')\n    return atDelimiterRowBreak(code)\n  }\n  /** @type {State} */\n\n  function inFillerDelimiter(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return inFillerDelimiter\n    }\n\n    effects.exit('tableDelimiterFiller')\n\n    if (code === 58) {\n      effects.enter('tableDelimiterAlignment')\n      effects.consume(code)\n      effects.exit('tableDelimiterAlignment')\n      align[align.length - 1] =\n        align[align.length - 1] === 'left' ? 'center' : 'right'\n      return afterRightAlignment\n    }\n\n    return atDelimiterRowBreak(code)\n  }\n  /** @type {State} */\n\n  function afterLeftAlignment(code) {\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller')\n      effects.consume(code)\n      hasDash = true\n      return inFillerDelimiter\n    } // Anything else is not ok.\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function afterRightAlignment(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return rowEndDelimiter(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    } // `|`\n\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return atDelimiterRowBreak\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function rowEndDelimiter(code) {\n    effects.exit('tableDelimiterRow') // Exit if there was no dash at all, or if the header cell count is not the\n    // delimiter cell count.\n\n    if (!hasDash || tableHeaderCount !== align.length) {\n      return nok(code)\n    }\n\n    if (code === null) {\n      return tableClose(code)\n    }\n\n    return effects.check(\n      nextPrefixedOrBlank,\n      tableClose,\n      effects.attempt(\n        {\n          tokenize: tokenizeRowEnd,\n          partial: true\n        },\n        factorySpace(effects, bodyStart, 'linePrefix', 4),\n        tableClose\n      )\n    )(code)\n  }\n  /** @type {State} */\n\n  function tableClose(code) {\n    effects.exit('table')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function bodyStart(code) {\n    effects.enter('tableBody')\n    return rowStartBody(code)\n  }\n  /** @type {State} */\n\n  function rowStartBody(code) {\n    effects.enter('tableRow') // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      return cellDividerBody(code)\n    }\n\n    effects.enter('temporaryTableCellContent') // Can\u2019t be space or eols at the start of a construct, so we\u2019re in a cell.\n\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function cellDividerBody(code) {\n    effects.enter('tableCellDivider')\n    effects.consume(code)\n    effects.exit('tableCellDivider')\n    return cellBreakBody\n  }\n  /** @type {State} */\n\n  function cellBreakBody(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return atRowEndBody(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceBody\n    } // `|`\n\n    if (code === 124) {\n      return cellDividerBody(code)\n    } // Anything else is cell content.\n\n    effects.enter('temporaryTableCellContent')\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceBody(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceBody\n    }\n\n    effects.exit('whitespace')\n    return cellBreakBody(code)\n  }\n  /** @type {State} */\n\n  function inCellContentBody(code) {\n    // EOF, whitespace, pipe\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit('temporaryTableCellContent')\n      return cellBreakBody(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? inCellContentEscapeBody : inCellContentBody\n  }\n  /** @type {State} */\n\n  function inCellContentEscapeBody(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return inCellContentBody\n    } // Anything else.\n\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function atRowEndBody(code) {\n    effects.exit('tableRow')\n\n    if (code === null) {\n      return tableBodyClose(code)\n    }\n\n    return effects.check(\n      nextPrefixedOrBlank,\n      tableBodyClose,\n      effects.attempt(\n        {\n          tokenize: tokenizeRowEnd,\n          partial: true\n        },\n        factorySpace(effects, rowStartBody, 'linePrefix', 4),\n        tableBodyClose\n      )\n    )(code)\n  }\n  /** @type {State} */\n\n  function tableBodyClose(code) {\n    effects.exit('tableBody')\n    return tableClose(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeRowEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, prefixed, 'linePrefix')\n    }\n    /** @type {State} */\n\n    function prefixed(code) {\n      // Blank or interrupting line.\n      if (\n        self.parser.lazy[self.now().line] ||\n        code === null ||\n        markdownLineEnding(code)\n      ) {\n        return nok(code)\n      }\n\n      const tail = self.events[self.events.length - 1] // Indented code can interrupt delimiter and body rows.\n\n      if (\n        !self.parser.constructs.disable.null.includes('codeIndented') &&\n        tail &&\n        tail[1].type === 'linePrefix' &&\n        tail[2].sliceSerialize(tail[1], true).length >= 4\n      ) {\n        return nok(code)\n      }\n\n      self._gfmTableDynamicInterruptHack = true\n      return effects.check(\n        self.parser.constructs.flow,\n        function (code) {\n          self._gfmTableDynamicInterruptHack = false\n          return nok(code)\n        },\n        function (code) {\n          self._gfmTableDynamicInterruptHack = false\n          return ok(code)\n        }\n      )(code)\n    }\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextPrefixedOrBlank(effects, ok, nok) {\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // This is a check, so we don\u2019t care about tokens, but we open a bogus one\n    // so we\u2019re valid.\n    effects.enter('check') // EOL.\n\n    effects.consume(code)\n    return whitespace\n  }\n  /** @type {State} */\n\n  function whitespace(code) {\n    if (code === -1 || code === 32) {\n      effects.consume(code)\n      size++\n      return size === 4 ? ok : whitespace\n    } // EOF or whitespace\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      return ok(code)\n    } // Anything else.\n\n    return nok(code)\n  }\n}\n", "export {gfmTaskListItemHtml} from './lib/html.js'\nexport {gfmTaskListItem} from './lib/syntax.js'\n", "/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\nconst tasklistCheck = {\n  tokenize: tokenizeTasklistCheck\n}\nexport const gfmTaskListItem = {\n  text: {\n    [91]: tasklistCheck\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTasklistCheck(effects, ok, nok) {\n  const self = this\n  return open\n  /** @type {State} */\n\n  function open(code) {\n    if (\n      // Exit if there\u2019s stuff before.\n      self.previous !== null || // Exit if not in the first content that is the first child of a list\n      // item.\n      !self._gfmTasklistFirstContentOfListItem\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('taskListCheck')\n    effects.enter('taskListCheckMarker')\n    effects.consume(code)\n    effects.exit('taskListCheckMarker')\n    return inside\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    // To match how GH works in comments, use `markdownSpace` (`[ \\t]`) instead\n    // of `markdownLineEndingOrSpace` (`[ \\t\\r\\n]`).\n    if (markdownLineEndingOrSpace(code)) {\n      effects.enter('taskListCheckValueUnchecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueUnchecked')\n      return close\n    }\n\n    if (code === 88 || code === 120) {\n      effects.enter('taskListCheckValueChecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueChecked')\n      return close\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function close(code) {\n    if (code === 93) {\n      effects.enter('taskListCheckMarker')\n      effects.consume(code)\n      effects.exit('taskListCheckMarker')\n      effects.exit('taskListCheck')\n      return effects.check(\n        {\n          tokenize: spaceThenNonSpace\n        },\n        ok,\n        nok\n      )\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction spaceThenNonSpace(effects, ok, nok) {\n  const self = this\n  return factorySpace(effects, after, 'whitespace')\n  /** @type {State} */\n\n  function after(code) {\n    const tail = self.events[self.events.length - 1]\n    return (\n      // We either found spaces\u2026\n      ((tail && tail[1].type === 'whitespace') || // \u2026or it was followed by a line ending, in which case, there has to be\n        // non-whitespace after that line ending, because otherwise we\u2019d get an\n        // EOF as the content is closed with blank lines.\n        markdownLineEnding(code)) &&\n        code !== null\n        ? ok(code)\n        : nok(code)\n    )\n  }\n}\n", "/**\n * @typedef {import('./lib/index.js').Options} Options\n */\n\nexport {gfmFromMarkdown, gfmToMarkdown} from './lib/index.js'\n", "/**\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n *\n * @typedef {import('mdast-util-gfm-table').Options} Options\n */\n\nimport {\n  gfmAutolinkLiteralFromMarkdown,\n  gfmAutolinkLiteralToMarkdown\n} from 'mdast-util-gfm-autolink-literal'\nimport {\n  gfmFootnoteFromMarkdown,\n  gfmFootnoteToMarkdown\n} from 'mdast-util-gfm-footnote'\nimport {\n  gfmStrikethroughFromMarkdown,\n  gfmStrikethroughToMarkdown\n} from 'mdast-util-gfm-strikethrough'\nimport {gfmTableFromMarkdown, gfmTableToMarkdown} from 'mdast-util-gfm-table'\nimport {\n  gfmTaskListItemFromMarkdown,\n  gfmTaskListItemToMarkdown\n} from 'mdast-util-gfm-task-list-item'\n\n/**\n * @returns {Array<FromMarkdownExtension>}\n */\nexport function gfmFromMarkdown() {\n  return [\n    gfmAutolinkLiteralFromMarkdown,\n    gfmFootnoteFromMarkdown(),\n    gfmStrikethroughFromMarkdown,\n    gfmTableFromMarkdown,\n    gfmTaskListItemFromMarkdown\n  ]\n}\n\n/**\n * @param {Options} [options]\n * @returns {ToMarkdownExtension}\n */\nexport function gfmToMarkdown(options) {\n  return {\n    extensions: [\n      gfmAutolinkLiteralToMarkdown,\n      gfmFootnoteToMarkdown(),\n      gfmStrikethroughToMarkdown,\n      gfmTableToMarkdown(options),\n      gfmTaskListItemToMarkdown\n    ]\n  }\n}\n", "/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Transform} FromMarkdownTransform\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown/lib/types.js').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-find-and-replace').ReplaceFunction} ReplaceFunction\n * @typedef {import('mdast-util-find-and-replace').RegExpMatchObject} RegExpMatchObject\n * @typedef {import('mdast-util-find-and-replace').PhrasingContent} PhrasingContent\n */\n\nimport {ccount} from 'ccount'\nimport {findAndReplace} from 'mdast-util-find-and-replace'\nimport {unicodePunctuation, unicodeWhitespace} from 'micromark-util-character'\n\nconst inConstruct = 'phrasing'\nconst notInConstruct = ['autolink', 'link', 'image', 'label']\n\n/** @type {FromMarkdownExtension} */\nexport const gfmAutolinkLiteralFromMarkdown = {\n  transforms: [transformGfmAutolinkLiterals],\n  enter: {\n    literalAutolink: enterLiteralAutolink,\n    literalAutolinkEmail: enterLiteralAutolinkValue,\n    literalAutolinkHttp: enterLiteralAutolinkValue,\n    literalAutolinkWww: enterLiteralAutolinkValue\n  },\n  exit: {\n    literalAutolink: exitLiteralAutolink,\n    literalAutolinkEmail: exitLiteralAutolinkEmail,\n    literalAutolinkHttp: exitLiteralAutolinkHttp,\n    literalAutolinkWww: exitLiteralAutolinkWww\n  }\n}\n\n/** @type {ToMarkdownExtension} */\nexport const gfmAutolinkLiteralToMarkdown = {\n  unsafe: [\n    {\n      character: '@',\n      before: '[+\\\\-.\\\\w]',\n      after: '[\\\\-.\\\\w]',\n      inConstruct,\n      notInConstruct\n    },\n    {\n      character: '.',\n      before: '[Ww]',\n      after: '[\\\\-.\\\\w]',\n      inConstruct,\n      notInConstruct\n    },\n    {character: ':', before: '[ps]', after: '\\\\/', inConstruct, notInConstruct}\n  ]\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterLiteralAutolink(token) {\n  this.enter({type: 'link', title: null, url: '', children: []}, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterLiteralAutolinkValue(token) {\n  this.config.enter.autolinkProtocol.call(this, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitLiteralAutolinkHttp(token) {\n  this.config.exit.autolinkProtocol.call(this, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitLiteralAutolinkWww(token) {\n  this.config.exit.data.call(this, token)\n  const node = /** @type {Link} */ (this.stack[this.stack.length - 1])\n  node.url = 'http://' + this.sliceSerialize(token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitLiteralAutolinkEmail(token) {\n  this.config.exit.autolinkEmail.call(this, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitLiteralAutolink(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownTransform} */\nfunction transformGfmAutolinkLiterals(tree) {\n  findAndReplace(\n    tree,\n    [\n      [/(https?:\\/\\/|www(?=\\.))([-.\\w]+)([^ \\t\\r\\n]*)/gi, findUrl],\n      [/([-.\\w+]+)@([-\\w]+(?:\\.[-\\w]+)+)/g, findEmail]\n    ],\n    {ignore: ['link', 'linkReference']}\n  )\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} protocol\n * @param {string} domain\n * @param {string} path\n * @param {RegExpMatchObject} match\n */\n// eslint-disable-next-line max-params\nfunction findUrl(_, protocol, domain, path, match) {\n  let prefix = ''\n\n  // Not an expected previous character.\n  if (!previous(match)) {\n    return false\n  }\n\n  // Treat `www` as part of the domain.\n  if (/^w/i.test(protocol)) {\n    domain = protocol + domain\n    protocol = ''\n    prefix = 'http://'\n  }\n\n  if (!isCorrectDomain(domain)) {\n    return false\n  }\n\n  const parts = splitUrl(domain + path)\n\n  if (!parts[0]) return false\n\n  /** @type {PhrasingContent} */\n  const result = {\n    type: 'link',\n    title: null,\n    url: prefix + protocol + parts[0],\n    children: [{type: 'text', value: protocol + parts[0]}]\n  }\n\n  if (parts[1]) {\n    return [result, {type: 'text', value: parts[1]}]\n  }\n\n  return result\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} atext\n * @param {string} label\n * @param {RegExpMatchObject} match\n */\nfunction findEmail(_, atext, label, match) {\n  if (\n    // Not an expected previous character.\n    !previous(match, true) ||\n    // Label ends in not allowed character.\n    /[_-\\d]$/.test(label)\n  ) {\n    return false\n  }\n\n  return {\n    type: 'link',\n    title: null,\n    url: 'mailto:' + atext + '@' + label,\n    children: [{type: 'text', value: atext + '@' + label}]\n  }\n}\n\n/**\n * @param {string} domain\n * @returns {boolean}\n */\nfunction isCorrectDomain(domain) {\n  const parts = domain.split('.')\n\n  if (\n    parts.length < 2 ||\n    (parts[parts.length - 1] &&\n      (/_/.test(parts[parts.length - 1]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 1]))) ||\n    (parts[parts.length - 2] &&\n      (/_/.test(parts[parts.length - 2]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 2])))\n  ) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * @param {string} url\n * @returns {[string, string|undefined]}\n */\nfunction splitUrl(url) {\n  const trailExec = /[!\"&'),.:;<>?\\]}]+$/.exec(url)\n  /** @type {number} */\n  let closingParenIndex\n  /** @type {number} */\n  let openingParens\n  /** @type {number} */\n  let closingParens\n  /** @type {string|undefined} */\n  let trail\n\n  if (trailExec) {\n    url = url.slice(0, trailExec.index)\n    trail = trailExec[0]\n    closingParenIndex = trail.indexOf(')')\n    openingParens = ccount(url, '(')\n    closingParens = ccount(url, ')')\n\n    while (closingParenIndex !== -1 && openingParens > closingParens) {\n      url += trail.slice(0, closingParenIndex + 1)\n      trail = trail.slice(closingParenIndex + 1)\n      closingParenIndex = trail.indexOf(')')\n      closingParens++\n    }\n  }\n\n  return [url, trail]\n}\n\n/**\n * @param {RegExpMatchObject} match\n * @param {boolean} [email=false]\n * @returns {boolean}\n */\nfunction previous(match, email) {\n  const code = match.input.charCodeAt(match.index - 1)\n\n  return (\n    (match.index === 0 ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)) &&\n    (!email || code !== 47)\n  )\n}\n", "/**\n * Count how often a character (or substring) is used in a string.\n *\n * @param {string} value\n *   Value to search in.\n * @param {string} character\n *   Character (or substring) to look for.\n * @return {number}\n *   Number of times `character` occurred in `value`.\n */\nexport function ccount(value, character) {\n  const source = String(value)\n\n  if (typeof character !== 'string') {\n    throw new TypeError('Expected character')\n  }\n\n  let count = 0\n  let index = source.indexOf(character)\n\n  while (index !== -1) {\n    count++\n    index = source.indexOf(character, index + character.length)\n  }\n\n  return count\n}\n", "/**\n * @typedef {import('./lib/index.js').Options} Options\n * @typedef {import('./lib/index.js').RegExpMatchObject} RegExpMatchObject\n * @typedef {import('./lib/index.js').Find} Find\n * @typedef {import('./lib/index.js').Replace} Replace\n * @typedef {import('./lib/index.js').ReplaceFunction} ReplaceFunction\n * @typedef {import('./lib/index.js').FindAndReplaceTuple} FindAndReplaceTuple\n * @typedef {import('./lib/index.js').FindAndReplaceSchema} FindAndReplaceSchema\n * @typedef {import('./lib/index.js').FindAndReplaceList} FindAndReplaceList\n */\n\nexport {findAndReplace} from './lib/index.js'\n", "/**\n * @typedef Options\n *   Configuration (optional).\n * @property {Test} [ignore]\n *   `unist-util-is` test used to assert parents\n *\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Text} Text\n * @typedef {Content|Root} Node\n * @typedef {Exclude<Extract<Node, import('mdast').Parent>, Root>} Parent\n *\n * @typedef {import('unist-util-visit-parents').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n *\n * @typedef RegExpMatchObject\n * @property {number} index\n * @property {string} input\n * @property {[Root, ...Array<Parent>, Text]} stack\n *\n * @typedef {string|RegExp} Find\n * @typedef {string|ReplaceFunction} Replace\n *\n * @typedef {[Find, Replace]} FindAndReplaceTuple\n * @typedef {Record<string, Replace>} FindAndReplaceSchema\n * @typedef {Array<FindAndReplaceTuple>} FindAndReplaceList\n *\n * @typedef {[RegExp, ReplaceFunction]} Pair\n * @typedef {Array<Pair>} Pairs\n */\n\n/**\n * @callback ReplaceFunction\n * @param {...any} parameters\n * @returns {Array<PhrasingContent>|PhrasingContent|string|false|undefined|null}\n */\n\nimport escape from 'escape-string-regexp'\nimport {visitParents} from 'unist-util-visit-parents'\nimport {convert} from 'unist-util-is'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param tree mdast tree\n * @param find Value to find and remove. When `string`, escaped and made into a global `RegExp`\n * @param [replace] Value to insert.\n *   * When `string`, turned into a Text node.\n *   * When `Function`, called with the results of calling `RegExp.exec` as\n *     arguments, in which case it can return a single or a list of `Node`,\n *     a `string` (which is wrapped in a `Text` node), or `false` to not replace\n * @param [options] Configuration.\n */\nexport const findAndReplace =\n  /**\n   * @type {(\n   *   ((tree: Node, find: Find, replace?: Replace, options?: Options) => Node) &\n   *   ((tree: Node, schema: FindAndReplaceSchema|FindAndReplaceList, options?: Options) => Node)\n   * )}\n   **/\n  (\n    /**\n     * @param {Node} tree\n     * @param {Find|FindAndReplaceSchema|FindAndReplaceList} find\n     * @param {Replace|Options} [replace]\n     * @param {Options} [options]\n     */\n    function (tree, find, replace, options) {\n      /** @type {Options|undefined} */\n      let settings\n      /** @type {FindAndReplaceSchema|FindAndReplaceList} */\n      let schema\n\n      if (typeof find === 'string' || find instanceof RegExp) {\n        // @ts-expect-error don\u2019t expect options twice.\n        schema = [[find, replace]]\n        settings = options\n      } else {\n        schema = find\n        // @ts-expect-error don\u2019t expect replace twice.\n        settings = replace\n      }\n\n      if (!settings) {\n        settings = {}\n      }\n\n      const ignored = convert(settings.ignore || [])\n      const pairs = toPairs(schema)\n      let pairIndex = -1\n\n      while (++pairIndex < pairs.length) {\n        visitParents(tree, 'text', visitor)\n      }\n\n      return tree\n\n      /** @type {import('unist-util-visit-parents/complex-types').BuildVisitor<Root, 'text'>} */\n      function visitor(node, parents) {\n        let index = -1\n        /** @type {Parent|undefined} */\n        let grandparent\n\n        while (++index < parents.length) {\n          const parent = /** @type {Parent} */ (parents[index])\n\n          if (\n            ignored(\n              parent,\n              // @ts-expect-error mdast vs. unist parent.\n              grandparent ? grandparent.children.indexOf(parent) : undefined,\n              grandparent\n            )\n          ) {\n            return\n          }\n\n          grandparent = parent\n        }\n\n        if (grandparent) {\n          // @ts-expect-error: stack is fine.\n          return handler(node, parents)\n        }\n      }\n\n      /**\n       * @param {Text} node\n       * @param {[Root, ...Array<Parent>]} parents\n       * @returns {VisitorResult}\n       */\n      function handler(node, parents) {\n        const parent = parents[parents.length - 1]\n        const find = pairs[pairIndex][0]\n        const replace = pairs[pairIndex][1]\n        let start = 0\n        // @ts-expect-error: TS is wrong, some of these children can be text.\n        const index = parent.children.indexOf(node)\n        let change = false\n        /** @type {Array<PhrasingContent>} */\n        let nodes = []\n        /** @type {number|undefined} */\n        let position\n\n        find.lastIndex = 0\n\n        let match = find.exec(node.value)\n\n        while (match) {\n          position = match.index\n          /** @type {RegExpMatchObject} */\n          const matchObject = {\n            index: match.index,\n            input: match.input,\n            stack: [...parents, node]\n          }\n          let value = replace(...match, matchObject)\n\n          if (typeof value === 'string') {\n            value = value.length > 0 ? {type: 'text', value} : undefined\n          }\n\n          if (value !== false) {\n            if (start !== position) {\n              nodes.push({\n                type: 'text',\n                value: node.value.slice(start, position)\n              })\n            }\n\n            if (Array.isArray(value)) {\n              nodes.push(...value)\n            } else if (value) {\n              nodes.push(value)\n            }\n\n            start = position + match[0].length\n            change = true\n          }\n\n          if (!find.global) {\n            break\n          }\n\n          match = find.exec(node.value)\n        }\n\n        if (change) {\n          if (start < node.value.length) {\n            nodes.push({type: 'text', value: node.value.slice(start)})\n          }\n\n          parent.children.splice(index, 1, ...nodes)\n        } else {\n          nodes = [node]\n        }\n\n        return index + nodes.length\n      }\n    }\n  )\n\n/**\n * @param {FindAndReplaceSchema|FindAndReplaceList} schema\n * @returns {Pairs}\n */\nfunction toPairs(schema) {\n  /** @type {Pairs} */\n  const result = []\n\n  if (typeof schema !== 'object') {\n    throw new TypeError('Expected array or object as schema')\n  }\n\n  if (Array.isArray(schema)) {\n    let index = -1\n\n    while (++index < schema.length) {\n      result.push([\n        toExpression(schema[index][0]),\n        toFunction(schema[index][1])\n      ])\n    }\n  } else {\n    /** @type {string} */\n    let key\n\n    for (key in schema) {\n      if (own.call(schema, key)) {\n        result.push([toExpression(key), toFunction(schema[key])])\n      }\n    }\n  }\n\n  return result\n}\n\n/**\n * @param {Find} find\n * @returns {RegExp}\n */\nfunction toExpression(find) {\n  return typeof find === 'string' ? new RegExp(escape(find), 'g') : find\n}\n\n/**\n * @param {Replace} replace\n * @returns {ReplaceFunction}\n */\nfunction toFunction(replace) {\n  return typeof replace === 'function' ? replace : () => replace\n}\n", "/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Map} Map\n */\n\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {association} from 'mdast-util-to-markdown/lib/util/association.js'\nimport {containerFlow} from 'mdast-util-to-markdown/lib/util/container-flow.js'\nimport {indentLines} from 'mdast-util-to-markdown/lib/util/indent-lines.js'\nimport {safe} from 'mdast-util-to-markdown/lib/util/safe.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n/**\n * @returns {FromMarkdownExtension}\n */\nexport function gfmFootnoteFromMarkdown() {\n  return {\n    enter: {\n      gfmFootnoteDefinition: enterFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: enterFootnoteDefinitionLabelString,\n      gfmFootnoteCall: enterFootnoteCall,\n      gfmFootnoteCallString: enterFootnoteCallString\n    },\n    exit: {\n      gfmFootnoteDefinition: exitFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: exitFootnoteDefinitionLabelString,\n      gfmFootnoteCall: exitFootnoteCall,\n      gfmFootnoteCallString: exitFootnoteCallString\n    }\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function enterFootnoteDefinition(token) {\n    this.enter(\n      {type: 'footnoteDefinition', identifier: '', label: '', children: []},\n      token\n    )\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function enterFootnoteDefinitionLabelString() {\n    this.buffer()\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function exitFootnoteDefinitionLabelString(token) {\n    const label = this.resume()\n    const node = /** @type {FootnoteDefinition} */ (\n      this.stack[this.stack.length - 1]\n    )\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function exitFootnoteDefinition(token) {\n    this.exit(token)\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function enterFootnoteCall(token) {\n    this.enter({type: 'footnoteReference', identifier: '', label: ''}, token)\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function enterFootnoteCallString() {\n    this.buffer()\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function exitFootnoteCallString(token) {\n    const label = this.resume()\n    const node = /** @type {FootnoteDefinition} */ (\n      this.stack[this.stack.length - 1]\n    )\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function exitFootnoteCall(token) {\n    this.exit(token)\n  }\n}\n\n/**\n * @returns {ToMarkdownExtension}\n */\nexport function gfmFootnoteToMarkdown() {\n  footnoteReference.peek = footnoteReferencePeek\n\n  return {\n    // This is on by default already.\n    unsafe: [{character: '[', inConstruct: ['phrasing', 'label', 'reference']}],\n    handlers: {footnoteDefinition, footnoteReference}\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {FootnoteReference} node\n   */\n  function footnoteReference(node, _, context, safeOptions) {\n    const tracker = track(safeOptions)\n    let value = tracker.move('[^')\n    const exit = context.enter('footnoteReference')\n    const subexit = context.enter('reference')\n    value += tracker.move(\n      safe(context, association(node), {\n        ...tracker.current(),\n        before: value,\n        after: ']'\n      })\n    )\n    subexit()\n    exit()\n    value += tracker.move(']')\n    return value\n  }\n\n  /** @type {ToMarkdownHandle} */\n  function footnoteReferencePeek() {\n    return '['\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {FootnoteDefinition} node\n   */\n  function footnoteDefinition(node, _, context, safeOptions) {\n    const tracker = track(safeOptions)\n    let value = tracker.move('[^')\n    const exit = context.enter('footnoteDefinition')\n    const subexit = context.enter('label')\n    value += tracker.move(\n      safe(context, association(node), {\n        ...tracker.current(),\n        before: value,\n        after: ']'\n      })\n    )\n    subexit()\n    value += tracker.move(\n      ']:' + (node.children && node.children.length > 0 ? ' ' : '')\n    )\n    tracker.shift(4)\n    value += tracker.move(\n      indentLines(containerFlow(node, context, tracker.current()), map)\n    )\n    exit()\n\n    return value\n\n    /** @type {Map} */\n    function map(line, index, blank) {\n      if (index) {\n        return (blank ? '' : '    ') + line\n      }\n\n      return line\n    }\n  }\n}\n", "/**\n * @typedef {import('mdast').Association} Association\n */\n\nimport {decodeString} from 'micromark-util-decode-string'\n\n/**\n * The `label` of an association is the string value: character escapes and\n * references work, and casing is intact.\n * The `identifier` is used to match one association to another: controversially,\n * character escapes and references don\u2019t work in this matching: `&copy;` does\n * not match `\u00A9`, and `\\+` does not match `+`.\n * But casing is ignored (and whitespace) is trimmed and collapsed: ` A\\nb`\n * matches `a b`.\n * So, we do prefer the label when figuring out how we\u2019re going to serialize:\n * it has whitespace, casing, and we can ignore most useless character escapes\n * and all character references.\n *\n * @param {Association} node\n * @returns {string}\n */\nexport function association(node) {\n  if (node.label || !node.identifier) {\n    return node.label || ''\n  }\n\n  return decodeString(node.identifier)\n}\n", "/**\n * @typedef {import('../types.js').Node} Node\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').Join} Join\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').TrackFields} TrackFields\n */\n\nimport {track} from './track.js'\n\n/**\n * @param {Parent} parent\n * @param {Context} context\n * @param {TrackFields} safeOptions\n * @returns {string}\n */\nexport function containerFlow(parent, context, safeOptions) {\n  const indexStack = context.indexStack\n  const children = parent.children || []\n  const tracker = track(safeOptions)\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n\n  indexStack.push(-1)\n\n  while (++index < children.length) {\n    const child = children[index]\n\n    indexStack[indexStack.length - 1] = index\n\n    results.push(\n      tracker.move(\n        context.handle(child, parent, context, {\n          before: '\\n',\n          after: '\\n',\n          ...tracker.current()\n        })\n      )\n    )\n\n    if (child.type !== 'list') {\n      context.bulletLastUsed = undefined\n    }\n\n    if (index < children.length - 1) {\n      results.push(tracker.move(between(child, children[index + 1])))\n    }\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n\n  /**\n   * @param {Node} left\n   * @param {Node} right\n   * @returns {string}\n   */\n  function between(left, right) {\n    let index = context.join.length\n\n    while (index--) {\n      const result = context.join[index](left, right, parent, context)\n\n      if (result === true || result === 1) {\n        break\n      }\n\n      if (typeof result === 'number') {\n        return '\\n'.repeat(1 + result)\n      }\n\n      if (result === false) {\n        return '\\n\\n<!---->\\n\\n'\n      }\n    }\n\n    return '\\n\\n'\n  }\n}\n", "/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('../types.js').TrackFields} TrackFields\n */\n\n/**\n * Functions to track output positions.\n * This info isn\u2019t used yet but suchs functionality allows line wrapping,\n * and theoretically source maps (though, is there practical use in that?).\n *\n * @param {TrackFields} options_\n */\nexport function track(options_) {\n  // Defaults are used to prevent crashes when older utilities somehow activate\n  // this code.\n  /* c8 ignore next 5 */\n  const options = options_ || {}\n  const now = options.now || {}\n  let lineShift = options.lineShift || 0\n  let line = now.line || 1\n  let column = now.column || 1\n\n  return {move, current, shift}\n\n  /**\n   * Get the current tracked info.\n   *\n   * @returns {{now: Point, lineShift: number}}\n   */\n  function current() {\n    return {now: {line, column}, lineShift}\n  }\n\n  /**\n   * Define an increased line shift (the typical indent for lines).\n   *\n   * @param {number} value\n   */\n  function shift(value) {\n    lineShift += value\n  }\n\n  /**\n   * Move past a string.\n   *\n   * @param {string} value\n   * @returns {string}\n   */\n  function move(value = '') {\n    const chunks = value.split(/\\r?\\n|\\r/g)\n    const tail = chunks[chunks.length - 1]\n    line += chunks.length - 1\n    column =\n      chunks.length === 1 ? column + tail.length : 1 + tail.length + lineShift\n    return value\n  }\n}\n", "/**\n * @callback Map\n * @param {string} value\n * @param {number} line\n * @param {boolean} blank\n * @returns {string}\n */\n\nconst eol = /\\r?\\n|\\r/g\n\n/**\n * @param {string} value\n * @param {Map} map\n * @returns {string}\n */\nexport function indentLines(value, map) {\n  /** @type {Array<string>} */\n  const result = []\n  let start = 0\n  let line = 0\n  /** @type {RegExpExecArray|null} */\n  let match\n\n  while ((match = eol.exec(value))) {\n    one(value.slice(start, match.index))\n    result.push(match[0])\n    start = match.index + match[0].length\n    line++\n  }\n\n  one(value.slice(start))\n\n  return result.join('')\n\n  /**\n   * @param {string} value\n   */\n  function one(value) {\n    result.push(map(value, line, !value))\n  }\n}\n", "/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').SafeOptions} SafeOptions\n */\n\nimport {patternCompile} from './pattern-compile.js'\nimport {patternInScope} from './pattern-in-scope.js'\n\n/**\n * @param {Context} context\n * @param {string|null|undefined} input\n * @param {SafeOptions & {encode?: Array<string>}} config\n * @returns {string}\n */\nexport function safe(context, input, config) {\n  const value = (config.before || '') + (input || '') + (config.after || '')\n  /** @type {Array<number>} */\n  const positions = []\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {Record<number, {before: boolean, after: boolean}>} */\n  const infos = {}\n  let index = -1\n\n  while (++index < context.unsafe.length) {\n    const pattern = context.unsafe[index]\n\n    if (!patternInScope(context.stack, pattern)) {\n      continue\n    }\n\n    const expression = patternCompile(pattern)\n    /** @type {RegExpExecArray|null} */\n    let match\n\n    while ((match = expression.exec(value))) {\n      const before = 'before' in pattern || Boolean(pattern.atBreak)\n      const after = 'after' in pattern\n      const position = match.index + (before ? match[1].length : 0)\n\n      if (positions.includes(position)) {\n        if (infos[position].before && !before) {\n          infos[position].before = false\n        }\n\n        if (infos[position].after && !after) {\n          infos[position].after = false\n        }\n      } else {\n        positions.push(position)\n        infos[position] = {before, after}\n      }\n    }\n  }\n\n  positions.sort(numerical)\n\n  let start = config.before ? config.before.length : 0\n  const end = value.length - (config.after ? config.after.length : 0)\n  index = -1\n\n  while (++index < positions.length) {\n    const position = positions[index]\n\n    // Character before or after matched:\n    if (position < start || position >= end) {\n      continue\n    }\n\n    // If this character is supposed to be escaped because it has a condition on\n    // the next character, and the next character is definitly being escaped,\n    // then skip this escape.\n    if (\n      (position + 1 < end &&\n        positions[index + 1] === position + 1 &&\n        infos[position].after &&\n        !infos[position + 1].before &&\n        !infos[position + 1].after) ||\n      (positions[index - 1] === position - 1 &&\n        infos[position].before &&\n        !infos[position - 1].before &&\n        !infos[position - 1].after)\n    ) {\n      continue\n    }\n\n    if (start !== position) {\n      // If we have to use a character reference, an ampersand would be more\n      // correct, but as backslashes only care about punctuation, either will\n      // do the trick\n      result.push(escapeBackslashes(value.slice(start, position), '\\\\'))\n    }\n\n    start = position\n\n    if (\n      /[!-/:-@[-`{-~]/.test(value.charAt(position)) &&\n      (!config.encode || !config.encode.includes(value.charAt(position)))\n    ) {\n      // Character escape.\n      result.push('\\\\')\n    } else {\n      // Character reference.\n      result.push(\n        '&#x' + value.charCodeAt(position).toString(16).toUpperCase() + ';'\n      )\n      start++\n    }\n  }\n\n  result.push(escapeBackslashes(value.slice(start, end), config.after))\n\n  return result.join('')\n}\n\n/**\n * @param {number} a\n * @param {number} b\n * @returns {number}\n */\nfunction numerical(a, b) {\n  return a - b\n}\n\n/**\n * @param {string} value\n * @param {string} after\n * @returns {string}\n */\nfunction escapeBackslashes(value, after) {\n  const expression = /\\\\(?=[!-/:-@[-`{-~])/g\n  /** @type {Array<number>} */\n  const positions = []\n  /** @type {Array<string>} */\n  const results = []\n  const whole = value + after\n  let index = -1\n  let start = 0\n  /** @type {RegExpExecArray|null} */\n  let match\n\n  while ((match = expression.exec(whole))) {\n    positions.push(match.index)\n  }\n\n  while (++index < positions.length) {\n    if (start !== positions[index]) {\n      results.push(value.slice(start, positions[index]))\n    }\n\n    results.push('\\\\')\n    start = positions[index]\n  }\n\n  results.push(value.slice(start))\n\n  return results.join('')\n}\n", "/**\n * @typedef {import('../types.js').Unsafe} Unsafe\n */\n\n/**\n * @param {Unsafe} pattern\n * @returns {RegExp}\n */\nexport function patternCompile(pattern) {\n  if (!pattern._compiled) {\n    const before =\n      (pattern.atBreak ? '[\\\\r\\\\n][\\\\t ]*' : '') +\n      (pattern.before ? '(?:' + pattern.before + ')' : '')\n\n    pattern._compiled = new RegExp(\n      (before ? '(' + before + ')' : '') +\n        (/[|\\\\{}()[\\]^$+*?.-]/.test(pattern.character) ? '\\\\' : '') +\n        pattern.character +\n        (pattern.after ? '(?:' + pattern.after + ')' : ''),\n      'g'\n    )\n  }\n\n  return pattern._compiled\n}\n", "/**\n * @typedef {import('../types.js').Unsafe} Unsafe\n */\n\n/**\n * @param {Array<string>} stack\n * @param {Unsafe} pattern\n * @returns {boolean}\n */\nexport function patternInScope(stack, pattern) {\n  return (\n    listInScope(stack, pattern.inConstruct, true) &&\n    !listInScope(stack, pattern.notInConstruct, false)\n  )\n}\n\n/**\n * @param {Array<string>} stack\n * @param {Unsafe['inConstruct']} list\n * @param {boolean} none\n * @returns {boolean}\n */\nfunction listInScope(stack, list, none) {\n  if (!list) {\n    return none\n  }\n\n  if (typeof list === 'string') {\n    list = [list]\n  }\n\n  let index = -1\n\n  while (++index < list.length) {\n    if (stack.includes(list[index])) {\n      return true\n    }\n  }\n\n  return false\n}\n", "/**\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {containerPhrasing} from 'mdast-util-to-markdown/lib/util/container-phrasing.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n/** @type {FromMarkdownExtension} */\nexport const gfmStrikethroughFromMarkdown = {\n  canContainEols: ['delete'],\n  enter: {strikethrough: enterStrikethrough},\n  exit: {strikethrough: exitStrikethrough}\n}\n\n/** @type {ToMarkdownExtension} */\nexport const gfmStrikethroughToMarkdown = {\n  unsafe: [{character: '~', inConstruct: 'phrasing'}],\n  handlers: {delete: handleDelete}\n}\n\nhandleDelete.peek = peekDelete\n\n/** @type {FromMarkdownHandle} */\nfunction enterStrikethrough(token) {\n  this.enter({type: 'delete', children: []}, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitStrikethrough(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {Delete} node\n */\nfunction handleDelete(node, _, context, safeOptions) {\n  const tracker = track(safeOptions)\n  const exit = context.enter('emphasis')\n  let value = tracker.move('~~')\n  value += containerPhrasing(node, context, {\n    ...tracker.current(),\n    before: value,\n    after: '~'\n  })\n  value += tracker.move('~~')\n  exit()\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction peekDelete() {\n  return '~'\n}\n", "/**\n * @typedef {import('../types.js').Node} Node\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').SafeOptions} SafeOptions\n * @typedef {import('../types.js').Context} Context\n */\n\nimport {track} from './track.js'\n\n/**\n * @param {Parent} parent\n * @param {Context} context\n * @param {SafeOptions} safeOptions\n * @returns {string}\n */\nexport function containerPhrasing(parent, context, safeOptions) {\n  const indexStack = context.indexStack\n  const children = parent.children || []\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n  let before = safeOptions.before\n\n  indexStack.push(-1)\n  let tracker = track(safeOptions)\n\n  while (++index < children.length) {\n    const child = children[index]\n    /** @type {string} */\n    let after\n\n    indexStack[indexStack.length - 1] = index\n\n    if (index + 1 < children.length) {\n      // @ts-expect-error: hush, it\u2019s actually a `zwitch`.\n      let handle = context.handle.handlers[children[index + 1].type]\n      if (handle && handle.peek) handle = handle.peek\n      after = handle\n        ? handle(children[index + 1], parent, context, {\n            before: '',\n            after: '',\n            ...tracker.current()\n          }).charAt(0)\n        : ''\n    } else {\n      after = safeOptions.after\n    }\n\n    // In some cases, html (text) can be found in phrasing right after an eol.\n    // When we\u2019d serialize that, in most cases that would be seen as html\n    // (flow).\n    // As we can\u2019t escape or so to prevent it from happening, we take a somewhat\n    // reasonable approach: replace that eol with a space.\n    // See: <https://github.com/syntax-tree/mdast-util-to-markdown/issues/15>\n    if (\n      results.length > 0 &&\n      (before === '\\r' || before === '\\n') &&\n      child.type === 'html'\n    ) {\n      results[results.length - 1] = results[results.length - 1].replace(\n        /(\\r?\\n|\\r)$/,\n        ' '\n      )\n      before = ' '\n\n      // To do: does this work to reset tracker?\n      tracker = track(safeOptions)\n      tracker.move(results.join(''))\n    }\n\n    results.push(\n      tracker.move(\n        context.handle(child, parent, context, {\n          ...tracker.current(),\n          before,\n          after\n        })\n      )\n    )\n\n    before = results[results.length - 1].slice(-1)\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n}\n", "/**\n * @typedef {import('./lib/index.js').Options} Options\n */\n\nexport {gfmTableFromMarkdown, gfmTableToMarkdown} from './lib/index.js'\n", "/**\n * @typedef {import('mdast').AlignType} AlignType\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('markdown-table').MarkdownTableOptions} MarkdownTableOptions\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Context} ToMarkdownContext\n * @typedef {import('mdast-util-to-markdown').SafeOptions} SafeOptions\n *\n * @typedef Options\n * @property {boolean} [tableCellPadding=true]\n * @property {boolean} [tablePipeAlign=true]\n * @property {MarkdownTableOptions['stringLength']} [stringLength]\n */\n\nimport {containerPhrasing} from 'mdast-util-to-markdown/lib/util/container-phrasing.js'\nimport {inlineCode} from 'mdast-util-to-markdown/lib/handle/inline-code.js'\nimport {markdownTable} from 'markdown-table'\n\n/** @type {FromMarkdownExtension} */\nexport const gfmTableFromMarkdown = {\n  enter: {\n    table: enterTable,\n    tableData: enterCell,\n    tableHeader: enterCell,\n    tableRow: enterRow\n  },\n  exit: {\n    codeText: exitCodeText,\n    table: exitTable,\n    tableData: exit,\n    tableHeader: exit,\n    tableRow: exit\n  }\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterTable(token) {\n  /** @type {Array<'left'|'right'|'center'|'none'>} */\n  // @ts-expect-error: `align` is custom.\n  const align = token._align\n  this.enter(\n    {\n      type: 'table',\n      align: align.map((d) => (d === 'none' ? null : d)),\n      children: []\n    },\n    token\n  )\n  this.setData('inTable', true)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitTable(token) {\n  this.exit(token)\n  this.setData('inTable')\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterRow(token) {\n  this.enter({type: 'tableRow', children: []}, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exit(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterCell(token) {\n  this.enter({type: 'tableCell', children: []}, token)\n}\n\n// Overwrite the default code text data handler to unescape escaped pipes when\n// they are in tables.\n/** @type {FromMarkdownHandle} */\nfunction exitCodeText(token) {\n  let value = this.resume()\n\n  if (this.getData('inTable')) {\n    value = value.replace(/\\\\([\\\\|])/g, replace)\n  }\n\n  const node = /** @type {InlineCode} */ (this.stack[this.stack.length - 1])\n  node.value = value\n  this.exit(token)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @returns {string}\n */\nfunction replace($0, $1) {\n  // Pipes work, backslashes don\u2019t (but can\u2019t escape pipes).\n  return $1 === '|' ? $1 : $0\n}\n\n/**\n * @param {Options} [options]\n * @returns {ToMarkdownExtension}\n */\nexport function gfmTableToMarkdown(options) {\n  const settings = options || {}\n  const padding = settings.tableCellPadding\n  const alignDelimiters = settings.tablePipeAlign\n  const stringLength = settings.stringLength\n  const around = padding ? ' ' : '|'\n\n  return {\n    unsafe: [\n      {character: '\\r', inConstruct: 'tableCell'},\n      {character: '\\n', inConstruct: 'tableCell'},\n      // A pipe, when followed by a tab or space (padding), or a dash or colon\n      // (unpadded delimiter row), could result in a table.\n      {atBreak: true, character: '|', after: '[\\t :-]'},\n      // A pipe in a cell must be encoded.\n      {character: '|', inConstruct: 'tableCell'},\n      // A colon must be followed by a dash, in which case it could start a\n      // delimiter row.\n      {atBreak: true, character: ':', after: '-'},\n      // A delimiter row can also start with a dash, when followed by more\n      // dashes, a colon, or a pipe.\n      // This is a stricter version than the built in check for lists, thematic\n      // breaks, and setex heading underlines though:\n      // <https://github.com/syntax-tree/mdast-util-to-markdown/blob/51a2038/lib/unsafe.js#L57>\n      {atBreak: true, character: '-', after: '[:|-]'}\n    ],\n    handlers: {\n      table: handleTable,\n      tableRow: handleTableRow,\n      tableCell: handleTableCell,\n      inlineCode: inlineCodeWithTable\n    }\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {Table} node\n   */\n  function handleTable(node, _, context, safeOptions) {\n    return serializeData(\n      handleTableAsData(node, context, safeOptions),\n      // @ts-expect-error: fixed in `markdown-table@3.0.1`.\n      node.align\n    )\n  }\n\n  /**\n   * This function isn\u2019t really used normally, because we handle rows at the\n   * table level.\n   * But, if someone passes in a table row, this ensures we make somewhat sense.\n   *\n   * @type {ToMarkdownHandle}\n   * @param {TableRow} node\n   */\n  function handleTableRow(node, _, context, safeOptions) {\n    const row = handleTableRowAsData(node, context, safeOptions)\n    // `markdown-table` will always add an align row\n    const value = serializeData([row])\n    return value.slice(0, value.indexOf('\\n'))\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {TableCell} node\n   */\n  function handleTableCell(node, _, context, safeOptions) {\n    const exit = context.enter('tableCell')\n    const subexit = context.enter('phrasing')\n    const value = containerPhrasing(node, context, {\n      ...safeOptions,\n      before: around,\n      after: around\n    })\n    subexit()\n    exit()\n    return value\n  }\n\n  /**\n   * @param {Array<Array<string>>} matrix\n   * @param {Array<string>} [align]\n   */\n  function serializeData(matrix, align) {\n    return markdownTable(matrix, {\n      align,\n      alignDelimiters,\n      padding,\n      stringLength\n    })\n  }\n\n  /**\n   * @param {Table} node\n   * @param {ToMarkdownContext} context\n   * @param {SafeOptions} safeOptions\n   */\n  function handleTableAsData(node, context, safeOptions) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<Array<string>>} */\n    const result = []\n    const subexit = context.enter('table')\n\n    while (++index < children.length) {\n      result[index] = handleTableRowAsData(\n        children[index],\n        context,\n        safeOptions\n      )\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @param {TableRow} node\n   * @param {ToMarkdownContext} context\n   * @param {SafeOptions} safeOptions\n   */\n  function handleTableRowAsData(node, context, safeOptions) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<string>} */\n    const result = []\n    const subexit = context.enter('tableRow')\n\n    while (++index < children.length) {\n      // Note: the positional info as used here is incorrect.\n      // Making it correct would be impossible due to aligning cells?\n      // And it would need copy/pasting `markdown-table` into this project.\n      result[index] = handleTableCell(\n        children[index],\n        node,\n        context,\n        safeOptions\n      )\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {InlineCode} node\n   */\n  function inlineCodeWithTable(node, parent, context) {\n    let value = inlineCode(node, parent, context)\n\n    if (context.stack.includes('tableCell')) {\n      value = value.replace(/\\|/g, '\\\\$&')\n    }\n\n    return value\n  }\n}\n", "/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {patternCompile} from '../util/pattern-compile.js'\n\ninlineCode.peek = inlineCodePeek\n\n/**\n * @type {Handle}\n * @param {InlineCode} node\n */\nexport function inlineCode(node, _, context) {\n  let value = node.value || ''\n  let sequence = '`'\n  let index = -1\n\n  // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`'\n  }\n\n  // If this is not just spaces or eols (tabs don\u2019t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n  if (\n    /[^ \\r\\n]/.test(value) &&\n    ((/^[ \\r\\n]/.test(value) && /[ \\r\\n]$/.test(value)) || /^`|`$/.test(value))\n  ) {\n    value = ' ' + value + ' '\n  }\n\n  // We have a potential problem: certain characters after eols could result in\n  // blocks being seen.\n  // For example, if someone injected the string `'\\n# b'`, then that would\n  // result in an ATX heading.\n  // We can\u2019t escape characters in `inlineCode`, but because eols are\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\n  // them out.\n  while (++index < context.unsafe.length) {\n    const pattern = context.unsafe[index]\n    const expression = patternCompile(pattern)\n    /** @type {RegExpExecArray|null} */\n    let match\n\n    // Only look for `atBreak`s.\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\n    // CR.\n    if (!pattern.atBreak) continue\n\n    while ((match = expression.exec(value))) {\n      let position = match.index\n\n      // Support CRLF (patterns only look for one of the characters).\n      if (\n        value.charCodeAt(position) === 10 /* `\\n` */ &&\n        value.charCodeAt(position - 1) === 13 /* `\\r` */\n      ) {\n        position--\n      }\n\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\n    }\n  }\n\n  return sequence + value + sequence\n}\n\n/**\n * @type {Handle}\n */\nfunction inlineCodePeek() {\n  return '`'\n}\n", "/**\n * @typedef Options\n *   Configuration (optional).\n * @property {string|null|Array<string|null|undefined>} [align]\n *   One style for all columns, or styles for their respective columns.\n *   Each style is either `'l'` (left), `'r'` (right), or `'c'` (center).\n *   Other values are treated as `''`, which doesn\u2019t place the colon in the\n *   alignment row but does align left.\n *   *Only the lowercased first character is used, so `Right` is fine.*\n * @property {boolean} [padding=true]\n *   Whether to add a space of padding between delimiters and cells.\n *\n *   When `true`, there is padding:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there is no padding:\n *\n *   ```markdown\n *   |Alpha|B    |\n *   |-----|-----|\n *   |C    |Delta|\n *   ```\n * @property {boolean} [delimiterStart=true]\n *   Whether to begin each row with the delimiter.\n *\n *   > \uD83D\uDC49 **Note**: please don\u2019t use this: it could create fragile structures\n *   > that aren\u2019t understandable to some markdown parsers.\n *\n *   When `true`, there are starting delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no starting delimiters:\n *\n *   ```markdown\n *   Alpha | B     |\n *   ----- | ----- |\n *   C     | Delta |\n *   ```\n * @property {boolean} [delimiterEnd=true]\n *   Whether to end each row with the delimiter.\n *\n *   > \uD83D\uDC49 **Note**: please don\u2019t use this: it could create fragile structures\n *   > that aren\u2019t understandable to some markdown parsers.\n *\n *   When `true`, there are ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B\n *   | ----- | -----\n *   | C     | Delta\n *   ```\n * @property {boolean} [alignDelimiters=true]\n *   Whether to align the delimiters.\n *   By default, they are aligned:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   Pass `false` to make them staggered:\n *\n *   ```markdown\n *   | Alpha | B |\n *   | - | - |\n *   | C | Delta |\n *   ```\n * @property {(value: string) => number} [stringLength]\n *   Function to detect the length of table cell content.\n *   This is used when aligning the delimiters (`|`) between table cells.\n *   Full-width characters and emoji mess up delimiter alignment when viewing\n *   the markdown source.\n *   To fix this, you can pass this function, which receives the cell content\n *   and returns its \u201Cvisible\u201D size.\n *   Note that what is and isn\u2019t visible depends on where the text is displayed.\n *\n *   Without such a function, the following:\n *\n *   ```js\n *   markdownTable([\n *     ['Alpha', 'Bravo'],\n *     ['\u4E2D\u6587', 'Charlie'],\n *     ['\uD83D\uDC69\u200D\u2764\uFE0F\u200D\uD83D\uDC69', 'Delta']\n *   ])\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo |\n *   | - | - |\n *   | \u4E2D\u6587 | Charlie |\n *   | \uD83D\uDC69\u200D\u2764\uFE0F\u200D\uD83D\uDC69 | Delta |\n *   ```\n *\n *   With [`string-width`](https://github.com/sindresorhus/string-width):\n *\n *   ```js\n *   import stringWidth from 'string-width'\n *\n *   markdownTable(\n *     [\n *       ['Alpha', 'Bravo'],\n *       ['\u4E2D\u6587', 'Charlie'],\n *       ['\uD83D\uDC69\u200D\u2764\uFE0F\u200D\uD83D\uDC69', 'Delta']\n *     ],\n *     {stringLength: stringWidth}\n *   )\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo   |\n *   | ----- | ------- |\n *   | \u4E2D\u6587  | Charlie |\n *   | \uD83D\uDC69\u200D\u2764\uFE0F\u200D\uD83D\uDC69    | Delta   |\n *   ```\n */\n\n/**\n * @typedef {Options} MarkdownTableOptions\n * @todo\n *   Remove next major.\n */\n\n/**\n * Generate a markdown ([GFM](https://docs.github.com/en/github/writing-on-github/working-with-advanced-formatting/organizing-information-with-tables)) table..\n *\n * @param {Array<Array<string|null|undefined>>} table\n *   Table data (matrix of strings).\n * @param {Options} [options]\n *   Configuration (optional).\n * @returns {string}\n */\nexport function markdownTable(table, options = {}) {\n  const align = (options.align || []).concat()\n  const stringLength = options.stringLength || defaultStringLength\n  /** @type {Array<number>} Character codes as symbols for alignment per column. */\n  const alignments = []\n  /** @type {Array<Array<string>>} Cells per row. */\n  const cellMatrix = []\n  /** @type {Array<Array<number>>} Sizes of each cell per row. */\n  const sizeMatrix = []\n  /** @type {Array<number>} */\n  const longestCellByColumn = []\n  let mostCellsPerRow = 0\n  let rowIndex = -1\n\n  // This is a superfluous loop if we don\u2019t align delimiters, but otherwise we\u2019d\n  // do superfluous work when aligning, so optimize for aligning.\n  while (++rowIndex < table.length) {\n    /** @type {Array<string>} */\n    const row = []\n    /** @type {Array<number>} */\n    const sizes = []\n    let columnIndex = -1\n\n    if (table[rowIndex].length > mostCellsPerRow) {\n      mostCellsPerRow = table[rowIndex].length\n    }\n\n    while (++columnIndex < table[rowIndex].length) {\n      const cell = serialize(table[rowIndex][columnIndex])\n\n      if (options.alignDelimiters !== false) {\n        const size = stringLength(cell)\n        sizes[columnIndex] = size\n\n        if (\n          longestCellByColumn[columnIndex] === undefined ||\n          size > longestCellByColumn[columnIndex]\n        ) {\n          longestCellByColumn[columnIndex] = size\n        }\n      }\n\n      row.push(cell)\n    }\n\n    cellMatrix[rowIndex] = row\n    sizeMatrix[rowIndex] = sizes\n  }\n\n  // Figure out which alignments to use.\n  let columnIndex = -1\n\n  if (typeof align === 'object' && 'length' in align) {\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = toAlignment(align[columnIndex])\n    }\n  } else {\n    const code = toAlignment(align)\n\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = code\n    }\n  }\n\n  // Inject the alignment row.\n  columnIndex = -1\n  /** @type {Array<string>} */\n  const row = []\n  /** @type {Array<number>} */\n  const sizes = []\n\n  while (++columnIndex < mostCellsPerRow) {\n    const code = alignments[columnIndex]\n    let before = ''\n    let after = ''\n\n    if (code === 99 /* `c` */) {\n      before = ':'\n      after = ':'\n    } else if (code === 108 /* `l` */) {\n      before = ':'\n    } else if (code === 114 /* `r` */) {\n      after = ':'\n    }\n\n    // There *must* be at least one hyphen-minus in each alignment cell.\n    let size =\n      options.alignDelimiters === false\n        ? 1\n        : Math.max(\n            1,\n            longestCellByColumn[columnIndex] - before.length - after.length\n          )\n\n    const cell = before + '-'.repeat(size) + after\n\n    if (options.alignDelimiters !== false) {\n      size = before.length + size + after.length\n\n      if (size > longestCellByColumn[columnIndex]) {\n        longestCellByColumn[columnIndex] = size\n      }\n\n      sizes[columnIndex] = size\n    }\n\n    row[columnIndex] = cell\n  }\n\n  // Inject the alignment row.\n  cellMatrix.splice(1, 0, row)\n  sizeMatrix.splice(1, 0, sizes)\n\n  rowIndex = -1\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (++rowIndex < cellMatrix.length) {\n    const row = cellMatrix[rowIndex]\n    const sizes = sizeMatrix[rowIndex]\n    columnIndex = -1\n    /** @type {Array<string>} */\n    const line = []\n\n    while (++columnIndex < mostCellsPerRow) {\n      const cell = row[columnIndex] || ''\n      let before = ''\n      let after = ''\n\n      if (options.alignDelimiters !== false) {\n        const size =\n          longestCellByColumn[columnIndex] - (sizes[columnIndex] || 0)\n        const code = alignments[columnIndex]\n\n        if (code === 114 /* `r` */) {\n          before = ' '.repeat(size)\n        } else if (code === 99 /* `c` */) {\n          if (size % 2) {\n            before = ' '.repeat(size / 2 + 0.5)\n            after = ' '.repeat(size / 2 - 0.5)\n          } else {\n            before = ' '.repeat(size / 2)\n            after = before\n          }\n        } else {\n          after = ' '.repeat(size)\n        }\n      }\n\n      if (options.delimiterStart !== false && !columnIndex) {\n        line.push('|')\n      }\n\n      if (\n        options.padding !== false &&\n        // Don\u2019t add the opening space if we\u2019re not aligning and the cell is\n        // empty: there will be a closing space.\n        !(options.alignDelimiters === false && cell === '') &&\n        (options.delimiterStart !== false || columnIndex)\n      ) {\n        line.push(' ')\n      }\n\n      if (options.alignDelimiters !== false) {\n        line.push(before)\n      }\n\n      line.push(cell)\n\n      if (options.alignDelimiters !== false) {\n        line.push(after)\n      }\n\n      if (options.padding !== false) {\n        line.push(' ')\n      }\n\n      if (\n        options.delimiterEnd !== false ||\n        columnIndex !== mostCellsPerRow - 1\n      ) {\n        line.push('|')\n      }\n    }\n\n    lines.push(\n      options.delimiterEnd === false\n        ? line.join('').replace(/ +$/, '')\n        : line.join('')\n    )\n  }\n\n  return lines.join('\\n')\n}\n\n/**\n * @param {string|null|undefined} [value]\n * @returns {string}\n */\nfunction serialize(value) {\n  return value === null || value === undefined ? '' : String(value)\n}\n\n/**\n * @param {string} value\n * @returns {number}\n */\nfunction defaultStringLength(value) {\n  return value.length\n}\n\n/**\n * @param {string|null|undefined} value\n * @returns {number}\n */\nfunction toAlignment(value) {\n  const code = typeof value === 'string' ? value.codePointAt(0) : 0\n\n  return code === 67 /* `C` */ || code === 99 /* `c` */\n    ? 99 /* `c` */\n    : code === 76 /* `L` */ || code === 108 /* `l` */\n    ? 108 /* `l` */\n    : code === 82 /* `R` */ || code === 114 /* `r` */\n    ? 114 /* `r` */\n    : 0\n}\n", "/**\n * @typedef {Extract<import('mdast').Root|import('mdast').Content, import('unist').Parent>} Parent\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').BlockContent} BlockContent\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {listItem} from 'mdast-util-to-markdown/lib/handle/list-item.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n/** @type {FromMarkdownExtension} */\nexport const gfmTaskListItemFromMarkdown = {\n  exit: {\n    taskListCheckValueChecked: exitCheck,\n    taskListCheckValueUnchecked: exitCheck,\n    paragraph: exitParagraphWithTaskListItem\n  }\n}\n\n/** @type {ToMarkdownExtension} */\nexport const gfmTaskListItemToMarkdown = {\n  unsafe: [{atBreak: true, character: '-', after: '[:|-]'}],\n  handlers: {listItem: listItemWithTaskListItem}\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitCheck(token) {\n  const node = /** @type {ListItem} */ (this.stack[this.stack.length - 2])\n  // We\u2019re always in a paragraph, in a list item.\n  node.checked = token.type === 'taskListCheckValueChecked'\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitParagraphWithTaskListItem(token) {\n  const parent = /** @type {Parent} */ (this.stack[this.stack.length - 2])\n  const node = /** @type {Paragraph} */ (this.stack[this.stack.length - 1])\n  const siblings = parent.children\n  const head = node.children[0]\n  let index = -1\n  /** @type {Paragraph|undefined} */\n  let firstParaghraph\n\n  if (\n    parent &&\n    parent.type === 'listItem' &&\n    typeof parent.checked === 'boolean' &&\n    head &&\n    head.type === 'text'\n  ) {\n    while (++index < siblings.length) {\n      const sibling = siblings[index]\n      if (sibling.type === 'paragraph') {\n        firstParaghraph = sibling\n        break\n      }\n    }\n\n    if (firstParaghraph === node) {\n      // Must start with a space or a tab.\n      head.value = head.value.slice(1)\n\n      if (head.value.length === 0) {\n        node.children.shift()\n      } else if (\n        node.position &&\n        head.position &&\n        typeof head.position.start.offset === 'number'\n      ) {\n        head.position.start.column++\n        head.position.start.offset++\n        node.position.start = Object.assign({}, head.position.start)\n      }\n    }\n  }\n\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {ListItem} node\n */\nfunction listItemWithTaskListItem(node, parent, context, safeOptions) {\n  const head = node.children[0]\n  const checkable =\n    typeof node.checked === 'boolean' && head && head.type === 'paragraph'\n  const checkbox = '[' + (node.checked ? 'x' : ' ') + '] '\n  const tracker = track(safeOptions)\n\n  if (checkable) {\n    tracker.move(checkbox)\n  }\n\n  let value = listItem(node, parent, context, {\n    ...safeOptions,\n    ...tracker.current()\n  })\n\n  if (checkable) {\n    value = value.replace(/^(?:[*+-]|\\d+\\.)([\\r\\n]| {1,3})/, check)\n  }\n\n  return value\n\n  /**\n   * @param {string} $0\n   * @returns {string}\n   */\n  function check($0) {\n    return $0 + checkbox\n  }\n}\n", "/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').List} List\n * @typedef {import('../util/indent-lines.js').Map} Map\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkListItemIndent} from '../util/check-list-item-indent.js'\nimport {containerFlow} from '../util/container-flow.js'\nimport {indentLines} from '../util/indent-lines.js'\nimport {track} from '../util/track.js'\n\n/**\n * @type {Handle}\n * @param {ListItem} node\n */\nexport function listItem(node, parent, context, safeOptions) {\n  const listItemIndent = checkListItemIndent(context)\n  let bullet = context.bulletCurrent || checkBullet(context)\n\n  // Add the marker value for ordered lists.\n  if (parent && parent.type === 'list' && parent.ordered) {\n    bullet =\n      (typeof parent.start === 'number' && parent.start > -1\n        ? parent.start\n        : 1) +\n      (context.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      bullet\n  }\n\n  let size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' &&\n      ((parent && parent.type === 'list' && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  const tracker = track(safeOptions)\n  tracker.move(bullet + ' '.repeat(size - bullet.length))\n  tracker.shift(size)\n  const exit = context.enter('listItem')\n  const value = indentLines(\n    containerFlow(node, context, tracker.current()),\n    map\n  )\n  exit()\n\n  return value\n\n  /** @type {Map} */\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : ' '.repeat(size)) + line\n    }\n\n    return (blank ? bullet : bullet + ' '.repeat(size - bullet.length)) + line\n  }\n}\n", "/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {Context} context\n * @returns {Exclude<Options['bullet'], undefined>}\n */\nexport function checkBullet(context) {\n  const marker = context.options.bullet || '*'\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  return marker\n}\n", "/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {Context} context\n * @returns {Exclude<Options['listItemIndent'], undefined>}\n */\nexport function checkListItemIndent(context) {\n  const style = context.options.listItemIndent || 'tab'\n\n  // To do: remove in a major.\n  // @ts-expect-error: deprecated.\n  if (style === 1 || style === '1') {\n    return 'one'\n  }\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        style +\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\n    )\n  }\n\n  return style\n}\n", "/* eslint-disable import/prefer-default-export */\r\nimport styled from 'styled-components';\r\nimport Markdown from 'react-markdown';\r\n\r\nexport const QuestionMarkdown = styled(Markdown)`\r\n  color: var(--color-dark-50);\r\n  font-family: \"Nunito\";\r\n  font-size: 14px;\r\n  letter-spacing: 0.6px;\r\n  line-height: 1.71;\r\n  overflow-wrap: break-word;\r\n  word-wrap: break-word;\r\n  \r\n  a {\r\n    color: var(--color-secondary);\r\n  }\r\n  p {\r\n    overflow-wrap: anywhere;\r\n  }\r\n`;\r\n", "const ACTIONS = {\r\n  PINNIN: 'pin',\r\n  VOTE_QUESTION: 'vote_question',\r\n  CREATE_QUESTION_ANSWER: 'create_question_answer',\r\n  UPDATE_QUESTION_ANSWER: 'edit_question_answer',\r\n  DELETE_ANSWER: 'delete_answer',\r\n  ASSIGN_QUESTION: 'assign_question',\r\n  CREATE_COMMENT: 'create_comment',\r\n  UPDATE_COMMENT: 'update_comment',\r\n  VOTE_COMMENT: 'vote_comment',\r\n  DELETE_COMMENT: 'delete_commet',\r\n  APPROVED_COMMENT: 'approved_comment',\r\n  SCORE_ANSWER: 'score_answer',\r\n  DELETE_SCORE: 'delete_answer_score',\r\n  ENABLED_ACTION: 'enable/disable',\r\n  CREATE_QUESTION_ANSWERBOT: 'create_question_answerbot',\r\n  UPDATE_FEEDBACK_ANSWERBOT: 'update_feedback_answerbot',\r\n  UPDATE_POST_ANSWERBOT: 'update_post_answerbot',\r\n};\r\n\r\nexport default ACTIONS;\r\n", "export { default } from './SortQuestionCommentsDropdown';\r\n", "import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { IoMdArrowDropdown } from 'react-icons/io';\r\nimport { useSearchParams } from '@remix-run/react';\r\nimport { DEFAULT_QUESTION_COMMENT_SORTING, ACTIVITY_TIME_QUESTION_COMMENT_SORTING } from 'app/utils/constants';\r\nimport * as Styled from 'app/components/SortQuestionCommentsDropdown/SortQuestionCommentsDropdown.styled';\r\n\r\nfunction SortQuestionCommentsDropdown(props) {\r\n  SortQuestionCommentsDropdown.propTypes = {\r\n    onSortCommentsOptionChange: PropTypes.func.isRequired,\r\n    defaultSortingOptionText: PropTypes.string.isRequired,\r\n  };\r\n  const { onSortCommentsOptionChange, defaultSortingOptionText } = props;\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n\r\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\r\n  const [selectedOption, setSelectedOption] = useState(defaultSortingOptionText);\r\n\r\n  const sortOptions = [\r\n    {\r\n      displayText: 'Most voted',\r\n      value: DEFAULT_QUESTION_COMMENT_SORTING,\r\n    },\r\n    {\r\n      displayText: 'Recent activity',\r\n      value: ACTIVITY_TIME_QUESTION_COMMENT_SORTING,\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const order = searchParams.get('order');\r\n    const optionSelected = sortOptions.find((v) => v.value === order);\r\n    if (optionSelected) {\r\n      setSelectedOption(optionSelected.displayText);\r\n      onSortCommentsOptionChange(optionSelected.value);\r\n    }\r\n  }, []);\r\n\r\n  const onSortSelection = (displayText, value) => async () => {\r\n    setSelectedOption(displayText);\r\n    searchParams.set('order', value);\r\n    setSearchParams(searchParams);\r\n    setIsDropdownOpen(false);\r\n    onSortCommentsOptionChange(value);\r\n  };\r\n\r\n  return (\r\n    <Styled.DropDownContainer>\r\n      <Styled.DropDownHeader\r\n        onClick={() => setIsDropdownOpen((prevState) => !prevState)}\r\n      >\r\n        {selectedOption}\r\n        <IoMdArrowDropdown />\r\n      </Styled.DropDownHeader>\r\n      {isDropdownOpen && (\r\n      <Styled.DropDownListContainer>\r\n        <Styled.DropDownList>\r\n          {sortOptions.map((sortOption) => (\r\n            <Styled.ListItem className=\"dropdown-option\" onClick={onSortSelection(sortOption.displayText, sortOption.value)} key={sortOption.value}>\r\n              {sortOption.displayText}\r\n            </Styled.ListItem>\r\n          ))}\r\n        </Styled.DropDownList>\r\n      </Styled.DropDownListContainer>\r\n      )}\r\n    </Styled.DropDownContainer>\r\n  );\r\n}\r\n\r\nexport default SortQuestionCommentsDropdown;\r\n", "/* eslint-disable import/prefer-default-export */\r\nimport styled from 'styled-components';\r\n\r\nexport const Main = styled.div`\r\n    font-family: sans-serif;\r\n    background: #f0f0f0;\r\n`;\r\n\r\nexport const DropDownContainer = styled.div`\r\n    margin: 0;\r\n    position: relative;\r\n`;\r\n\r\nexport const DropDownHeader = styled.div`\r\n    font-weight: 700;\r\n    font-size: 1.3rem;\r\n    color: #3faffa;\r\n    cursor: pointer;\r\n    display: flex;\r\n    align-items:center;\r\n`;\r\n\r\nexport const DropDownListContainer = styled.div`\r\n    right: 0;\r\n    position: absolute;\r\n    width: 10em;\r\n    z-index: 999;\r\n`;\r\n\r\nexport const DropDownList = styled.ul`\r\n  padding: 0;\r\n  margin: 0;\r\n  padding-left: 1em;\r\n  background: #ffffff;\r\n  border: 2px solid #e5e5e5;\r\n  box-sizing: border-box;\r\n  color: black;\r\n  font-size: 1.3rem;\r\n  font-weight: 500;\r\n  &:first-child {\r\n    padding-top: 0.8em;\r\n  }\r\n`;\r\n\r\nexport const ListItem = styled.li`\r\n  list-style: none;\r\n  margin-bottom: 0.8em;\r\n  :hover {\r\n    color: #3faffa;\r\n    cursor: pointer;\r\n  }  \r\n`;\r\n", "import React, { useState, useRef } from 'react';\r\nimport { useSubmit, useTransition, useLoaderData } from '@remix-run/react';\r\nimport PropTypes from 'prop-types';\r\nimport { FormGroup, ControlLabel, MenuItem } from 'react-bootstrap';\r\nimport Button from 'app/components/Atoms/Button/Button';\r\nimport {\r\n  DISABLED_BUTTON, SECONDARY_BUTTON, CLOSE_BUTTON, DEPARTMENT_PLACEHOLDER,\r\n} from 'app/utils/constants';\r\nimport ACTIONS from 'app/utils/actions';\r\nimport * as Styled from 'app/components/Modals/AssignAnswerModal/AssignAnswerModal.Styled';\r\n\r\nfunction AssignAnswerModal(props) {\r\n  const {\r\n    question,\r\n    onClose,\r\n  } = props;\r\n\r\n  const [departmentsDropdownSelected, setDeparmentsDropdownSelected] = useState(null);\r\n  const [department, setDepartment] = useState({ name: DEPARTMENT_PLACEHOLDER, department_id: 0 });\r\n  const { departments: departmentData } = useLoaderData();\r\n\r\n  const submit = useSubmit();\r\n  const transition = useTransition();\r\n  const assignQuestionForm = useRef();\r\n\r\n  const resetModal = () => {\r\n    setDeparmentsDropdownSelected(null);\r\n    setDepartment({ name: DEPARTMENT_PLACEHOLDER, department_id: 0 });\r\n    onClose();\r\n  };\r\n\r\n  const onDepartmentAssigned = () => {\r\n    resetModal();\r\n\r\n    if (transition.state !== 'idle') {\r\n      return;\r\n    }\r\n\r\n    const data = new FormData(assignQuestionForm.current);\r\n    data.set('action', ACTIONS.ASSIGN_QUESTION);\r\n    data.set('questionId', question.question_id);\r\n    data.set('assigned_department', department.department_id);\r\n    submit(data, { method: 'post', action: `/questions/${question.question_id}`, replace: true });\r\n\r\n    setDepartment(\r\n      { name: DEPARTMENT_PLACEHOLDER, department_id: 0 },\r\n    );\r\n  };\r\n\r\n  const selectDepartmentIndex = (selectedDepartment) => departmentData.findIndex(\r\n    (department1) => selectedDepartment.department_id === department1.department_id,\r\n  );\r\n\r\n  const handleDepartmentSelectChange = (selectedDepartment) => {\r\n    const selectedDepartmentIndex = selectDepartmentIndex(selectedDepartment);\r\n\r\n    setDeparmentsDropdownSelected(departmentData[selectedDepartmentIndex]);\r\n    setDepartment(departmentData[selectedDepartmentIndex]);\r\n  };\r\n\r\n  const isSubmitEnabled = () => departmentsDropdownSelected;\r\n\r\n  const renderDepartmentOptions = () => departmentData.map((department2) => (\r\n    <MenuItem eventKey={department2} key={department2.department_id}>\r\n      {department2.name}\r\n    </MenuItem>\r\n  ));\r\n\r\n  const renderDepartmentSelectBox = () => (\r\n    <FormGroup controlId=\"formControlsSelectMultiple\">\r\n      <ControlLabel>\r\n        Specify which department you think your question\r\n        should be addressed to:\r\n      </ControlLabel>\r\n      <Styled.SelectContainer>\r\n        <Styled.CustDropDownButton\r\n          bsStyle=\"default\"\r\n          title={department.name}\r\n          onSelect={handleDepartmentSelectChange}\r\n          id=\"dropdown\"\r\n        >\r\n          {renderDepartmentOptions()}\r\n        </Styled.CustDropDownButton>\r\n      </Styled.SelectContainer>\r\n    </FormGroup>\r\n  );\r\n\r\n  if (!question) { return null; }\r\n  return (\r\n    <div id=\"main\" onClick={resetModal}>\r\n      <Styled.AssignModal show>\r\n        <Styled.AssignModalDialog onClick={(e) => e.stopPropagation()}>\r\n          <Button category={CLOSE_BUTTON} onClick={resetModal} />\r\n          <Styled.ModalHeader>\r\n            <Styled.ModalTitle>\r\n              Reassign question Q\r\n              {question.question_id}\r\n            </Styled.ModalTitle>\r\n          </Styled.ModalHeader>\r\n          <Styled.ModalBody>\r\n            {renderDepartmentSelectBox()}\r\n          </Styled.ModalBody>\r\n          <Styled.ModalFooter>\r\n            <Button\r\n              type=\"button\"\r\n              category={SECONDARY_BUTTON}\r\n              onClick={resetModal}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              category={DISABLED_BUTTON}\r\n              value=\"Submit\"\r\n              disabled={!isSubmitEnabled()}\r\n              onClick={onDepartmentAssigned}\r\n            >\r\n              Reassign Question\r\n            </Button>\r\n          </Styled.ModalFooter>\r\n        </Styled.AssignModalDialog>\r\n      </Styled.AssignModal>\r\n    </div>\r\n  );\r\n}\r\n\r\nAssignAnswerModal.propTypes = {\r\n  question: PropTypes.shape(),\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nAssignAnswerModal.defaultProps = {\r\n  question: null,\r\n};\r\n\r\nexport default AssignAnswerModal;\r\n", "/* eslint-disable import/prefer-default-export */\r\nimport styled from 'styled-components';\r\nimport { DropdownButton } from 'react-bootstrap';\r\n\r\nexport const AssignModal = styled.div`\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    z-index: 1055;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n\r\n    .job-title {\r\n        font-size: 12px;\r\n    }\r\n`;\r\n\r\nexport const AssignModalDialog = styled.div`\r\n    position: relative;\r\n    border-radius: 5px;\r\n    border: 0;\r\n    background-color: #fff;\r\n    box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.5);\r\n    margin: 0 auto;\r\n    max-width: 70vw;\r\n    padding: 24px 24px;\r\n    width: 100%;\r\n    display: block;\r\n    max-height: calc(100vh - 150px);\r\n\r\n    @media (max-width: 768px) {\r\n        max-height: 100%;\r\n        max-width: 100%;\r\n        height: 100%;\r\n    }\r\n`;\r\n\r\nexport const ModalHeader = styled.div`\r\n    overflow-y: hidden;\r\n    padding: 15px;\r\n    box-sizing: border-box;\r\n    display: block;\r\n    font-size: 14px;\r\n    ${(props) => (props.variant === 'logout' ? `\r\n        border-bottom: 1px solid #e5e5e5;\r\n        padding: 15px;` : `\r\n        border-bottom: none;`\r\n  )}\r\n`;\r\n\r\nexport const ModalBody = styled.div`\r\n    display: block;\r\n    font-size: 14px;\r\n    background-color: #fff;\r\n    border-bottom: none;\r\n    position: relative;\r\n    padding: 15px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nexport const ModalFooter = styled.div`\r\n    border-top: none;\r\n    background-color: #fff;\r\n    border-bottom: none;\r\n    padding: 15px;\r\n    text-align: right;\r\n    box-sizing: border-box;\r\n    display: block;\r\n    font-size: 14px;\r\n    ${(props) => (props.variant === 'logout' ? `\r\n        border-top: 1px solid #e5e5e5;\r\n        padding: 15px;text-align: right;`\r\n    : `\r\n        border-bottom: none;`\r\n  )}\r\n`;\r\n\r\nexport const ModalTitle = styled.div`\r\n    font-family: \"Nunito\";\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    line-height: normal;\r\n    letter-spacing: normal;\r\n    margin-bottom: 8px;\r\n`;\r\n\r\nexport const SelectContainer = styled.div`\r\n    background-color: #fff;\r\n    border: solid 1px #e1e5e9;\r\n    box-shadow: 0 3px 6px 0 rgba(225, 229, 233, 0.8);\r\n    height: 56px;\r\n    margin-bottom: 19px;\r\n    padding-left: 0;\r\n    position: relative;\r\n    max-width: 100%;\r\n\r\n    & ul {\r\n        max-height:300px;\r\n        overflow-y:scroll;\r\n    }\r\n`;\r\n\r\nexport const CustDropDownButton = styled(DropdownButton)`\r\n  background-color: #fff;\r\n  border: none;\r\n  border-radius: 0;\r\n  color: var(--color-secondary);\r\n  display: inline-block;\r\n  height: 54px;\r\n  letter-spacing: 0.8px;\r\n  line-height: 1.71;\r\n  padding-left: 10px;\r\n  text-overflow: ellipsis;\r\n\r\n\r\n  &:hover,\r\n  &:active,\r\n  &:focus {\r\n    background-color: #fff;\r\n    box-shadow: none;\r\n    color: var(--color-secondary);\r\n  }\r\n\r\n  @media (max-width: 500px) {\r\n    white-space: break-spaces;\r\n  }\r\n\r\n  \r\n`;\r\n", "import React, { useState, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSubmit, useSearchParams } from '@remix-run/react';\r\nimport {\r\n  ANONYMOUS_USER, HTML_CODE_WARNING, PRIMARY_BUTTON,\r\n  SECONDARY_BUTTON, MIN_SHOW_COMMENT_BTN_LENGTH,\r\n} from 'app/utils/constants';\r\nimport * as Styled from 'app/components/CommentInput/CommentInput.styled';\r\nimport Button from 'app/components/Atoms/Button';\r\nimport { deleteNoMarkupFormatHTML } from 'app/utils/stringOperations';\r\nimport CommentInputAuthor from 'app/components/CommentInput/CommentInputAuthor';\r\nimport CommentInputText from 'app/components/CommentInput/CommentInputText';\r\nimport useUser from 'app/utils/hooks/useUser';\r\nimport ACTIONS from 'app/utils/actions';\r\n\r\nfunction CommentInput(props) {\r\n  const submit = useSubmit();\r\n  const { setWritingCommentOnMobile } = props;\r\n  const profile = useUser();\r\n\r\n  const initialState = {\r\n    comment: '',\r\n    isCommenting: false,\r\n    isCommentingError: false,\r\n    isCommentingSuccess: false,\r\n    isCommentingWarning: false,\r\n    isAnonymous: false,\r\n    warnings: [],\r\n    profilePicture: profile.profile_picture,\r\n    inputValue: '',\r\n    isShowPreview: false,\r\n  };\r\n\r\n  const [comment, setComment] = useState(initialState);\r\n  const [searchParams] = useSearchParams();\r\n\r\n  const openSubmitWithModal = (warning) => {\r\n    setComment((state) => ({\r\n      warnings: [\r\n        ...state.warnings,\r\n        warning,\r\n      ],\r\n    }));\r\n  };\r\n\r\n  const CommentInputTextRef = useRef();\r\n  const resetForm = () => {\r\n    setComment((state) => ({\r\n      ...state,\r\n      isCommenting: false,\r\n      isCommentingError: false,\r\n      isCommentingSuccess: false,\r\n      isCommentingWarning: false,\r\n      isAnonymous: false,\r\n      profilePicture: profile.profile_picture,\r\n      warnings: [],\r\n      inputValue: '',\r\n      isShowPreview: false,\r\n    }));\r\n    CommentInputTextRef.current.resetInputText();\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    const { questionId } = props;\r\n\r\n    event.preventDefault();\r\n    const inputValue = comment.inputValue.trim();\r\n    const sanitizedInput = deleteNoMarkupFormatHTML(inputValue);\r\n    if (inputValue !== sanitizedInput) {\r\n      openSubmitWithModal(HTML_CODE_WARNING);\r\n    }\r\n    const commentToSubmit = {\r\n      comment: sanitizedInput,\r\n      questionId,\r\n      user: {\r\n        accessToken: profile.accessToken,\r\n        userEmail: profile.email,\r\n        userName: profile.full_name,\r\n      },\r\n      isAnonymous: comment.isAnonymous,\r\n    };\r\n\r\n    const data = new FormData();\r\n    data.set('action', ACTIONS.CREATE_COMMENT);\r\n    data.set('commentToSubmit', JSON.stringify(commentToSubmit));\r\n    let url = `/questions/${questionId}`;\r\n    const urlSearchParam = searchParams.get('order');\r\n    url = urlSearchParam !== null ? `${url}?order=${urlSearchParam}` : url;\r\n    submit(data, { method: 'post', action: url, replace: true });\r\n    resetForm();\r\n    setWritingCommentOnMobile(false);\r\n  };\r\n\r\n  const onInputChange = (inputValue) => {\r\n    setComment((state) => ({\r\n      ...state,\r\n      inputValue,\r\n    }));\r\n  };\r\n\r\n  const getAuthor = () => {\r\n    if (comment.isAnonymous) {\r\n      return ` as ${(ANONYMOUS_USER.username)}`;\r\n    }\r\n    const name = profile.full_name.split(' ')[0];\r\n    if (name) {\r\n      return ` as ${name}`;\r\n    }\r\n    return '';\r\n  };\r\n\r\n  const selectPostingAs = (username) => {\r\n    const isAnonymous = (username === ANONYMOUS_USER.username);\r\n    const profilePicture = isAnonymous ? ANONYMOUS_USER.profilePicture : profile.profile_picture;\r\n    setComment((state) => ({\r\n      ...state,\r\n      isAnonymous,\r\n      profilePicture,\r\n    }));\r\n  };\r\n\r\n  const renderButtons = () => {\r\n    const commentLength = comment.inputValue ? comment.inputValue.length : 0;\r\n    return (\r\n      (commentLength >= MIN_SHOW_COMMENT_BTN_LENGTH\r\n          || props.isWritingCommentMobile) && (\r\n          <Styled.CommentInputButtonsContainer>\r\n            <Button\r\n              type=\"button\"\r\n              category={SECONDARY_BUTTON}\r\n              onClick={() => { resetForm(); setWritingCommentOnMobile(false); }}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button type=\"submit\" category={PRIMARY_BUTTON} form=\"comment-form\">\r\n              Post\r\n              {getAuthor()}\r\n            </Button>\r\n          </Styled.CommentInputButtonsContainer>\r\n      )\r\n    );\r\n  };\r\n\r\n  const { profilePicture } = comment;\r\n  return (\r\n    <Styled.CommentInputMainContainer className={`${props.isWritingCommentMobile ? 'writing-mobile' : ''}`}>\r\n      <Styled.CommentInputForm id=\"comment-form\" onSubmit={onSubmit}>\r\n        <Styled.CommentInputTextAreaForm>\r\n          <CommentInputAuthor\r\n            profilePicture={profilePicture}\r\n            selectPostingAs={selectPostingAs}\r\n          />\r\n          <CommentInputText\r\n            ref={CommentInputTextRef}\r\n            onInputChange={onInputChange}\r\n            resetInputText={resetForm}\r\n            isNewComment\r\n          />\r\n        </Styled.CommentInputTextAreaForm>\r\n        {renderButtons()}\r\n      </Styled.CommentInputForm>\r\n    </Styled.CommentInputMainContainer>\r\n  );\r\n}\r\n\r\nCommentInput.propTypes = {\r\n  questionId: PropTypes.number,\r\n  isWritingCommentMobile: PropTypes.bool,\r\n  setWritingCommentOnMobile: PropTypes.func,\r\n};\r\n\r\nCommentInput.defaultProps = {\r\n  questionId: null,\r\n  isWritingCommentMobile: false,\r\n  setWritingCommentOnMobile: () => {},\r\n};\r\n\r\nexport default CommentInput;\r\n", "/* eslint-disable camelcase */\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { MenuItem } from 'react-bootstrap';\r\nimport * as Styled from 'app/components/CommentInput/CommentInput.styled';\r\nimport useUser from 'app/utils/hooks/useUser';\r\nimport { ANONYMOUS_USER } from 'app/utils/constants';\r\n\r\nfunction CommentInputAuthor(props) {\r\n  const {\r\n    anonymousUsername,\r\n    anonymousProfilePicture,\r\n    profilePicture,\r\n    selectPostingAs,\r\n  } = props;\r\n\r\n  const profile = useUser();\r\n\r\n  const renderUserProfile = ({ full_name, profile_picture }) => full_name && (\r\n    <MenuItem eventKey={full_name}>\r\n      <Styled.AuthorImg\r\n        variant=\"dropdown\"\r\n        src={profile_picture}\r\n      />\r\n      {full_name}\r\n    </MenuItem>\r\n  );\r\n\r\n  const renderDropdownTitle = () => (\r\n    <div>\r\n      <Styled.CommentInputAuthorPictureDiv>\r\n        <Styled.AuthorImg src={profilePicture} />\r\n      </Styled.CommentInputAuthorPictureDiv>\r\n      <Styled.AuthorNameContainer>\r\n        <Styled.AuthorNameContainerCaret />\r\n      </Styled.AuthorNameContainer>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Styled.CommentInputAuthor>\r\n      <Styled.DropdownButtonStyled\r\n        bsStyle=\"default\"\r\n        title={renderDropdownTitle()}\r\n        onSelect={selectPostingAs}\r\n        noCaret\r\n        dropup\r\n      >\r\n        {renderUserProfile(profile)}\r\n        <MenuItem eventKey={anonymousUsername}>\r\n          <Styled.AuthorImg\r\n            variant=\"dropdown\"\r\n            src={anonymousProfilePicture}\r\n          />\r\n          Anonymous\r\n        </MenuItem>\r\n      </Styled.DropdownButtonStyled>\r\n    </Styled.CommentInputAuthor>\r\n  );\r\n}\r\n\r\nCommentInputAuthor.propTypes = {\r\n  anonymousUsername: PropTypes.string,\r\n  anonymousProfilePicture: PropTypes.string,\r\n  profilePicture: PropTypes.string.isRequired,\r\n  selectPostingAs: PropTypes.func.isRequired,\r\n};\r\n\r\nCommentInputAuthor.defaultProps = {\r\n  anonymousUsername: ANONYMOUS_USER.username,\r\n  anonymousProfilePicture: ANONYMOUS_USER.profilePicture,\r\n};\r\n\r\nexport default CommentInputAuthor;\r\n", "export { default } from './QuestionRow';\r\n", "import PropTypes from 'prop-types';\r\nimport { useLoaderData, useSubmit, useSearchParams } from '@remix-run/react';\r\nimport React, { useRef } from 'react';\r\nimport { formatCollapsingText } from 'app/utils/stringOperations';\r\nimport { renderDepartment, hasJobTitle } from 'app/utils/questionUtils';\r\nimport { COLLAPSED_QUESTION_MIN_LENGTH } from 'app/utils/constants';\r\nimport * as Styled from 'app/components/QuestionRow/QuestionRow.Styled';\r\nimport ConditionalLinkTo from 'app/components/Atoms/ConditionalLinkTo';\r\nimport Label from 'app/components/Atoms/Label';\r\nimport QuestionResponderInfo from 'app/components/QuestionResponderInfo';\r\nimport QuestionMarkdown from 'app/components/QuestionMarkdown';\r\nimport useUser from 'app/utils/hooks/useUser';\r\nimport { getDateData } from 'app/utils/timeOperations';\r\nimport ACTIONS from 'app/utils/actions';\r\nimport { CircleIcon, DateContainer } from 'app/components/QuestionResponderInfo/QuestionResponderInfo.Styled';\r\nimport Switch from 'app/components/Switch';\r\n\r\nconst renderLocation = (location, locations) => {\r\n  if (locations.length === 0) {\r\n    return '...';\r\n  }\r\n\r\n  return locations.find((loc) => loc.code === location).name;\r\n};\r\n\r\nfunction QuestionRow(props) {\r\n  const {\r\n    question,\r\n    isQuestionModalOpen,\r\n    hasAnswer,\r\n    shouldCollapse,\r\n    collapsed,\r\n    children,\r\n    isFromList,\r\n  } = props;\r\n\r\n  const profile = useUser();\r\n\r\n  const { locations } = useLoaderData();\r\n  const isUpdated = false;\r\n  const pinForm = useRef();\r\n  const enabledForm = useRef();\r\n  const submit = useSubmit();\r\n\r\n  const [searchParams] = useSearchParams();\r\n\r\n  const handleStatusClick = () => {\r\n    let url = '/?index';\r\n    if (!isFromList) {\r\n      url = `/questions/${question.question_id}`;\r\n      const urlSearchParam = searchParams.get('order');\r\n      url = urlSearchParam !== null ? `${url}?order=${urlSearchParam}` : url;\r\n    } else {\r\n      searchParams.forEach((value, key) => {\r\n        url += value ? `&${key}=${value}` : '';\r\n      });\r\n    }\r\n    const data = new FormData(enabledForm.current);\r\n    data.set('action', ACTIONS.ENABLED_ACTION);\r\n    data.set('questionId', question.question_id);\r\n    data.set('enabledValue', !question.is_enabled);\r\n\r\n    submit(data, { method: 'post', action: url, replace: true });\r\n  };\r\n\r\n  const onPinChange = () => {\r\n    let url = '/?index';\r\n    if (!isFromList) {\r\n      url = `/questions/${question.question_id}`;\r\n      const urlSearchParam = searchParams.get('order');\r\n      url = urlSearchParam !== null ? `${url}?order=${urlSearchParam}` : url;\r\n    } else {\r\n      searchParams.forEach((value, key) => {\r\n        url += value ? `&${key}=${value}` : '';\r\n      });\r\n    }\r\n    const newPinStatusValue = question.is_pinned ? 'false' : 'true';\r\n    const data = new FormData(pinForm.current);\r\n    data.set('action', ACTIONS.PINNIN);\r\n    data.set('questionId', question.question_id);\r\n    data.set('value', newPinStatusValue);\r\n\r\n    submit(\r\n      data,\r\n      { method: 'post', action: url, replace: true },\r\n    );\r\n  };\r\n\r\n  const adminPinButton = (profile.is_admin && !question.is_pinned)\r\n    ? (\r\n      <Styled.PinQuestionIconHolder onClick={onPinChange}>\r\n        <Styled.PinActionableIconHolder />\r\n        <Styled.PinTooltipMessage>Pin question to the top of the list</Styled.PinTooltipMessage>\r\n      </Styled.PinQuestionIconHolder>\r\n    )\r\n    : (\r\n      <Styled.PinQuestionIconHolder onClick={onPinChange} className=\"pin-tooltip\">\r\n        <Styled.UnpinActionableIconHolder />\r\n        <Styled.PinTooltipMessage>Unpin question from top of the list</Styled.PinTooltipMessage>\r\n      </Styled.PinQuestionIconHolder>\r\n    );\r\n\r\n  const nonAdminPinIndicator = !profile.is_admin && question.is_pinned && (\r\n    <Styled.PinnedIndicator>\r\n      <span>Pinned by admin</span>\r\n      {' '}\r\n      <Styled.PinnedIcon />\r\n    </Styled.PinnedIndicator>\r\n  );\r\n\r\n  return (\r\n    <Styled.QuestionRowContainer isQuestionModalOpen={isQuestionModalOpen}>\r\n      <Styled.QuestionRowMetadataTop>\r\n        <ConditionalLinkTo to={`/questions/${question.question_id}`} condition={isFromList}>\r\n          <QuestionResponderInfo createdBy={question.created_by}>\r\n            <DateContainer hasJobTitle={hasJobTitle(question.created_by)}>\r\n              <CircleIcon />\r\n              <Styled.QuestionRowDate>\r\n                <em>{isUpdated && ' (edited)'}</em>\r\n                {getDateData(question.createdAt)}\r\n              </Styled.QuestionRowDate>\r\n            </DateContainer>\r\n          </QuestionResponderInfo>\r\n        </ConditionalLinkTo>\r\n        <Styled.QuestionRowLine\r\n          isQuestionModalOpen={isQuestionModalOpen}\r\n          hasAnswer={hasAnswer}\r\n        />\r\n\r\n        <Styled.RightWrapper>\r\n          {profile.is_admin ? adminPinButton : nonAdminPinIndicator}\r\n          {profile.is_admin && (\r\n\r\n            <Styled.DisableControls>\r\n              <Styled.ButtonTooltipMessage>\r\n                Click to\r\n                {' '}\r\n                {question.is_enabled ? 'disable' : 'enable'}\r\n                {' '}\r\n                this\r\n                question\r\n              </Styled.ButtonTooltipMessage>\r\n              <Switch\r\n                id={`question-${question.question_id}`}\r\n                checked={question.is_enabled}\r\n                onChange={handleStatusClick}\r\n              />\r\n            </Styled.DisableControls>\r\n\r\n          )}\r\n        </Styled.RightWrapper>\r\n\r\n      </Styled.QuestionRowMetadataTop>\r\n      <Styled.QuestionRowWrapper hasAnswer={hasAnswer} isQuestionModalOpen={isQuestionModalOpen}>\r\n        <ConditionalLinkTo to={`/questions/${question.question_id}`} condition={isFromList}>\r\n          <Styled.QuestionRowContent>\r\n            <QuestionMarkdown\r\n              source={formatCollapsingText(\r\n                question.question,\r\n                shouldCollapse && !isQuestionModalOpen,\r\n                collapsed,\r\n                COLLAPSED_QUESTION_MIN_LENGTH,\r\n              )}\r\n            />\r\n          </Styled.QuestionRowContent>\r\n        </ConditionalLinkTo>\r\n        {children}\r\n        <Styled.QuestionRowMetadataBottom>\r\n          <Styled.QuestionRowMetadataSectionOne>\r\n            {\r\n              isFromList\r\n              && (\r\n                <>\r\n                  <Label text={renderLocation(question.location, locations)} type=\"Location\" />\r\n                  <Label text={renderDepartment(question.Department)} type=\"Department\" />\r\n                  {question.assigned_to && <Label text={question.assigned_to.full_name} type=\"Employee\" />}\r\n                </>\r\n              )\r\n            }\r\n          </Styled.QuestionRowMetadataSectionOne>\r\n          <Styled.QuestionId>\r\n            {`Question ID: Q${question.question_id}`}\r\n          </Styled.QuestionId>\r\n        </Styled.QuestionRowMetadataBottom>\r\n        <Styled.QuestionRowBorderBottom />\r\n      </Styled.QuestionRowWrapper>\r\n    </Styled.QuestionRowContainer>\r\n  );\r\n}\r\n\r\nQuestionRow.propTypes = {\r\n  question: PropTypes.shape({\r\n    question_id: PropTypes.number.isRequired,\r\n    question: PropTypes.string.isRequired,\r\n    is_anonymous: PropTypes.bool.isRequired,\r\n    is_pinned: PropTypes.bool.isRequired,\r\n    is_enabled: PropTypes.bool.isRequired,\r\n    user_hash: PropTypes.string,\r\n    can_edit: PropTypes.bool,\r\n    Department: PropTypes.string,\r\n    assigned_to: PropTypes.shape({\r\n      full_name: PropTypes.string,\r\n    }),\r\n    created_by: PropTypes.shape({\r\n      email: PropTypes.string,\r\n      employee_id: PropTypes.number,\r\n      full_name: PropTypes.string,\r\n      is_admin: PropTypes.bool,\r\n      job_title: PropTypes.string,\r\n      profile_picture: PropTypes.string,\r\n    }),\r\n    createdAt: PropTypes.string.isRequired,\r\n    location: PropTypes.string.isRequired,\r\n    numComments: PropTypes.number.isRequired,\r\n    hasVoted: PropTypes.bool.isRequired,\r\n    Answer: PropTypes.shape({\r\n      answer: PropTypes.string,\r\n      answer_id: PropTypes.number,\r\n      answered_at: PropTypes.string,\r\n      answered_by_id: PropTypes.number,\r\n      hasScored: PropTypes.bool,\r\n      canUndoNps: PropTypes.bool,\r\n    }),\r\n    mostUpvoted: PropTypes.bool,\r\n  }).isRequired,\r\n  isQuestionModalOpen: PropTypes.bool.isRequired,\r\n  hasAnswer: PropTypes.bool,\r\n  shouldCollapse: PropTypes.bool,\r\n  collapsed: PropTypes.bool,\r\n  children: PropTypes.node,\r\n  isFromList: PropTypes.bool,\r\n};\r\n\r\nQuestionRow.defaultProps = {\r\n  children: null,\r\n  hasAnswer: false,\r\n  shouldCollapse: false,\r\n  collapsed: false,\r\n  isFromList: true,\r\n};\r\n\r\nexport default QuestionRow;\r\n", "import styled, { css } from 'styled-components';\r\nimport { BsFillPinAngleFill, BsPinFill } from 'react-icons/bs';\r\n\r\nexport const QuestionRowContainer = styled.div`\r\n    align-items: flex-start;\r\n    background: #fff;\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin-bottom: 8px;\r\n    padding-botton: 8px;\r\n    width: 100%;\r\n    position: relative;\r\n    ${(props) => props.isQuestionModalOpen && css`\r\n        @media screen and (max-width: 480px) {\r\n          padding: 0 10px;\r\n        }\r\n    `}\r\n`;\r\n\r\nexport const QuestionRowMetadataTop = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  margin-bottom: 17px;\r\n  width: 100%;\r\n`;\r\n\r\nexport const QuestionRowOptions = styled.div`\r\n  align-items: flex-end;\r\n  display: inline-flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  margin-right: 10px;\r\n  > span:first-child {\r\n    color: #a2abaf;\r\n    font-family: \"Nunito\", sans-serif;\r\n    font-size: 12px;\r\n    margin-bottom: 2px;\r\n  }\r\n`;\r\n\r\nexport const PinQuestionIconHolder = styled.span`\r\n  float: right;\r\n  display: block;\r\n  position: relative;\r\n  > img:hover {\r\n    cursor: pointer;\r\n  }\r\n  @media screen and (max-width: 480px) {\r\n    margin: 0px 8px;\r\n  }\r\n`;\r\n\r\nexport const PinActionableIconHolder = styled(BsPinFill)`\r\n  font-size: 15px;\r\n  color: var(--color-dark-25);\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const PinTooltipMessage = styled.span`\r\n  display: none;\r\n  width: 210px;\r\n  background-color: black;\r\n  color: #fff;\r\n  text-align: center;\r\n  border-radius: 6px;\r\n  padding: 8px 0px;\r\n  position: absolute;\r\n  z-index: 1000;\r\n  right: 25px;\r\n  top: -25px;\r\n  font-size: 11px;\r\n  letter-spacing: 0.5px;\r\n\r\n  ${PinQuestionIconHolder}:hover & {\r\n    display: block;\r\n  }\r\n`;\r\n\r\nexport const UnpinActionableIconHolder = styled(BsPinFill)`\r\n  font-size: 15px;\r\n  color: var(--color-secondary);\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const PinnedIndicator = styled.span`\r\n  float: right;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: flex-end;\r\n  height: fit-content;\r\n\r\n  > span {\r\n    min-width: 80px;\r\n    color: var(--color-dark-metadata);\r\n    font-family: \"Nunito\", sans-serif;\r\n    font-size: 11px;\r\n    letter-spacing: 0.7px;\r\n    @media screen and (max-width: 480px) {\r\n      font-size: 9px;\r\n      letter-spacing: 0.7px;\r\n    }\r\n`;\r\n\r\nexport const PinnedIcon = styled(BsFillPinAngleFill)`\r\n  color: var(--color-dark-metadata);\r\n  margin-left: 4px;\r\n  font-size: 12px;\r\n`;\r\n\r\nexport const QuestionRowWrapper = styled.div`\r\n    width: 100%;\r\n`;\r\n\r\nexport const QuestionRowContent = styled.div`\r\n  cursor: pointer;\r\n  width: 100%;\r\n  padding: 0;\r\n`;\r\n\r\nexport const QuestionRowMetadataBottom = styled.div`\r\n  color: var(--color-dark-25);\r\n  display: flex;\r\n  align-items: flex-end;\r\n  font-family: \"Nunito\", sans-serif;\r\n  font-size: 12px;\r\n  font-weight: 600;\r\n  justify-content: space-between;\r\n  letter-spacing: 0.7px;\r\n  margin-top: 20px;\r\n  margin-bottom: 8px;\r\n  width: 100%;\r\n`;\r\n\r\nexport const QuestionRowBorderBottom = styled.div`\r\n  border-bottom: var(--color-dark-25) solid 1px;\r\n  width: 100%;\r\n`;\r\n\r\nexport const QuestionRowLine = styled.div`\r\n    display: none;\r\n    border-right: 1px solid var(--color-dark-25);\r\n    height: 95%;\r\n    left: 22px;\r\n    top: 70px;\r\n    position: absolute;\r\n    width: 1px;\r\n    @media screen and (max-width: 480px) {\r\n        left: 42px;    \r\n        top: 90px;\r\n    }\r\n    ${(props) => (!props.hasAnswer || props.isQuestionModalOpen) && css`\r\n        display: none\r\n    `}\r\n`;\r\n\r\nexport const QuestionRowDate = styled.div`\r\n    display: flex;\r\n    height: fit-content;\r\n    color: var(--color-dark-metadata);\r\n    font-family: \"Nunito\", sans-serif;\r\n    font-size: 12px;\r\n    letter-spacing: 0.7px;\r\n`;\r\n\r\nexport const RightWrapper = styled.div`\r\n    display: flex;\r\n    padding-top: 5px;\r\n    gap:10px;\r\n`;\r\n\r\nexport const QuestionRowMetadataSectionOne = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\n\r\nexport const QuestionId = styled.span`\r\n  font-size: 12px;\r\n  color: var(--color-dark-metadata);\r\n  font-weight: 500;\r\n`;\r\n\r\nexport const DisableControls = styled.div`\r\n    display:flex;\r\n    margin\r\n`;\r\n\r\nexport const ButtonTooltipMessage = styled.span`\r\n  display: none;\r\n  width: 210px;\r\n  background-color: black;\r\n  color: #fff;\r\n  text-align: center;\r\n  border-radius: 6px;\r\n  padding: 8px 0px;\r\n  position: absolute;\r\n  z-index: 1000;\r\n  right: 25px;\r\n  top: -25px;\r\n  font-size: 11px;\r\n  letter-spacing: 0.5px;\r\n\r\n  ${DisableControls}:hover & {\r\n    display: block;\r\n  }\r\n`;\r\n", "export { default } from './Switch';\r\n", "import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as S from './Switch.Styled';\r\n\r\nfunction Switch({ id, checked, onChange }) {\r\n  return (\r\n    <S.Switch htmlFor={id || 'react-switch-new'}>\r\n      <input type=\"checkbox\" checked={checked} onChange={onChange} id={id || 'react-switch-new'} />\r\n      <S.Slider />\r\n    </S.Switch>\r\n  );\r\n}\r\n\r\nexport default Switch;\r\n\r\nSwitch.propTypes = {\r\n  id: PropTypes.string,\r\n  checked: PropTypes.bool.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nSwitch.defaultProps = {\r\n  id: 'react-switch-new',\r\n};\r\n", "/* eslint-disable import/prefer-default-export */\r\nimport styled from 'styled-components';\r\n\r\nexport const Switch = styled.label`\r\nposition: relative;\r\ndisplay: inline-block;\r\nwidth: 36px;\r\nheight: 20px;\r\n  input {\r\n    opacity: 0;\r\n    width: 0;\r\n    height: 0;\r\n  }\r\n  input + span:before {\r\n    transform: translate(1px, -1px);\r\n  }\r\n  input:checked + span {\r\n    background-color: var(--toastify-color-progress-success);\r\n  }\r\n  \r\n  input:focus + span {\r\n    box-shadow: 0 0 1px #2196F3;\r\n  }\r\n  \r\n  input:checked + span:before {\r\n    -webkit-transform: translate(17px, -1px);\r\n    -ms-transform: translate(17px, -1px);\r\n    transform: translate(17px, -1px);\r\n  }\r\n`;\r\n\r\nexport const Slider = styled.span`\r\nposition: absolute;\r\ncursor: pointer;\r\ntop: 0;\r\nleft: 0;\r\nright: 0;\r\nbottom: 0;\r\nbackground-color: #ccc;\r\n-webkit-transition: .4s;\r\ntransition: .4s;\r\nborder-radius: 20px;\r\n&:before {  \r\n  position: absolute;\r\n  content: \"\";\r\n  height: 16px;\r\n  width: 16px;\r\n  left: 1px;\r\n  bottom: 1px;\r\n  background-color: white;\r\n  -webkit-transition: .4s;\r\n  transition: .4s;\r\n  border-radius: 50%;\r\n}\r\n`;\r\n", "/* eslint-disable camelcase */\r\nimport React, { useState, useRef } from 'react';\r\nimport { useSubmit, useTransition, useSearchParams } from '@remix-run/react';\r\nimport PropTypes from 'prop-types';\r\nimport AnswerInputText from 'app/components/AnswerInputText/AnswerInputText';\r\nimport Button from 'app/components/Atoms/Button';\r\nimport useUser from 'app/utils/hooks/useUser';\r\nimport ACTIONS from 'app/utils/actions';\r\nimport {\r\n  CANCEL,\r\n  SUBMIT,\r\n  UPDATE_ANSWER,\r\n  SUBMIT_ANSWER,\r\n  ANONYMOUS_USER,\r\n  MAXIMUM_ANSWER_LENGTH,\r\n  MINIMUM_ANSWER_LENGTH,\r\n  editAnswerMessage,\r\n  editAnswerInfo,\r\n  addAnswerMessage,\r\n  addAnswerInfo,\r\n  DISABLED_BUTTON,\r\n  SECONDARY_BUTTON,\r\n  CLOSE_BUTTON,\r\n} from 'app/utils/constants';\r\nimport { deleteNoMarkupFormatHTML } from 'app/utils/stringOperations';\r\nimport { getTimeDiff } from 'app/utils/timeOperations';\r\nimport QuestionMarkdown from 'app/components/QuestionMarkdown/QuestionMarkdown';\r\nimport * as Styled from 'app/components/Modals/AnswerModal/AnswerModal.Styled';\r\nimport { validTextLength } from 'app/utils/input';\r\n\r\nfunction AnswerModal(props) {\r\n  AnswerModal.propTypes = {\r\n    question: PropTypes.shape(),\r\n    onClose: PropTypes.func.isRequired,\r\n    openAssignAnswerModal: PropTypes.func.isRequired, // eslint-disable-line\r\n  };\r\n\r\n  AnswerModal.defaultProps = {\r\n    question: null,\r\n  };\r\n\r\n  const submit = useSubmit();\r\n  const transition = useTransition();\r\n  const submitAnswerForm = useRef();\r\n  const profile = useUser();\r\n  const [searchParams] = useSearchParams();\r\n\r\n  const initialState = {\r\n    Answer: props.question.Answer ? props.question.Answer : '',\r\n    isAnswering: false,\r\n    sanitizedInput: props.question.Answer ? deleteNoMarkupFormatHTML(props.question.Answer.answer_text) : '',\r\n  };\r\n\r\n  const [answerData, setAnswerData] = useState(initialState);\r\n\r\n  const onAnswerChange = (answer) => {\r\n    setAnswerData({\r\n      ...answerData,\r\n      sanitizedInput: deleteNoMarkupFormatHTML(answer),\r\n    });\r\n  };\r\n\r\n  const getQuestionAuthor = (question) => {\r\n    if (!question.is_anonymous && question.created_by) {\r\n      return question.created_by.full_name;\r\n    }\r\n    return ANONYMOUS_USER.username;\r\n  };\r\n\r\n  const onSubmitAnswer = () => {\r\n    if (transition.state !== 'idle') {\r\n      return;\r\n    }\r\n    const {\r\n      question,\r\n      onClose,\r\n    } = props;\r\n    const answerValue = answerData.sanitizedInput;\r\n    const answerValueNoHTML = deleteNoMarkupFormatHTML(answerValue);\r\n\r\n    if (answerValue !== answerValueNoHTML) {\r\n      return;\r\n    }\r\n\r\n    const action = question.Answer\r\n      ? ACTIONS.UPDATE_QUESTION_ANSWER\r\n      : ACTIONS.CREATE_QUESTION_ANSWER;\r\n\r\n    const data = new FormData(submitAnswerForm.current);\r\n    data.set('action', action);\r\n\r\n    if (question.Answer) {\r\n      data.set('answerId', question.Answer.answer_id);\r\n    } else {\r\n      data.set('employee_id', profile.employee_id);\r\n      data.set('questionId', question.question_id);\r\n    }\r\n\r\n    data.set('answer', answerValueNoHTML);\r\n\r\n    onClose();\r\n    let url = `/questions/${question.question_id}`;\r\n    const urlSearchParam = searchParams.get('order');\r\n    url = urlSearchParam !== null ? `${url}?order=${urlSearchParam}` : url;\r\n\r\n    submit(data, {\r\n      method: 'post',\r\n      action: url,\r\n      replace: true,\r\n    });\r\n  };\r\n\r\n  const renderSecondaryButton = () => {\r\n    if (props.question.Answer) {\r\n      return (\r\n        <Button\r\n          type=\"button\"\r\n          category={SECONDARY_BUTTON}\r\n          onClick={props.onClose}\r\n        >\r\n          {CANCEL}\r\n        </Button>\r\n      );\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  const renderAnswerSubtitle = ({ question, question: { Answer } }) => {\r\n    if (Answer) {\r\n      return editAnswerInfo(Answer.AnsweredBy.full_name, getTimeDiff(Answer.answered_at));\r\n    }\r\n    return addAnswerInfo(getQuestionAuthor(question), getTimeDiff(question.createdAt));\r\n  };\r\n\r\n  const {\r\n    question,\r\n    question: { question_id },\r\n  } = props;\r\n  const { Answer } = question;\r\n  const sanitizedInputLength = answerData.sanitizedInput.length;\r\n\r\n  return (\r\n    <div onClick={props.onClose}>\r\n      <Styled.Modal show hide={props.onClose}>\r\n        <Styled.ModalDialog onClick={(e) => e.stopPropagation()}>\r\n          <Button\r\n            category={CLOSE_BUTTON}\r\n            onClick={props.onClose}\r\n          />\r\n          <Styled.ModalHeader>\r\n            <Styled.ModalTitle>\r\n              {Answer ? editAnswerMessage(question_id) : addAnswerMessage(question_id)}\r\n            </Styled.ModalTitle>\r\n            <QuestionMarkdown source={question.question} />\r\n            <Styled.ModalSubtitle>{renderAnswerSubtitle(props)}</Styled.ModalSubtitle>\r\n          </Styled.ModalHeader>\r\n          <Styled.ModalBody>\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12\">\r\n                <AnswerInputText\r\n                  inputValue={Answer ? Answer.answer : ''}\r\n                  onInputChange={onAnswerChange}\r\n                />\r\n              </div>\r\n            </div>\r\n          </Styled.ModalBody>\r\n          <Styled.ModalFooter>\r\n            {renderSecondaryButton()}\r\n            <Button\r\n              id=\"submitAnswerBtn\"\r\n              category={DISABLED_BUTTON}\r\n              onClick={onSubmitAnswer}\r\n              value={SUBMIT}\r\n              disabled={!validTextLength(\r\n                sanitizedInputLength,\r\n                MINIMUM_ANSWER_LENGTH,\r\n                MAXIMUM_ANSWER_LENGTH,\r\n              )}\r\n            >\r\n              {props.question.Answer ? UPDATE_ANSWER : SUBMIT_ANSWER}\r\n            </Button>\r\n          </Styled.ModalFooter>\r\n        </Styled.ModalDialog>\r\n      </Styled.Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AnswerModal;\r\n", "/* eslint-disable react/no-this-in-sfc */\r\nimport React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AnswerTextArea from 'app/components/AnswerInputText/AnswerTextArea';\r\nimport QuestionMarkdown from 'app/components/QuestionMarkdown/QuestionMarkdown';\r\nimport Button from 'app/components/Atoms/Button/Button';\r\nimport * as Styled from 'app/components/AnswerInputText/AnswerInputText.Styled';\r\nimport {\r\n  MINIMUM_ANSWER_LENGTH,\r\n  MIN_TEXTAREA_ROWS,\r\n  TEXT_BUTTON,\r\n} from 'app/utils/constants';\r\n\r\nfunction AnswerInputText(props) {\r\n  AnswerInputText.propTypes = {\r\n    minRows: PropTypes.number,\r\n    inputValue: PropTypes.string,\r\n    answerLength: PropTypes.number,\r\n    onInputChange: PropTypes.func.isRequired,\r\n  };\r\n\r\n  AnswerInputText.defaultProps = {\r\n    minRows: MIN_TEXTAREA_ROWS,\r\n    inputValue: '',\r\n    answerLength: 0,\r\n  };\r\n\r\n  const initialAnswerState = {\r\n    inputValue: props.inputValue,\r\n    answerLength: props.answerLength,\r\n    textAreaRows: props.minRows,\r\n  };\r\n\r\n  const [answerState, setAnswerState] = useState(initialAnswerState);\r\n\r\n  const onAnswerChange = (event) => {\r\n    const rawText = event.target.value;\r\n    const answerLength = rawText.trim().length;\r\n    const inputValue = rawText.replace(/^\\s+/, '');\r\n\r\n    setAnswerState({\r\n      inputValue,\r\n      answerLength,\r\n      textAreaRows: answerLength > 0 ? answerLength : props.minRows,\r\n    });\r\n    props.onInputChange(inputValue);\r\n  };\r\n\r\n  const setTextInputRef = (element) => {\r\n    this.textInput = element;\r\n  };\r\n\r\n  const handlePreviewChange = () => {\r\n    setAnswerState({ ...answerState, isShowPreview: !answerState.isShowPreview });\r\n  };\r\n\r\n  const renderPreviewButton = (\r\n    {\r\n      answerLength,\r\n      isShowPreview,\r\n    },\r\n  ) => answerLength > MINIMUM_ANSWER_LENGTH\r\n  && (\r\n  <div>\r\n    <Button\r\n      type=\"button\"\r\n      category={TEXT_BUTTON}\r\n      className=\"preview-button\"\r\n      onClick={handlePreviewChange}\r\n    >\r\n      {isShowPreview ? 'Edit answer' : 'Show preview'}\r\n    </Button>\r\n  </div>\r\n  );\r\n  const renderAnswerPreview = (inputValue) => (\r\n    <div className=\"col-md-12\">\r\n      <QuestionMarkdown source={inputValue} />\r\n    </div>\r\n  );\r\n\r\n  const renderInputArea = () => {\r\n    const { inputValue, answerLength, isShowPreview } = answerState;\r\n    if (isShowPreview && answerLength > MINIMUM_ANSWER_LENGTH) {\r\n      return renderAnswerPreview(inputValue);\r\n    }\r\n    return (\r\n      <AnswerTextArea\r\n        inputValue={inputValue}\r\n        onAnswerChange={onAnswerChange}\r\n        setTextInputRef={setTextInputRef}\r\n        textAreaRows={answerState.minRows}\r\n        answerLength={answerLength}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Styled.CommentInputText>\r\n      {renderPreviewButton(answerState)}\r\n      {renderInputArea(answerState)}\r\n    </Styled.CommentInputText>\r\n  );\r\n}\r\n\r\nexport default AnswerInputText;\r\n", "import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport MarkdownFormattingNote from 'app/components/MarkdownFormattingNote/MarkdownFormattingNote';\r\nimport { shouldShowMarkdownSuggestions } from 'app/utils/input';\r\nimport {\r\n  MAXIMUM_ANSWER_LENGTH,\r\n  MINIMUM_ANSWER_LENGTH,\r\n  MINIMUM_INPUT_LENGTH_TO_SHOW_MARKDOWN,\r\n  MINIMUM_WIDTH_TO_SHOW_MARKDOWN,\r\n  inputPlaceholder,\r\n} from 'app/utils/constants';\r\nimport Input from 'app/components/Atoms/Input/Input';\r\nimport InputCounter from 'app/components/InputCounter/InputCounter';\r\nimport * as Styled from 'app/components/AnswerInputText/AnswerInputText.Styled';\r\n\r\nfunction AnswerTextArea(props) {\r\n  return (\r\n    <Styled.CommentInputTextArea>\r\n      <Input\r\n        type=\"text-area\"\r\n        rows={props.textAreaRows}\r\n        maxLength={MAXIMUM_ANSWER_LENGTH}\r\n        placeholder={inputPlaceholder(MINIMUM_ANSWER_LENGTH)}\r\n        value={props.inputValue}\r\n        onChange={props.onAnswerChange}\r\n        form=\"question-submit-form\"\r\n        ref={props.inputRef}\r\n        inputRightElement={\r\n          <InputCounter currentLength={props.answerLength} maxLength={MAXIMUM_ANSWER_LENGTH} />\r\n        }\r\n      />\r\n      <Styled.CommentInputOptions>\r\n        <MarkdownFormattingNote\r\n          visible={\r\n            shouldShowMarkdownSuggestions(\r\n              props.answerLength,\r\n              MINIMUM_INPUT_LENGTH_TO_SHOW_MARKDOWN,\r\n              window.innerWidth,\r\n              MINIMUM_WIDTH_TO_SHOW_MARKDOWN,\r\n            )\r\n          }\r\n        />\r\n      </Styled.CommentInputOptions>\r\n    </Styled.CommentInputTextArea>\r\n  );\r\n}\r\n\r\nAnswerTextArea.propTypes = {\r\n  inputValue: PropTypes.string.isRequired,\r\n  onAnswerChange: PropTypes.func.isRequired,\r\n  answerLength: PropTypes.number,\r\n  textAreaRows: PropTypes.number,\r\n  inputRef: PropTypes.func,\r\n};\r\n\r\nAnswerTextArea.defaultProps = {\r\n  answerLength: 0,\r\n  textAreaRows: 1,\r\n  inputRef: () => {},\r\n};\r\n\r\nexport default AnswerTextArea;\r\n", "/* eslint-disable import/prefer-default-export */\r\nimport styled from 'styled-components';\r\n\r\nexport const CommentInputText = styled.div`\r\n    display: flex;\r\n    flex: 85%;\r\n    flex-direction: column;\r\n\r\n    @media (max-width: 500px) {\r\n        flex-direction: column-reverse;\r\n    }\r\n`;\r\n\r\nexport const CommentInputTextArea = styled.div`\r\n    display: block;\r\n    position: relative;\r\n    width: 100%;\r\n`;\r\n\r\nexport const CommentInputOptions = styled.div`\r\n    padding-bottom: 1%;\r\n\r\n    @media (max-width: 500px) {\r\n        display: none;\r\n    }\r\n`;\r\n", "/* eslint-disable import/prefer-default-export */\r\nimport styled from 'styled-components';\r\n\r\nexport const Modal = styled.div`\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    z-index: 1050;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n`;\r\n\r\nexport const ModalDialog = styled.div`\r\n    position: relative;\r\n    border-radius: 5px;\r\n    border: 0;\r\n    background-color: #fff;\r\n    box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.5);\r\n    overflow: hidden;\r\n    margin: 0 auto;\r\n    width: 100%;\r\n    display: block;\r\n    max-height: calc(100vh - 150px);\r\n    overflow-y: auto;\r\n    ${(props) => (props.variant === 'submit' ? 'padding: 0px 24px;max-width: 55vw;' : 'padding: 24px 24px;max-width: 70vw;')}\r\n\r\n    @media (max-width: 768px) {\r\n        max-height: 100%;\r\n        max-width: 100%;\r\n        height: 100%;\r\n    }\r\n`;\r\n\r\nexport const ModalBody = styled.div`\r\n    display: block;\r\n    font-size: 14px;\r\n    background-color: #fff;\r\n    border-bottom: none;\r\n    position: relative;\r\n    padding: 15px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nexport const ModalFooter = styled.div`\r\n    border-top: none;\r\n    background-color: #fff;\r\n    border-bottom: none;\r\n    padding: 15px;\r\n    text-align: right;\r\n    box-sizing: border-box;\r\n    display: block;\r\n    font-size: 14px;\r\n    ${(props) => (props.variant === 'logout' ? 'border-top: 1px solid #e5e5e5;padding: 15px;text-align: right;' : 'border-bottom: none;')}\r\n`;\r\n\r\nexport const ModalHeader = styled.div`\r\n    overflow-y: hidden;\r\n    padding: 15px;\r\n    box-sizing: border-box;\r\n    display: block;\r\n    font-size: 14px;\r\n    ${(props) => (props.variant === 'logout' ? 'border-bottom: 1px solid #e5e5e5;padding: 15px;' : 'border-bottom: none;')}\r\n`;\r\n\r\nexport const ModalTitle = styled.div`\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    line-height: normal;\r\n    letter-spacing: normal;\r\n    margin-bottom: 8px;\r\n`;\r\n\r\nexport const ModalSubtitle = styled.div`\r\n    font-size: 12px;\r\n    font-weight: normal;\r\n    letter-spacing: 0.6px;\r\n    line-height: 1.71;\r\n`;\r\n", "import React, { useRef } from 'react';\r\nimport { useSubmit, useTransition, useSearchParams } from '@remix-run/react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from 'app/components/Atoms/Button/Button';\r\nimport ACTIONS from 'app/utils/actions';\r\nimport {\r\n  answerDeleteWarning,\r\n  ANSWER_DELETE_WARNING_SUBTITLE,\r\n  CANCEL,\r\n  CLOSE_BUTTON,\r\n  DANGER_BUTTON,\r\n  DELETE_ANSWER,\r\n  SECONDARY_BUTTON,\r\n} from 'app/utils/constants';\r\n\r\nimport * as Styled from './DeleteAnswerModal.Styled';\r\n\r\nfunction DeleteAnswerModal({\r\n  question, onClose,\r\n}) {\r\n  const submit = useSubmit();\r\n  const transition = useTransition();\r\n  const deleteAnswerForm = useRef();\r\n  const [searchParams] = useSearchParams();\r\n\r\n  const onDeleteAnswer = () => {\r\n    if (transition.state !== 'idle') {\r\n      return;\r\n    }\r\n\r\n    const data = new FormData(deleteAnswerForm.current);\r\n    data.set('action', ACTIONS.DELETE_ANSWER);\r\n    data.set('answerId', question.Answer.answer_id);\r\n\r\n    onClose();\r\n    let url = `/questions/${question.question_id}`;\r\n    const urlSearchParam = searchParams.get('order');\r\n    url = urlSearchParam !== null ? `${url}?order=${urlSearchParam}` : url;\r\n\r\n    submit(data, {\r\n      method: 'post',\r\n      action: url,\r\n      replace: true,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div onClick={onClose}>\r\n      <Styled.Modal show>\r\n        <Styled.ModalDialog onClick={(e) => e.stopPropagation()}>\r\n          <Button category={CLOSE_BUTTON} onClick={onClose} />\r\n          <Styled.ModalHeader>\r\n            <Styled.ModalInfo>\r\n              <Styled.ModalTitle>\r\n                {answerDeleteWarning(question.question_id)}\r\n              </Styled.ModalTitle>\r\n              <Styled.ModalSubtitle>{ANSWER_DELETE_WARNING_SUBTITLE}</Styled.ModalSubtitle>\r\n            </Styled.ModalInfo>\r\n          </Styled.ModalHeader>\r\n          <Styled.ModalFooter>\r\n            <Button type=\"button\" category={SECONDARY_BUTTON} onClick={onClose}>\r\n              {CANCEL}\r\n            </Button>\r\n            <Button type=\"button\" category={DANGER_BUTTON} onClick={onDeleteAnswer}>\r\n              {DELETE_ANSWER}\r\n            </Button>\r\n          </Styled.ModalFooter>\r\n        </Styled.ModalDialog>\r\n      </Styled.Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nDeleteAnswerModal.propTypes = {\r\n  question: PropTypes.shape(),\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nDeleteAnswerModal.defaultProps = {\r\n  question: null,\r\n};\r\n\r\nexport default DeleteAnswerModal;\r\n", "/* eslint-disable import/prefer-default-export */\r\nimport styled from 'styled-components';\r\n\r\nexport const Modal = styled.div` \r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    z-index: 1050;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n`;\r\n\r\nexport const ModalDialog = styled.div`\r\n    position: relative;\r\n    border-radius: 5px;\r\n    border: 0;\r\n    background-color: #fff;\r\n    box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.5);\r\n    overflow: hidden;\r\n    margin: 0 auto;\r\n    padding: 48px 24px 24px;\r\n    max-width: 70vw;\r\n    display: block;\r\n    max-height: calc(100vh - 150px);\r\n    overflow-y: auto;\r\n    ${(props) => (props.variant === 'submit' ? 'padding: 0px 24px;max-width: 55vw;' : 'padding: 24px 24px;max-width: 70vw;')}\r\n\r\n    @media (max-width: 768px) {\r\n        max-height: 99%;\r\n        max-width: 80%;\r\n    }\r\n\r\n    @media (max-width: 576px) {\r\n        max-height: 99%;\r\n        max-width: 90%;\r\n    }\r\n`;\r\n\r\nexport const ModalHeader = styled.div`\r\n    overflow-y: hidden;\r\n    padding: 15px;\r\n    box-sizing: border-box;\r\n    display: block;\r\n    font-size: 14px;\r\n    ${(props) => (props.variant === 'logout' ? 'border-bottom: 1px solid #e5e5e5;padding: 15px;' : 'border-bottom: none;')}\r\n`;\r\n\r\nexport const ModalInfo = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100%;\r\n    color: #4e5154;\r\n`;\r\n\r\nexport const ModalTitle = styled.div`\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    line-height: normal;\r\n    letter-spacing: normal;\r\n    margin-bottom: 8px;\r\n`;\r\n\r\nexport const ModalSubtitle = styled.div`\r\n    font-size: 12px;\r\n    font-weight: normal;\r\n    letter-spacing: 0.6px;\r\n    line-height: 1.71;\r\n`;\r\n\r\nexport const ModalFooter = styled.div`\r\n    border-top: none;\r\n    background-color: #fff;\r\n    border-bottom: none;\r\n    padding: 15px;\r\n    text-align: right;\r\n    box-sizing: border-box;\r\n    display: block;\r\n    font-size: 14px;\r\n    ${(props) => (props.variant === 'logout' ? 'border-top: 1px solid #e5e5e5;padding: 15px;text-align: right;' : 'border-bottom: none;')}\r\n`;\r\n", "/* eslint-disable camelcase */\r\nimport React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from 'app/components/Atoms/Button';\r\nimport {\r\n  DISPLAY_TEXT_BEFORE_SCORING,\r\n  DISPLAY_TEXT_AFTER_SCORING,\r\n  SCORES,\r\n  UNDO_BUTTON_TEXT,\r\n  TEXT_BUTTON,\r\n} from 'app/utils/constants';\r\nimport * as Styled from 'app/components/NetPromoterScoreRow/NetPromoterScoreRow.styled';\r\n\r\nfunction NetPromoterScoreRow(props) {\r\n  const {\r\n    answer_id,\r\n    hasScored,\r\n    canUndoNps,\r\n    scoreAnswer,\r\n    deleteScore,\r\n  } = props;\r\n\r\n  const [scored, setScored] = useState(hasScored);\r\n  const [selectedOption, setSelectedOption] = useState(undefined);\r\n  const [undoNps, setUndoNps] = useState(canUndoNps);\r\n  const [selected, setSelected] = useState(false);\r\n\r\n  const sendScore = () => {\r\n    const score = selectedOption;\r\n    if (selected) {\r\n      scoreAnswer(score, answer_id);\r\n      setScored(true);\r\n    }\r\n  };\r\n\r\n  const handleOptionsClick = (score) => {\r\n    setSelectedOption(score);\r\n    setUndoNps(true);\r\n    setSelected(true);\r\n  };\r\n\r\n  const handleUndoClick = () => {\r\n    deleteScore(answer_id);\r\n    setScored(false);\r\n    setSelected(false);\r\n    setSelectedOption('');\r\n  };\r\n\r\n  const generateSendButton = () => (\r\n    <Button\r\n    //   id=\"nps-send-btn\"\r\n      type=\"button\"\r\n      category={TEXT_BUTTON}\r\n      className=\"send-button\"\r\n      onClick={() => sendScore()}\r\n    >\r\n      Send\r\n    </Button>\r\n  );\r\n\r\n  const generateUndoButton = (canUndoNps_) => canUndoNps_ && (\r\n    <Button\r\n      id=\"nps-undo-btn\"\r\n      type=\"button\"\r\n      category={TEXT_BUTTON}\r\n      className=\"undo-button\"\r\n      onClick={() => handleUndoClick()}\r\n    >\r\n      {UNDO_BUTTON_TEXT}\r\n    </Button>\r\n  );\r\n\r\n  // eslint-disable-next-line react/no-unstable-nested-components\r\n  function NpsRating() {\r\n    return (\r\n      <Styled.NpsRowOptionsContainer>\r\n        {SCORES.map((score) => (\r\n          <label\r\n            key={score.name}\r\n            className=\"nps-row__option--container\"\r\n            htmlFor={`choice${score.value}`}\r\n          >\r\n            <p>{score.name}</p>\r\n            <input type=\"radio\" name=\"score\" checked={selectedOption === score.value} onClick={() => handleOptionsClick(score.value)} />\r\n          </label>\r\n        ))}\r\n        {generateSendButton()}\r\n      </Styled.NpsRowOptionsContainer>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Styled.NpsRowContainer>\r\n      <Styled.NpsRowDisplayText>\r\n        <p>{scored ? DISPLAY_TEXT_AFTER_SCORING : DISPLAY_TEXT_BEFORE_SCORING}</p>\r\n      </Styled.NpsRowDisplayText>\r\n      \b\r\n      {scored ? generateUndoButton(undoNps) : NpsRating()}\r\n    </Styled.NpsRowContainer>\r\n  );\r\n}\r\n\r\nNetPromoterScoreRow.propTypes = {\r\n  answer_id: PropTypes.number.isRequired,\r\n  hasScored: PropTypes.bool.isRequired,\r\n  canUndoNps: PropTypes.bool.isRequired,\r\n  scoreAnswer: PropTypes.func.isRequired,\r\n  deleteScore: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default NetPromoterScoreRow;\r\n", "/* eslint-disable import/prefer-default-export */\r\nimport styled from 'styled-components';\r\n\r\nexport const NpsRowContainer = styled.div`\r\n  background-color: var(--color-secondary);\r\n  border-radius: 15px; \r\n  border: solid 1px rgba(80, 165, 231, 0.8);\r\n  box-shadow: 0 3px 6px 0 rgba(225, 229, 233, 0.8);\r\n  padding: 20px 24px 16px;\r\n  width: 100%;\r\n\r\n  > div {\r\n    display: inline-block;\r\n  }\r\n`;\r\n\r\nexport const NpsRowDisplayText = styled.div`\r\n  color: #fff;\r\n  font-family: \"Nunito\";\r\n  font-size: 14px;\r\n  letter-spacing: 0.6px;\r\n  line-height: 1.71;\r\n  vertical-align: top;\r\n  width: 253px;\r\n\r\n  p {\r\n    padding-bottom: 0;\r\n  }\r\n`;\r\n\r\nexport const NpsRowOptionsContainer = styled.div`\r\n  padding-left: 0;\r\n  width: auto;\r\n  height: auto;\r\n\r\n  .nps-row__option--container {\r\n    color: #fff;\r\n    cursor: pointer;\r\n    font-family: \"Nunito\";\r\n    font-size: 12px;\r\n    font-stretch: normal;\r\n    font-style: normal;\r\n    letter-spacing: normal;\r\n    line-height: normal;\r\n    position: relative;\r\n    text-align: center;\r\n    -webkit-user-select: none;\r\n    -moz-user-select: none;\r\n    -ms-user-select: none;\r\n    user-select: none;\r\n  }\r\n\r\n  .nps-row__option--container p {\r\n    margin-bottom: 8px;\r\n    width: 60px;\r\n  }\r\n\r\n  .nps-row__option--container input {\r\n    cursor: pointer;\r\n  }\r\n\r\n  .nps-row__options--container label {\r\n    margin-bottom: 0;\r\n    margin-left: 32px;\r\n  }\r\n\r\n  .custom-radio {\r\n    background-color: #fff;\r\n    border-radius: 50%;\r\n    display: block;\r\n    height: 16px;\r\n    margin: 0 auto;\r\n    width: 16px;\r\n  }\r\n\r\n  .nps-row__option--container:hover input ~ .custom-radio {\r\n    box-shadow: 0 0 0 2px var(--color-secondary-active);\r\n  }\r\n\r\n  .nps-row__option--container input:checked ~ .custom-radio {\r\n    background-color: #fff;\r\n  }\r\n\r\n  .custom-radio::after {\r\n    content: \"\";\r\n    display: none;\r\n    position: absolute;\r\n  }\r\n\r\n  .nps-row__option--container input:checked ~ .custom-radio::after {\r\n    display: block;\r\n  }\r\n\r\n  .nps-row__option--container .custom-radio::after {\r\n    background: #a2abaf;\r\n    border-radius: 50%;\r\n    height: 10px;\r\n    margin: 3px;\r\n    width: 10px;\r\n  }\r\n\r\n  .nps-row--container.invisible > div {\r\n    width: auto;\r\n  }\r\n`;\r\n", "import styled, { css } from 'styled-components';\r\n\r\nexport const QuestionCardContainer = styled.article`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 20px;\r\n  background-color: white;\r\n  border-radius: 15px;\r\n  box-shadow: 0 2px 4px 0 rgba(225, 229, 233, 0.8);\r\n\r\n  > div {\r\n    align-items: center;\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n\r\n  @media screen and (max-width: 480px) {\r\n    margin-bottom: 10px;\r\n  }\r\n`;\r\n\r\nexport const QuestionCardWrapper = styled.div`\r\n  width: 100%;\r\n  padding: 15px 20px 10px;\r\n\r\n  @media screen and (max-width: 480px) {\r\n    padding: 15px 12px 5px;\r\n  }\r\n`;\r\n\r\nexport const QuestionCardBorder = styled.div`\r\n  width: 100%;\r\n\r\n  ${(props) => props.hasAnswer && css`\r\n    margin-bottom: 15px;\r\n  `}\r\n\r\n  @media screen and (max-width: 480px) {\r\n    padding: 0;\r\n  }\r\n`;\r\n\r\nexport const QuestionCardActions = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n\r\n  ${(props) => props.hasDetail && css`\r\n    padding-bottom: 8px;\r\n    background-color: #fff;\r\n  `}\r\n\r\n  @media screen and (max-width: 480px) {\r\n    padding-bottom: 8px;\r\n  }\r\n`;\r\n\r\nexport const CounterButtonsWrapper = styled.div`\r\n  justify-content: space-between;\r\n  width: 100%;\r\n\r\n  ${(props) => props.isAdmin && !props.hasAnswer && css`\r\n    justify-content: flex-start;\r\n  `}\r\n  \r\n`;\r\n", "import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\ndisplay: flex;\r\njustify-content: center;\r\n`;\r\n\r\nexport const QuestionDetail = styled.div`\r\nborder-radius: 15px;\r\nwidth: 100%;\r\nmargin-bottom: 30px\r\n\r\n`;\r\n\r\nexport const CounterButtonsWrapper = styled.div`\r\n    display: inline-flex;\r\n    justify-content: flex-start;\r\n    width: 100%;\r\n\r\n    @media (max-width: 768px) {\r\n        padding-left: 10px;\r\n    }\r\n`;\r\n\r\nexport const NumComments = styled.div`\r\n    color: var(--color-dark-50);\r\n    font-family: 'Nunito', sans-serif;\r\n    font-size: 15px;\r\n    font-weight: 600;\r\n    line-height: normal;\r\n    margin-bottom: 10px;\r\n\r\n    @media (max-width: 768px) {\r\n        padding-left: 20px;\r\n    }\r\n`;\r\n\r\nexport const QuestionDetailHeader = styled.div`\r\n    padding: 24px 20px 0;\r\n\r\n    @media screen and (max-width: 480px) {\r\n        padding: 0;\r\n    }\r\n`;\r\n\r\nexport const QuestionDetailBody = styled.div`\r\n    padding: 24px 20px 0;\r\n\r\n    @media screen and (max-width: 480px) {\r\n        padding: 0;\r\n    }\r\n`;\r\n\r\nexport const QuestionDetailFooter = styled.div`\r\n    padding: 24px 20px 0;\r\n`;\r\n", "import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as Styled from 'app/styles/Loader.Styled';\r\n\r\nfunction Loader({ src, size }) {\r\n  return (\r\n    <Styled.LoaderWrapper>\r\n      <Styled.Spinner src={src} alt=\"Wizeline logo\" size={size} />\r\n      <Styled.LoaderText size={size}>Loading...</Styled.LoaderText>\r\n    </Styled.LoaderWrapper>\r\n  );\r\n}\r\n\r\nLoader.propTypes = {\r\n  src: PropTypes.string.isRequired,\r\n  size: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Loader;\r\n", "import styled, { css, keyframes } from 'styled-components';\r\n\r\nimport { LSPIN_SMALL, LSPIN_LARGE, LSPIN_MEDIUM } from 'app/utils/constants';\r\n\r\nexport const LoaderWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: 40px auto;\r\n`;\r\n\r\nexport const LoaderText = styled.span`\r\n  font-family: \"Nunito\";\r\n  font-size: 18px;\r\n  margin: 15px 0;\r\n  text-align: center;\r\n\r\n  ${(props) => props.size === LSPIN_SMALL\r\n    && css`\r\n      font-size: 14px;\r\n      margin: 10px 0;\r\n    `}\r\n\r\n  ${(props) => props.size === LSPIN_LARGE\r\n    && css`\r\n      font-size: 20px;\r\n      margin: 20px 0;\r\n    `}\r\n`;\r\n\r\nconst rotate = keyframes`\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\n\r\nexport const Spinner = styled.img`\r\n  animation: ${rotate} 0.8s linear infinite;\r\n  display: inline-block;\r\n  margin: 20px 0;\r\n\r\n  ${(props) => props.size === LSPIN_SMALL\r\n    && css`\r\n      width: 43px;\r\n      height: 30px;\r\n      margin: 15px 0;\r\n    `}\r\n\r\n  ${(props) => props.size === LSPIN_MEDIUM\r\n    && css`\r\n      width: 95px;\r\n      height: 60px;\r\n    `}\r\n\r\n  ${(props) => props.size === LSPIN_LARGE\r\n    && css`\r\n      width: 122px;\r\n      height: 82px;\r\n    `}\r\n`;\r\n", "export { default } from './QuestionDetailInfo';\r\n", "import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useLoaderData } from '@remix-run/react';\r\nimport { renderDepartment } from 'app/utils/questionUtils';\r\nimport Label from 'app/components/Atoms/Label';\r\nimport * as Styled from './QuestionDetailInfo.Styled';\r\n\r\nfunction QuestionDetailInfo({ location, department, employeeName }) {\r\n  const { locations } = useLoaderData();\r\n\r\n  const renderLocation = (_location, _locations) => {\r\n    if (_locations.length === 0) {\r\n      return '...';\r\n    }\r\n\r\n    return _locations.find((loc) => loc.code === location).name;\r\n  };\r\n\r\n  return (\r\n    <Styled.QuestionDetailInfoContainer>\r\n      <Styled.QuestionDetailInfoSection>\r\n        <Styled.QuestionDetailInfoTitle>Location</Styled.QuestionDetailInfoTitle>\r\n        <Label text={renderLocation(location, locations)} type=\"Location\" />\r\n      </Styled.QuestionDetailInfoSection>\r\n      <Styled.QuestionDetailInfoSection>\r\n        <Styled.QuestionDetailInfoTitle>Department</Styled.QuestionDetailInfoTitle>\r\n        {\r\n          department\r\n            ? <Label text={renderDepartment(department)} type=\"Department\" />\r\n            : <Styled.NotAssigned>Not Assigned</Styled.NotAssigned>\r\n        }\r\n      </Styled.QuestionDetailInfoSection>\r\n      {employeeName && (\r\n      <Styled.QuestionDetailInfoSection>\r\n        <Styled.QuestionDetailInfoTitle>Assigned to</Styled.QuestionDetailInfoTitle>\r\n        <Label text={employeeName} type=\"Employee\" />\r\n      </Styled.QuestionDetailInfoSection>\r\n      )}\r\n    </Styled.QuestionDetailInfoContainer>\r\n  );\r\n}\r\n\r\nQuestionDetailInfo.propTypes = {\r\n  location: PropTypes.string.isRequired,\r\n  department: PropTypes.string.isRequired,\r\n  employeeName: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default QuestionDetailInfo;\r\n", "/* eslint-disable import/prefer-default-export */\r\nimport styled from 'styled-components';\r\n\r\nexport const QuestionDetailInfoContainer = styled.div`\r\n  padding: 0 50px;\r\n  margin-top: 10px;\r\n  margin-left: 10px;\r\n`;\r\n\r\nexport const QuestionDetailInfoSection = styled.div`\r\n  border-bottom: 1px solid var(--color-dark-25);\r\n  padding: 15px 10px;\r\n`;\r\n\r\nexport const QuestionDetailInfoTitle = styled.span`\r\n  display: flex;\r\n  margin-bottom: 15px;\r\n  color: var(--color-dark-50);\r\n  font-weight: 600;\r\n  font-size: 12px;\r\n`;\r\n\r\nexport const NotAssigned = styled.span`\r\n  font-size: 12px;\r\n  color: var(--color-dark-25);\r\n`;\r\n", "export { default } from './Notifications';\r\n", "import { useActionData } from '@remix-run/react';\r\nimport React, { useEffect } from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport {\r\n  DEFAULT_TOAST_CONFIG,\r\n  CREATED_ANSWEBOT,\r\n  POSITIVE_FEEDBACK_ANSWEBOT,\r\n  NEGATIVE_FEEDBACK_ANSWEBOT,\r\n  POSTED_ANSWEBOT,\r\n} from 'app/utils/constants';\r\nimport {\r\n  DEFAULT_ERROR_MESSAGE_BOT,\r\n  DEFAULT_ERROR_MESSAGE_CREATE_BOT,\r\n  DEFAULT_ERROR_MESSAGE_FEEDBACK_BOT,\r\n  DEFAULT_ERROR_MESSAGE_POST_BOT,\r\n\r\n} from 'app/utils/backend/constants';\r\nimport useGlobalSuccessMessage from 'app/utils/hooks/useGlobalSuccessMessage';\r\n\r\nfunction Notifications() {\r\n  const globalSuccess = useGlobalSuccessMessage();\r\n  const data = useActionData();\r\n\r\n  useEffect(() => {\r\n    if (globalSuccess\r\n      && globalSuccess !== CREATED_ANSWEBOT\r\n      && globalSuccess !== POSITIVE_FEEDBACK_ANSWEBOT\r\n      && globalSuccess !== NEGATIVE_FEEDBACK_ANSWEBOT\r\n      && globalSuccess !== POSTED_ANSWEBOT\r\n    ) {\r\n      toast.success(globalSuccess, DEFAULT_TOAST_CONFIG);\r\n    }\r\n    if (!data) return;\r\n\r\n    const {\r\n      error, errors, successMessage, warnings,\r\n    } = data;\r\n\r\n    if (error\r\n      && error.message !== DEFAULT_ERROR_MESSAGE_CREATE_BOT\r\n      && error.message !== DEFAULT_ERROR_MESSAGE_FEEDBACK_BOT\r\n      && error.message !== DEFAULT_ERROR_MESSAGE_POST_BOT\r\n    ) {\r\n      toast.error(error.message, DEFAULT_TOAST_CONFIG);\r\n    }\r\n\r\n    if (errors && Array.isArray(errors)) {\r\n      errors.forEach((_error) => {\r\n        if (_error.message !== DEFAULT_ERROR_MESSAGE_BOT) {\r\n          // console.error(_error.detail);\r\n          toast.error(_error.message, DEFAULT_TOAST_CONFIG);\r\n        }\r\n      });\r\n    }\r\n\r\n    if (warnings && Array.isArray(warnings)) {\r\n      warnings.forEach((warning) => {\r\n        toast.warning(warning, DEFAULT_TOAST_CONFIG);\r\n      });\r\n    }\r\n\r\n    if (successMessage) {\r\n      toast.success(successMessage, DEFAULT_TOAST_CONFIG);\r\n    }\r\n  }, [data, globalSuccess]);\r\n\r\n  return <ToastContainer />;\r\n}\r\n\r\nexport default Notifications;\r\n", "import useFindLoaderMatch from 'app/utils/hooks/useFindLoaderMatch';\r\n\r\nfunction useGlobalSuccessMessage() {\r\n  const loader = useFindLoaderMatch('root');\r\n  if (!loader || !loader.data) return undefined;\r\n  return loader.data.globalSuccess;\r\n}\r\n\r\nexport default useGlobalSuccessMessage;\r\n", "/* eslint-disable no-underscore-dangle */\r\n/* eslint-disable camelcase */\r\nimport { db } from 'app/utils/db.server';\r\nimport {\r\n  INVALID_PARAMS_FOR_OPERATION_ERROR_MESSAGE,\r\n  QUESTION_NOT_FOUND_ERROR_MESSAGE,\r\n} from 'app/utils/constants';\r\nimport generateSessionIdHash from 'app/utils/backend/crypto';\r\n\r\nconst getQuestionById = async (questionId, user) => {\r\n  if (!questionId || typeof questionId !== 'number' || parseInt(questionId, 10) < 1) {\r\n    return {\r\n      error: {\r\n        message: INVALID_PARAMS_FOR_OPERATION_ERROR_MESSAGE,\r\n        detail: 'The question id must be an integer not minor to 1',\r\n      },\r\n    };\r\n  }\r\n\r\n  if (!user) {\r\n    return {\r\n      error: {\r\n        message: INVALID_PARAMS_FOR_OPERATION_ERROR_MESSAGE,\r\n        detail: 'Please provide the user object',\r\n      },\r\n    };\r\n  }\r\n\r\n  try {\r\n    const unmappedQuestion = await db.Questions.findUnique({\r\n      where: { question_id: questionId },\r\n      include: {\r\n        _count: {\r\n          select: {\r\n            Comments: true,\r\n            Votes: true,\r\n          },\r\n        },\r\n        Votes: true,\r\n        Answers: {\r\n          include: {\r\n            Nps: true,\r\n            AnsweredBy: true,\r\n          },\r\n        },\r\n        created_by: true,\r\n        assigned_to: { select: { full_name: true } },\r\n        Department: true,\r\n      },\r\n    });\r\n    const hasUserData = user && user.id;\r\n    const hasAnswer = unmappedQuestion.Answers.length > 0;\r\n\r\n    let canUndoNps = false;\r\n    if (unmappedQuestion.Answers.length > 0) {\r\n      const npsSessionHash = generateSessionIdHash(\r\n        user.id,\r\n        unmappedQuestion.Answers[0].answer_id,\r\n      );\r\n      canUndoNps = unmappedQuestion.Answers[0].Nps.some(\r\n        (nps) => nps.session_hash === npsSessionHash,\r\n      );\r\n    }\r\n\r\n    const Answer = unmappedQuestion.Answers.length < 1\r\n      ? null\r\n      : {\r\n        ...unmappedQuestion.Answers[0],\r\n        canUndoNps,\r\n        hasScored: (hasUserData\r\n          && hasAnswer\r\n          && unmappedQuestion.Answers[0].Nps.some((nps) => nps.user === user.id)) ?? false,\r\n      };\r\n\r\n    let can_edit;\r\n    // eslint-disable-next-line array-callback-return, consistent-return\r\n    const numLikes = unmappedQuestion.Votes.filter((vote) => {\r\n      if (vote.is_upvote || vote.is_upvote === null) {\r\n        return { ...vote };\r\n      }\r\n    }).length;\r\n\r\n    // eslint-disable-next-line array-callback-return, consistent-return\r\n    const numDisklike = unmappedQuestion.Votes.filter((vote) => {\r\n      if (!vote.is_upvote && vote.is_upvote !== null) {\r\n        return { ...vote };\r\n      }\r\n    }).length;\r\n\r\n    const hasLike = (hasUserData\r\n      && unmappedQuestion.Votes.some(\r\n        (vote) => (vote.is_upvote || vote.is_upvote === null) && vote.user === user.id,\r\n      )\r\n    ) ?? false;\r\n\r\n    const hasDislike = (hasUserData\r\n        && unmappedQuestion.Votes.some(\r\n          (vote) => (!vote.is_upvote && vote.is_upvote !== null) && vote.user === user.id,\r\n        )\r\n    ) ?? false;\r\n    // eslint-disable-next-line max-len\r\n    if (unmappedQuestion.created_by) can_edit = user && user.email && user.email === unmappedQuestion.created_by.email;\r\n\r\n    const mappedQuestion = {\r\n      ...unmappedQuestion,\r\n      hasVoted: unmappedQuestion.Votes.some((vote) => vote.user === user.id) ?? false,\r\n      num_votes: unmappedQuestion._count.Votes,\r\n      numComments: unmappedQuestion._count.Comments,\r\n      Answer,\r\n      can_edit,\r\n      numLikes,\r\n      numDisklike,\r\n      hasLike,\r\n      hasDislike,\r\n    };\r\n\r\n    return {\r\n      question: mappedQuestion,\r\n    };\r\n  } catch (error) {\r\n    return {\r\n      error: {\r\n        message: QUESTION_NOT_FOUND_ERROR_MESSAGE,\r\n        detail: QUESTION_NOT_FOUND_ERROR_MESSAGE,\r\n      },\r\n    };\r\n  }\r\n};\r\n\r\nexport default getQuestionById;\r\n", "import md5 from 'md5';\r\n\r\nconst generateSessionIdHash = (session, id) => md5(`${session}${id}`);\r\n\r\nexport default generateSessionIdHash;\r\n", "import { db } from 'app/utils/db.server';\r\n\r\nconst listLocations = async () => {\r\n  const locations = await db.Locations.findMany({\r\n    orderBy: {\r\n      name: 'asc',\r\n    },\r\n  });\r\n\r\n  return locations;\r\n};\r\n\r\nexport default listLocations;\r\n", "import {\r\n  PIN_QUESTION_ERROR_MESSAGE,\r\n  INVALID_PARAMS_FOR_OPERATION_ERROR_MESSAGE,\r\n  QUESTION_NOT_FOUND_ERROR_MESSAGE,\r\n} from 'app/utils/constants';\r\nimport { modifyQuestionPinStatusParams } from 'app/utils/backend/validators/question';\r\nimport { db } from 'app/utils/db.server';\r\n\r\nconst modifyPinStatus = async (questionId, newPinStatus) => {\r\n  const { error, value } = modifyQuestionPinStatusParams.validate({\r\n    questionId,\r\n    newPinStatus,\r\n  });\r\n\r\n  if (error) {\r\n    return {\r\n      error: {\r\n        message: PIN_QUESTION_ERROR_MESSAGE,\r\n        detail: INVALID_PARAMS_FOR_OPERATION_ERROR_MESSAGE,\r\n      },\r\n    };\r\n  }\r\n\r\n  try {\r\n    const updatedQuestion = await db.Questions.update({\r\n      where: { question_id: value.questionId },\r\n      data: { is_pinned: value.newPinStatus },\r\n    });\r\n    return {\r\n      successMessage: `The question has been ${updatedQuestion.is_pinned ? 'pinned' : 'unpinned'}.`,\r\n      question: updatedQuestion,\r\n    };\r\n  } catch (_error) {\r\n    return {\r\n      error: {\r\n        message: PIN_QUESTION_ERROR_MESSAGE,\r\n        detail: QUESTION_NOT_FOUND_ERROR_MESSAGE,\r\n      },\r\n    };\r\n  }\r\n};\r\n\r\nexport default modifyPinStatus;\r\n", "import Joi from 'joi';\r\nimport {\r\n  MAXIMUM_QUESTION_LENGTH,\r\n  MINIMUM_QUESTION_LENGTH,\r\n} from 'app/utils/backend/constants';\r\nimport { JOI_ID_VALIDATION } from 'app/utils/backend/joiConstants';\r\n\r\nexport const createQuestionSchema = Joi.object().keys({\r\n  username: Joi.string().allow(null),\r\n  accessToken: Joi.string().required(),\r\n  question: Joi.string().min(MINIMUM_QUESTION_LENGTH).max(MAXIMUM_QUESTION_LENGTH).required(),\r\n  is_anonymous: Joi.boolean().required(),\r\n  location: Joi.string().required(),\r\n  created_by_employee_id: Joi.number().integer().min(1).allow(null),\r\n  assigned_department: Joi.number().integer().min(1).allow(null),\r\n  assigned_to_employee_id: Joi.number().integer().min(1).allow(null),\r\n  botEnabled: Joi.boolean(),\r\n});\r\n\r\nexport const modifyQuestionPinStatusParams = Joi.object().keys({\r\n  questionId: Joi.number().integer().required().min(1),\r\n  newPinStatus: Joi.boolean().required(),\r\n});\r\n\r\nexport const assignQuestionSchema = Joi.object().keys({\r\n  question_id: JOI_ID_VALIDATION,\r\n  assigned_department: JOI_ID_VALIDATION,\r\n});\r\n\r\nexport const modifyQuestionEnabledValueParams = Joi.object().keys({\r\n  questionId: Joi.number().integer().required().min(1),\r\n  enabledValue: Joi.boolean().required(),\r\n});\r\n", "/* eslint-disable no-underscore-dangle */\r\nimport { db } from 'app/utils/db.server';\r\nimport {\r\n  INVALID_PARAMS_FOR_OPERATION_ERROR_MESSAGE,\r\n  QUESTION_NOT_FOUND_ERROR_MESSAGE,\r\n  INVALIDATE_VOTE_ERROR_MESSAGE,\r\n} from 'app/utils/constants';\r\n\r\nconst voteQuestion = async (questionId, user, isUpVote) => {\r\n  if (\r\n    !questionId\r\n    || typeof questionId !== 'number'\r\n    || parseInt(questionId, 10) < 1\r\n  ) {\r\n    return {\r\n      error: {\r\n        message: INVALID_PARAMS_FOR_OPERATION_ERROR_MESSAGE,\r\n        detail: 'The question id must be an integer not minor to 1',\r\n      },\r\n    };\r\n  }\r\n\r\n  if (!user) {\r\n    return {\r\n      error: {\r\n        message: INVALID_PARAMS_FOR_OPERATION_ERROR_MESSAGE,\r\n        detail: 'Please provide the user object',\r\n      },\r\n    };\r\n  }\r\n\r\n  try {\r\n    const targetQuestion = await db.Questions.findUniqueOrThrow({\r\n      where: { question_id: questionId },\r\n      include: {\r\n        _count: {\r\n          select: {\r\n            Votes: true,\r\n          },\r\n        },\r\n      },\r\n    });\r\n\r\n    const voteByUser = await db.Votes.findFirst({\r\n      where: {\r\n        question_id: questionId, user: user.id,\r\n      },\r\n    });\r\n    if (voteByUser === null) {\r\n      const newVote = await db.Votes.create({\r\n        data: {\r\n          question_id: targetQuestion.question_id,\r\n          user: user.id,\r\n          is_upvote: isUpVote,\r\n        },\r\n      });\r\n\r\n      return {\r\n        response: {\r\n          vote: newVote,\r\n          upVoteCount: targetQuestion._count.Votes + 1,\r\n        },\r\n      };\r\n    }\r\n\r\n    try {\r\n      const deletedVote = await db.Votes.delete({ where: { id: voteByUser.id } });\r\n      return {\r\n        response: {\r\n          voteSuccessfullyDeleted: true,\r\n          deletedVote,\r\n          upVoteCount: targetQuestion._count.Votes - 1,\r\n        },\r\n      };\r\n    } catch (error) {\r\n      return {\r\n        error: {\r\n          message: INVALIDATE_VOTE_ERROR_MESSAGE,\r\n          detail: INVALIDATE_VOTE_ERROR_MESSAGE,\r\n        },\r\n      };\r\n    }\r\n  } catch (error) {\r\n    return {\r\n      error: {\r\n        message: QUESTION_NOT_FOUND_ERROR_MESSAGE,\r\n        detail: QUESTION_NOT_FOUND_ERROR_MESSAGE,\r\n      },\r\n    };\r\n  }\r\n};\r\n\r\nexport default voteQuestion;\r\n", "/* eslint-disable camelcase */\r\nimport moment from 'moment';\r\nimport {\r\n  DATE_TIME_FORMAT,\r\n  DEFAULT_ERROR_MESSAGE,\r\n} from 'app/utils/backend/constants';\r\nimport { createAnswerSchema } from 'app/utils/backend/validators/answer';\r\nimport sanitizeHTML from 'app/utils/backend/sanitizer';\r\nimport { db } from 'app/utils/db.server';\r\nimport slack from 'app/utils/backend/slackNotifications';\r\nimport { stripNewLines } from 'app/utils/backend/stringUtils';\r\n\r\nconst createAnswer = async (body) => {\r\n  const { error, value } = createAnswerSchema.validate(body);\r\n\r\n  if (error) {\r\n    return {\r\n      error: { message: DEFAULT_ERROR_MESSAGE, detail: error.message },\r\n    };\r\n  }\r\n\r\n  const { answered_by_employee_id, answered_question_id, ...rest } = value;\r\n\r\n  const answer = await db.Answers.create({\r\n    data: {\r\n      ...rest,\r\n      answer_text: sanitizeHTML(value.answer_text),\r\n      answer_date: moment.utc().format(DATE_TIME_FORMAT),\r\n      AnsweredBy: {\r\n        connect: {\r\n          employee_id: answered_by_employee_id,\r\n        },\r\n      },\r\n      Question: {\r\n        connect: {\r\n          question_id: answered_question_id,\r\n        },\r\n      },\r\n    },\r\n  });\r\n\r\n  const relatedQuestion = await db.Questions.findUnique({\r\n    where: {\r\n      question_id: answer.answered_question_id,\r\n    },\r\n  });\r\n\r\n  await slack.createAnswerNotification({\r\n    questionId: relatedQuestion.question_id,\r\n    questionBody: stripNewLines(relatedQuestion.question),\r\n    answerBody: answer.answer_text,\r\n  });\r\n\r\n  return {\r\n    successMessage: 'The answer was submitted successfully.',\r\n    answer,\r\n  };\r\n};\r\n\r\nexport default createAnswer;\r\n", "import Joi from 'joi';\r\nimport { MAXIMUM_ANSWER_LENGTH, MINIMUM_ANSWER_LENGTH } from 'app/utils/backend/constants';\r\nimport { JOI_ID_VALIDATION } from 'app/utils/backend/joiConstants';\r\n\r\nexport const createAnswerSchema = Joi.object().keys({\r\n  answer_text: Joi.string()\r\n    .min(MINIMUM_ANSWER_LENGTH)\r\n    .max(MAXIMUM_ANSWER_LENGTH)\r\n    .required(),\r\n  answered_by_employee_id: JOI_ID_VALIDATION,\r\n  answered_question_id: JOI_ID_VALIDATION,\r\n});\r\n\r\nexport const updateAnswerSchema = Joi.object().keys({\r\n  answer_id: JOI_ID_VALIDATION,\r\n  answer_text: Joi.string()\r\n    .min(MINIMUM_ANSWER_LENGTH)\r\n    .max(MAXIMUM_ANSWER_LENGTH)\r\n    .required(),\r\n});\r\n\r\nexport const deleteAnswerSchema = Joi.object().keys({\r\n  answer_id: JOI_ID_VALIDATION,\r\n});\r\n\r\nexport const npsSchema = Joi.object().keys({\r\n  id: JOI_ID_VALIDATION,\r\n  score: Joi.number().integer().required().min(1)\r\n    .max(5),\r\n});\r\n", "const XSS = require('xss');\r\n\r\nfunction sanitizeHTML(content) {\r\n  const token = '`';\r\n  const options = {\r\n    whiteList: [],\r\n    stripIgnoreTag: true,\r\n    stripIgnoreTagBody: ['script'],\r\n    escapeHtml: (html) => html,\r\n  };\r\n  const splitContent = content.split(token);\r\n  const contentLength = splitContent.length;\r\n  let finalContent = '';\r\n  for (let i = 1; i < contentLength; i += 2) {\r\n    finalContent += XSS(splitContent[i - 1], options);\r\n    finalContent += token + splitContent[i] + token;\r\n  }\r\n  if (contentLength % 2 === 1) {\r\n    finalContent += XSS(splitContent[contentLength - 1], options);\r\n  }\r\n  return finalContent;\r\n}\r\n\r\nexport default sanitizeHTML;\r\n", "/* eslint-disable camelcase */\r\nimport slackNotify from 'slack-notify';\r\nimport {\r\n  DEFAULT_DOMAIN,\r\n  DEFAULT_SLACK_NAME,\r\n  SLACK_ANSWER_COLOR,\r\n  SLACK_ANSWER_EMOJI,\r\n  SLACK_ANSWER_HEADER,\r\n  SLACK_FALLBACK_STRING,\r\n  SLACK_MAX_MESSAGE_SIZE_IN_BYTES,\r\n  SLACK_QUESTION_COLOR,\r\n  SLACK_QUESTION_DETAILS,\r\n  SLACK_QUESTION_EMOJI,\r\n  SLACK_QUESTION_HEADER,\r\n  SLACK_QUESTION_SEE_MORE,\r\n} from './slackConstants';\r\nimport { getStringSizeInBytes, truncateStringByBytes } from './stringUtils';\r\n\r\nconst slack = slackNotify(process.env.SLACK_WEBHOOK_URL);\r\n\r\nasync function send(options) {\r\n  const { icon_emoji, attachments } = options;\r\n\r\n  const defaults = {\r\n    icon_emoji,\r\n    username: DEFAULT_SLACK_NAME,\r\n    attachments: [\r\n      {\r\n        fallback: SLACK_FALLBACK_STRING,\r\n        mrkdwn_in: ['text'],\r\n        text: attachments.text,\r\n        color: attachments.color,\r\n        pretext: attachments.pretext,\r\n        footer: attachments.footer,\r\n      },\r\n    ],\r\n  };\r\n  await slack.send(defaults);\r\n}\r\n\r\nfunction buildUrl(questionId) {\r\n  const domain = process.env.SLACK_WIZEQ_DOMAIN || DEFAULT_DOMAIN;\r\n  return `https://${domain}/questions/${questionId}`;\r\n}\r\n\r\nasync function createAnswerNotification({ questionId, questionBody, answerBody }) {\r\n  if (!process.env.SLACK_WEBHOOK_URL) {\r\n    return;\r\n  }\r\n\r\n  const url = buildUrl(questionId);\r\n  const limit = SLACK_MAX_MESSAGE_SIZE_IN_BYTES;\r\n\r\n  let footerBody = SLACK_QUESTION_DETAILS;\r\n\r\n  const sizeBeforeTruncate = getStringSizeInBytes(questionBody + answerBody) > limit;\r\n\r\n  // if above the size limit, truncate the question\r\n  if (sizeBeforeTruncate) {\r\n    footerBody = SLACK_QUESTION_SEE_MORE;\r\n\r\n    // try to truncate the question as much as we can, but to a minimum of 20% of the size limit.\r\n    const maxQuestionSizeInBytes = Math.max(limit * 0.20, limit - getStringSizeInBytes(answerBody));\r\n\r\n    // eslint-disable-next-line no-param-reassign\r\n    questionBody = truncateStringByBytes(questionBody, maxQuestionSizeInBytes);\r\n\r\n    // if still above size limit, truncate the answer.\r\n    if (getStringSizeInBytes(questionBody + answerBody) > limit) {\r\n      const maxAnswerSizeInBytes = limit - getStringSizeInBytes(questionBody);\r\n\r\n      // eslint-disable-next-line no-param-reassign\r\n      answerBody = truncateStringByBytes(questionBody, maxAnswerSizeInBytes);\r\n    }\r\n  }\r\n\r\n  const text = `*Q*: _<${url}|${questionBody}>_ \\n*A*: ${answerBody}`;\r\n  const footer = `<${url}|${footerBody}>`;\r\n\r\n  const options = {\r\n    icon_emoji: SLACK_ANSWER_EMOJI,\r\n    attachments: {\r\n      text,\r\n      footer,\r\n      color: SLACK_ANSWER_COLOR,\r\n      pretext: SLACK_ANSWER_HEADER,\r\n    },\r\n  };\r\n\r\n  await send(options);\r\n}\r\n\r\nasync function createQuestionNotification({ questionBody, questionId }) {\r\n  if (!process.env.SLACK_WEBHOOK_URL) {\r\n    return;\r\n  }\r\n\r\n  const url = buildUrl(questionId);\r\n\r\n  let footerBody = SLACK_QUESTION_DETAILS;\r\n\r\n  if (getStringSizeInBytes(questionBody) > SLACK_MAX_MESSAGE_SIZE_IN_BYTES) {\r\n    // eslint-disable-next-line no-param-reassign\r\n    questionBody = truncateStringByBytes(\r\n      questionBody,\r\n      SLACK_MAX_MESSAGE_SIZE_IN_BYTES,\r\n    );\r\n\r\n    footerBody = SLACK_QUESTION_SEE_MORE;\r\n  }\r\n\r\n  const text = `*Q*: _<${url}|${questionBody}>_`;\r\n  const footer = `<${url}|${footerBody}>`;\r\n\r\n  const options = {\r\n    icon_emoji: SLACK_QUESTION_EMOJI,\r\n    attachments: {\r\n      text,\r\n      footer,\r\n      color: SLACK_QUESTION_COLOR,\r\n      pretext: SLACK_QUESTION_HEADER,\r\n    },\r\n  };\r\n\r\n  await send(options);\r\n}\r\n\r\nexport default {\r\n  createQuestionNotification,\r\n  createAnswerNotification,\r\n};\r\n", "import { HTTP_PREFIX, TRUNCATE_ENDING } from './utilConstants';\r\n\r\nexport function stripNewLines(str) {\r\n  // Replace series of newline characters for a single space\r\n  return str.replace(/[\\r\\n]+/g, ' ');\r\n}\r\n\r\n/**\r\n * Truncate string to maxLength characters long\r\n * Check if the string begins with a http[s] link longer that maxLength\r\n *\r\n * @param {string} str\r\n * @param {number} maxLength\r\n */\r\nexport function truncate(str, maxLength) {\r\n  if (str.length <= maxLength) {\r\n    return str;\r\n  }\r\n  const indexOfLastSpace = str.lastIndexOf(' ', maxLength);\r\n  if (indexOfLastSpace !== -1) {\r\n    return `${str.substring(0, indexOfLastSpace)} ${TRUNCATE_ENDING}`;\r\n  }\r\n  if (maxLength > HTTP_PREFIX.length\r\n    && str.substring(0, HTTP_PREFIX.length) === HTTP_PREFIX) {\r\n    return TRUNCATE_ENDING;\r\n  }\r\n  return `${str.substring(0, maxLength)} ${TRUNCATE_ENDING}`;\r\n}\r\n\r\n/**\r\n * Return the size on the string in bytes.\r\n *\r\n * @param {string} str String to get the size in bytes from.\r\n *\r\n * @returns {number} The size in bytes.\r\n */\r\nexport function getStringSizeInBytes(str) {\r\n  if (typeof str !== 'string') {\r\n    throw new TypeError(`'str' value of (${str}) must be a string, not ${typeof str}.`);\r\n  }\r\n\r\n  return Buffer.from(str).length;\r\n}\r\n\r\n/**\r\n * If the string is bigger than the maximum size in bytes, it truncates the\r\n * string and add ellipses to the end of the string.\r\n *\r\n * @param {string} str String to be truncated.\r\n * @param {number} maxSizeInBytes Maximum string size in bytes.\r\n * @param {string} suffix Suffix to be added to the string if truncation is needed.\r\n *\r\n * @returns {string} Truncated string.\r\n */\r\nexport function truncateStringByBytes(str, maxSizeInBytes, suffix = '...') {\r\n  const buffer = Buffer.from(str);\r\n\r\n  if (buffer.length <= maxSizeInBytes) {\r\n    return buffer.toString();\r\n  }\r\n\r\n  const truncatedString = buffer.subarray(0, maxSizeInBytes - suffix.length);\r\n\r\n  return `${truncatedString}${suffix}`;\r\n}\r\n", "/* eslint-disable camelcase */\r\nimport moment from 'moment';\r\nimport {\r\n  DATE_TIME_FORMAT,\r\n  DEFAULT_ERROR_MESSAGE,\r\n} from 'app/utils/backend/constants';\r\nimport { updateAnswerSchema } from 'app/utils/backend/validators/answer';\r\nimport { db } from 'app/utils/db.server';\r\n\r\nconst updateAnswer = async (query) => {\r\n  const { error, value } = updateAnswerSchema.validate(query);\r\n  const { answer_id, answer_text } = value;\r\n\r\n  if (error) {\r\n    return {\r\n      error: { message: DEFAULT_ERROR_MESSAGE, detail: error.details },\r\n    };\r\n  }\r\n\r\n  const updatedAnswer = await db.Answers.update({\r\n    where: {\r\n      answer_id,\r\n    },\r\n    data: {\r\n      answer_text,\r\n      answer_date: moment.utc().format(DATE_TIME_FORMAT),\r\n      updatedAt: moment.utc().format(DATE_TIME_FORMAT),\r\n    },\r\n  });\r\n\r\n  return {\r\n    successMessage: 'The answer has been updated succesfully.',\r\n    updatedAnswer,\r\n  };\r\n};\r\n\r\nexport default updateAnswer;\r\n", "/* eslint-disable camelcase */\r\nimport { DEFAULT_ERROR_MESSAGE } from 'app/utils/backend/constants';\r\nimport { deleteAnswerSchema } from 'app/utils/backend/validators/answer';\r\nimport { db } from 'app/utils/db.server';\r\n\r\nconst deleteAnswer = async (query) => {\r\n  const { error, value } = deleteAnswerSchema.validate(query);\r\n  const { answer_id } = value;\r\n\r\n  if (error) {\r\n    return {\r\n      error: { message: DEFAULT_ERROR_MESSAGE, detail: error.details },\r\n    };\r\n  }\r\n\r\n  // Delete all Nps that have respective answer_id (FK)\r\n  await db.Nps.deleteMany({\r\n    where: {\r\n      answer_id,\r\n    },\r\n  });\r\n\r\n  await db.Answers.delete({\r\n    where: {\r\n      answer_id,\r\n    },\r\n  });\r\n\r\n  return {\r\n    successMessage: 'The answer was deleted succesfully.',\r\n  };\r\n};\r\n\r\nexport default deleteAnswer;\r\n", "/* eslint-disable no-param-reassign */\r\nimport { Prisma } from '@prisma/client';\r\nimport { db } from 'app/utils/db.server';\r\nimport {\r\n  INVALID_PARAMS_FOR_OPERATION_ERROR_MESSAGE,\r\n} from 'app/utils/constants';\r\nimport { canEditComment } from 'app/utils/backend/comments';\r\n\r\nconst listComments = async (params) => {\r\n  const {\r\n    questionId, userEmail, userId, sortBy, sessionToken,\r\n  } = params;\r\n\r\n  if (!questionId || questionId < 1 || typeof questionId !== 'number') {\r\n    return {\r\n      error: {\r\n        message: INVALID_PARAMS_FOR_OPERATION_ERROR_MESSAGE,\r\n        details: 'The question id must be an integer not minor to 1',\r\n      },\r\n    };\r\n  }\r\n\r\n  const fetchComments = await db.$queryRaw`\r\nSELECT c.id,\r\nc.comment,\r\nc.createdAt,\r\n(SELECT CASE WHEN ISNULL(updatedAt) THEN createdAt WHEN updatedAt > createdAt THEN updatedAt ELSE createdAt END) as recent_activity,\r\nc.questionId, \r\nc.sessionHash,\r\nc.userName,\r\nc.userEmail,\r\nc.approvedBy,\r\n(SELECT IFNULL(SUM(CommentVote.value), 0) FROM CommentVote WHERE CommentVote.comment_id = c.id) as votes,\r\n(SELECT IF (EXISTS(SELECT * FROM CommentVote WHERE CommentVote.comment_id = c.id AND CommentVote.user = ${userId} AND CommentVote.value = 1), true, false)) as has_upvoted, \r\n(SELECT IF (EXISTS(SELECT * FROM CommentVote WHERE CommentVote.comment_id = c.id AND CommentVote.user = ${userId} AND CommentVote.value = -1), true, false)) as has_downvoted, \r\nUser.employee_id as 'UserEmployee_id',\r\nUser.full_name as 'UserFull_name',\r\nUser.is_admin as 'UserIs_admin',\r\nUser.profile_picture as 'UserProfile_picture',\r\nUser.job_title as 'UserJob_title',\r\nApprover.employee_id as 'ApproverEmployee_id',\r\nApprover.full_name as 'ApproverFull_name',\r\nApprover.is_admin as 'ApproverIs_admin',\r\nApprover.profile_picture as 'ApproverProfile_picture',\r\nApprover.job_title as 'ApproverJob_title'\r\nFROM Comments  as c \r\nLEFT JOIN users as User\r\nON c.userEmail = User.email\r\nLEFT JOIN users as Approver\r\nON c.approvedBy = Approver.employee_id\r\nWHERE c.questionId = ${questionId}\r\n${sortBy === 'votes' ? Prisma.sql`ORDER BY approvedBy DESC, votes DESC, recent_activity DESC` : Prisma.sql`ORDER BY approvedBy DESC, recent_activity DESC`}`;\r\n\r\n  const comments = fetchComments.map((comment) => {\r\n    comment.canEdit = canEditComment(comment, userEmail, sessionToken);\r\n    delete comment.sessionHash;\r\n\r\n    const User = {\r\n      employee_id: comment.UserEmployee_id,\r\n      full_name: comment.UserFull_name,\r\n      is_admin: comment.UserIs_admin,\r\n      profile_picture: comment.UserProfile_picture,\r\n      job_title: comment.UserJob_title,\r\n    };\r\n    comment.User = User;\r\n    const Approver = {\r\n      employee_id: comment.ApproverEmployee_id,\r\n      full_name: comment.ApproverFull_name,\r\n      is_admin: comment.ApproverIs_admin,\r\n      profile_picture: comment.ApproverProfile_picture,\r\n      job_title: comment.ApproverJob_title,\r\n    };\r\n    comment.Approver = Approver;\r\n    comment.has_downvoted = comment.has_downvoted === 1;\r\n    comment.has_upvoted = comment.has_upvoted === 1;\r\n\r\n    delete comment.UserEmployee_id;\r\n    delete comment.UserFull_name;\r\n    delete comment.UserIs_admin;\r\n    delete comment.UserProfile_picture;\r\n    delete comment.UserJob_title;\r\n    delete comment.ApproverEmployee_id;\r\n    delete comment.ApproverFull_name;\r\n    delete comment.ApproverIs_admin;\r\n    delete comment.ApproverProfile_picture;\r\n    delete comment.ApproverJob_title;\r\n\r\n    return comment;\r\n  });\r\n  return { comments };\r\n};\r\n\r\nexport default listComments;\r\n", "import moment from 'moment';\r\nimport generateSessionIdHash from './crypto';\r\n\r\nexport function generateMinMaxDates() {\r\n  const DATE_FORMAT = 'YYYY-MM-DD HH:mm:ss';\r\n\r\n  return {\r\n    minDate: moment.utc().subtract(24, 'hours').format(DATE_FORMAT),\r\n    maxDate: moment.utc().format(DATE_FORMAT),\r\n  };\r\n}\r\n\r\nexport function canEditComment(comment, userEmail, sessionToken) {\r\n  const commentNotAnoymous = comment.userEmail;\r\n  if (commentNotAnoymous) {\r\n    const isCommentFromUser = userEmail === comment.userEmail;\r\n    return isCommentFromUser;\r\n  }\r\n\r\n  const { minDate, maxDate } = generateMinMaxDates();\r\n  const sessionHash = generateSessionIdHash(sessionToken, comment.id);\r\n  const isValidDateRangeForEdit = moment(comment.createdAt).isBetween(minDate, maxDate);\r\n  const isValidSessionHash = comment.sessionHash === sessionHash;\r\n  return isValidSessionHash && isValidDateRangeForEdit;\r\n}\r\n", "import { DEFAULT_ERROR_MESSAGE } from 'app/utils/backend/constants';\r\nimport {\r\n  INVALID_PARAMS_FOR_OPERATION_ERROR_MESSAGE,\r\n} from 'app/utils/constants';\r\nimport generateSessionIdHash from 'app/utils/backend/crypto';\r\nimport createCommentSchema from 'app/utils/backend/validators/comment';\r\nimport { db } from 'app/utils/db.server';\r\n\r\nconst createComment = async (data) => {\r\n  const { error, value } = createCommentSchema.validate(data);\r\n\r\n  if (error) {\r\n    return {\r\n      error: {\r\n        message: DEFAULT_ERROR_MESSAGE,\r\n        detail: error,\r\n      },\r\n    };\r\n  }\r\n\r\n  if (!value.isAnonymous && !value.user.userEmail) {\r\n    return {\r\n      error: {\r\n        message: INVALID_PARAMS_FOR_OPERATION_ERROR_MESSAGE,\r\n        detail: 'The comment is not anonymous but no user email was provided in the user object',\r\n      },\r\n    };\r\n  }\r\n\r\n  const commentData = {\r\n    Questions: {\r\n      connect: {\r\n        question_id: value.questionId,\r\n      },\r\n    },\r\n    comment: value.comment,\r\n  };\r\n\r\n  if (!value.isAnonymous) {\r\n    commentData.User = {\r\n      connect: {\r\n        email: value.user.userEmail,\r\n      },\r\n    };\r\n    commentData.userName = value.user.userName;\r\n  }\r\n\r\n  const created = await db.Comments.create({\r\n    data: commentData,\r\n  });\r\n\r\n  let commentResponse = created;\r\n\r\n  if (value.isAnonymous) {\r\n    const sessionHash = generateSessionIdHash(value.user.accessToken, created.id);\r\n    const updated = await db.Comments.update({\r\n      where: {\r\n        id: created.id,\r\n      },\r\n      data: {\r\n        sessionHash,\r\n      },\r\n    });\r\n    commentResponse = updated;\r\n  }\r\n\r\n  return {\r\n    successMessage: 'The comment was created succesfully.',\r\n    comment: commentResponse,\r\n  };\r\n};\r\n\r\nexport default createComment;\r\n", "import Joi from 'joi';\r\nimport { MINIMUM_COMMENT_LENGTH } from 'app/utils/backend/constants';\r\nimport { JOI_EMAIL_VALIDATION, JOI_ID_VALIDATION } from 'app/utils/backend/joiConstants';\r\nimport { MAXIMUM_COMMENT_LENGTH } from 'app/utils/constants';\r\n\r\nconst COMMENT_VALIDATION = Joi.string()\r\n  .min(MINIMUM_COMMENT_LENGTH)\r\n  .max(MAXIMUM_COMMENT_LENGTH)\r\n  .required();\r\n\r\nconst createCommentSchema = Joi.object().keys({\r\n  questionId: JOI_ID_VALIDATION,\r\n  comment: COMMENT_VALIDATION,\r\n  isAnonymous: Joi.boolean(),\r\n  user: Joi.object({\r\n    accessToken: Joi.string().required(),\r\n    userEmail: JOI_EMAIL_VALIDATION,\r\n    userName: Joi.string(),\r\n  }),\r\n});\r\n\r\nexport default createCommentSchema;\r\n", "import { db } from 'app/utils/db.server';\r\nimport generateSessionIdHash from 'app/utils/backend/crypto';\r\nimport { generateMinMaxDates } from 'app/utils/backend/comments';\r\nimport { DEFAULT_ERROR_MESSAGE } from 'app/utils/backend/constants';\r\nimport {\r\n  INVALID_PARAMS_FOR_OPERATION_ERROR_MESSAGE,\r\n  UPDATE_COMMENT_ERROR_MESSAGE,\r\n} from 'app/utils/constants';\r\nimport { updateCommentSchema } from 'app/utils/backend/validators/comments';\r\n\r\nconst updateComment = async (body) => {\r\n  const { error, value } = updateCommentSchema.validate(body);\r\n\r\n  if (error) {\r\n    return {\r\n      errors: [\r\n        {\r\n          message: INVALID_PARAMS_FOR_OPERATION_ERROR_MESSAGE,\r\n          detail: error,\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  const {\r\n    commentId: id, comment, accessToken, userEmail,\r\n  } = value;\r\n\r\n  const sessionHash = generateSessionIdHash(accessToken, id);\r\n  const { minDate, maxDate } = generateMinMaxDates();\r\n\r\n  const updateCommentResponse = await db.Comments.updateMany({\r\n    data: { comment },\r\n    where: {\r\n      id,\r\n      OR: [\r\n        {\r\n          userEmail,\r\n        },\r\n        {\r\n          AND: [\r\n            {\r\n              sessionHash,\r\n            },\r\n            {\r\n              createdAt: { lte: new Date(maxDate) },\r\n            },\r\n            {\r\n              createdAt: { gte: new Date(minDate) },\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n  });\r\n\r\n  if (updateCommentResponse.count === undefined || typeof updateCommentResponse.count !== 'number') {\r\n    return {\r\n      error: {\r\n        message: DEFAULT_ERROR_MESSAGE,\r\n        detail: 'Something went wrong trying to update the comment',\r\n      },\r\n    };\r\n  }\r\n\r\n  if (updateCommentResponse.count === 0) {\r\n    return {\r\n      error: {\r\n        message: UPDATE_COMMENT_ERROR_MESSAGE,\r\n        detail:\r\n          'Comment not found or user does not have edit rights over the comment',\r\n      },\r\n    };\r\n  }\r\n  if (updateCommentResponse.count === 1) {\r\n    return {\r\n      successMessage: 'The comment was updated successfully!',\r\n    };\r\n  }\r\n\r\n  return {\r\n    error: {\r\n      message: UPDATE_COMMENT_ERROR_MESSAGE,\r\n      detail: `More than one comment was updated, which should not have happened, number of affected comments: ${updateCommentResponse.count}`,\r\n    },\r\n  };\r\n};\r\n\r\nexport default updateComment;\r\n", "import Joi from 'joi';\r\nimport { JOI_ID_VALIDATION, JOI_SIMPLE_STRING_VALIDATION } from 'app/utils/backend/joiConstants';\r\nimport { MINIMUM_COMMENT_LENGTH, MAXIMUM_COMMENT_LENGTH } from 'app/utils/backend/constants';\r\n\r\nconst EMAIL_VALIDATION = Joi.string().email().allow(null);\r\nconst SIMPLE_INTEGER_VALIDATION = Joi.number().integer();\r\n\r\nexport const getCommentsSchema = Joi.object().keys({\r\n  questionId: JOI_ID_VALIDATION,\r\n  limit: SIMPLE_INTEGER_VALIDATION,\r\n  offset: SIMPLE_INTEGER_VALIDATION,\r\n  userEmail: EMAIL_VALIDATION,\r\n  sessionToken: JOI_SIMPLE_STRING_VALIDATION,\r\n  userId: JOI_SIMPLE_STRING_VALIDATION,\r\n  sortBy: JOI_SIMPLE_STRING_VALIDATION,\r\n});\r\n\r\nexport const updateCommentSchema = Joi.object().keys({\r\n  commentId: JOI_ID_VALIDATION,\r\n  comment: Joi.string().min(MINIMUM_COMMENT_LENGTH).max(MAXIMUM_COMMENT_LENGTH).required(),\r\n  accessToken: Joi.string().required(),\r\n  userEmail: EMAIL_VALIDATION,\r\n});\r\n\r\nexport const deleteCommentSchema = Joi.object().keys({\r\n  commentId: JOI_ID_VALIDATION,\r\n  accessToken: Joi.string().required(),\r\n  userEmail: EMAIL_VALIDATION,\r\n});\r\n\r\nexport const approvedByCommentSchema = Joi.object().keys({\r\n  commentId: JOI_ID_VALIDATION.required(),\r\n  questionId: SIMPLE_INTEGER_VALIDATION.required(),\r\n  employeeId: SIMPLE_INTEGER_VALIDATION.required(),\r\n  checked: Joi.boolean().required(),\r\n});\r\n\r\nexport const questionCommentedSchema = Joi.object().keys({\r\n  userEmail: EMAIL_VALIDATION,\r\n});\r\n", "/* eslint-disable camelcase */\r\nimport { DEFAULT_ERROR_MESSAGE } from 'app/utils/backend/constants';\r\nimport {\r\n  commentVoteExistsSchema,\r\n  commentVoteSchema,\r\n} from 'app/utils/backend/validators/commentVote';\r\nimport { db } from 'app/utils/db.server';\r\n\r\nconst transformValue = (value) => {\r\n  let transformedValue = 0;\r\n\r\n  if (value >= 1) {\r\n    transformedValue = 1;\r\n  } else if (value <= -1) {\r\n    transformedValue = -1;\r\n  }\r\n\r\n  return transformedValue;\r\n};\r\n\r\nconst findCommentVote = async (query) => {\r\n  const { error, value } = commentVoteExistsSchema.validate(query);\r\n  const { comment_id, user } = value;\r\n\r\n  if (error) {\r\n    return {\r\n      error: { message: DEFAULT_ERROR_MESSAGE, detail: error.details },\r\n    };\r\n  }\r\n\r\n  const commentVote = await db.CommentVote.findFirst({\r\n    where: {\r\n      comment_id,\r\n      user,\r\n    },\r\n  });\r\n\r\n  return commentVote;\r\n};\r\n\r\nconst upsertCommentVote = async (query) => {\r\n  const { error, value } = commentVoteSchema.validate(query);\r\n  const { comment_id, user, value: newValue } = value;\r\n\r\n  if (error) {\r\n    return {\r\n      error: { message: DEFAULT_ERROR_MESSAGE, detail: error.details },\r\n    };\r\n  }\r\n\r\n  const foundCommentVote = await findCommentVote({ comment_id, user });\r\n\r\n  if (foundCommentVote) {\r\n    const alreadyUpvoted = foundCommentVote.value >= 1 && newValue >= 1;\r\n    const alreadyDownvoted = foundCommentVote.value <= -1 && newValue <= -1;\r\n\r\n    let temp;\r\n\r\n    if (alreadyUpvoted || alreadyDownvoted) {\r\n      temp = 0;\r\n    } else {\r\n      temp = newValue;\r\n    }\r\n\r\n    const commentVote = await db.CommentVote.update({\r\n      where: {\r\n        id: foundCommentVote.id,\r\n      },\r\n      data: {\r\n        value: transformValue(temp),\r\n      },\r\n    });\r\n\r\n    return {\r\n      commentVote,\r\n    };\r\n  }\r\n\r\n  const commentVote = await db.CommentVote.create({\r\n    data: {\r\n      user,\r\n      comment_id,\r\n      value: transformValue(newValue),\r\n    },\r\n  });\r\n\r\n  return { commentVote };\r\n};\r\n\r\nexport default upsertCommentVote;\r\n", "import Joi from 'joi';\r\nimport { JOI_ID_VALIDATION } from 'app/utils/backend/joiConstants';\r\n\r\nexport const commentVoteExistsSchema = Joi.object().keys({\r\n  comment_id: JOI_ID_VALIDATION,\r\n  user: Joi.string().required(),\r\n});\r\n\r\nexport const commentVoteSchema = Joi.object().keys({\r\n  comment_id: JOI_ID_VALIDATION,\r\n  user: Joi.string().required(),\r\n  value: Joi.number().integer().required().min(-1)\r\n    .max(1),\r\n});\r\n", "import { db } from 'app/utils/db.server';\r\nimport generateSessionIdHash from 'app/utils/backend/crypto';\r\nimport { generateMinMaxDates } from 'app/utils/backend/comments';\r\nimport { deleteCommentSchema } from 'app/utils/backend/validators/comments';\r\nimport { DEFAULT_ERROR_MESSAGE } from 'app/utils/backend/constants';\r\nimport {\r\n  INVALID_PARAMS_FOR_OPERATION_ERROR_MESSAGE,\r\n  DELETE_COMMENT_ERROR_MESSAGE,\r\n} from 'app/utils/constants';\r\n\r\nconst deleteComment = async (body) => {\r\n  const { error, value } = deleteCommentSchema.validate(body);\r\n\r\n  if (error) {\r\n    return {\r\n      errors: [\r\n        {\r\n          message: INVALID_PARAMS_FOR_OPERATION_ERROR_MESSAGE,\r\n          detail: error,\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  const { commentId: id, accessToken, userEmail } = value;\r\n\r\n  const sessionHash = generateSessionIdHash(accessToken, id);\r\n  const { minDate, maxDate } = generateMinMaxDates();\r\n\r\n  const deleteCommentResponse = await db.Comments.deleteMany({\r\n    where: {\r\n      id,\r\n      OR: [\r\n        {\r\n          userEmail,\r\n        },\r\n        {\r\n          AND: [\r\n            {\r\n              sessionHash,\r\n            },\r\n            {\r\n              createdAt: { lte: new Date(maxDate) },\r\n            },\r\n            {\r\n              createdAt: { gte: new Date(minDate) },\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    },\r\n  });\r\n\r\n  if (\r\n    deleteCommentResponse.count === undefined\r\n    || typeof deleteCommentResponse.count !== 'number'\r\n  ) {\r\n    return {\r\n      error: {\r\n        message: DEFAULT_ERROR_MESSAGE,\r\n        detail: 'Something went wrong trying to delete the comment',\r\n      },\r\n    };\r\n  }\r\n\r\n  if (deleteCommentResponse.count === 0) {\r\n    return {\r\n      error: {\r\n        message: DELETE_COMMENT_ERROR_MESSAGE,\r\n        detail:\r\n          `Comment not found or user does not have deletion rights over the comment. Comment id: ${id}`,\r\n      },\r\n    };\r\n  }\r\n  if (deleteCommentResponse.count === 1) {\r\n    return {\r\n      successMessage: 'The comment was deleted successfully',\r\n    };\r\n  }\r\n\r\n  return {\r\n    error: {\r\n      message: DELETE_COMMENT_ERROR_MESSAGE,\r\n      detail: `Multiple comments were deleted, which should not have happened, number of affected comments: ${deleteCommentResponse.count}`,\r\n    },\r\n  };\r\n};\r\n\r\nexport default deleteComment;\r\n", "/* eslint-disable camelcase */\r\nimport generateSessionIdHash from 'app/utils/backend/crypto';\r\nimport isEmptyObject from 'app/utils/backend/objectUtils';\r\nimport { createNPSSchema } from 'app/utils/backend/validators/nps';\r\nimport { DEFAULT_ERROR_MESSAGE } from 'app/utils/backend/constants';\r\nimport { db } from 'app/utils/db.server';\r\n\r\nconst createNPS = async (params) => {\r\n  const { error, value } = createNPSSchema.validate(params);\r\n\r\n  if (error) {\r\n    return {\r\n      errors: [{ message: DEFAULT_ERROR_MESSAGE, detail: error.details }],\r\n    };\r\n  }\r\n\r\n  try {\r\n    const { score, answer_id, user } = value;\r\n\r\n    const npmCreated = await db.Nps.create({\r\n      data: {\r\n        answer_id,\r\n        user: user.id,\r\n        score,\r\n        session_hash: generateSessionIdHash(user.id, answer_id),\r\n      },\r\n    });\r\n\r\n    if (isEmptyObject(npmCreated)) {\r\n      return {\r\n        errors: [\r\n          {\r\n            message: 'something went wrong at created the netscore',\r\n            detail: 'something went wrong at created the netscore',\r\n          },\r\n        ],\r\n      };\r\n    }\r\n\r\n    return {\r\n      npmCreated,\r\n    };\r\n  } catch (errorCatch) {\r\n    return {\r\n      errors: [\r\n        {\r\n          message: 'Something went wrong at created the netscore',\r\n          detail: errorCatch,\r\n        },\r\n      ],\r\n    };\r\n  }\r\n};\r\n\r\nexport default createNPS;\r\n", "export default function isEmptyObject(object) {\r\n  return Object.keys(object).length === 0;\r\n}\r\n", "import Joi from 'joi';\r\nimport { JOI_ID_VALIDATION } from 'app/utils/backend/joiConstants';\r\n\r\nexport const createNPSSchema = Joi.object({\r\n  answer_id: JOI_ID_VALIDATION,\r\n  score: Joi.number().integer(),\r\n  user: Joi.object(),\r\n  accessToken: Joi.string(),\r\n});\r\n\r\nexport const deleteNPSSchema = Joi.object({\r\n  id: Joi.number().integer(),\r\n  user: Joi.object(),\r\n});\r\n", "import { db } from 'app/utils/db.server';\r\nimport { approvedByCommentSchema } from 'app/utils/backend/validators/comments';\r\nimport { INVALID_PARAMS_FOR_OPERATION_ERROR_MESSAGE } from 'app/utils/constants';\r\nimport { COMMENT_AS_AN_ANSWER, DEFAULT_ERROR_MESSAGE } from 'app/utils/backend/constants';\r\nimport isEmptyObject from 'app/utils/backend/objectUtils';\r\n\r\nconst approvedByComment = async (params) => {\r\n  const { error, value } = approvedByCommentSchema.validate(params);\r\n\r\n  if (error) {\r\n    return {\r\n      errors: [\r\n        {\r\n          message: INVALID_PARAMS_FOR_OPERATION_ERROR_MESSAGE,\r\n          detail: error,\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  const {\r\n    questionId, commentId, employeeId, checked,\r\n  } = value;\r\n  const fetchComments = await db.Comments.findMany({\r\n    where: {\r\n      AND: [{\r\n        questionId,\r\n      }, {\r\n        id: {\r\n          not: commentId,\r\n        },\r\n      }, {\r\n        approvedBy: {\r\n          not: null,\r\n        },\r\n      }],\r\n    },\r\n  });\r\n\r\n  const hasAnswer = fetchComments.length > 0;\r\n  if (hasAnswer) {\r\n    return {\r\n      errors: [\r\n        {\r\n          message: COMMENT_AS_AN_ANSWER,\r\n          detail: COMMENT_AS_AN_ANSWER,\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  const commentUpdated = await db.Comments.update({\r\n    where: { id: commentId },\r\n    data: { approvedBy: checked ? employeeId : null },\r\n  });\r\n\r\n  if (isEmptyObject(commentUpdated)) {\r\n    return {\r\n      error: {\r\n        message: DEFAULT_ERROR_MESSAGE,\r\n        detail: 'Something went wrong trying to update the comment',\r\n      },\r\n    };\r\n  }\r\n\r\n  return {\r\n    successMessage: `Comment ${checked ? 'marked' : 'unmarked'} as an approved answer successfully`,\r\n    response: `Comment ${checked ? 'marked' : 'unmarked'} as an approved answer successfully`,\r\n  };\r\n};\r\n\r\nexport default approvedByComment;\r\n", "/* eslint-disable camelcase */\r\nimport { DEFAULT_ERROR_MESSAGE } from 'app/utils/backend/constants';\r\nimport { assignQuestionSchema } from 'app/utils/backend/validators/question';\r\nimport { QUESTION_NOT_FOUND_ERROR_MESSAGE } from 'app/utils/constants';\r\nimport { db } from 'app/utils/db.server';\r\n\r\nconst assignQuestion = async (query) => {\r\n  const { error, value } = assignQuestionSchema.validate(query);\r\n  const { question_id, assigned_department } = value;\r\n\r\n  if (error) {\r\n    return { errors: [{ message: DEFAULT_ERROR_MESSAGE, detail: error.details }] };\r\n  }\r\n\r\n  try {\r\n    const assignedQuestion = await db.Questions.update({\r\n      where: { question_id },\r\n      data: {\r\n        assigned_department,\r\n      },\r\n    });\r\n\r\n    return {\r\n      successMessage: 'The question department has been reassigned successfully',\r\n      assignedQuestion,\r\n    };\r\n  } catch (_error) {\r\n    return {\r\n      error: {\r\n        message: QUESTION_NOT_FOUND_ERROR_MESSAGE,\r\n        detail: QUESTION_NOT_FOUND_ERROR_MESSAGE,\r\n      },\r\n    };\r\n  }\r\n};\r\n\r\nexport default assignQuestion;\r\n", "import { db } from 'app/utils/db.server';\r\n\r\nconst listDepartments = async () => {\r\n  const departments = await db.Departments.findMany({});\r\n  return departments;\r\n};\r\n\r\nexport default listDepartments;\r\n", "import { deleteNPSSchema } from 'app/utils/backend/validators/nps';\r\nimport { DEFAULT_ERROR_MESSAGE } from 'app/utils/backend/constants';\r\nimport { db } from 'app/utils/db.server';\r\n\r\nconst deleteNPS = async (params) => {\r\n  const { error, value } = deleteNPSSchema.validate(params);\r\n\r\n  if (error) {\r\n    return {\r\n      errors: [{ message: DEFAULT_ERROR_MESSAGE, detail: error.details }],\r\n    };\r\n  }\r\n  const { id, user } = value;\r\n  try {\r\n    await db.Nps.delete({\r\n      where: {\r\n        answer_id_user: {\r\n          answer_id: id,\r\n          user: user.id,\r\n        },\r\n      },\r\n    });\r\n\r\n    return {\r\n      successMessage: 'Your answer score was cleared.',\r\n    };\r\n  } catch (errorCatch) {\r\n    return {\r\n      errors: [\r\n        {\r\n          message: 'Something went wrong when resetting the answer score',\r\n          detail: errorCatch,\r\n        },\r\n      ],\r\n    };\r\n  }\r\n};\r\n\r\nexport default deleteNPS;\r\n", "import {\r\n  ENABLE_DISABLE_ERROR_MESSAGE,\r\n  INVALID_PARAMS_FOR_OPERATION_ERROR_MESSAGE,\r\n  QUESTION_NOT_FOUND_ERROR_MESSAGE,\r\n} from 'app/utils/constants';\r\nimport { modifyQuestionEnabledValueParams } from 'app/utils/backend/validators/question';\r\nimport { db } from 'app/utils/db.server';\r\n\r\nconst modifyEnabledValue = async (questionId, enabledValue) => {\r\n  const { error, value } = modifyQuestionEnabledValueParams.validate({\r\n    questionId,\r\n    enabledValue,\r\n  });\r\n\r\n  if (error) {\r\n    return {\r\n      error: {\r\n        message: ENABLE_DISABLE_ERROR_MESSAGE,\r\n        detail: INVALID_PARAMS_FOR_OPERATION_ERROR_MESSAGE,\r\n      },\r\n    };\r\n  }\r\n\r\n  try {\r\n    const updatedQuestion = await db.Questions.update({\r\n      where: { question_id: value.questionId },\r\n      data: { is_enabled: value.enabledValue },\r\n    });\r\n    return {\r\n      successMessage: `The question has been ${\r\n        enabledValue ? 'enabled' : 'disabled'\r\n      }.`,\r\n      question: updatedQuestion,\r\n    };\r\n  } catch (errorCatch) {\r\n    return {\r\n      error: {\r\n        message: ENABLE_DISABLE_ERROR_MESSAGE,\r\n        detail: QUESTION_NOT_FOUND_ERROR_MESSAGE,\r\n      },\r\n    };\r\n  }\r\n};\r\n\r\nexport default modifyEnabledValue;\r\n", "import { FLASK_ENDPOINT } from './pythonUrl';\r\n\r\nconst endpoint = `http://${FLASK_ENDPOINT}:4000/api/pdf_conversation_gpt`;\r\n\r\nexport const pdfConv = async (conversation) => fetch(`http://${FLASK_ENDPOINT}:4000/api/pdf_conversation_gpt`, {\r\n  method: 'POST',\r\n  body: JSON.stringify(conversation),\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n})\r\n  .then((response) => response.json())\r\n  .then((data) => ({\r\n    text: data.conversation[data.conversation.length - 1].content,\r\n    department: data.department,\r\n  }))\r\n  .catch((error) => {\r\n    // eslint-disable-next-line no-console\r\n    console.log(endpoint);\r\n    throw new Error(`There was an error making the API call: ${error.message}`);\r\n  });\r\n\r\nexport const updateAnswers = async () => fetch(`http://${FLASK_ENDPOINT}:4000/api/updateAnswers`)\r\n  .catch((error) => {\r\n    throw new Error(`There was an error making the API call: ${error.message}`);\r\n  });\r\n\r\nexport const uploadFiles = async (formData) => fetch(`http://${FLASK_ENDPOINT}:4000/api/uploadFile`, {\r\n  method: 'POST',\r\n  body: formData,\r\n})\r\n  .catch((error) => {\r\n    throw new Error(`There was an error making the API call: ${error.message}`);\r\n  });\r\n", "/* eslint-disable import/prefer-default-export */\r\nexport const FLASK_ENDPOINT = '3.213.188.151';\r\n", "import React, { useEffect, useRef } from 'react';\r\nimport { BsCircleFill } from 'react-icons/bs';\r\nimport { json, redirect } from '@remix-run/node';\r\nimport { useLoaderData, useSubmit } from '@remix-run/react';\r\nimport * as Styled from 'app/styles/CreateQuestion.Styled';\r\nimport Slogan from 'app/components/Slogan';\r\nimport { MAXIMUM_QUESTION_LENGTH, MINIMUM_ANSWER_LENGTH, NOT_ASSIGNED_DEPARTMENT_ID } from 'app/utils/backend/constants';\r\nimport { RECOMMENDATIONS_QUESTION, DEFAULT_LOCATION } from 'app/utils/constants';\r\nimport QuestionForm from 'app/components/QuestionForm';\r\nimport listLocations from 'app/controllers/locations/list';\r\nimport {\r\n  commitSession, getAuthenticatedUser, getSession, requireAuth,\r\n} from 'app/session.server';\r\nimport listDepartments from 'app/controllers/departments/list';\r\nimport listQuestions from 'app/controllers/questions/list';\r\nimport createQuestion from 'app/controllers/questions/create';\r\nimport createAnswerByBot from 'app/controllers/answerBot/create';\r\nimport updateFeedback from 'app/controllers/answerBot/modifyFeedback';\r\nimport updatePostID from 'app/controllers/answerBot/modifyIDQuestion';\r\nimport Notifications from 'app/components/Notifications';\r\nimport AnswerBot from 'app/components/AnswerBot';\r\nimport FAQs from 'app/components/FAQs/FAQs';\r\nimport ACTIONS from 'app/utils/actions';\r\n\r\nexport const loader = async ({ request }) => {\r\n  await requireAuth(request);\r\n\r\n  const locations = await listLocations();\r\n  const departments = await listDepartments();\r\n  const questionsFAQ = await listQuestions({\r\n    orderBy: 'popular',\r\n    dateRange: 'this_week',\r\n    limit: 10,\r\n  });\r\n  return json({\r\n    locations,\r\n    departments,\r\n    questionsFAQ,\r\n  });\r\n};\r\n\r\nexport const action = async ({ request }) => {\r\n  const formData = await request.formData();\r\n  const formAction = formData.get('action');\r\n\r\n  const user = await getAuthenticatedUser(request);\r\n  const form = Object.fromEntries(formData.entries());\r\n\r\n  // Extract and format department.\r\n  const { assignedDepartment } = form;\r\n  const parsedDepartment = parseInt(assignedDepartment, 10);\r\n\r\n  let response;\r\n  let payload;\r\n\r\n  // values passed as strings\r\n  switch (formAction) {\r\n    case ACTIONS.CREATE_QUESTION_ANSWER:\r\n      const { assigned_to_employee_id: assignedEmployeeId } = form;\r\n      const assignedEmployeeValue = assignedEmployeeId !== 'undefined' ? parseInt(assignedEmployeeId, 10) : undefined;\r\n\r\n      payload = {\r\n        question: form.question,\r\n        created_by_employee_id: form.isAnonymous === 'true' ? null : user.employee_id,\r\n        is_anonymous: form.isAnonymous === 'true',\r\n        assigned_department: Number.isNaN(parsedDepartment) ? null : parsedDepartment,\r\n        assigned_to_employee_id: Number.isNaN(assignedEmployeeValue) ? null : assignedEmployeeValue,\r\n        location: form.location,\r\n        accessToken: user.accessToken,\r\n      };\r\n\r\n      response = await createQuestion(payload);\r\n\r\n      if (response.successMessage) {\r\n        const session = await getSession(request);\r\n        const { question, successMessage } = response;\r\n        session.flash('globalSuccess', successMessage);\r\n        const destination = `/questions/${question.question_id}`;\r\n\r\n        return redirect(destination, {\r\n          headers: {\r\n            'Set-Cookie': await commitSession(session),\r\n          },\r\n        });\r\n      }\r\n      break;\r\n\r\n    // Create a new record in AnswerBot table.\r\n    case ACTIONS.CREATE_QUESTION_ANSWERBOT:\r\n      // Create the payload.\r\n      payload = {\r\n        question_by_user: form.question_by_user,\r\n        answer_by_bot: form.answer_by_bot,\r\n        assigned_department: Number.isNaN(parsedDepartment) ? null : parsedDepartment,\r\n        user_id: user.employee_id,\r\n      };\r\n\r\n      // Post the payload.\r\n      response = await createAnswerByBot(payload);\r\n\r\n      // If the result is successful, it shows it on the screen.\r\n      if (response.successMessage) {\r\n        const session = await getSession(request);\r\n        const { successMessage } = response;\r\n        session.flash('globalSuccess', successMessage);\r\n        const destination = '/questions/new';\r\n\r\n        return redirect(destination, {\r\n          headers: {\r\n            'Set-Cookie': await commitSession(session),\r\n          },\r\n        });\r\n      }\r\n      break;\r\n\r\n    // Update feedback.\r\n    case ACTIONS.UPDATE_FEEDBACK_ANSWERBOT:\r\n      // Create the payload.\r\n      payload = {\r\n        question_by_user: form.question_by_user,\r\n        answer_by_bot: form.answer_by_bot,\r\n        answerFeedback: form.answerFeedback,\r\n        assigned_department: Number.isNaN(parsedDepartment) ? null : parsedDepartment,\r\n        user_id: user.employee_id,\r\n      };\r\n\r\n      // Update the record with the payload.\r\n      response = await updateFeedback(payload);\r\n\r\n      // If the result is successful, it shows it on the screen.\r\n      if (response.successMessage) {\r\n        const session = await getSession(request);\r\n        const { successMessage } = response;\r\n        session.flash('globalSuccess', successMessage);\r\n        const destination = '/questions/new';\r\n\r\n        return redirect(destination, {\r\n          headers: {\r\n            'Set-Cookie': await commitSession(session),\r\n          },\r\n        });\r\n      }\r\n      break;\r\n\r\n    // Update post id.\r\n    case ACTIONS.UPDATE_POST_ANSWERBOT:\r\n      // Create the payload.\r\n      payload = {\r\n        question: form.question,\r\n        created_by_employee_id: user.employee_id,\r\n        is_anonymous: false,\r\n        assigned_department: Number.isNaN(parsedDepartment) ? null : parsedDepartment,\r\n        assigned_to_employee_id: null,\r\n        botEnabled: true,\r\n        location: DEFAULT_LOCATION,\r\n        accessToken: user.accessToken,\r\n      };\r\n\r\n      // Create a question in the forum.\r\n      response = await createQuestion(payload);\r\n\r\n      // If the result is successful, proceed to continue.\r\n      if (response.successMessage) {\r\n        // Create another payload.\r\n        payload = {\r\n          postQuestionID: response.question.question_id,\r\n          question_by_user: form.question,\r\n          answer_by_bot: form.answer,\r\n          assigned_department: Number.isNaN(parsedDepartment) ? null : parsedDepartment,\r\n          user_id: user.employee_id,\r\n        };\r\n\r\n        // Update the AnswerBot record with the new payload.\r\n        response = await updatePostID(payload);\r\n\r\n        // If the result is successful, it shows it on the screen.\r\n        if (response.successMessage) {\r\n          const session = await getSession(request);\r\n          const { successMessage } = response;\r\n          session.flash('globalSuccess', successMessage);\r\n          const destination = '/questions/new';\r\n\r\n          return redirect(destination, {\r\n            headers: {\r\n              'Set-Cookie': await commitSession(session),\r\n            },\r\n          });\r\n        }\r\n      }\r\n\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n\r\n  return json(response);\r\n};\r\n\r\nfunction CreateQuestion() {\r\n  const { questionsFAQ, locations, departments } = useLoaderData();\r\n  const submit = useSubmit();\r\n  const formRef = useRef();\r\n\r\n  useEffect(() => {\r\n    departments.unshift({ name: 'I don\\'t know whom to assign it.', department_id: NOT_ASSIGNED_DEPARTMENT_ID });\r\n  }, []);\r\n\r\n  const renderBulletPoint = () => (\r\n    <div>\r\n      <BsCircleFill color=\"var(--color-secondary)\" size=\"7px\" style={{ marginTop: '3px', marginRight: '10px' }} />\r\n    </div>\r\n  );\r\n\r\n  const postQuestion = (question) => {\r\n    const data = new FormData(formRef.current);\r\n\r\n    data.set('action', ACTIONS.CREATE_QUESTION_ANSWER);\r\n\r\n    // eslint-disable-next-line no-restricted-syntax\r\n    for (const [key, value] of Object.entries(question)) {\r\n      data.set(key, value);\r\n    }\r\n\r\n    submit(\r\n      data,\r\n      { method: 'post', action: '/questions/new' },\r\n    );\r\n  };\r\n\r\n  // Creates a FormData to submit and create a new record.\r\n  const postAnswerBotQuestion = (question) => {\r\n    const data = new FormData(formRef.current);\r\n\r\n    data.set('action', ACTIONS.CREATE_QUESTION_ANSWERBOT);\r\n\r\n    // eslint-disable-next-line no-restricted-syntax\r\n    for (const [key, value] of Object.entries(question)) {\r\n      data.set(key, value);\r\n    }\r\n\r\n    submit(\r\n      data,\r\n      { method: 'post', action: '/questions/new' },\r\n    );\r\n  };\r\n\r\n  // Creates a FormData to submit and update feedback for an existing record.\r\n  const updateAnswerBotFeedback = (question) => {\r\n    const data = new FormData(formRef.current);\r\n\r\n    data.set('action', ACTIONS.UPDATE_FEEDBACK_ANSWERBOT);\r\n\r\n    // eslint-disable-next-line no-restricted-syntax\r\n    for (const [key, value] of Object.entries(question)) {\r\n      data.set(key, value);\r\n    }\r\n\r\n    submit(\r\n      data,\r\n      { method: 'post', action: '/questions/new' },\r\n    );\r\n  };\r\n\r\n  // Creates a FormData to submit and update the post id for an existing record.\r\n  const updateAnswerBotPostID = (question) => {\r\n    const data = new FormData(formRef.current);\r\n\r\n    data.set('action', ACTIONS.UPDATE_POST_ANSWERBOT);\r\n\r\n    // eslint-disable-next-line no-restricted-syntax\r\n    for (const [key, value] of Object.entries(question)) {\r\n      data.set(key, value);\r\n    }\r\n\r\n    submit(\r\n      data,\r\n      { method: 'post', action: '/questions/new' },\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Notifications />\r\n      <Styled.QuestionDiv>\r\n        <Styled.QuestionSlogan>\r\n          <Slogan />\r\n          <FAQs questionsFAQ={questionsFAQ} />\r\n        </Styled.QuestionSlogan>\r\n        <Styled.QuestionInput>\r\n          <QuestionForm\r\n            maximumQuestionLength={MAXIMUM_QUESTION_LENGTH}\r\n            minimumQuestionLength={MINIMUM_ANSWER_LENGTH}\r\n            postQuestion={postQuestion}\r\n            locations={locations}\r\n            departments={departments}\r\n\r\n          />\r\n        </Styled.QuestionInput>\r\n        <Styled.QuestionRecommendations>\r\n          <Styled.RecommendationsContainer>\r\n            <Styled.Recommendations>\r\n              <span>Things to keep in mind</span>\r\n              {\r\n                RECOMMENDATIONS_QUESTION.map((text) => (\r\n                  <span key={text}>\r\n                    {renderBulletPoint()}\r\n                    {text}\r\n                  </span>\r\n                ))\r\n              }\r\n            </Styled.Recommendations>\r\n          </Styled.RecommendationsContainer>\r\n          <AnswerBot\r\n            postAnswerBotQuestion={postAnswerBotQuestion}\r\n            updateAnswerBotFeedback={updateAnswerBotFeedback}\r\n            updateAnswerBotPostID={updateAnswerBotPostID}\r\n            departments={departments}\r\n\r\n          />\r\n        </Styled.QuestionRecommendations>\r\n      </Styled.QuestionDiv>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CreateQuestion;\r\n", "/* eslint-disable import/prefer-default-export */\r\nimport styled from 'styled-components';\r\n\r\nexport const QuestionDiv = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: #f4f7f9;\r\n    padding-top: 40px;\r\n    @media (max-width: 1025px) {\r\n      flex-direction: column-reverse;\r\n    }\r\n    @media (max-width: 768px) {\r\n      padding-top: 20px;\r\n    }\r\n`;\r\n\r\nexport const QuestionSlogan = styled.div`\r\n  flex: 1;\r\n  @media (max-width: 1025px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const QuestionInput = styled.div`\r\n  flex: 2;\r\n  height: 100%;\r\n`;\r\n\r\nexport const QuestionRecommendations = styled.div`\r\n  flex: 1;\r\n`;\r\n\r\nexport const RecommendationsContainer = styled.div`\r\n  padding: 0 40px;\r\n  @media (max-width: 768px) {\r\n    padding: 0 25px 0 20px;\r\n  }\r\n`;\r\n\r\nexport const Recommendations = styled.div`\r\n  background-color: var(--color-secondary-light);\r\n  border-radius: 15px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-size: 13px;\r\n  padding: 20px;\r\n  span {\r\n    display: flex; \r\n    flex-direction: row;\r\n    &:first-child {\r\n      justify-content: center;\r\n      color: var(--color-secondary);\r\n      font-weight: 600;\r\n      font-size: 14px;\r\n      margin-bottom: 15px;\r\n    }\r\n    margin-bottom: 10px; \r\n    &:nth-child(2),\r\n    &:nth-child(3),\r\n    &:nth-child(4) {\r\n      margin-bottom: 10px;\r\n    }\r\n  }\r\n`;\r\n", "export { default } from './Slogan';\r\n", "import React from 'react';\r\nimport * as Styled from './Slogan.Styled';\r\n\r\nfunction Slogan() {\r\n  return (\r\n    <Styled.SloganContainer>\r\n      <p>\r\n        Your\r\n        {' '}\r\n        <span>safespace</span>\r\n        {' '}\r\n        to search answers,\r\n        ask questions, and learn about\r\n        <span>Wizeline</span>\r\n      </p>\r\n    </Styled.SloganContainer>\r\n  );\r\n}\r\n\r\nexport default Slogan;\r\n", "/* eslint-disable import/prefer-default-export */\r\nimport styled from 'styled-components';\r\n\r\n// eslint-disable-next-line import/prefer-default-export\r\nexport const SloganContainer = styled.div`\r\n  p {\r\n    font-weight: 100;\r\n    width: fit-content;\r\n    font-size: 15px;\r\n    padding: 0 40px;\r\n    span:first-child {\r\n      color: var(--color-secondary);\r\n      font-weight: 600;\r\n    }\r\n    span:last-child {\r\n      color: var(--color-primary);\r\n      font-weight: 600;\r\n    }\r\n  }\r\n`;\r\n", "export { default } from './QuestionForm';\r\n", "/* eslint-disable camelcase */\r\n/* eslint-disable no-useless-catch */\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useFetcher } from '@remix-run/react';\r\nimport PropTypes from 'prop-types';\r\nimport { ContentState, convertFromRaw, EditorState } from 'draft-js';\r\nimport { markdownToDraft } from 'markdown-draft-js';\r\nimport { RiArrowRightSFill } from 'react-icons/ri';\r\nimport {\r\n  DEFAULT_LOCATION,\r\n  ANONYMOUS_USER,\r\n  HTML_CODE_WARNING,\r\n  MINIMUM_QUESTION_LENGTH,\r\n  MAXIMUM_QUESTION_LENGTH,\r\n  NO_DEPARTMENT_SELECTED_TOOLTIP_MESSAGE,\r\n  MIN_CHARS_QUESTION_INPUT_TOOLTIP_MESSAGE,\r\n  DEFAULT_MESSAGE_END_QUESTION_INPUT_TOOLTIP,\r\n  NO_LOCATIONS_AVAILABLE_TOOLTIP_MESSAGE,\r\n  NONE_LOCATION,\r\n  DEFAULT_LOCATION_MESSAGE,\r\n  ALL_LOCATIONS_MESSAGE,\r\n  LOCATION_WARNING,\r\n  NO_DEPARTMENT_SELECTED_ID,\r\n  NOT_ASSIGNED_DEPARTMENT_ID,\r\n} from 'app/utils/constants';\r\nimport * as Styled from 'app/components/QuestionForm/QuestionForm.Styled';\r\nimport Switch from 'app/components/Switch';\r\nimport InputAuthor from 'app/components/InputAuthor';\r\nimport InputCounter from 'app/components/InputCounter';\r\nimport SubmitWithModal from 'app/components/SubmitWithModal';\r\nimport { deleteNoMarkupFormatHTML } from 'app/utils/stringOperations';\r\nimport { validTextLength } from 'app/utils/input';\r\nimport QuestionInputText from 'app/components/QuestionInputText';\r\nimport useUser from 'app/utils/hooks/useUser';\r\nimport DropdownMenu from 'app/components/DropdownMenu';\r\n\r\nfunction QuestionForm({\r\n  postQuestion,\r\n  locations,\r\n  departments,\r\n  initialValue,\r\n  initialDepartment,\r\n  initialIsAnonymous,\r\n}) {\r\n  const { full_name, picture } = useUser();\r\n  const fetcher = useFetcher();\r\n  const initialState = {\r\n    inputValue: initialValue,\r\n    isAnonymous: initialIsAnonymous,\r\n    showSubmitWithModal: false,\r\n    dropDownTitle: postQuestion,\r\n    warnings: [],\r\n    location: NONE_LOCATION,\r\n    closed: false,\r\n    isAsking: false,\r\n    profilePicture: picture,\r\n    assignedDepartment: initialDepartment,\r\n    fullLocation: '',\r\n    isShowPreview: false,\r\n    askBtbEnabled: false,\r\n    assignedEmployee: undefined,\r\n    employeesByDepartment: [],\r\n  };\r\n\r\n  const [state, setState] = useState(initialState);\r\n  const [editorState, setEditorState] = useState(\r\n    () => EditorState.createWithContent(convertFromRaw(markdownToDraft(state.inputValue))),\r\n  );\r\n\r\n  const selectPostingAs = (username) => {\r\n    const isAnonymous = (username === ANONYMOUS_USER.username);\r\n    const profilePicture = isAnonymous ? ANONYMOUS_USER.profilePicture : picture;\r\n    setState({\r\n      ...state,\r\n      dropDownTitle: username,\r\n      profilePicture,\r\n      isAnonymous,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchEmployees = async () => {\r\n      if (state.assignedDepartment.department_id !== -1) {\r\n        fetcher.load(`/employees/getByDeparment/${state.assignedDepartment.department_id}`);\r\n\r\n        setState({\r\n          ...state,\r\n          assignedEmployee: undefined,\r\n        });\r\n      }\r\n    };\r\n    fetchEmployees();\r\n  }, [state.assignedDepartment]);\r\n\r\n  useEffect(() => {\r\n    setState({\r\n      ...state,\r\n      employeesByDepartment: fetcher.data,\r\n    });\r\n  }, [fetcher.data]);\r\n\r\n  useEffect(() => {\r\n    selectPostingAs(full_name);\r\n  }, [full_name]);\r\n\r\n  const clearTextArea = () => {\r\n    setEditorState(() => EditorState.push(editorState, ContentState.createFromText(''), 'remove-range'));\r\n  };\r\n\r\n  const onSubmitWithModalSuccess = async () => {\r\n    const {\r\n      location, isAnonymous, inputValue, assignedDepartment,\r\n    } = state;\r\n    setState({ ...state, showSubmitWithModal: false });\r\n    const question = {\r\n      isAnonymous,\r\n      question: deleteNoMarkupFormatHTML(inputValue.trim()),\r\n      location: location === NONE_LOCATION ? DEFAULT_LOCATION : location,\r\n      assignedDepartment: assignedDepartment.department_id || 'wizeq',\r\n      assigned_to_employee_id: state.assignedEmployee ? state.assignedEmployee.id : undefined,\r\n    };\r\n\r\n    try {\r\n      await postQuestion(question);\r\n      setState(initialState);\r\n      clearTextArea();\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      location,\r\n      isAnonymous,\r\n      inputValue,\r\n    } = state;\r\n    const trimmed = inputValue.trim();\r\n    const sanitizedInput = deleteNoMarkupFormatHTML(trimmed);\r\n\r\n    const warningsToShow = [];\r\n\r\n    setState({\r\n      ...state,\r\n      isAsking: true,\r\n    });\r\n\r\n    if (location === NONE_LOCATION) {\r\n      warningsToShow.push(DEFAULT_LOCATION_MESSAGE);\r\n    } else if (location === DEFAULT_LOCATION) {\r\n      warningsToShow.push(ALL_LOCATIONS_MESSAGE);\r\n    } else {\r\n      const prelocation = locations.find(\r\n        (loc) => loc.code === location,\r\n      );\r\n      const fullLocation = prelocation ? prelocation.name : '';\r\n      warningsToShow.push(LOCATION_WARNING + fullLocation);\r\n    }\r\n    if (trimmed !== sanitizedInput) {\r\n      warningsToShow.push(HTML_CODE_WARNING);\r\n    }\r\n\r\n    if (warningsToShow.length || !isAnonymous) {\r\n      setState({\r\n        ...state,\r\n        warnings: [...warningsToShow],\r\n        showSubmitWithModal: true,\r\n        isAsking: false,\r\n      });\r\n      return;\r\n    }\r\n    onSubmitWithModalSuccess();\r\n  };\r\n\r\n  const onLocationChange = (selectedLocation) => {\r\n    setState({\r\n      ...state,\r\n      location: selectedLocation.code,\r\n      fullLocation: locations.find(\r\n        (loc) => loc.code === selectedLocation.code,\r\n      ).name,\r\n    });\r\n  };\r\n\r\n  const onSubmitWithModalClose = () => {\r\n    setState({\r\n      ...state,\r\n      showSubmitWithModal: false,\r\n      warnings: [],\r\n    });\r\n  };\r\n\r\n  const onInputChange = (inputValue) => {\r\n    setState({ ...state, inputValue });\r\n  };\r\n\r\n  const getClasses = (askBtbEnabled, departmentId) => {\r\n    // eslint-disable-next-line no-unneeded-ternary\r\n    const askBtnClass = askBtbEnabled ? false : true;\r\n    const employeeDropdownClass = (departmentId !== NOT_ASSIGNED_DEPARTMENT_ID\r\n      && departmentId !== NO_DEPARTMENT_SELECTED_ID) ? '' : 'employee-dropdown--department-assigned';\r\n    const locationDropdownClass = departmentId !== NO_DEPARTMENT_SELECTED_ID\r\n      ? '' : 'location-dropdown--department-selected';\r\n    return {\r\n      askBtnClass,\r\n      employeeDropdownClass,\r\n      locationDropdownClass,\r\n    };\r\n  };\r\n\r\n  const handleDepartmentSelectChange = (selectedDepartment) => {\r\n    setState({\r\n      ...state,\r\n      assignedDepartment: selectedDepartment,\r\n    });\r\n  };\r\n\r\n  const selectEmployeeHandler = (selectedEmployee) => {\r\n    setState({\r\n      ...state,\r\n      assignedEmployee: selectedEmployee,\r\n    });\r\n  };\r\n\r\n  const isAllowedToSubmitQuestion = () => {\r\n    const {\r\n      assignedDepartment,\r\n      inputValue,\r\n    } = state;\r\n\r\n    const sanitizedInput = deleteNoMarkupFormatHTML(inputValue.trim());\r\n\r\n    let askBtbEnabled = true;\r\n    let tooltipMessage = '';\r\n    if (!validTextLength(sanitizedInput.length, MINIMUM_QUESTION_LENGTH, MAXIMUM_QUESTION_LENGTH)) {\r\n      askBtbEnabled = false;\r\n      tooltipMessage = MIN_CHARS_QUESTION_INPUT_TOOLTIP_MESSAGE;\r\n    }\r\n\r\n    if (assignedDepartment.department_id === NO_DEPARTMENT_SELECTED_ID) {\r\n      askBtbEnabled = false;\r\n      tooltipMessage = NO_DEPARTMENT_SELECTED_TOOLTIP_MESSAGE;\r\n    }\r\n\r\n    if (locations.length === 0) {\r\n      askBtbEnabled = false;\r\n      tooltipMessage = NO_LOCATIONS_AVAILABLE_TOOLTIP_MESSAGE;\r\n    }\r\n\r\n    return {\r\n      askBtbEnabled,\r\n      tooltipMessage,\r\n    };\r\n  };\r\n\r\n  const renderTooltip = (tooltipMessage) => tooltipMessage && (\r\n    <Styled.SubmitTooltipText>\r\n      <span>{tooltipMessage}</span>\r\n      {' '}\r\n      <br />\r\n      {DEFAULT_MESSAGE_END_QUESTION_INPUT_TOOLTIP}\r\n    </Styled.SubmitTooltipText>\r\n  );\r\n\r\n  const getQuestionLength = (question) => deleteNoMarkupFormatHTML(question.trim()).length;\r\n\r\n  const onAnonymousChange = (event) => {\r\n    setState({\r\n      ...state,\r\n      isAnonymous: event.target.checked,\r\n    });\r\n  };\r\n\r\n  const { tooltipMessage, askBtbEnabled } = isAllowedToSubmitQuestion();\r\n  const { askBtnClass } = getClasses(\r\n    askBtbEnabled,\r\n    state.assignedDepartment.department_id,\r\n  );\r\n\r\n  return (\r\n    <Styled.InputForm className=\"clearfix\">\r\n      <form onSubmit={onSubmit} id=\"question-submit-form\">\r\n        <Styled.InputContainer>\r\n          <Styled.InputTopWrapper>\r\n            <InputAuthor\r\n              dropDownTitle={state.dropDownTitle}\r\n              profilePicture={state.profilePicture}\r\n              selectPostingAs={selectPostingAs}\r\n              isAsking\r\n              isAnonymous={state.isAnonymous}\r\n            />\r\n            <RiArrowRightSFill color=\"black\" size=\"25px\" />\r\n            <Styled.Options\r\n              department={state.assignedDepartment.name}\r\n              location={state.fullLocation}\r\n            >\r\n              <DropdownMenu name=\"Deparment\" type=\"Build\" handler={handleDepartmentSelectChange} selectedOption={null} options={departments} />\r\n              {state.assignedDepartment.department_id !== -1\r\n                && <DropdownMenu name=\"People\" type=\"People\" handler={selectEmployeeHandler} selectedOption={null} options={state.employeesByDepartment} />}\r\n              <DropdownMenu name=\"Location\" type=\"Location\" handler={onLocationChange} selectedOption={null} options={locations} />\r\n            </Styled.Options>\r\n          </Styled.InputTopWrapper>\r\n          <QuestionInputText\r\n            inputValue={state.inputValue}\r\n            editorState={editorState}\r\n            setEditorState={setEditorState}\r\n            onInputChange={onInputChange}\r\n            submitElement={(\r\n              <Styled.Submit disabled={askBtnClass}>\r\n                <p style={{ float: 'left' }}>\r\n                  <span>Ask anonymously</span>\r\n                  <Switch\r\n                    checked={state.isAnonymous}\r\n                    onChange={onAnonymousChange}\r\n                  />\r\n                </p>\r\n                <InputCounter\r\n                  currentLength={getQuestionLength(state.inputValue)}\r\n                  maxLength={MAXIMUM_QUESTION_LENGTH}\r\n                />\r\n                <Styled.SubmitTooltip\r\n                  type=\"submit\"\r\n                  id=\"submit-btn\"\r\n                  disabled={!askBtbEnabled}\r\n                >\r\n                  {renderTooltip(tooltipMessage)}\r\n                  Ask\r\n                </Styled.SubmitTooltip>\r\n              </Styled.Submit>\r\n            )}\r\n          />\r\n        </Styled.InputContainer>\r\n        <SubmitWithModal\r\n          show={state.showSubmitWithModal}\r\n          onClose={onSubmitWithModalClose}\r\n          onSubmitSuccess={onSubmitWithModalSuccess}\r\n          warnings={state.warnings}\r\n          isAnonymous={state.isAnonymous}\r\n        />\r\n        <br />\r\n      </form>\r\n    </Styled.InputForm>\r\n  );\r\n}\r\n\r\nQuestionForm.propTypes = {\r\n  postQuestion: PropTypes.func.isRequired,\r\n  profile: PropTypes.shape({\r\n    name: PropTypes.string,\r\n    picture: PropTypes.string,\r\n  }),\r\n  locations: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      code: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n  departments: PropTypes.arrayOf(\r\n    PropTypes.shape(),\r\n  ),\r\n  initialValue: PropTypes.string,\r\n  initialDepartment: PropTypes.shape({\r\n    name: PropTypes.string.isRequired,\r\n    department_id: PropTypes.number.isRequired,\r\n  }),\r\n  initialIsAnonymous: PropTypes.bool,\r\n};\r\n\r\nQuestionForm.defaultProps = {\r\n  profile: {\r\n    name: '',\r\n    picture: '',\r\n  },\r\n  initialValue: '',\r\n  departments: [],\r\n  initialDepartment: { name: '', department_id: NO_DEPARTMENT_SELECTED_ID },\r\n  initialIsAnonymous: false,\r\n};\r\n\r\nexport default QuestionForm;\r\n", "/* eslint-disable import/prefer-default-export */\r\nimport styled from 'styled-components';\r\n\r\n// Question Input Main\r\nexport const InputForm = styled.div`\r\n  background-color: #f4f7f9;\r\n  color: var(--color-dark-50);\r\n  font-size: 14px;\r\n  padding: 4% 0;\r\n  text-align: center;\r\n  .open ul {\r\n    border: none;\r\n    border-radius: 10px;\r\n    box-shadow: 0 3px 4px 0 rgba(156, 156, 156, 0.5);\r\n    letter-spacing: 0.6px;\r\n    width: 304px;\r\n    background-color: #eee;\r\n  }\r\n  .dropdown-menu a {\r\n    color: var(--color-dark-50);\r\n    padding-right: 16px;\r\n  }\r\n`;\r\n\r\nexport const InputContainer = styled.div`\r\n  background: #fff;\r\n  box-shadow: 0 3px 6px 0 rgba(225, 229, 233, 0.8);\r\n  color: var(--color-dark-50);\r\n  float: none;\r\n  margin: auto;\r\n  max-width: 800px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  border-radius: 10px;\r\n  padding: 20px 15px 0 15px;\r\n  @media screen and (min-width: 768px) and (max-width: 1024px) {\r\n    min-width: 700px;\r\n  }\r\n  @media screen and (max-width: 767px) {\r\n    max-width: 680px;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport const InputTopWrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  svg:nth-child(2) {\r\n    margin: 0 5px;\r\n  }\r\n`;\r\n\r\n// Ask Button\r\nexport const Submit = styled.div`\r\n  align-items: center;\r\n  bottom: 0;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  padding-bottom: 10px;\r\n  position: absolute;\r\n  right: 0;\r\n  text-align: center;\r\n  @media screen and (min-width: 1025px) {\r\n    text-align: right;\r\n  }\r\n  @media screen and (max-width: 767px) {\r\n    position: static;\r\n    width: 100%;\r\n    flex-wrap: wrap;\r\n  }\r\n  p {\r\n    display: flex;\r\n    margin: 0;\r\n    align-items: center;\r\n    // Switch\r\n    label {\r\n      margin: 0;\r\n      margin-left: 5px;\r\n    }\r\n  }\r\n  button {\r\n    background: var(--color-secondary);\r\n    border: none;\r\n    border-radius: 3px;\r\n    color: #fff;\r\n    height: 33px;\r\n    @media screen and (min-width: 1025px){\r\n      width: 77px;\r\n    }\r\n    @media screen and (min-width: 768px) and (max-width: 1024px) {\r\n      width: 248px;\r\n    }\r\n    @media screen and (max-width: 767px) {\r\n      width: 100%;\r\n    }\r\n    &:disabled {\r\n      background: #d8d8d8;\r\n    }\r\n    &:hover:enabled {\r\n      background-color: white;\r\n      border: solid 1px var(--color-secondary);\r\n      color: var(--color-secondary);\r\n    }\r\n  }\r\n`;\r\n\r\n// Dropdown Menus Buttons and List\r\nexport const Options = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap:10px;\r\n  width: fit-content;\r\n  .btn-group {\r\n    width: 100%;\r\n  }\r\n  @media screen and (max-width: 767px) {\r\n    flex-wrap: wrap;\r\n  }\r\n\r\n`;\r\n\r\n// Tooltip\r\nexport const SubmitTooltipText = styled.span`\r\n  background-color: #31425a;\r\n  border-radius: 2px;\r\n  bottom: 135%;\r\n  color: #fff;\r\n  display: block;\r\n  font-weight: normal;\r\n  letter-spacing: 0.6px;\r\n  padding: 12px;\r\n  position: absolute;\r\n  text-align: left;\r\n  visibility: hidden;\r\n  width: 168px;\r\n  z-index: 100;\r\n  @media screen and (min-width: 1025px) {\r\n    left: -58%;\r\n  }\r\n  @media screen and (min-width: 768px) and (max-width: 1024px) {\r\n    display: none;\r\n  }\r\n  @media screen and (max-width: 767px) {\r\n    display: none;\r\n  }\r\n  span {\r\n    font-family: \"Nunito\";\r\n    font-weight: bold;\r\n  }\r\n  &:after {\r\n    border: 5px solid transparent;\r\n    border-top-color: #31425a;\r\n    content: \"\";\r\n    left: 50%;\r\n    margin-left: -5px;\r\n    position: absolute;\r\n    top: 100%;\r\n  }\r\n`;\r\n\r\nexport const SubmitTooltip = styled.button`\r\n  position: relative;\r\n  &:hover ${SubmitTooltipText} {\r\n    visibility: visible;\r\n  }\r\n`;\r\n", "export { default } from './InputAuthor';\r\n", "import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport UserImage from 'app/components/Atoms/UserImage';\r\nimport { ANONYMOUS_USER } from 'app/utils/constants';\r\n\r\nfunction InputAuthor(props) {\r\n  return (\r\n    props.isAnonymous ? (\r\n      <UserImage size=\"big\" src={props.anonymousProfilePicture} />\r\n    ) : (\r\n      <UserImage\r\n        src={props.profilePicture}\r\n        size=\"big\"\r\n      />\r\n    )\r\n  );\r\n}\r\n\r\nInputAuthor.propTypes = {\r\n  anonymousProfilePicture: PropTypes.string,\r\n  profilePicture: PropTypes.string,\r\n  isAnonymous: PropTypes.bool.isRequired,\r\n};\r\n\r\nInputAuthor.defaultProps = {\r\n  anonymousProfilePicture: ANONYMOUS_USER.profilePicture,\r\n  profilePicture: '',\r\n};\r\n\r\nexport default InputAuthor;\r\n", "export { default } from './SubmitWithModal';\r\n", "/* eslint-disable camelcase */\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as Styled from 'app/components/SubmitWithModal/SubmitWithModal.Styled';\r\nimport {\r\n  IDENTITY_MESSAGE,\r\n  SECONDARY_BUTTON,\r\n  DANGER_BUTTON,\r\n  CLOSE_BUTTON,\r\n} from 'app/utils/constants';\r\nimport useUser from 'app/utils/hooks/useUser';\r\nimport Button from 'app/components/Atoms/Button';\r\nimport UserImage from 'app/components/Atoms/UserImage';\r\n\r\nfunction SubmitWithModal(props) {\r\n  const { isAnonymous, warnings } = props;\r\n  const { picture, full_name } = useUser();\r\n\r\n  const renderProfilePicture = () => {\r\n    if (props.isAnonymous) { return null; }\r\n    return (\r\n      <UserImage src={picture} size=\"big\" />\r\n    );\r\n  };\r\n\r\n  const renderIdentityWarning = () => {\r\n    let identityMessage = IDENTITY_MESSAGE;\r\n    let usernameTag = '';\r\n\r\n    if (!isAnonymous) {\r\n      identityMessage += ' as:';\r\n      usernameTag = <Styled.UserName>{full_name}</Styled.UserName>;\r\n    }\r\n\r\n    return (\r\n      <Styled.IdentityWarning>\r\n        <Styled.IdentityMessage>{identityMessage}</Styled.IdentityMessage>\r\n        <br />\r\n        <Styled.UserInfoContainer>\r\n          {renderProfilePicture()}\r\n          {usernameTag}\r\n        </Styled.UserInfoContainer>\r\n      </Styled.IdentityWarning>\r\n    );\r\n  };\r\n\r\n  const renderWarnings = () => {\r\n    let messages;\r\n    if (!warnings.length) {\r\n      return null;\r\n    } if (warnings.length === 1) {\r\n      // eslint-disable-next-line prefer-destructuring\r\n      messages = warnings[0];\r\n    } else {\r\n      messages = warnings.map((warning) => (\r\n        <p key={warning}>\r\n          -\r\n          {warning}\r\n        </p>\r\n      ));\r\n    }\r\n    return (\r\n      <Styled.WarningContainer>\r\n        <Styled.WarningIcon />\r\n        <Styled.Warnings>\r\n          {messages}\r\n        </Styled.Warnings>\r\n      </Styled.WarningContainer>\r\n    );\r\n  };\r\n\r\n  if (!props.show) { return null; }\r\n  return (\r\n    <div onClick={props.onClose}>\r\n      <Styled.Modal show>\r\n        <Styled.ModalDialog variant=\"submit\" onClick={(e) => e.stopPropagation()}>\r\n          <Styled.ModalHeader>\r\n            <Button category={CLOSE_BUTTON} onClick={props.onClose} />\r\n          </Styled.ModalHeader>\r\n          <Styled.ModalBody>\r\n            {renderIdentityWarning()}\r\n            {renderWarnings()}\r\n          </Styled.ModalBody>\r\n          <Styled.ModalFooter>\r\n            <Button type=\"button\" category={SECONDARY_BUTTON} onClick={props.onClose}>\r\n              Cancel\r\n            </Button>\r\n            <Button type=\"button\" category={DANGER_BUTTON} onClick={props.onSubmitSuccess}>\r\n              Submit\r\n            </Button>\r\n          </Styled.ModalFooter>\r\n        </Styled.ModalDialog>\r\n      </Styled.Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nSubmitWithModal.propTypes = {\r\n  show: PropTypes.bool.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n  onSubmitSuccess: PropTypes.func.isRequired,\r\n  warnings: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  isAnonymous: PropTypes.bool.isRequired,\r\n};\r\nexport default SubmitWithModal;\r\n", "/* eslint-disable import/prefer-default-export */\r\nimport styled from 'styled-components';\r\nimport { MdErrorOutline } from 'react-icons/md';\r\n\r\nexport const Modal = styled.div` \r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    z-index: 1050;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n`;\r\n\r\nexport const ModalDialog = styled.div`\r\n    position: relative;\r\n    border-radius: 5px;\r\n    border: 0;\r\n    background-color: #fff;\r\n    box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.5);\r\n    overflow: hidden;\r\n    margin: 0 auto;\r\n    width: 100%;\r\n    display: block;\r\n    max-height: calc(100vh - 150px);\r\n    overflow-y: auto;\r\n    ${(props) => (props.variant === 'submit' ? 'padding: 0px 24px;max-width: 55vw;' : 'padding: 24px 24px;max-width: 70vw;')}\r\n    @media (max-width: 768px) {\r\n        max-width: 80vw;\r\n    }\r\n    @media (max-width: 576px) {\r\n        max-height: 100%;\r\n        max-width: 100%;\r\n        height: 100%;\r\n    }\r\n`;\r\n\r\nexport const ModalFooter = styled.div`\r\n    border-top: none;\r\n    background-color: #fff;\r\n    border-bottom: none;\r\n    padding: 15px;\r\n    text-align: right;\r\n    box-sizing: border-box;\r\n    display: block;\r\n    font-size: 14px;\r\n    ${(props) => (props.variant === 'logout' ? 'border-top: 1px solid #e5e5e5;padding: 15px;text-align: right;' : 'border-bottom: none;')}\r\n`;\r\n\r\nexport const ModalHeader = styled.div`\r\n    overflow-y: hidden;\r\n    padding: 15px;\r\n    box-sizing: border-box;\r\n    display: block;\r\n    font-size: 14px;\r\n    ${(props) => (props.variant === 'logout' ? 'border-bottom: 1px solid #e5e5e5;padding: 15px;' : 'border-bottom: none;')}\r\n`;\r\n\r\nexport const ModalBody = styled.div`\r\n    display: block;\r\n    font-size: 14px;\r\n    background-color: #fff;\r\n    border-bottom: none;\r\n    position: relative;\r\n    padding: 15px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nexport const ProfileContainer = styled.div`\r\n    border: 1px solid var(--color-secondary);\r\n    float: left;\r\n    height: 50px;\r\n    overflow: hidden;\r\n    text-align: center;\r\n    width: 50px;\r\n`;\r\n\r\nexport const ProfileImg = styled.img`\r\n    height: 48px;\r\n    width: 48px;\r\n`;\r\n\r\nexport const IdentityWarning = styled.div`\r\n  margin-bottom: 20px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  line-height: 2vh;\r\n  span {\r\n    font-family: \"Nunito\", sans-serif;\r\n    font-weight: 600;\r\n  }\r\n`;\r\n\r\nexport const WarningsHeader = styled.div`\r\n  padding-bottom: 20px;\r\n  span {\r\n    font-family: \"Nunito\", sans-serif;\r\n    font-weight: 600;\r\n    padding-left: 8px;\r\n  }\r\n`;\r\n\r\nexport const List = styled.ul`\r\n  list-style: none;\r\n  padding-top: 12px;\r\n  padding-inline-start: 0;\r\n  li {\r\n    margin-bottom: 20px;\r\n  }\r\n`;\r\n\r\nexport const WarningIcon = styled(MdErrorOutline)`\r\n  font-size: 5rem;\r\n`;\r\n\r\nexport const UserInfoContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-evenly;\r\n  width: 30rem;\r\n`;\r\n\r\nexport const IdentityMessage = styled.div`\r\n  font-size: 2.5rem;\r\n  text-align: center;\r\n  line-height: 1;\r\n`;\r\n\r\nexport const UserName = styled.p`\r\n  font-size: 2rem;\r\n  text-align: center;\r\n`;\r\n\r\nexport const WarningContainer = styled.div`\r\n  display: flex;\r\n  gap: 10px;\r\n  border-radius: 5px;\r\n  background-color: #F8E9B7;\r\n  color: #9f640b;\r\n  justify-content: space-evenly;\r\n  width: 80%;\r\n  margin: 0 auto;\r\n  align-items: center;\r\n  padding: 15px;\r\n  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.5);\r\n  @media (max-width: 768px) {\r\n    width: 90%;\r\n  }\r\n  @media (max-width: 576px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport const Warnings = styled.div`\r\n  list-style-type: none;\r\n  margin: 0;\r\n  text-align: left;\r\n  padding: 3px;\r\n  p {\r\n    margin: 0;\r\n    font-size: 1.5rem;\r\n  }\r\n`;\r\n", "export { default } from './QuestionInputText';\r\n", "import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { draftToMarkdown } from 'markdown-draft-js';\r\nimport { convertToRaw, EditorState } from 'draft-js';\r\nimport * as Styled from 'app/components/QuestionInputText/QuestionInputText.Styled';\r\nimport QuestionTextArea from 'app/components/QuestionTextArea';\r\n\r\nfunction QuestionInputText(props) {\r\n  const {\r\n    inputValue,\r\n    onInputChange,\r\n    editorState,\r\n    setEditorState,\r\n    submitElement,\r\n  } = props;\r\n\r\n  const onQuestionChange = (_editorState) => {\r\n    const rawText = draftToMarkdown(convertToRaw(_editorState.getCurrentContent()));\r\n\r\n    const sanitizedInputValue = rawText.replace(/^\\s+/, '');\r\n    onInputChange(sanitizedInputValue);\r\n  };\r\n\r\n  const renderInputArea = () => (\r\n    <QuestionTextArea\r\n      inputValue={inputValue}\r\n      editorState={editorState}\r\n      setEditorState={setEditorState}\r\n      onQuestionChange={onQuestionChange}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <Styled.QuestionInputText>\r\n      {renderInputArea()}\r\n      {submitElement}\r\n    </Styled.QuestionInputText>\r\n  );\r\n}\r\n\r\nQuestionInputText.propTypes = {\r\n  inputValue: PropTypes.string,\r\n  onInputChange: PropTypes.func.isRequired,\r\n  editorState: PropTypes.objectOf(EditorState).isRequired,\r\n  setEditorState: PropTypes.func.isRequired,\r\n  submitElement: PropTypes.element,\r\n};\r\n\r\nQuestionInputText.defaultProps = {\r\n  inputValue: '',\r\n  submitElement: null,\r\n};\r\n\r\nexport default QuestionInputText;\r\n", "/* eslint-disable import/prefer-default-export */\r\nimport styled from 'styled-components';\r\n\r\n// Question Preview\r\nexport const PreviewButton = styled.div`\r\n  letter-spacing: 0.6px;\r\n  line-height: 1.5;\r\n  padding-bottom: 1%;\r\n  text-align: right;\r\n`;\r\n\r\nexport const PreviewText = styled.div`\r\n  padding: 13px 9px;\r\n  text-align: left;\r\n  word-wrap: break-word;\r\n  width: 100%;\r\n  letter-spacing: 0.6px;\r\n  line-height: 1.71;\r\n  word-wrap: break-word;\r\n`;\r\n\r\n// Question Input TextArea\r\nexport const QuestionInputText = styled.div`\r\n  clear: both;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  margin-top: 10px;\r\n  overflow-wrap: break-word;\r\n  position: relative;\r\n  width: 100%;\r\n`;\r\n", "export { default } from './QuestionTextArea';\r\n", "import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { EditorState } from 'draft-js';\r\nimport { ClientOnly } from 'remix-utils';\r\nimport { Editor } from 'app/react-draft-wysiwyg.client';\r\nimport bold from 'app/images/react-icons/ri/bold.svg';\r\nimport italic from 'app/images/react-icons/ri/italic.svg';\r\nimport strikethrough from 'app/images/react-icons/ri/strikethrough.svg';\r\nimport code from 'app/images/react-icons/ri/code-fill.svg';\r\nimport * as S from 'app/components/QuestionTextArea/QuestionTextArea.Styled';\r\nimport { inputPlaceholder } from 'app/utils/constants';\r\nimport { MINIMUM_QUESTION_LENGTH } from 'app/utils/backend/constants';\r\n\r\nfunction QuestionTextArea({\r\n  editorState,\r\n  setEditorState,\r\n  onQuestionChange,\r\n}) {\r\n  useEffect(() => {\r\n    onQuestionChange(editorState);\r\n  }, [editorState]);\r\n\r\n  const styleMap = {\r\n    CODE: {\r\n      color: '#c7254e',\r\n      backgroundColor: '#f9f2f4',\r\n      borderRadius: '4px',\r\n      fontFamily: 'Menlo, Monaco, Consolas, \"Courier New\", monospace',\r\n      padding: '2px 4px',\r\n      fontSize: '90%',\r\n    },\r\n  };\r\n\r\n  return (\r\n    <S.QuestionTextAreaWrapper>\r\n      <ClientOnly>\r\n        { () => (\r\n          <Editor\r\n            placeholder={inputPlaceholder(MINIMUM_QUESTION_LENGTH)}\r\n            editorState={editorState}\r\n            onEditorStateChange={setEditorState}\r\n            wrapperClassName=\"demo-wrapper\"\r\n            editorClassName=\"editor-class\"\r\n            toolbarClassName=\"toolbar-class\"\r\n            toolbar={{\r\n              options: ['inline', 'blockType'],\r\n              inline: {\r\n                inDropdown: false,\r\n                options: ['bold', 'italic', 'strikethrough', 'monospace'],\r\n                bold: { icon: bold },\r\n                italic: { icon: italic },\r\n                strikethrough: { icon: strikethrough },\r\n                monospace: { icon: code },\r\n              },\r\n              blockType: {\r\n                inDropdown: false,\r\n                options: ['Blockquote'],\r\n              },\r\n            }}\r\n            customStyleMap={styleMap}\r\n          />\r\n        )}\r\n      </ClientOnly>\r\n    </S.QuestionTextAreaWrapper>\r\n\r\n  );\r\n}\r\n\r\nQuestionTextArea.propTypes = {\r\n  editorState: PropTypes.objectOf(EditorState).isRequired,\r\n  setEditorState: PropTypes.func.isRequired,\r\n  onQuestionChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default QuestionTextArea;\r\n", "/* eslint-disable import/prefer-default-export */\r\nimport styled from 'styled-components';\r\nimport doubleQuotes from 'app/images/react-icons/ri/double-quotes-r.svg';\r\n\r\nexport const QuestionTextAreaWrapper = styled.div`\r\n  letter-spacing: 0.6px;\r\n  line-height: 1.71;\r\n  word-wrap: break-word;\r\n  border: none;\r\n  border-bottom: none;\r\n  border-radius: 3px;\r\n  color: var(--color-dark-50);\r\n  font-size: 14px;\r\n  outline: none;\r\n  resize: none;\r\n  width: 100%;\r\n  &:disabled {\r\n    color: grey;\r\n  }\r\n  .public-DraftEditorPlaceholder-inner,\r\n  .public-DraftEditor-content {\r\n    padding-left: 5px;\r\n  }\r\n  .public-DraftEditor-content{\r\n    min-height: 50px;\r\n    font-family: Arial, Helvetica, sans-serif;\r\n  }\r\n  .rdw-editor-wrapper {\r\n    display: flex;\r\n    flex-direction: column-reverse;\r\n    height: 220px;\r\n  }\r\n  .rdw-editor-toolbar {\r\n    padding: 0;\r\n  }\r\n  .toolbar-class{\r\n    border: none;\r\n  }\r\n  .rdw-option-wrapper{\r\n    border: 1px solid transparent;\r\n    padding: 15px 5px;\r\n    border-radius: 5px;\r\n  }\r\n  .rdw-option-wrapper:hover {\r\n    border: 1px solid var(--color-primary);\r\n    box-shadow: none;\r\n    transition-property: border-color;\r\n    transition-duration: 180ms;\r\n    transition-timing-function: ease-in-out;\r\n  }\r\n  .rdw-option-active {\r\n    border: 1px solid #dee0e1;\r\n    box-shadow: none;\r\n    transition-property: border-color;\r\n    transition-duration: 180ms;\r\n    transition-timing-function: ease-in-out;\r\n  }\r\n  /* To show Quotes Icon */\r\n  .rdw-inline-wrapper:last-child {\r\n    position: relative;\r\n    .rdw-option-wrapper {\r\n      width: 35px;\r\n      z-index: 1;\r\n      /* Hide the text. */\r\n      text-indent: 105%;\r\n      white-space: nowrap;\r\n      overflow: hidden;\r\n      // Quotes icon\r\n      background-image: url(\"${doubleQuotes}\");\r\n      background-repeat: no-repeat;\r\n      background-position: center;\r\n    }\r\n  }\r\n`;\r\nexport const QuestionInputTextOptions = styled.div`\r\n    align-items: baseline;\r\n    display: inline-flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    padding-bottom: 1%;\r\n    padding-top: 1%;\r\n    float: left;\r\n`;\r\n\r\nexport const WrapperButton = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nexport const OptionEditor = styled.button`\r\n  border: none;\r\n  background-color: transparent;\r\n  padding: 5px;\r\n  font-size: 20px;\r\n  .option-icon {\r\n    color: #c6c6c6;\r\n  }\r\n`;\r\n", "export { default } from './DropdownMenu.component';\r\n", "import React, { useEffect, useState } from 'react';\r\nimport { DropdownButton, MenuItem } from 'react-bootstrap';\r\nimport DropdownTitle from 'app/components/DropdownTitle';\r\nimport { FaBuilding, FaUser } from 'react-icons/fa';\r\nimport { ImLocation } from 'react-icons/im';\r\nimport PropTypes from 'prop-types';\r\nimport { StyledMenu } from 'app/components/DropdownMenu/DropdownMenu.Styled';\r\n\r\nfunction DropdownMenu({\r\n  name, handler, type, selectedOption, options,\r\n}) {\r\n  const [option, setSelectedOption] = useState(selectedOption);\r\n\r\n  useEffect(() => {\r\n    setSelectedOption(selectedOption);\r\n  }, [options]);\r\n\r\n  const handleSelect = (select) => {\r\n    setSelectedOption(select);\r\n    handler(select);\r\n  };\r\n\r\n  const renderOptions = () => {\r\n    let values = [];\r\n\r\n    switch (type) {\r\n      case 'Build': values = options.map((dep) => (\r\n        <MenuItem eventKey={dep} key={dep.department_id} onClick={() => handleSelect(dep)}>\r\n          {dep.name}\r\n        </MenuItem>\r\n      )); break;\r\n      case 'People': values = options.map((item) => (\r\n        <MenuItem eventKey={item} key={item.id} onClick={() => handleSelect(item)}>\r\n          {item.name}\r\n        </MenuItem>\r\n      )); break;\r\n      case 'Location': values = options.map((loc) => (\r\n        <MenuItem eventKey={loc.code} key={loc.code} onClick={() => handleSelect(loc)}>\r\n          {loc.name}\r\n        </MenuItem>\r\n      )); break;\r\n      default: return values;\r\n    }\r\n\r\n    return values;\r\n  };\r\n\r\n  const getIcon = () => {\r\n    switch (type) {\r\n      case 'Build': return <FaBuilding color={option ? 'white' : 'black'} />;\r\n      case 'People': return <FaUser color={option ? 'white' : 'black'} />;\r\n      case 'Location': return <ImLocation color={option ? 'white' : 'black'} />;\r\n      default: return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StyledMenu item={option}>\r\n      <DropdownButton\r\n        bsStyle=\"default\"\r\n        title={(\r\n          <DropdownTitle title={option ? option.name : name}>\r\n            {getIcon()}\r\n          </DropdownTitle>\r\n        )}\r\n        noCaret\r\n      >\r\n        {options.length === 0 ? (\r\n          <MenuItem>\r\n            Not options avaiable\r\n          </MenuItem>\r\n        ) : renderOptions()}\r\n      </DropdownButton>\r\n    </StyledMenu>\r\n  );\r\n}\r\n\r\nDropdownMenu.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  selectedOption: PropTypes.oneOfType([\r\n    PropTypes.shape([\r\n      {\r\n        department_id: PropTypes.string,\r\n        name: PropTypes.string,\r\n      },\r\n    ]),\r\n    PropTypes.shape([\r\n      {\r\n        id: PropTypes.string,\r\n        name: PropTypes.string,\r\n      },\r\n    ]),\r\n  ]).isRequired,\r\n  options: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(\r\n      PropTypes.shape([\r\n        {\r\n          department_id: PropTypes.string,\r\n          name: PropTypes.string,\r\n        },\r\n      ]).isRequired,\r\n    ),\r\n    PropTypes.arrayOf(\r\n      PropTypes.shape([\r\n        {\r\n          id: PropTypes.string,\r\n          name: PropTypes.string,\r\n        },\r\n      ]).isRequired,\r\n    ),\r\n    PropTypes.arrayOf(\r\n      PropTypes.shape([\r\n        {\r\n          code: PropTypes.string,\r\n          name: PropTypes.string,\r\n        },\r\n      ]),\r\n    ),\r\n  ]).isRequired,\r\n  handler: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default DropdownMenu;\r\n", "export { default } from './DropdownTitle';\r\n", "import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { MdOutlineKeyboardArrowDown } from 'react-icons/md';\r\nimport * as S from './DropdownTitle.Styled';\r\n\r\nfunction DropdownTitle({ children, title, type }) {\r\n  return (\r\n    <S.QuestionAssignerToolTipContainer title={title}>\r\n      {children}\r\n      <div style={{ display: 'flex', marginLeft: '10px', marginRight: '5px' }}>\r\n        {title || type}\r\n      </div>\r\n      <MdOutlineKeyboardArrowDown color={title ? 'white' : 'black'} />\r\n    </S.QuestionAssignerToolTipContainer>\r\n  );\r\n}\r\n\r\nDropdownTitle.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  title: PropTypes.node.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default DropdownTitle;\r\n", "/* eslint-disable import/prefer-default-export */\r\nimport styled from 'styled-components';\r\n\r\nexport const QuestionAssignerToolTipText = styled.span`\r\n  background-color: var(--color-secondary);\r\n  visibility: hidden;\r\n  width: auto;\r\n  color: #000;\r\n  text-align: center;\r\n  border-radius: 6px;\r\n  padding: 5px;\r\n  position: absolute;\r\n  z-index: 1;\r\n  top: 80%;\r\n  left: 45%;\r\n  margin-left: -60px;\r\n  &:after {\r\n    content: \"\";\r\n    position: absolute;\r\n    bottom: 100%;\r\n    left: 45%;\r\n    margin-left: -5px;\r\n    border-width: 5px;\r\n    border-style: solid;\r\n    border-color: transparent transparent #86cfeb transparent;\r\n  }\r\n`;\r\n\r\nexport const QuestionAssignerToolTipContainer = styled.div`\r\n  position: relative;\r\n  display: inline-flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  justify-content: space-between;\r\n  &:hover ${QuestionAssignerToolTipText} {\r\n    visibility: visible;\r\n  }\r\n`;\r\n", "import styled from 'styled-components';\r\n\r\nexport const StyledMenu = styled.div`\r\n    display:flex;\r\n    background-color: #f1f1f1;\r\n    border-radius: 20px;\r\n    box-shadow: none;\r\n    display: flex;\r\n    font-family: \"Nunito\", sans-serif;\r\n    width: 100%;\r\n    color: black;\r\n    margin-right:10px;\r\n\r\n    @media screen and (max-width: 767px) {\r\n      min-width: 250px;\r\n    }\r\n\r\n    & svg{\r\n        color:inherit !important;\r\n    }\r\n\r\n    & button{\r\n    background-color: #f1f1f1;\r\n    border: none;\r\n    border-radius: 20px;\r\n    box-shadow: none;\r\n    display: flex;\r\n    font-size: 13px;\r\n    letter-spacing: 0.4px;\r\n    min-width: 150px;\r\n    width: 100%; \r\n    }\r\n\r\n    & button{\r\n      background-color: ${(props) => (props.item === null ? '#f1f1f1' : 'var(--color-secondary)')};\r\n      color: ${(props) => (props.item === null ? 'var(--color-dark-50)' : '#fff')};\r\n    }\r\n\r\n    & button:focus{\r\n      background-color: ${(props) => (props.item === null ? '#f1f1f1' : 'var(--color-secondary)')};\r\n      color: ${(props) => (props.item === null ? 'var(--color-dark-50)' : '#fff')};\r\n    }\r\n\r\n    & button:hover{\r\n      background-color: ${(props) => (props.item === null ? '#f1f1f1' : 'var(--color-secondary)')};\r\n      color: ${(props) => (props.item === null ? 'var(--color-dark-50)' : '#fff')};\r\n    }\r\n     \r\n`;\r\n\r\nexport default StyledMenu;\r\n", "import { DEFAULT_ERROR_MESSAGE, DEFAULT_ERROR_MESSAGE_BOT } from 'app/utils/backend/constants';\r\nimport generateSessionIdHash from 'app/utils/backend/crypto';\r\nimport slack from 'app/utils/backend/slackNotifications';\r\nimport { stripNewLines, truncate } from 'app/utils/backend/stringUtils';\r\nimport sanitizeHTML from 'app/utils/backend/sanitizer';\r\nimport { createQuestionSchema } from 'app/utils/backend/validators/question';\r\nimport { db } from 'app/utils/db.server';\r\nimport { SLACK_QUESTION_LIMIT } from 'app/utils/backend/slackConstants';\r\nimport { EMAILS } from 'app/utils/backend/emails/emailConstants';\r\nimport { getQuestionDetailUrl } from 'app/utils/backend/urlUtils';\r\nimport { sendEmail } from 'app/utils/backend/emails/emailHandler';\r\n\r\nconst createQuestion = async (body) => {\r\n  const { error, value } = createQuestionSchema.validate(body);\r\n  const { botEnabled, accessToken, ...rest } = value;\r\n\r\n  if (error) {\r\n    return {\r\n      errors: [\r\n        {\r\n          message: botEnabled ? DEFAULT_ERROR_MESSAGE_BOT : DEFAULT_ERROR_MESSAGE,\r\n          detail: error,\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  let created = await db.Questions.create({\r\n    data: {\r\n      ...rest,\r\n      question: sanitizeHTML(value.question),\r\n      bot_enabled: botEnabled,\r\n    },\r\n  });\r\n\r\n  if (value.is_anonymous) {\r\n    const sessionHash = generateSessionIdHash(accessToken, created.question_id);\r\n\r\n    created = await db.Questions.update({\r\n      where: {\r\n        question_id: created.question_id,\r\n      },\r\n      data: {\r\n        user_hash: sessionHash,\r\n      },\r\n    });\r\n\r\n    if (created.assigned_to_employee_id == null || created.assigned_to_employee_id === undefined) {\r\n      const user = await db.users.findFirst({\r\n        where: {\r\n          email: process.env.EMAIL_AUTH_USER,\r\n        },\r\n      });\r\n\r\n      if (user) {\r\n        created.assigned_to_employee_id = user.employee_id;\r\n      }\r\n    }\r\n\r\n    const userAssigned = await db.users.findUnique({\r\n      where: {\r\n        employee_id: created.assigned_to_employee_id,\r\n      },\r\n    });\r\n\r\n    await sendEmail({\r\n      to: userAssigned.email,\r\n      subject: EMAILS.anonymousQuestionAssigned.subject,\r\n      template: EMAILS.anonymousQuestionAssigned.template,\r\n      context: {\r\n        name: userAssigned.full_name,\r\n        question_url: getQuestionDetailUrl(created.question_id),\r\n        question_text: created.question,\r\n      },\r\n    });\r\n  } else {\r\n    await slack.createQuestionNotification({\r\n      questionBody: stripNewLines(truncate(value.question), SLACK_QUESTION_LIMIT),\r\n      questionId: created.question_id,\r\n    });\r\n  }\r\n\r\n  return {\r\n    successMessage: 'The question has been created succesfully!',\r\n    question: created,\r\n  };\r\n};\r\n\r\nexport default createQuestion;\r\n", "export const getBaseUrl = () => process.env.BASE_URL || 'https://questions.wizeline.com';\r\n\r\nexport const getQuestionDetailUrl = (id) => `${getBaseUrl()}/questions/${id}`;\r\n", "import { DEFAULT_ERROR_MESSAGE_CREATE_BOT } from 'app/utils/backend/constants';\r\nimport { createBotSchema } from 'app/utils/backend/validators/answerBot';\r\nimport { CREATED_ANSWEBOT } from 'app/utils/constants';\r\nimport { db } from 'app/utils/db.server';\r\n\r\nconst createAnswerByBot = async (body) => {\r\n  // Validates the received data.\r\n  const { error, value } = createBotSchema.validate(body);\r\n\r\n  // Error and exception handling for validation.\r\n  if (error) {\r\n    return {\r\n      error: {\r\n        message: DEFAULT_ERROR_MESSAGE_CREATE_BOT,\r\n        detail: error.message,\r\n      },\r\n    };\r\n  }\r\n\r\n  // Destructuring, rest has all the remaining values of the data.\r\n  const { ...rest } = value;\r\n\r\n  // Create a new record.\r\n  const created = await db.AnswerBot.create({\r\n    data: {\r\n      ...rest,\r\n    },\r\n  });\r\n\r\n  // Returns a success message of the operation performed.\r\n  return {\r\n    successMessage: CREATED_ANSWEBOT,\r\n    question: created,\r\n  };\r\n};\r\n\r\nexport default createAnswerByBot;\r\n", "import Joi from 'joi';\r\nimport {\r\n  MAXIMUM_QUESTION_LENGTH,\r\n  MINIMUM_QUESTION_LENGTH,\r\n  MINIMUM_ANSWER_LENGTH,\r\n  MAXIMUM_ANSWER_LENGTH,\r\n} from 'app/utils/backend/constants';\r\n\r\n// Validate that the data is correct to create a new record.\r\nexport const createBotSchema = Joi.object().keys({\r\n  question_by_user: Joi.string()\r\n    .min(MINIMUM_QUESTION_LENGTH)\r\n    .max(MAXIMUM_QUESTION_LENGTH)\r\n    .required(),\r\n  answer_by_bot: Joi.string()\r\n    .min(MINIMUM_ANSWER_LENGTH)\r\n    .max(MAXIMUM_ANSWER_LENGTH)\r\n    .required(),\r\n  assigned_department: Joi.number().integer()\r\n    .min(1)\r\n    .allow(null),\r\n  user_id: Joi.number().integer()\r\n    .min(1)\r\n    .allow(null),\r\n});\r\n\r\n// Validate that the data is correct to update the response feedback.\r\nexport const modifyFeedbackBotSchema = Joi.object().keys({\r\n  question_by_user: Joi.string()\r\n    .min(MINIMUM_QUESTION_LENGTH)\r\n    .max(MAXIMUM_QUESTION_LENGTH)\r\n    .required(),\r\n  answer_by_bot: Joi.string()\r\n    .min(MINIMUM_ANSWER_LENGTH)\r\n    .max(MAXIMUM_ANSWER_LENGTH)\r\n    .required(),\r\n  answerFeedback: Joi.number().integer()\r\n    .min(-1)\r\n    .max(1)\r\n    .required(),\r\n  assigned_department: Joi.number().integer()\r\n    .min(1)\r\n    .allow(null),\r\n  user_id: Joi.number().integer()\r\n    .min(1)\r\n    .allow(null),\r\n});\r\n\r\n// Validate that the data is correct to update the id of the post question.\r\nexport const modifyBotPostQuestion = Joi.object().keys({\r\n  postQuestionID: Joi.number().integer()\r\n    .min(1)\r\n    .required(),\r\n  question_by_user: Joi.string()\r\n    .min(MINIMUM_QUESTION_LENGTH)\r\n    .max(MAXIMUM_QUESTION_LENGTH)\r\n    .required(),\r\n  answer_by_bot: Joi.string()\r\n    .min(MINIMUM_ANSWER_LENGTH)\r\n    .max(MAXIMUM_ANSWER_LENGTH)\r\n    .required(),\r\n  assigned_department: Joi.number().integer()\r\n    .min(1)\r\n    .allow(null),\r\n  user_id: Joi.number().integer()\r\n    .min(1)\r\n    .allow(null),\r\n});\r\n", "import { DEFAULT_ERROR_MESSAGE_FEEDBACK_BOT } from 'app/utils/backend/constants';\r\nimport { modifyFeedbackBotSchema } from 'app/utils/backend/validators/answerBot';\r\nimport { POSITIVE_FEEDBACK_ANSWEBOT, NEGATIVE_FEEDBACK_ANSWEBOT } from 'app/utils/constants';\r\nimport { db } from 'app/utils/db.server';\r\n\r\nconst updateFeedback = async (body) => {\r\n  // Validates the received data.\r\n  const { error, value } = modifyFeedbackBotSchema.validate(body);\r\n\r\n  // Error and exception handling for validation.\r\n  if (error) {\r\n    return {\r\n      error: {\r\n        message: DEFAULT_ERROR_MESSAGE_FEEDBACK_BOT,\r\n        detail: error.message,\r\n      },\r\n    };\r\n  }\r\n\r\n  // Destructuring, rest has all the remaining values of the data.\r\n  const { answerFeedback, ...rest } = value;\r\n\r\n  // Find the record that matches the submitted values.\r\n  const findFeed = await db.AnswerBot.findFirst({\r\n    where: {\r\n      answer_feedback: 0,\r\n      ...rest,\r\n    },\r\n    orderBy: {\r\n      date_created: 'desc',\r\n    },\r\n  });\r\n\r\n  // Error and exception handling in case there is no record to update.\r\n  if (!findFeed) {\r\n    return {\r\n      error: {\r\n        message: DEFAULT_ERROR_MESSAGE_FEEDBACK_BOT,\r\n        detail: 'The record to update the feedback does not exist.',\r\n      },\r\n    };\r\n  }\r\n\r\n  // If the record exists, update the feedback.\r\n  const updateFeed = await db.AnswerBot.update({\r\n    where: {\r\n      id: findFeed.id,\r\n    },\r\n    data: {\r\n      answer_feedback: answerFeedback,\r\n    },\r\n  });\r\n\r\n  // Returns a success message of the operation performed.\r\n  return {\r\n    successMessage: answerFeedback === 1 ? POSITIVE_FEEDBACK_ANSWEBOT : NEGATIVE_FEEDBACK_ANSWEBOT,\r\n    feedback: updateFeed,\r\n  };\r\n};\r\n\r\nexport default updateFeedback;\r\n", "import { DEFAULT_ERROR_MESSAGE_POST_BOT } from 'app/utils/backend/constants';\r\nimport { modifyBotPostQuestion } from 'app/utils/backend/validators/answerBot';\r\nimport { POSTED_ANSWEBOT } from 'app/utils/constants';\r\nimport { db } from 'app/utils/db.server';\r\n\r\nconst updatePost = async (body) => {\r\n  // Validates the received data.\r\n  const { error, value } = modifyBotPostQuestion.validate(body);\r\n\r\n  // Error and exception handling for validation.\r\n  if (error) {\r\n    return {\r\n      error: {\r\n        message: DEFAULT_ERROR_MESSAGE_POST_BOT,\r\n        detail: error.message,\r\n      },\r\n    };\r\n  }\r\n\r\n  // Destructuring, rest has all the remaining values of the data.\r\n  const { postQuestionID, ...rest } = value;\r\n\r\n  // Find the record that matches the submitted values.\r\n  const findQABot = await db.AnswerBot.findFirst({\r\n    where: {\r\n      post_question_id: null,\r\n      answer_feedback: -1,\r\n      ...rest,\r\n    },\r\n    orderBy: {\r\n      date_created: 'desc',\r\n    },\r\n  });\r\n\r\n  // Error and exception handling in case there is no record to update.\r\n  if (!findQABot) {\r\n    return {\r\n      error: {\r\n        message: DEFAULT_ERROR_MESSAGE_POST_BOT,\r\n        detail: 'The record to update the link between AnswerBot and Question does not exist.',\r\n      },\r\n    };\r\n  }\r\n\r\n  // If the record exists, update the link.\r\n  const upToDate = await db.AnswerBot.update({\r\n    where: {\r\n      id: findQABot.id,\r\n    },\r\n    data: {\r\n      post_question_id: postQuestionID,\r\n    },\r\n  });\r\n\r\n  // Returns a success message of the operation performed.\r\n  return {\r\n    successMessage: POSTED_ANSWEBOT,\r\n    detail: upToDate,\r\n  };\r\n};\r\n\r\nexport default updatePost;\r\n", "export { default } from './AnswerBot';\r\n", "import * as Styled from 'app/components/AnswerBot/AnswerBot.Styled';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { pdfConv } from 'app/controllers/answerBot/pdfConv';\r\nimport PropTypes from 'prop-types';\r\nimport useUser from 'app/utils/hooks/useUser';\r\nimport {\r\n  WELCOME_MESSAGE,\r\n  INSTRUCTIONS_ANSWERBOT,\r\n  POSITIVE_FEEDBACK_ANSWEBOT,\r\n  NEGATIVE_FEEDBACK_ANSWEBOT,\r\n  POSTED_ANSWEBOT,\r\n} from 'app/utils/constants';\r\nimport {\r\n  DEFAULT_ERROR_MESSAGE_BOT,\r\n  DEFAULT_ERROR_MESSAGE_FEEDBACK_BOT,\r\n  DEFAULT_ERROR_MESSAGE_POST_BOT,\r\n} from 'app/utils/backend/constants';\r\nimport useGlobalSuccessMessage from 'app/utils/hooks/useGlobalSuccessMessage';\r\nimport { useActionData } from '@remix-run/react';\r\n\r\nfunction AnswerBot({\r\n  postAnswerBotQuestion,\r\n  updateAnswerBotFeedback,\r\n  updateAnswerBotPostID,\r\n  departments,\r\n}) {\r\n  /// ///////////// Send Question to AnswerBot ////////////////\r\n\r\n  // Instrucciones (query principal)\r\n  const instructions = INSTRUCTIONS_ANSWERBOT;\r\n\r\n  // The chat history in the chatbot.\r\n  const [messages, setMessages] = useState([{ role: 'system', content: instructions }, { role: 'system', content: WELCOME_MESSAGE }]);\r\n  // To save the id of the assigned department.\r\n  const [messagesID, setMessagesID] = useState([{ role: 'system', content: instructions, depa: null }, { role: 'system', content: WELCOME_MESSAGE, depa: null }]);\r\n\r\n  // Variables for chatbot effects.\r\n  const messagesEndRef = useRef(null);\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [isWaitingForResponse, setIsWaitingForResponse] = useState(false);\r\n\r\n  // To send the user's question to the bot, be able to receive\r\n  // an answer and register a new record in the AnswerBot table.\r\n  const handleInput = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Extracts the input.\r\n    const input = e.target.querySelector('input');\r\n    const message = input.value;\r\n\r\n    // Verifies that the input is greater than 13 characters in order to proceed with the process.\r\n    if (message.length > 13) {\r\n      input.value = '';\r\n\r\n      // Update specific variables for chatbot effects.\r\n      setInputValue(input.value);\r\n      setIsWaitingForResponse(true);\r\n      setMessages([...messages, { role: 'user', content: message }, { role: 'system', content: '...' }]);\r\n\r\n      // Concatenate the user's question to the chat history and send it to the bot model.\r\n      const chatHistory = [...messages, { role: 'user', content: message }];\r\n      // Except the welcome message.\r\n      const filteredMessages = chatHistory.filter((mess, index) => index !== 1);\r\n      const response = await pdfConv(filteredMessages);\r\n\r\n      // Extract answer from bot response.\r\n      const answer = response.text;\r\n      setMessages([...messages, { role: 'user', content: message }, { role: 'system', content: answer }]);\r\n      setIsWaitingForResponse(false);\r\n\r\n      // Extract department from bot response.\r\n      const depaName = response.department;\r\n      const department = departments.find((c) => c.name === depaName);\r\n      setMessagesID([...messagesID, { role: 'user', content: message, depa: department?.department_id || 'wizeq' }, { role: 'system', content: answer, depa: department?.department_id || 'wizeq' }]);\r\n\r\n      // Create the payload.\r\n      const newQuestion = {\r\n        question_by_user: message,\r\n        answer_by_bot: answer,\r\n        assignedDepartment: department?.department_id || 'wizeq',\r\n      };\r\n\r\n      // Create a new record.\r\n      await postAnswerBotQuestion(newQuestion);\r\n    }\r\n  };\r\n\r\n  // Updates the variable every time the value of the input is changed.\r\n  const handleChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  // To update the view of the chatbot box to the last message.\r\n  useEffect(() => {\r\n    const scrollToBottom = () => {\r\n      if (messagesEndRef.current) {\r\n        messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\r\n      }\r\n    };\r\n    scrollToBottom();\r\n    if (messagesEndRef.current) {\r\n      messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\r\n    }\r\n  }, [messages]);\r\n\r\n  const [chatbotVisible, setChatbotVisible] = useState(false);\r\n\r\n  // To open and close the chatbot.\r\n  const handleChatbotToggle = () => {\r\n    setChatbotVisible(!chatbotVisible);\r\n  };\r\n\r\n  /// ///////////// Feedback to AnswerBot ////////////////\r\n\r\n  const [showThanksMessage, setShowThanksMessage] = useState({});\r\n  const [indexMessage, setIndexMessage] = useState(null);\r\n\r\n  // To update the response feedback to positive.\r\n  const handleLikeClick = async (index) => {\r\n    // Setting the index.\r\n    setIndexMessage(index);\r\n\r\n    // Create the payload.\r\n    const updateFeedback = {\r\n      question_by_user: messages[index].content,\r\n      answer_by_bot: messages[index + 1].content,\r\n      answerFeedback: 1,\r\n      assignedDepartment: messagesID[index].depa,\r\n    };\r\n\r\n    // Update the feedback of the record.\r\n    await updateAnswerBotFeedback(updateFeedback);\r\n\r\n    setShowThanksMessage((prevShowThanksMessage) => ({\r\n      ...prevShowThanksMessage,\r\n      [index]: 'Loading...',\r\n    }));\r\n  };\r\n\r\n  // To update the response feedback to negative.\r\n  const handleDislikeClick = async (index) => {\r\n    // Setting the index.\r\n    setIndexMessage(index);\r\n\r\n    // Create the payload.\r\n    const updateFeedback = {\r\n      question_by_user: messages[index].content,\r\n      answer_by_bot: messages[index + 1].content,\r\n      answerFeedback: -1,\r\n      assignedDepartment: messagesID[index].depa,\r\n    };\r\n\r\n    // Update the feedback of the record.\r\n    await updateAnswerBotFeedback(updateFeedback);\r\n\r\n    setShowThanksMessage((prevShowThanksMessage) => ({\r\n      ...prevShowThanksMessage,\r\n      [index]: 'Loading...',\r\n    }));\r\n  };\r\n\r\n  // To post a question and be able to link it to the record made in the AnswerBot table.\r\n  const handlePublishQuestion = async (index) => {\r\n    // Setting the index.\r\n    setIndexMessage(index);\r\n\r\n    // Create the payload.\r\n    const updatePostID = {\r\n      question: messages[index].content,\r\n      answer: messages[index + 1].content,\r\n      assignedDepartment: messagesID[index].depa,\r\n    };\r\n\r\n    // Update the id of the posted question with the answerbot's\r\n    await updateAnswerBotPostID(updatePostID);\r\n\r\n    setShowThanksMessage((prevShowThanksMessage) => ({\r\n      ...prevShowThanksMessage,\r\n      [index]: 'Loading...',\r\n    }));\r\n  };\r\n\r\n  /// //////////////// User ///////////////////\r\n\r\n  const profile = useUser();\r\n\r\n  /// //////////////// To Handle the Success/Error Messages in the Bot ///////////////////\r\n\r\n  const globalSuccess = useGlobalSuccessMessage();\r\n  const data = useActionData();\r\n\r\n  useEffect(() => {\r\n    // Checking if the action was successful\r\n    if (globalSuccess) {\r\n      switch (globalSuccess) {\r\n        // For positive feedback\r\n        case POSITIVE_FEEDBACK_ANSWEBOT:\r\n          // Show thanks message.\r\n          setShowThanksMessage((prevShowThanksMessage) => ({\r\n            ...prevShowThanksMessage,\r\n            [indexMessage]: true,\r\n          }));\r\n\r\n          // Set a time to fade the gratitude message.\r\n          setTimeout(() => {\r\n            setShowThanksMessage((prevShowThanksMessage) => ({\r\n              ...prevShowThanksMessage,\r\n              [indexMessage]: 'na',\r\n            }));\r\n          }, 2500);\r\n\r\n          break;\r\n\r\n        // For negative feedback\r\n        case NEGATIVE_FEEDBACK_ANSWEBOT:\r\n          // Show thanks message.\r\n          setShowThanksMessage((prevShowThanksMessage) => ({\r\n            ...prevShowThanksMessage,\r\n            [indexMessage]: true,\r\n          }));\r\n\r\n          // Show a message if the user would like to share the question in the forum.\r\n          setTimeout(() => {\r\n            setShowThanksMessage((prevShowThanksMessage) => ({\r\n              ...prevShowThanksMessage,\r\n              [indexMessage]: 'Would you like to share your question with the community?',\r\n            }));\r\n          }, 1500);\r\n\r\n          break;\r\n\r\n        // For posting question\r\n        case POSTED_ANSWEBOT:\r\n          // Show thanks message.\r\n          setShowThanksMessage((prevShowThanksMessage) => ({\r\n            ...prevShowThanksMessage,\r\n            [indexMessage]: 'Your question has been published successfully.',\r\n          }));\r\n\r\n          // Set a time to fade the gratitude message.\r\n          setTimeout(() => {\r\n            setShowThanksMessage((prevShowThanksMessage) => ({\r\n              ...prevShowThanksMessage,\r\n              [indexMessage]: 'na',\r\n            }));\r\n          }, 2500);\r\n\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n\r\n      setIndexMessage(null);\r\n    }\r\n  }, [globalSuccess]);\r\n\r\n  useEffect(() => {\r\n    if (!data) return;\r\n\r\n    const { error, errors } = data;\r\n\r\n    if (errors && Array.isArray(errors)) {\r\n      errors.forEach((_error) => {\r\n        if (_error.message === DEFAULT_ERROR_MESSAGE_BOT) {\r\n          // Show error message.\r\n          setShowThanksMessage((prevShowThanksMessage) => ({\r\n            ...prevShowThanksMessage,\r\n            [indexMessage]: DEFAULT_ERROR_MESSAGE_POST_BOT,\r\n          }));\r\n\r\n          // Set a time to fade the error message.\r\n          setTimeout(() => {\r\n            setShowThanksMessage((prevShowThanksMessage) => ({\r\n              ...prevShowThanksMessage,\r\n              [indexMessage]: 'Would you like to share your question with the community?',\r\n            }));\r\n          }, 3000);\r\n        }\r\n      });\r\n\r\n      setIndexMessage(null);\r\n\r\n      return;\r\n    }\r\n\r\n    if (error) {\r\n      switch (error.message) {\r\n        // Error in feedback\r\n        case DEFAULT_ERROR_MESSAGE_FEEDBACK_BOT:\r\n          // Show error message\r\n          setShowThanksMessage((prevShowThanksMessage) => ({\r\n            ...prevShowThanksMessage,\r\n            [indexMessage]: DEFAULT_ERROR_MESSAGE_FEEDBACK_BOT,\r\n          }));\r\n\r\n          // Set a time to fade the error message\r\n          setTimeout(() => {\r\n            setShowThanksMessage((prevShowThanksMessage) => ({\r\n              ...prevShowThanksMessage,\r\n              [indexMessage]: false,\r\n            }));\r\n          }, 2500);\r\n\r\n          break;\r\n\r\n        // Error in post\r\n        case DEFAULT_ERROR_MESSAGE_POST_BOT:\r\n          // Show error message\r\n          setShowThanksMessage((prevShowThanksMessage) => ({\r\n            ...prevShowThanksMessage,\r\n            [indexMessage]: DEFAULT_ERROR_MESSAGE_POST_BOT,\r\n          }));\r\n\r\n          // Set a time to fade the error message\r\n          setTimeout(() => {\r\n            setShowThanksMessage((prevShowThanksMessage) => ({\r\n              ...prevShowThanksMessage,\r\n              [indexMessage]: 'na',\r\n            }));\r\n          }, 2500);\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n\r\n      setIndexMessage(null);\r\n    }\r\n  }, [data]);\r\n\r\n  /// ///////////// Components ////////////////\r\n\r\n  return (\r\n    <div>\r\n      <Styled.BotButton id=\"answerbotbutton\" visible={!chatbotVisible} onClick={handleChatbotToggle}>\r\n        <Styled.BotIcon />\r\n        <Styled.BotMessage className=\"message\">\r\n          Hi, I&apos;m AnswerBot!\r\n          <br />\r\n          Ask me anything!\r\n        </Styled.BotMessage>\r\n      </Styled.BotButton>\r\n\r\n      <Styled.ChatbotContainer visible={chatbotVisible}>\r\n        <Styled.ChatbotHeader>\r\n          <Styled.IconBot style={{ position: 'absolute' }} />\r\n          <Styled.BotName id=\"openchat\"> AnswerBot </Styled.BotName>\r\n          <Styled.CloseButton id=\"closechat\" onClick={handleChatbotToggle}> \u2715 </Styled.CloseButton>\r\n        </Styled.ChatbotHeader>\r\n\r\n        <Styled.ChatbotMessages>\r\n          {messages.slice(1).map((message, index) => (\r\n            message.role === 'user' ? (\r\n              <Styled.ChatbotRowMessage id={`msg-${index}`} style={{ justifyContent: 'flex-end' }}>\r\n                <Styled.Message\r\n                  id={`internal-msg-${index}`}\r\n                  key={`message-${message.id}`}\r\n                  className=\"user\"\r\n                  ref={messagesEndRef}\r\n                  isWaiting={false}\r\n                >\r\n                  <span>{message.content}</span>\r\n                </Styled.Message>\r\n                <Styled.IconUser id={`icon-user-${index}`} src={profile.profile_picture} />\r\n              </Styled.ChatbotRowMessage>\r\n            )\r\n              : (\r\n                <div>\r\n                  <Styled.ChatbotRowMessage id={`msg-${index}`} style={{ justifyContent: 'flex-start' }}>\r\n                    <Styled.IconBot />\r\n                    <Styled.Message\r\n                      id={`internal-msg-${index}`}\r\n                      key={`message-${message.id}`}\r\n                      className=\"bot\"\r\n                      ref={messagesEndRef}\r\n                      isWaiting={isWaitingForResponse && index + 2 === messages.length}\r\n                    >\r\n                      <span>{message.content}</span>\r\n                    </Styled.Message>\r\n                  </Styled.ChatbotRowMessage>\r\n                  {index !== 0 && (\r\n                  <div>\r\n                    {!showThanksMessage[index]\r\n                    && (index !== messages.length - 2 || !isWaitingForResponse) && (\r\n                      <>\r\n                        <Styled.LikeButton\r\n                          id={`like-${index}`}\r\n                          key={`like-${message.id}`}\r\n                          onClick={() => handleLikeClick(index)}\r\n                        />\r\n                        <Styled.DislikeButton\r\n                          id={`dislike-${index}`}\r\n                          key={`dislike-${message.id}`}\r\n                          onClick={() => handleDislikeClick(index)}\r\n                        />\r\n                      </>\r\n                    )}\r\n                    {showThanksMessage[index] && (\r\n                      <Styled.TextFeedback id={`feedback-${index}`} padding={showThanksMessage[index]}>\r\n                        {showThanksMessage[index] === true && ('Thanks for the feedback!')}\r\n                        {showThanksMessage[index] === 'na' && ('')}\r\n                        {!(showThanksMessage[index] === 'Thanks for the feedback!' || showThanksMessage[index] === 'na') && (showThanksMessage[index])}\r\n                      </Styled.TextFeedback>\r\n                    )}\r\n                    {showThanksMessage[index] === 'Would you like to share your question with the community?' && (\r\n                      <Styled.PublishButton id={`publishbutton-${index}`} onClick={() => handlePublishQuestion(index)}>\r\n                        Post question\r\n                      </Styled.PublishButton>\r\n                    )}\r\n                  </div>\r\n                  )}\r\n                </div>\r\n              )\r\n          ))}\r\n        </Styled.ChatbotMessages>\r\n\r\n        <Styled.ChatbotInput onSubmit={handleInput}>\r\n          <Styled.Input\r\n            id=\"chatbotinput\"\r\n            type=\"text\"\r\n            placeholder=\"Enter your question...\"\r\n            onChange={handleChange}\r\n            disabled={isWaitingForResponse}\r\n            enabled={!isWaitingForResponse}\r\n            title=\"Type at least 14 characters\"\r\n          />\r\n          <Styled.SendButton id=\"sendbutton\" type=\"submit\" inputLength={inputValue.length} disabled={isWaitingForResponse} />\r\n        </Styled.ChatbotInput>\r\n      </Styled.ChatbotContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nAnswerBot.propTypes = {\r\n  postAnswerBotQuestion: PropTypes.func.isRequired,\r\n  updateAnswerBotFeedback: PropTypes.func.isRequired,\r\n  updateAnswerBotPostID: PropTypes.func.isRequired,\r\n  departments: PropTypes.arrayOf(\r\n    PropTypes.shape(),\r\n  ),\r\n};\r\n\r\nAnswerBot.defaultProps = {\r\n  departments: [],\r\n};\r\n\r\nexport default AnswerBot;\r\n", "import styled, { keyframes, css } from 'styled-components';\r\n\r\nimport botImage from 'app/images/logo_answerbot.png';\r\nimport postIcon from 'app/images/post-icon.png';\r\n\r\nimport likeIcon from 'app/images/like.png';\r\nimport dislikeIcon from 'app/images/dislike.png';\r\n\r\nimport likeHoverIcon from 'app/images/likeHover.png';\r\nimport dislikeHoverIcon from 'app/images/dislikeHover.png';\r\n\r\n/// ///////////////////////////////////// AnswerBot Button /////////////////////////////////////\r\n\r\nexport const BotButton = styled.button`\r\n    background-color: #213246;\r\n    border: none;\r\n    width: 8.4vw;\r\n    height: 8.4vw;\r\n    right: 0px;\r\n    position: fixed;\r\n    top: 70%;\r\n    border-top-left-radius: 25px;\r\n    border-bottom-left-radius: 25px;\r\n    box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.5);\r\n    visibility: ${(props) => (props.visible ? 'visible' : 'hidden')};\r\n    transition: width 0.3s ease-in-out;\r\n\r\n    & > .message {\r\n        opacity: 0;\r\n        visibility: hidden;\r\n        transition: opacity 0.3s ease-in-out;\r\n    }\r\n\r\n    &:hover {\r\n        width: 19vw;\r\n\r\n        & > .message {\r\n            opacity: 1;\r\n            visibility: visible;\r\n            transition: opacity 0.25s ease-in-out;\r\n            transition-delay: 0.2s;\r\n        }\r\n        \r\n        @media screen and (min-width: 1600px) {\r\n            width: 14vw;\r\n        }\r\n\r\n        @media screen and (min-width: 2000px) {\r\n            width: 13vw;\r\n        }\r\n    }\r\n\r\n    @media screen and (max-width: 1025px) {\r\n        display: none;\r\n    }\r\n\r\n    @media screen and (min-width: 1600px) {\r\n        width: 6vw;\r\n        height: 6vw;\r\n    }\r\n`;\r\n\r\nexport const BotIcon = styled.img`\r\n    width: 5.6vw;\r\n    height: 5.6vw;\r\n    border-radius: 50%;\r\n    background-color: #fff;\r\n    border: none;\r\n    background-image: url(${botImage});\r\n    background-size: 75%;\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n    box-shadow: inset 0 0 10px 0 rgba(0, 0, 0, 0.5);\r\n    position: absolute;\r\n    left: 1.5vw;\r\n    transform: translateY(-50%);\r\n\r\n    @media screen and (min-width: 1600px) {\r\n        width: 4vw;\r\n        height: 4vw;\r\n        left: 1.25vw;\r\n    }\r\n`;\r\n\r\nexport const BotMessage = styled.div`\r\n    color: #fff;\r\n    font-size: 115%;\r\n    font-weight: bold;\r\n    position: absolute;\r\n    right: 1.3vw;\r\n    padding-left: 7.85vw;\r\n    transform: translateY(-50%);\r\n\r\n    @media screen and (max-width: 1240px) {\r\n        font-size: 100%;\r\n        right: 1.1vw;\r\n    }\r\n\r\n    @media screen and (max-width: 1100px) {\r\n        font-size: 85%;\r\n    }\r\n\r\n    @media screen and (min-width: 1600px) {\r\n        font-size: 90%;\r\n        padding-left: 5vw;\r\n    }\r\n\r\n`;\r\n\r\n/// ////////////////////////////////////// ChatBot /////////////////////////////////////////\r\n\r\nexport const ChatbotContainer = styled.div`\r\n    position: fixed;\r\n    bottom: 0px;\r\n    right: 0px;\r\n    width: 330px;\r\n    height: 430px;\r\n    border-top-left-radius: 20px;\r\n    border-top-right-radius: 20px;\r\n    box-shadow: 0 0 20px rgba(0, 0, 0, 0.2);\r\n    background-color: #E1EAF4;\r\n    display: flex;\r\n    flex-direction: column;\r\n    transition: visibility 0.3s ease-in-out;\r\n    visibility: ${(props) => (props.visible ? 'visible' : 'hidden')};\r\n\r\n    @media screen and (max-width: 1025px) {\r\n        display: none;\r\n    }\r\n\r\n    @media screen and (max-height: 450px) {\r\n        display: none;\r\n    }\r\n`;\r\n\r\nexport const ChatbotHeader = styled.div`\r\n    background-color: #213246;\r\n    height: 40px;\r\n    border-top-left-radius: 20px;\r\n    border-top-right-radius: 20px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 0 47.5px;\r\n`;\r\n\r\nexport const IconBot = styled.img`\r\n    width: 25px;\r\n    height: 25px;\r\n    border-radius: 50%;\r\n    background-color: #fff;\r\n    border: 0px solid transparent;\r\n    background-image: url(${botImage});\r\n    background-size: 75%;\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n    box-shadow: inset 0 0 10px 0 rgba(0, 0, 0, 0.5);\r\n    left: 5%;\r\n    margin: 5px 0px;\r\n`;\r\n\r\nexport const IconUser = styled.img`\r\n    width: 25px;\r\n    height: 25px;\r\n    border-radius: 50%;\r\n    background-color: #fff;\r\n    border: 0px solid transparent;\r\n    box-shadow: inset 0 0 10px 0 rgba(0, 0, 0, 0.5);\r\n    margin-right: 10px;\r\n    margin: 5px 0px;\r\n`;\r\n\r\nexport const BotName = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    font-weight: bold;\r\n    color: #fff;\r\n    padding: 0 85px;\r\n\r\n    @media screen and (min-width: 2975px) {\r\n        padding: 0 75px;\r\n    }\r\n`;\r\n\r\nexport const CloseButton = styled.button`\r\n    color: #fff;\r\n    font-size: 15px;\r\n    background-color: transparent;\r\n    border: none;\r\n    transform: scale(1);\r\n    transition: transform 0.3s ease-in-out;\r\n\r\n    &:hover {\r\n        transform: scale(1.4);\r\n    }\r\n`;\r\n\r\nexport const ChatbotMessages = styled.div`\r\n    flex: 1;\r\n    padding: 10px;\r\n    overflow-y: auto;\r\n`;\r\n\r\nexport const ChatbotRowMessage = styled.div`\r\n    display: flex;\r\n    alignItems: center;\r\n`;\r\n\r\nconst blinkAnimation = keyframes`\r\n  0% {\r\n    opacity: 0.2;\r\n  }\r\n  50% {\r\n    opacity: 1;\r\n  }\r\n  100% {\r\n    opacity: 0.2;\r\n  }\r\n`;\r\n\r\nexport const Message = styled.div`\r\n    padding: 10px 10px;\r\n    border-bottom-right-radius: 10px;\r\n    border-bottom-left-radius: 10px;\r\n    margin: 5px 7.5px;\r\n    max-width: 80%;\r\n    word-break: break-word;\r\n\r\n    &.user {\r\n        background-color: #fff;\r\n        border-top-left-radius: 10px;\r\n        align-self: flex-end;\r\n        color: #000;\r\n        text-align: right;\r\n        \r\n    }\r\n\r\n    &.bot {\r\n        background-color: #213246;\r\n        border-top-right-radius: 10px;\r\n        color: #fff;\r\n\r\n        ${(props) => props.isWaiting && css`\r\n          position: relative;\r\n          overflow: hidden;\r\n\r\n          > span {\r\n            animation: ${blinkAnimation} 1s infinite alternate;\r\n            animation-delay: ${props.index * 0.2}s;\r\n          }\r\n        `}\r\n    }\r\n`;\r\n\r\nexport const ChatbotInput = styled.form`\r\n    display: flex;\r\n    align-items: center;\r\n    width: 330px;\r\n    background-color: #fff;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n    flex: 1;\r\n    padding: 10px;\r\n    border: none;\r\n    outline: none;\r\n    cursor: ${(props) => (props.enabled ? 'text' : 'not-allowed')};\r\n`;\r\n\r\nexport const SendButton = styled.button`\r\n    width: 30px;\r\n    height: 30px;\r\n    border-radius: 25%;\r\n    background-color: #fff;\r\n    border: none;\r\n    background-image: url(${postIcon});\r\n    background-size: 50%;\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n    margin: 5px 5px;\r\n    opacity: ${(props) => (props.inputLength > 13 ? 1 : 0.3)};\r\n    cursor: ${(props) => (props.inputLength > 13 ? 'pointer' : 'not-allowed')};\r\n    transition: background-color 0.3s ease-in-out;\r\n\r\n    &:hover {\r\n        background-color: ${(props) => (props.inputLength > 13 ? '#F2F2F1' : '#fff')};\r\n    }\r\n`;\r\n\r\n/// ////////////////////////////////////// Feedback /////////////////////////////////////////\r\n\r\nexport const LikeButton = styled.button`\r\n    width: 20px;\r\n    height: 20px;\r\n    border: none;\r\n    background-color: transparent;\r\n    background-image: url(${likeIcon});\r\n    background-size: 75%;\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n    margin: 0 0 2.5% 12.5%;\r\n    padding: 0 5px;\r\n    transition: background-image 0.3s ease-in-out;\r\n\r\n    &:hover {\r\n        background-image: url(${likeHoverIcon});\r\n    }\r\n`;\r\n\r\nexport const DislikeButton = styled.button`\r\n    width: 20px;\r\n    height: 20px;\r\n    border: none;\r\n    background-color: transparent;\r\n    background-image: url(${dislikeIcon});\r\n    background-size: 75%;\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n    transition: background-image 0.3s ease-in-out;\r\n\r\n    &:hover {\r\n        background-image: url(${dislikeHoverIcon});\r\n    }\r\n`;\r\n\r\nexport const TextFeedback = styled.span`\r\n    padding: ${(props) => (props.padding === 'na' ? '0px 0px' : '5px 31px')};\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    align-items: flex-start;\r\n    text-align: left;\r\n`;\r\n\r\nexport const PublishButton = styled.button`\r\n    margin: 0 0 2.5% 10%;\r\n    background-color: #fff;\r\n    color: #213246;\r\n    border: 1px solid #213246;\r\n    padding: 8px 25px;\r\n    border-radius: 4px;\r\n    font-size: 14px;\r\n    cursor: pointer;\r\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1), 0 4px 8px rgba(0, 0, 0, 0.1);\r\n    transition: background-color 0.3s ease, color 0.3s ease;\r\n\r\n    &:hover {\r\n        background-color: #213246;\r\n        color: #fff;\r\n    }\r\n`;\r\n", "import * as Styled from 'app/components/FAQs/FAQs.Styled';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nfunction FAQs({ questionsFAQ }) {\r\n  return (\r\n    <Styled.FAQContainer>\r\n\r\n      <Styled.FAQHeader>FAQ&apos;s</Styled.FAQHeader>\r\n\r\n      {questionsFAQ.map((faq) => (\r\n        <Styled.FAQList>\r\n          <Styled.Question href={`/questions/${faq.question_id}`} key={faq.id} title={faq.question}>\r\n            {faq.question}\r\n          </Styled.Question>\r\n        </Styled.FAQList>\r\n      ))}\r\n\r\n    </Styled.FAQContainer>\r\n  );\r\n}\r\n\r\nFAQs.propTypes = {\r\n  questionsFAQ: PropTypes.arrayOf(\r\n    PropTypes.shape(),\r\n  ),\r\n};\r\n\r\nFAQs.defaultProps = {\r\n  questionsFAQ: [],\r\n};\r\n\r\nexport default FAQs;\r\n", "import styled from 'styled-components';\r\n\r\nexport const FAQContainer = styled.div`\r\n  margin: 30px 40px 0;\r\n  width: 17vw;\r\n  border-radius: 20px;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n  background-color: #ffffff;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const FAQHeader = styled.div`\r\n  background-color: #f5f5f5;\r\n  font-size: 20px;\r\n  border-top-left-radius: 20px;\r\n  border-top-right-radius: 20px;\r\n  text-align: center;\r\n  font-weight: bold;\r\n  padding: 10px 0;\r\n`;\r\n\r\nexport const FAQList = styled.div`\r\n  padding: 10px 25px 10px 25px;\r\n  border: 1px solid #f5f5f5;\r\n\r\n  &:last-child {\r\n    border-bottom-left-radius: 20px;\r\n    border-bottom-right-radius: 20px;\r\n  }\r\n`;\r\n\r\nexport const Question = styled.a`\r\n  font-size: 15px;\r\n  color: #555555;\r\n  text-decoration: none;\r\n  transition: color 0.2s;\r\n  display: -webkit-box;\r\n  -webkit-line-clamp: 3;\r\n  -webkit-box-orient: vertical;\r\n  overflow: hidden;\r\n\r\n  &:hover {\r\n    color: #213246;\r\n  }\r\n`;\r\n", "import { redirect } from '@remix-run/node';\r\nimport authenticator from 'app/auth.server';\r\n\r\nexport const loader = () => redirect('/login');\r\n\r\nexport const action = async ({ request }) => authenticator.authenticate('auth0', request);\r\n", "/* eslint-disable no-console */\r\n/* eslint-disable no-unused-vars */\r\nimport { Authenticator } from 'remix-auth';\r\nimport { Auth0Strategy } from 'remix-auth-auth0';\r\nimport { sessionStorage } from 'app/session.server';\r\nimport { findOrCreateUser } from 'app/controllers/users/find';\r\n\r\nconst callbackURL = `${process.env.BASE_URL}/auth/auth0/callback`;\r\nconst clientID = process.env.AUTH0_CLIENT_ID || 'AUTH0_CLIENT_ID must be set';\r\nconst clientSecret = process.env.AUTH0_CLIENT_SECRET || 'AUTH0_CLIENT_SECRET must be set';\r\nconst domain = process.env.AUTH0_DOMAIN || 'AUTH0_DOMAIN must be set';\r\n\r\nconst authenticator = new Authenticator(sessionStorage);\r\n\r\nconst strategyConfig = {\r\n  callbackURL,\r\n  clientID,\r\n  clientSecret,\r\n  domain,\r\n};\r\n\r\nconst auth0Strategy = new Auth0Strategy(\r\n  strategyConfig,\r\n  async ({\r\n    accessToken, refreshToken, extraParams, profile,\r\n  }) => {\r\n    try {\r\n      const fullName = `${profile.name.givenName} ${profile.name.familyName}`;\r\n      const email = profile.emails.length > 0 ? profile.emails[0].value : undefined;\r\n      const profilePic = profile.photos.length > 0 ? profile.photos[0].value : undefined;\r\n\r\n      const user = await findOrCreateUser({\r\n        full_name: fullName,\r\n        email,\r\n        profile_picture: profilePic,\r\n      });\r\n      return {\r\n        ...user,\r\n        accessToken,\r\n        id: profile.id,\r\n      };\r\n    } catch (e) {\r\n      console.error(e);\r\n      return {};\r\n    }\r\n  },\r\n);\r\n\r\nauthenticator.use(auth0Strategy);\r\n\r\nexport default authenticator;\r\n", "/* eslint-disable camelcase */\r\nimport { db } from 'app/utils/db.server';\r\n\r\nexport const findUser = async (email) => {\r\n  const user = await db.users.findUniqueOrThrow({\r\n    where: {\r\n      email,\r\n    },\r\n  });\r\n  return user;\r\n};\r\n\r\nexport const findOrCreateUser = async ({ email, profile_picture, full_name }) => {\r\n  const user = await db.users.findUnique({\r\n    where: {\r\n      email,\r\n    },\r\n  });\r\n\r\n  if (!user) {\r\n    const createdUser = await db.users.create({\r\n      data: {\r\n        email,\r\n        profile_picture,\r\n        full_name,\r\n      },\r\n    });\r\n\r\n    return createdUser;\r\n  }\r\n\r\n  return user;\r\n};\r\n", "/* eslint-disable import/prefer-default-export */\r\nimport { createUserSession } from 'app/session.server';\r\n\r\nimport authenticator from 'app/auth.server';\r\n\r\nexport const loader = async ({ request }) => {\r\n  const user = await authenticator.authenticate('auth0', request, {\r\n    failureRedirect: '/login',\r\n  });\r\n\r\n  return createUserSession({\r\n    request,\r\n    userData: user,\r\n    remember: false,\r\n    redirectTo: '/',\r\n  });\r\n};\r\n", "/* eslint-disable no-nested-ternary */\r\nimport React, { useState } from 'react';\r\nimport { json } from '@remix-run/node';\r\nimport { useSearchParams, useLoaderData } from '@remix-run/react';\r\nimport * as Styled from 'app/styles/Dashboard.Styled.jsx';\r\nimport { requireAuth } from 'app/session.server';\r\nimport AdminSideBar from 'app/components/AdminSideBar';\r\nimport { Table } from 'react-bootstrap';\r\nimport listQuestions from 'app/controllers/questions/list';\r\nimport listDepartments from 'app/controllers/departments/list';\r\nimport dateRangeConversion from 'app/utils/dateRangeConversion';\r\nimport listAnswerBot from 'app/controllers/answerBot/list';\r\n// import { StylesProvider } from 'app/styles-context';\r\n\r\n// Process and load the data.\r\nexport const loader = async ({ request }) => {\r\n  // Make sure the user is authenticated before continuing.\r\n  await requireAuth(request);\r\n\r\n  // To access the request URL.\r\n  const url = new URL(request.url);\r\n\r\n  // Extract the \"department\" parameter from the URL.\r\n  const department = Number.parseInt(url.searchParams.get('department'), 10);\r\n\r\n  // Gets the date range of the current month.\r\n  const dateRange = dateRangeConversion('this_month');\r\n\r\n  // Get a list of FAQ questions.\r\n  const questionsFAQ = await listQuestions({\r\n    department: Number.isNaN(department) ? undefined : department,\r\n    dateRange,\r\n  });\r\n\r\n  // Get a list of unanswered questions.\r\n  const questionsOF = await listQuestions({\r\n    department: Number.isNaN(department) ? undefined : department,\r\n    status: 'not_answered',\r\n    commentStatus: 'not_approved',\r\n    commentVote: 'not_approved',\r\n    dateRange,\r\n  });\r\n\r\n  // Get a list of bot questions.\r\n  const questionsBot = await listAnswerBot({\r\n    department: Number.isNaN(department) ? undefined : department,\r\n    dateRange,\r\n  });\r\n\r\n  // Get a list of the departments.\r\n  const departments = await listDepartments();\r\n  // Add 2 more departments in the options.\r\n  departments.unshift({ department_id: 0, name: 'Not Assigned' });\r\n  departments.unshift({ department_id: undefined, name: 'All' });\r\n\r\n  // Returns the results in a json.\r\n  return json({\r\n    questionsFAQ,\r\n    questionsOF,\r\n    questionsBot,\r\n    departments,\r\n  });\r\n};\r\n\r\n// Format for the month.\r\nconst months = [\r\n  'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',\r\n  'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec',\r\n];\r\n\r\n// Format for date.\r\nconst formatDate = (dateString) => {\r\n  const date = new Date(dateString);\r\n  const month = months[date.getMonth()];\r\n  const day = date.getDate();\r\n\r\n  return `${month} ${day}`;\r\n};\r\n\r\nfunction Dashboard() {\r\n  // Load the data.\r\n  const {\r\n    questionsFAQ, questionsOF, questionsBot, departments,\r\n  } = useLoaderData();\r\n\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n\r\n  // For the department selector.\r\n  const [selectedDepartment, setSelectedDepartment] = useState(departments[0].department_id);\r\n\r\n  // Change the current value of the department selector and send it to the loader.\r\n  const handleSelectDepartment = (department) => {\r\n    setSelectedDepartment(department);\r\n    searchParams.set('department', department);\r\n    setSearchParams(searchParams);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AdminSideBar\r\n        departments={departments}\r\n        selectedDepartment={selectedDepartment}\r\n        handleSelectDepartment={handleSelectDepartment}\r\n      />\r\n\r\n      <Styled.MainContainer>\r\n        <Styled.NextContainer>\r\n          <Styled.DividerContainer>\r\n            <Styled.TopContainers id=\"openForums\">\r\n              <Styled.ContMargin>\r\n                <Styled.Title>Open Forums</Styled.Title>\r\n                <Table hover>\r\n                  <tbody>\r\n                    {questionsOF.map((question, index) => (\r\n                      <tr>\r\n                        <Styled.Text\r\n                          key={`questionOP-${question.id}`}\r\n                          title={question.question}\r\n                        >\r\n                          {question.question.length > 100\r\n                            ? `${question.question.substring(0, 100)}...`\r\n                            : question.question}\r\n                        </Styled.Text>\r\n                        <td>\r\n                          <Styled.ButtonText\r\n                            id={`button-${index}`}\r\n                            href={`/questions/${question.question_id}`}\r\n                            key={question.id}\r\n                            title={question.question}\r\n                          >\r\n                            Answer it \u2192\r\n                          </Styled.ButtonText>\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </Table>\r\n              </Styled.ContMargin>\r\n            </Styled.TopContainers>\r\n\r\n            <Styled.TopContainers id=\"answerbotF\">\r\n              <Styled.ContMargin>\r\n                <Styled.Title>Answerbot Feedback</Styled.Title>\r\n\r\n                <Table stripped hover>\r\n                  <thead>\r\n                    <tr>\r\n                      <Styled.TextBold width=\"250\">Question</Styled.TextBold>\r\n                      <Styled.TextBold width=\"250\">Answer</Styled.TextBold>\r\n                      <Styled.TextBold width=\"170\">Feedback</Styled.TextBold>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {questionsBot.map((question) => (\r\n                      <tr>\r\n                        <Styled.Text\r\n                          key={`questionAB-${question.id}`}\r\n                          title={question.question_by_user}\r\n                        >\r\n                          {question.question_by_user.length > 50 ? `${question.question_by_user.substring(0, 50)}...` : question.question_by_user}\r\n                        </Styled.Text>\r\n                        <Styled.Text\r\n                          key={`answerAB-${question.id}`}\r\n                          title={question.answer_by_bot}\r\n                        >\r\n                          {question.answer_by_bot.length > 50 ? `${question.answer_by_bot.substring(0, 50)}...` : question.answer_by_bot}\r\n                        </Styled.Text>\r\n                        {question.answer_feedback === -1\r\n                        && (\r\n                        <Styled.TextU key={`feedbackAB-${question.id}`}>\r\n                          <Styled.TextUBorder> Bad </Styled.TextUBorder>\r\n                        </Styled.TextU>\r\n                        )}\r\n                        {question.answer_feedback === 0\r\n                        && (\r\n                        <Styled.TextB key={`feedbackAB-${question.id}`}>\r\n                          <Styled.TextBBorder> N/A </Styled.TextBBorder>\r\n                        </Styled.TextB>\r\n                        )}\r\n                        {question.answer_feedback === 1\r\n                        && (\r\n                        <Styled.TextA key={`feedbackAB-${question.id}`}>\r\n                          <Styled.TextABorder> Good </Styled.TextABorder>\r\n                        </Styled.TextA>\r\n                        )}\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </Table>\r\n              </Styled.ContMargin>\r\n            </Styled.TopContainers>\r\n          </Styled.DividerContainer>\r\n\r\n          <Styled.BottomContainer id=\"FAQs\">\r\n            <Styled.ContMargin>\r\n              <Styled.Title>FAQs</Styled.Title>\r\n              <Table stripped hover>\r\n                <thead>\r\n                  <tr>\r\n                    <Styled.TextBold width=\"330\">Question</Styled.TextBold>\r\n                    <Styled.TextBold width=\"170\">Department</Styled.TextBold>\r\n                    <Styled.TextBold width=\"170\">Date</Styled.TextBold>\r\n                    <Styled.TextBold width=\"170\">Status</Styled.TextBold>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {questionsFAQ.map((question) => (\r\n                    <tr>\r\n                      <Styled.Text\r\n                        key={`questionFAQ-${question.id}`}\r\n                        title={question.question}\r\n                      >\r\n                        {question.question.length > 50\r\n                          ? `${question.question.substring(0, 50)}...`\r\n                          : question.question}\r\n                      </Styled.Text>\r\n                      <Styled.Text key={`department-${question.id}`}>\r\n                        {' '}\r\n                        {question.assigned_department !== null\r\n                          ? departments.find(\r\n                            (depa) => depa.department_id === question.assigned_department,\r\n                          )?.name\r\n                          : 'Not Assigned'}\r\n                        {' '}\r\n                      </Styled.Text>\r\n                      <Styled.Text key={`date-${question.id}`}>\r\n                        {' '}\r\n                        {formatDate(question.createdAt)}\r\n                        {' '}\r\n                      </Styled.Text>\r\n                      {(question.Answers.length > 0\r\n                      || question.Comments.some((comment) => comment.approvedBy !== null))\r\n                        && (\r\n                        <Styled.TextA key={`statusFAQ-${question.id}`}>\r\n                          <Styled.TextABorder> Answered </Styled.TextABorder>\r\n                        </Styled.TextA>\r\n                        )}\r\n\r\n                      {(question.Answers.length <= 0\r\n                      && question.Comments.every((comment) => comment.approvedBy === null)\r\n                      && question.Comments.some((comment) => comment.CommentVote.length > 0\r\n                      && comment.CommentVote.some((vote) => vote.value >= 10)))\r\n                        && (\r\n                        <Styled.TextB key={`statusFAQ-${question.id}`}>\r\n                          <Styled.TextBBorder> Answered by Community </Styled.TextBBorder>\r\n                        </Styled.TextB>\r\n                        )}\r\n\r\n                      {question.Answers.length <= 0\r\n                      && (question.Comments.length === 0\r\n                      || (question.Comments.every((comment) => comment.approvedBy === null)\r\n                      && question.Comments.some((comment) => comment.CommentVote.length === 0\r\n                      || (comment.CommentVote.length > 0\r\n                      && comment.CommentVote.every((vote) => vote.value < 10)))))\r\n                        && (\r\n                        <Styled.TextU key={`statusFAQ-${question.id}`}>\r\n                          <Styled.TextUBorder> Unanswered </Styled.TextUBorder>\r\n                        </Styled.TextU>\r\n                        )}\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </Table>\r\n            </Styled.ContMargin>\r\n          </Styled.BottomContainer>\r\n        </Styled.NextContainer>\r\n      </Styled.MainContainer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n", "import styled from 'styled-components';\r\n\r\nexport const MainContainer = styled.div`\r\nheight: 115vh;\r\nbackground-color: #f7fafc; /* Slate-100 */\r\nmargin: 0;\r\nmargin-left: 270px;\r\n@media (min-width: 1536px) {\r\nmargin-left: 270px;\r\n}\r\n\r\npadding-top: 8px; /* Pt-8 */\r\nalign-content: stretch; /* Content-stretch */\r\n`;\r\n\r\nexport const NextContainer = styled.div`\r\nmargin-left: 1%;\r\n\r\nheight: 100vh;\r\npadding-top: 8px;\r\ndisplay: grid;\r\n\r\ngrid-template-columns: repeat(1, minmax(0, 1fr));\r\ngap: 3.5rem;\r\npadding-left: 2.5rem;\r\npadding-right: 2.5rem;\r\n\r\nmargin-right: 1px;\r\n`;\r\n\r\nexport const DividerContainer = styled.div`\r\ndisplay: grid;\r\ngrid-template-columns: repeat(2, minmax(0, 1fr));\r\ngrid-template-rows: minmax(0, 1fr);\r\ncolumn-gap: 3%;\r\nmargin-left: 2px;\r\n`;\r\n\r\nexport const TopContainers = styled.div`\r\ndisplay: inline-block;\r\noverflow-y: scroll;\r\nalign-items: center;\r\njustify-content: center;\r\nmargin-top: 20px;\r\nwidth: 11/12;\r\nheight: 380px;\r\nborder-radius: 0.5rem;\r\nbackground-color: white;\r\nborder: 1px solid #d1d5db;\r\nbox-shadow: 0px 0px 0px 3px rgba(0, 0, 0, 0.05);\r\n&:focus {\r\noutline: none;\r\nbox-shadow: 0px 0px 0px 3px rgba(59, 130, 246, 0.5);\r\n}\r\n`;\r\n\r\nexport const BottomContainer = styled.div`\r\noverflow-y: scroll;\r\nalign-items: center;\r\njustify-content: center;\r\nbackground-color: white;\r\nmargin-top: 15px;\r\nborder: 1px solid #d1d5db; /* ring-gray-200 */\r\nbox-shadow: 0px 0px 0px 3px rgba(0, 0, 0, 0.05);\r\n&:focus {\r\noutline: none;\r\nbox-shadow: 0px 0px 0px 3px rgba(59, 130, 246, 0.5);\r\n}\r\nborder-radius: 0.375rem; /* rounded-md */\r\nmargin-left: 2px; /* ml-2 */\r\nmargin-right: 1px; /* mr-1 */\r\nheight: 300px;\r\n`;\r\n\r\nexport const ContMargin = styled.div`\r\nmargin-left: 25px;\r\nmargin-right: 25px;\r\nmargin-top: 10px;\r\n`;\r\n\r\nexport const UList = styled.ul`\r\nlist-style-type: none;\r\nmargin: 0;\r\npadding: 0;\r\n`;\r\n\r\nexport const ButtonText = styled.a`\r\n background-color: #304966;\r\n border: 1px solid #304966;\r\n color: white;\r\n padding: 5px;\r\n text-align: center;\r\n text-decoration: none;\r\n letter-spacing: 0.5px;\r\n display: inline-block;\r\n height: 30px;\r\n width: 100px;\r\n border-radius: 20px;\r\n font-weight: 400;\r\n\r\n &:hover {\r\n  background-color: #fff;\r\n  color: #304966;\r\n  text-decoration: none;\r\n }\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n color: #17202a;\r\n font-weight: 600;\r\n letter-spacing: 1px;\r\n margin-bottom: 15px;\r\n background-color: white;\r\n\r\n`;\r\n\r\nexport const Text = styled.td`\r\n color: #17202a;\r\n\r\n font-weight: 400;\r\n letter-spacing: 1px;\r\n`;\r\n\r\nexport const TextBold = styled.th`\r\n color: #17202a;\r\n font-weight: 600;\r\n letter-spacing: 1px;\r\n font-size: medium;\r\n position: sticky;\r\n top: 0;\r\n background-color: white;\r\n`;\r\n\r\nexport const TextBoldList = styled.li`\r\n color: #17202a;\r\n font-weight: 600;\r\n letter-spacing: 1px;\r\n font-size: large;\r\n margin-top: 30px;\r\n`;\r\n\r\nexport const TextU = styled.td`\r\n color: #c64927;\r\n font-weight: 400;\r\n letter-spacing: 1px;\r\n`;\r\n\r\nexport const TextUBorder = styled.span`\r\n  display: inline-block;\r\n  background-color: #FFE6DE;\r\n  border-radius: 5px;\r\n  padding-bottom: 2.5px;\r\n  padding-top: 2.5px;\r\n  padding-right: 10px;\r\n  padding-left: 10px;\r\n`;\r\n\r\nexport const TextA = styled.td`\r\n color: #83bb2b;\r\n font-weight: 400;\r\n letter-spacing: 1px;\r\n\r\n`;\r\n\r\nexport const TextABorder = styled.span`\r\n  display: inline-block;\r\n  background-color: #F0F4E6;\r\n  border-radius: 5px;\r\n  padding-bottom: 2.5px;\r\n  padding-top: 2.5px;\r\n  padding-right: 10px;\r\n  padding-left: 10px;\r\n`;\r\n\r\nexport const TextB = styled.td`\r\n color: #DE9A34;\r\n font-weight: 400;\r\n letter-spacing: 1px;\r\n`;\r\n\r\nexport const TextBBorder = styled.span`\r\n  display: inline-block;\r\n  background-color: #FFEFD6;\r\n  border-radius: 5px;\r\n  padding-bottom: 2.5px;\r\n  padding-top: 2.5px;\r\n  padding-right: 10px;\r\n  padding-left: 10px;\r\n`;\r\n", "export { default } from './AdminSideBar';\r\n", "import * as Styled from 'app/components/AdminSideBar/AdminSideBar.Styled.jsx';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nfunction SideBar({ departments, selectedDepartment, handleSelectDepartment }) {\r\n  return (\r\n    <Styled.MainContainer>\r\n      <Styled.DepContainer>\r\n        <Styled.TitleDep>Departaments</Styled.TitleDep>\r\n\r\n        <Styled.ListDep>\r\n          {departments.map((item, index) => (\r\n            <Styled.DepSelect\r\n              id={`dep-${index}`}\r\n              key={item.name}\r\n              aria-current={item.current ? 'page' : undefined}\r\n              onClick={() => handleSelectDepartment(item.department_id)}\r\n              selected={item.department_id === selectedDepartment}\r\n              className={item.department_id === selectedDepartment ? 'selected' : ''}\r\n            >\r\n              {item.name}\r\n            </Styled.DepSelect>\r\n          ))}\r\n        </Styled.ListDep>\r\n      </Styled.DepContainer>\r\n    </Styled.MainContainer>\r\n  );\r\n}\r\n\r\nSideBar.propTypes = {\r\n  departments: PropTypes.arrayOf(\r\n    PropTypes.shape(),\r\n  ),\r\n  selectedDepartment: PropTypes.number,\r\n  handleSelectDepartment: PropTypes.func.isRequired,\r\n};\r\n\r\nSideBar.defaultProps = {\r\n  departments: [],\r\n  selectedDepartment: undefined,\r\n};\r\n\r\nexport default SideBar;\r\n", "import styled from 'styled-components';\r\n\r\nexport const MainContainer = styled.div`\r\n background-color: red;\r\n margin-top: 1px;\r\n height: 115vh;\r\n width: 265px;\r\n position: absolute;\r\n inset-y: 0;\r\n display: flex;\r\n overflow-y: scroll;\r\n padding-right: 5px;\r\n background-color: white;\r\n\r\n\r\n`;\r\n\r\nexport const DepContainer = styled.div`\r\n position: relative;\r\n display: inline-block;\r\n padding-left: 25px;\r\n padding-right: 15px;\r\n margin-right: 10px;\r\n\r\n`;\r\n\r\nexport const TitleDep = styled.div`\r\n color: #17202a; /* Indigo-800 */\r\n font-weight: bold;\r\n font-size: large;\r\n margin-left: 8px;\r\n margin-right: 8px;\r\n margin-top: 18%;\r\n`;\r\n\r\nexport const ListDep = styled.ul`\r\n list-style-type: none;\r\n padding: 0;\r\n padding-left: 10px;\r\n margin-top: 20%;\r\n`;\r\n\r\nexport const DepSelect = styled.li`\r\n text-align: left;\r\n margin-top: 10px;\r\n margin-bottom: 10px;\r\n padding-top: 10px;\r\n padding-bottom: 10px;\r\n padding-left: 5px;\r\n color: #17202a;\r\n font-weight: 600;\r\n letter-spacing: 1px;\r\n word-break: break-all;\r\n\r\n &.selected,\r\n &:hover {\r\n  background-color: #213246; /* Gray-700 */\r\n  color: white;\r\n  border-radius: 0.375rem; /* Rounded-md */\r\n  cursor: pointer;\r\n }\r\n`;\r\n", "const dateRangeConversion = (range) => {\r\n  let startDate;\r\n  let endDate;\r\n  switch (range) {\r\n    case 'today':\r\n      startDate = new Date();\r\n      startDate.setHours(0, 0, 0, 0);\r\n\r\n      return {\r\n        startDate,\r\n        endDate: new Date(),\r\n      };\r\n    case 'this_week':\r\n      const curr = new Date();\r\n      const first = curr.getDate() - curr.getDay();\r\n\r\n      startDate = new Date(curr.setDate(first));\r\n      startDate.setHours(0, 0, 0, 0);\r\n\r\n      endDate = new Date();\r\n\r\n      return {\r\n        startDate,\r\n        endDate,\r\n      };\r\n    case 'this_month':\r\n      const now = new Date();\r\n\r\n      startDate = new Date(now.getFullYear(), now.getMonth(), 1);\r\n      endDate = new Date();\r\n\r\n      return {\r\n        startDate,\r\n        endDate,\r\n      };\r\n\r\n    default:\r\n      return undefined;\r\n  }\r\n};\r\n\r\nexport default dateRangeConversion;\r\n", "import { db } from 'app/utils/db.server';\r\nimport { ALL_DEPARTMENTS, NOT_ASSIGNED_DEPARTMENT_ID } from 'app/utils/backend/filterConstants';\r\n\r\n// Filter the search and selection of departments.\r\nconst buildWhereDepartment = (department) => {\r\n  if (department === undefined || department === ALL_DEPARTMENTS) return {};\r\n\r\n  if (department === NOT_ASSIGNED_DEPARTMENT_ID) {\r\n    return {\r\n      assigned_department: null,\r\n    };\r\n  }\r\n\r\n  return { assigned_department: department };\r\n};\r\n\r\n// Filter the search by a range of dates.\r\nconst buildWhereDateRange = (dateRange) => {\r\n  if (dateRange && dateRange.startDate && dateRange.endDate) {\r\n    return {\r\n      date_created: {\r\n        lte: new Date(dateRange.endDate),\r\n        gte: new Date(dateRange.startDate),\r\n      },\r\n    };\r\n  }\r\n\r\n  return {};\r\n};\r\n\r\n// Get the list of records from the AnswerBot table.\r\nconst listAnswerBot = async (params) => {\r\n  try {\r\n    // Destructuring.\r\n    const { department, dateRange } = params;\r\n\r\n    // Finds all records that match the submitted values.\r\n    const getAnswers = await db.AnswerBot.findMany({\r\n      where: {\r\n        ...buildWhereDepartment(department),\r\n        ...buildWhereDateRange(dateRange),\r\n      },\r\n    });\r\n\r\n    // Returns the search result.\r\n    return getAnswers;\r\n\r\n    // Error and exception handling.\r\n  } catch (error) {\r\n    // console.error(error);\r\n    throw new Error('An error occurred while getting the responses from the bot.');\r\n  }\r\n};\r\n\r\nexport default listAnswerBot;\r\n", "/* eslint-disable class-methods-use-this */\r\nimport React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { json } from '@remix-run/node';\r\nimport {\r\n  CONTACT_REASONS_LIST,\r\n  CONTACT_REASONS_MAP,\r\n  CONTACT_WARNING,\r\n  MAXIMUM_MESSAGE_LENGTH,\r\n  MAXIUMUM_EMAIL_LENGTH,\r\n  MAXIMUM_NAME_LENGTH,\r\n  MAXIMUM_REASON_LENGTH,\r\n} from 'app/utils/constants';\r\nimport Footer from 'app/components/Footer';\r\nimport mailIcon from 'app/images/ic_email.svg';\r\nimport slackIcon from 'app/images/ic_slack.svg';\r\nimport ContactGoto from 'app/components/ContactGoto';\r\nimport * as Styled from 'app/styles/Contact.Styled';\r\nimport { requireAuth } from 'app/session.server';\r\nimport useUser from 'app/utils/hooks/useUser';\r\n\r\nexport const loader = async ({ request }) => {\r\n  await requireAuth(request);\r\n  return json({});\r\n};\r\n\r\nconst initialState = {\r\n  reason: '',\r\n  message: '',\r\n  placeholders: {\r\n    message: 'Your message',\r\n  },\r\n  isSubmitted: false,\r\n};\r\n\r\nfunction Contact(props) {\r\n  const { full_name: name, email } = useUser();\r\n\r\n  const [state, setState] = useState(initialState);\r\n\r\n  const resetForm = () => {\r\n    setState(initialState);\r\n  };\r\n\r\n  const handleContactClick = () => {\r\n    resetForm();\r\n  };\r\n\r\n  const renderSuccessMessage = () => (\r\n    <Styled.SuccessDiv>\r\n      <p>\r\n        Thanks for contacting us! We will review your feedback shortly.\r\n      </p>\r\n      <p>\r\n        Click\r\n        {' '}\r\n        <button type=\"button\" onClick={handleContactClick}> here </button>\r\n        {' '}\r\n        to contact us again.\r\n      </p>\r\n      <p>\r\n        Cheers,\r\n        <br />\r\n        {' '}\r\n        The WizeQ team!\r\n      </p>\r\n    </Styled.SuccessDiv>\r\n  );\r\n\r\n  const renderOptionsList = () => CONTACT_REASONS_LIST.map(\r\n    (options) => <option value={options.value} key={options.value}>{options.reason}</option>,\r\n  );\r\n\r\n  const onInputChange = (event) => {\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      [event.target.name]: event.target.value,\r\n    }));\r\n  };\r\n\r\n  const handleEmailSent = () => {\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      isSubmitted: true,\r\n    }));\r\n  };\r\n\r\n  const createEmailContent = () => {\r\n    const emailObj = {};\r\n    emailObj.fullName = name;\r\n    emailObj.email = email;\r\n    emailObj.reason = CONTACT_REASONS_MAP[state.reason];\r\n    emailObj.message = state.message;\r\n    return emailObj;\r\n  };\r\n\r\n  const onSubmitWithSuccess = () => {\r\n    const emailBody = createEmailContent();\r\n    props.sendContact(emailBody);\r\n    handleEmailSent();\r\n  };\r\n\r\n  const inputLengthIsValid = (input, maxLength) => (\r\n    input.length > 0 && input.length <= maxLength\r\n  );\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (state.isSubmitted) {\r\n      return;\r\n    }\r\n\r\n    if (!inputLengthIsValid(name, MAXIMUM_NAME_LENGTH)) {\r\n      props.warningAlert(CONTACT_WARNING);\r\n      return;\r\n    }\r\n\r\n    if (!inputLengthIsValid(email, MAXIUMUM_EMAIL_LENGTH)) {\r\n      props.warningAlert(CONTACT_WARNING);\r\n      return;\r\n    }\r\n\r\n    if (!inputLengthIsValid(state.reason, MAXIMUM_REASON_LENGTH)) {\r\n      props.warningAlert(CONTACT_WARNING);\r\n      return;\r\n    }\r\n\r\n    if (!inputLengthIsValid(state.message, MAXIMUM_MESSAGE_LENGTH)) {\r\n      props.warningAlert(CONTACT_WARNING);\r\n      return;\r\n    }\r\n\r\n    onSubmitWithSuccess();\r\n  };\r\n\r\n  const renderContactForm = () => {\r\n    const firstName = name ? name.split(' ')[0] : '';\r\n    return (\r\n      <Styled.ContactForm onSubmit={onSubmit}>\r\n        <Styled.ContactFormP>\r\n          Hi&nbsp;\r\n          <strong>\r\n            {firstName}\r\n          </strong>\r\n          !\r\n          <br />\r\n          Send us a message!\r\n        </Styled.ContactFormP>\r\n        <Styled.ContactSelect name=\"reason\" onChange={onInputChange}>\r\n          {renderOptionsList()}\r\n        </Styled.ContactSelect>\r\n        <Styled.ContactTextArea name=\"message\" placeholder={state.placeholders.message} onChange={onInputChange} />\r\n        <Styled.BtnContainer>\r\n          <Styled.SubmitBtn type=\"submit\">Submit</Styled.SubmitBtn>\r\n        </Styled.BtnContainer>\r\n      </Styled.ContactForm>\r\n    );\r\n  };\r\n\r\n  const handleRender = () => {\r\n    if (!state.isSubmitted) {\r\n      return renderContactForm();\r\n    }\r\n    if (state.isSubmitted) {\r\n      return renderSuccessMessage();\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <Styled.ContactCardDiv>\r\n      <Styled.ContactInputHeader>\r\n        <Styled.ContactInputHeaderH1>Contact Us</Styled.ContactInputHeaderH1>\r\n        <Styled.ContactInputHeaderH2>We are here for you!</Styled.ContactInputHeaderH2>\r\n        <Styled.ContactInputHeaderP>\r\n          We\u2019d love to hear from you, please let us\r\n          know what you think and get in touch with us.\r\n          {' '}\r\n        </Styled.ContactInputHeaderP>\r\n\r\n        <Styled.ContactInputSitesDiv>\r\n          <ContactGoto\r\n            icon={mailIcon}\r\n            text=\"Email us at\"\r\n            goto=\"wizeq@wizeline.com\"\r\n            dir=\"mailto:wizeq@wizeline.com\"\r\n          />\r\n          <ContactGoto\r\n            icon={slackIcon}\r\n            text=\"Slack us at\"\r\n            goto=\"#wize-q-support\"\r\n            dir=\"https://wizeline.slack.com/messages/C6M652THT\"\r\n          />\r\n        </Styled.ContactInputSitesDiv>\r\n      </Styled.ContactInputHeader>\r\n      <Styled.ContactInputDiv>\r\n        {handleRender()}\r\n      </Styled.ContactInputDiv>\r\n      <Footer />\r\n    </Styled.ContactCardDiv>\r\n  );\r\n}\r\n\r\nContact.propTypes = {\r\n  sendContact: PropTypes.func.isRequired,\r\n  warningAlert: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Contact;\r\n", "import React, { Component } from 'react';\r\nimport { FOOTER_MESSAGE } from 'app/utils/constants';\r\nimport * as Styled from 'app/styles/Contact.Styled';\r\n\r\nclass Footer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      wizeQTeamUrl: 'https://wizeline.atlassian.net/wiki/spaces/WIZEQ/overview',\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Styled.FooterDiv>\r\n        <Styled.FooterContainer>\r\n          <Styled.FooterLink href={this.state.wizeQTeamUrl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            {FOOTER_MESSAGE}\r\n          </Styled.FooterLink>\r\n        </Styled.FooterContainer>\r\n      </Styled.FooterDiv>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n", "/* eslint-disable import/prefer-default-export */\r\nimport styled from 'styled-components';\r\nimport img from 'app/images/caret-down-solid.svg';\r\n\r\nexport const FooterDiv = styled.div`\r\n    background-color: #f4f7f9;\r\n    color: #a2abaf;\r\n    font-size: 12px;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    padding: 20px 15px 70px;\r\n\r\n    @media (max-width: 400px) {\r\n        padding: 0 15px 20px;\r\n    }\r\n`;\r\n\r\nexport const FooterContainer = styled.div`\r\n    margin-right: auto;\r\n    margin-left: auto;\r\n    padding-left: 15px;\r\n    padding-right: 15px;\r\n    text-align: center;\r\n\r\n    @media (min-width: 1200px) {\r\n        width: 1170px;\r\n    }\r\n\r\n    @media (min-width: 992px) and (max-width: 1199px) {\r\n        width: 970px;\r\n    }\r\n\r\n    @media (min-width: 768px) and (max-width: 991px) {\r\n        width: 750px;\r\n    }\r\n`;\r\n\r\nexport const FooterLink = styled.a`\r\n    color: #666;\r\n\r\n    &:hover {\r\n        text-decoration: underline;\r\n    }\r\n`;\r\n\r\nexport const ContactInputDiv = styled.div`\r\n    background-color: #f4f7f9;\r\n    box-sizing: border-box;\r\n    min-height: 64.8752vh;\r\n    padding: 2% 0 7%;\r\n    position: relative;\r\n    text-align: center;\r\n`;\r\n\r\nexport const ContactForm = styled.form`\r\n    align-items: center;\r\n    display: flex;\r\n    flex-direction: column;\r\n    margin: auto;\r\n    padding: 20px;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    max-width: 390px;\r\n    width: 100%;\r\n`;\r\n\r\nexport const ContactFormP = styled.p`\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    display: inline-block;\r\n    margin: 10px 0;\r\n    max-width: 390px;\r\n    padding: 12px 16px;\r\n    width: 100%;\r\n    color: var(--color-dark-50);\r\n    line-height: 24px;\r\n`;\r\n\r\nexport const ContactSelect = styled.select`\r\n    -moz-appearance: none; /* Firefox */\r\n    -webkit-appearance: none; /* Safari and Chrome */\r\n    appearance: none;\r\n    background: #fff url(${img}) no-repeat;\r\n    background-position-x: calc(100% - 16px);\r\n    background-position-y: 6px;\r\n    background-size: 16px;\r\n    border-radius: 4px;\r\n    border: 1px solid #ccc;\r\n    box-sizing: border-box;\r\n    color: #222;\r\n    cursor: pointer;\r\n    display: inline-block;\r\n    height: 40px;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    margin: 10px 0;\r\n    max-width: 390px;\r\n    padding: 12px 16px;\r\n    width: 100%;\r\n`;\r\n\r\nexport const ContactTextArea = styled.textarea`\r\n    border: 1px solid #ccc;\r\n    height: 150px;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    display: inline-block;\r\n    margin: 10px 0;\r\n    max-width: 390px;\r\n    padding: 12px 16px;\r\n    width: 100%;\r\n    resize: none;\r\n    overflow: auto;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nexport const BtnContainer = styled.div`\r\n    padding: 12px 0;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n    display: inline-block;\r\n    margin: 10px 0;\r\n    max-width: 390px;\r\n    width: 100%;\r\n`;\r\n\r\nexport const SubmitBtn = styled.button`\r\n    background-color: var(--color-secondary);\r\n    border-radius: 3px;\r\n    border: none;\r\n    color: #fff;\r\n    cursor: pointer;\r\n    margin: 4px 2px;\r\n    padding: 12px 32px;\r\n    text-decoration: none;\r\n    width: 100%;\r\n    text-transform: none;\r\n    overflow: visible;\r\n\r\n    &:hover {\r\n        background-color: #00a7e587;\r\n    }\r\n`;\r\n\r\nexport const SuccessDiv = styled.div`\r\n    background-color: white;\r\n    color: var(--color-dark-50);\r\n    margin-top: 50px;\r\n    max-width: 500px;\r\n    padding: 30px 20px;\r\n    margin-right: auto;\r\n    margin-left: auto;  \r\n\r\n    @media (min-width: 1200px) {\r\n        width: 1170px;\r\n    }\r\n\r\n    @media (min-width: 992px) and (max-width: 1199px) {\r\n        width: 970px;\r\n    }\r\n\r\n    @media (min-width: 768px) and (max-width: 991px) {\r\n        width: 750px;\r\n    }\r\n`;\r\n\r\nexport const ContactCardDiv = styled.div`\r\n    background-color: #1c1c1c;\r\n`;\r\n\r\nexport const ContactInputHeader = styled.div`\r\n    background-color: #fff;\r\n    text-align: center;\r\n    font-size: 14px;\r\n    margin: 0 auto;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nexport const ContactInputHeaderH1 = styled.h1`\r\n    color: #a2abaf;\r\n    letter-spacing: 1.5px;\r\n    padding: 72px 0 12px;\r\n    text-transform: uppercase;\r\n    font-size: 14px;\r\n    margin: 0 auto;\r\n    max-width: 390px;\r\n`;\r\n\r\nexport const ContactInputHeaderH2 = styled.h2`\r\n    color: var(--color-dark-50);\r\n    font-size: 24px;\r\n    font-weight: 600;\r\n    padding: 12px 0 8px;\r\n    margin: 0 auto;\r\n    max-width: 390px;\r\n`;\r\n\r\nexport const ContactInputHeaderP = styled.p`\r\n    color: var(--color-dark-50);\r\n    letter-spacing: 0.6px;\r\n    line-height: 1.71;\r\n    padding: 8px 10px 28px;\r\n    font-size: 14px;\r\n    margin: 0 auto;\r\n    max-width: 390px;\r\n`;\r\n\r\nexport const ContactInputSitesDiv = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: space-around;\r\n    margin: 0 auto;\r\n    max-width: 390px;\r\n`;\r\n\r\nexport const ContactInputGoTo = styled.div`\r\n    margin: 20px 40px 40px;\r\n    max-width: 390px;\r\n`;\r\n\r\nexport const ContactInputGoToP = styled.p`\r\n    font-size: 16px;\r\n    margin: 8px 0 4px;\r\n    padding: 0;\r\n    max-width: 390px;\r\n`;\r\n\r\nexport const ContactInputGoToA = styled.a`\r\n    padding: 4px 0;\r\n    white-space: nowrap;\r\n    color: var(--color-secondary);\r\n    margin: 0 auto;\r\n    max-width: 390px;\r\n`;\r\n\r\nexport const ContactInputGoToImg = styled.img`\r\n    background-color: #f4f7f9;\r\n    border-radius: 50%;\r\n    box-shadow: 0 0 0 10px #f4f7f9;\r\n    height: 28px;\r\n    margin: 18px;\r\n    width: 28px;\r\n    max-width: 390px;\r\n`;\r\n", "import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as Styled from 'app/styles/Contact.Styled';\r\n\r\nfunction ContactGoto(props) {\r\n  const {\r\n    icon, text, goto, dir,\r\n  } = props;\r\n  return (\r\n    <Styled.ContactInputGoTo>\r\n      <Styled.ContactInputGoToImg src={icon} />\r\n      <Styled.ContactInputGoToP>{text}</Styled.ContactInputGoToP>\r\n      <Styled.ContactInputGoToA href={dir} target=\"_blank\" rel=\"noopener noreferrer\">{goto}</Styled.ContactInputGoToA>\r\n    </Styled.ContactInputGoTo>\r\n  );\r\n}\r\n\r\nContactGoto.propTypes = {\r\n  icon: PropTypes.string.isRequired,\r\n  text: PropTypes.string.isRequired,\r\n  goto: PropTypes.string.isRequired,\r\n  dir: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ContactGoto;\r\n", "import { redirect } from '@remix-run/node';\r\n\r\nimport { logout } from 'app/session.server';\r\n\r\nexport const action = async ({ request }) => logout(request);\r\n\r\nexport const loader = async () => redirect('/logout');\r\n", "import React from 'react';\r\nimport { json } from '@remix-run/node';\r\nimport * as Styled from 'app/styles/About.Styled';\r\nimport meetingIcon from 'app/images/ic_meeting.svg';\r\nimport savingFundIcon from 'app/images/ic_saving_fund.svg';\r\nimport dialogueIcon from 'app/images/ic_dialogue.svg';\r\nimport anonymousIcon from 'app/images/ic_anonymous.svg';\r\nimport { requireAuth } from 'app/session.server';\r\n\r\nexport const loader = async ({ request }) => {\r\n  await requireAuth(request);\r\n  return json({});\r\n};\r\n\r\nfunction About() {\r\n  return (\r\n    <Styled.About>\r\n      <Styled.AboutBody>\r\n        <h1>About Us</h1>\r\n        <h2>This is Wizeline Questions</h2>\r\n        <p>\r\n          <strong>Wizeline Questions (WizeQ)</strong>\r\n          {' '}\r\n          is a communication space where you\r\n          can express your ideas, learn more about Wizeline, and ask all kinds of\r\n          questions.\r\n        </p>\r\n        <p>\r\n          Wizeline Questions is a knowledge base where you can ask for information\r\n          to a specific department and allow other Wizeliners to benefit from it. For\r\n          example:\r\n        </p>\r\n\r\n        <Styled.BoxWrapper>\r\n          <Styled.BoxContainer>\r\n            <Styled.BoxImageContainer>\r\n              <Styled.BoxImage src={meetingIcon} />\r\n              <Styled.BoxBoldText>\r\n                Are you still having problems with Zoom for your next meeting?\r\n              </Styled.BoxBoldText>\r\n            </Styled.BoxImageContainer>\r\n            <Styled.BoxMetadata>\r\n              Check Wizeline Questions, someone might have already asked IT the same\r\n              question. If that is not the case, this is your chance to shine!\r\n            </Styled.BoxMetadata>\r\n          </Styled.BoxContainer>\r\n          <Styled.BoxContainer>\r\n            <Styled.BoxImageContainer>\r\n              <Styled.BoxImage src={savingFundIcon} />\r\n              <Styled.BoxBoldText>\r\n                Do you want to know more about the savings fund?\r\n              </Styled.BoxBoldText>\r\n            </Styled.BoxImageContainer>\r\n            <Styled.BoxMetadata>\r\n              Tag People Ops in your question, other Wizeliners will be glad to\r\n              learn about that same topic, for sure!\r\n            </Styled.BoxMetadata>\r\n          </Styled.BoxContainer>\r\n        </Styled.BoxWrapper>\r\n        <Styled.AboutMetadata>\r\n          <p>\r\n            Information can be easily lost in the flood of comments and pinged posts on\r\n            Slack. Do you need information to persist?\r\n            {' '}\r\n            <strong>\r\n              Use Wizeline\r\n              Questions instead!\r\n            </strong>\r\n          </p>\r\n        </Styled.AboutMetadata>\r\n        <h3>What else?</h3>\r\n        <Styled.AboutWhatElseContainer>\r\n          <Styled.AboutWhatElseImg src={dialogueIcon} />\r\n          <Styled.AboutWHatElseText>\r\n            <Styled.AboutWHatElseBold>\r\n              Start a conversation. Is there a topic you want to discuss with\r\n              other Wizeliners?\r\n            </Styled.AboutWHatElseBold>\r\n            <Styled.AboutWhatElseMetadata>\r\n              This is the place!. You can reply to a question and\r\n              also hold interesting conversations with other Wizeliners.  Use it as a\r\n              discussion forum, suggestion what-else, or simply visit to say hello! Help us\r\n              to keep Wizeline an amazing place!\r\n            </Styled.AboutWhatElseMetadata>\r\n          </Styled.AboutWHatElseText>\r\n        </Styled.AboutWhatElseContainer>\r\n        <Styled.AboutWhatElseContainer>\r\n          <Styled.AboutWhatElseImg src={anonymousIcon} />\r\n          <Styled.AboutWHatElseText>\r\n            <Styled.AboutWHatElseBold>\r\n              Is there a sensitive question you want to ask anonymously?\r\n            </Styled.AboutWHatElseBold>\r\n            <Styled.AboutWhatElseMetadata>\r\n              Ask on Wizeline Questions! To promote ownership and open communication,\r\n              it displays your user name by default when you post a new question.\r\n              But you can always opt for anonymity.\r\n            </Styled.AboutWhatElseMetadata>\r\n          </Styled.AboutWHatElseText>\r\n        </Styled.AboutWhatElseContainer>\r\n\r\n        <h3>Things to Keep in Mind When Asking a Question</h3>\r\n        <span>\r\n          <p>\r\n            We value your ideas, questions, suggestions, and comments. Therefore, we\r\n            encourage you to use this communication space. Please, when writing a new\r\n            question or a comment follow these recommendations:\r\n          </p>\r\n          <div style={{ textAlign: 'justify' }}>\r\n            <ul>\r\n              <li>\r\n                Strive for constructive open communication. Avoid vagueness.\r\n              </li>\r\n              <li>\r\n                Do not demean or degrade others because of their gender, race, age, religion,\r\n                etc.\r\n              </li>\r\n              <li>\r\n                Avoid posting questions that include sexually explicit comments, hate speech,\r\n                prejudicial remarks, and profanity.\r\n              </li>\r\n              <li>\r\n                Do not mock other members, their comments, profiles, threads, or experiences.\r\n                Remember, what is funny for you may be offensive to others.\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </span>\r\n      </Styled.AboutBody>\r\n      <Styled.AboutFooter>\r\n        <p>\r\n          <strong>We need your help!</strong>\r\n          {' '}\r\n          Wizeline Questions is an internal project and\r\n          everyone can contribute. Come aboard and meet the team at\r\n          <a href=\"https://wizeline.slack.com/archives/C031D9DP7C2\" target=\"_blank\" rel=\"noopener noreferrer\">#wize-q-2022</a>\r\n          . You can take a\r\n          look at our\r\n          <a href=\"https://github.com/wizeline/wize-q-remix\">source code</a>\r\n          {' '}\r\n          on GitHub.\r\n        </p>\r\n      </Styled.AboutFooter>\r\n    </Styled.About>\r\n  );\r\n}\r\n\r\nexport default About;\r\n", "/* eslint-disable import/prefer-default-export */\r\n/* eslint-disable import/prefer-default-export */\r\nimport styled from 'styled-components';\r\n\r\nconst colorDark50 = '#4E5154';\r\nconst colorSecondary = '#00A7E5';\r\n\r\nexport const About = styled.div`\r\n  background-color: #fff;\r\n  color: ${colorDark50};\r\n  line-height: 1.71;\r\n  text-align: center;\r\n`;\r\n\r\nexport const AboutBody = styled.div`\r\n  margin: auto;\r\n  max-width: 65%;\r\n  padding: 0 20px;\r\n\r\n  @media (max-width: 767px) {\r\n    max-width: 100%;\r\n  }\r\n\r\n  h1 {\r\n    color: #a2abaf;\r\n    font-size: 14px;\r\n    letter-spacing: 1.5px;\r\n    margin: auto;\r\n    padding: 72px 0 12px;\r\n    text-transform: uppercase;\r\n  }\r\n\r\n  h2 {\r\n    color: ${colorDark50};\r\n    font-size: 24px;\r\n    font-weight: 600;\r\n    padding: 8px 10px;\r\n  }\r\n\r\n  h3 {\r\n    color: ${colorDark50};\r\n    font-size: 24px;\r\n    font-weight: 600;\r\n    margin: 40px 40px 18px 18px;\r\n    padding: 8px 10px;\r\n    text-align: left;\r\n  }\r\n\r\n  p {\r\n    color: ${colorDark50};\r\n    letter-spacing: 0.6px;\r\n    margin: 40px 40px 18px 18px;\r\n    padding: 8px 10px;\r\n    text-align: justify;\r\n  }\r\n\r\n  span ul {\r\n    list-style: none;\r\n\r\n    @media (max-width: 767px) {\r\n      padding-left: 20px;\r\n    }\r\n  }\r\n\r\n  span ul li {\r\n    padding-top: 10px;\r\n    width: 60%;\r\n\r\n    @media (max-width: 767px) {\r\n      width: 100%;\r\n    }\r\n\r\n    &:before {\r\n      display: inline-block;\r\n      content: \"\\\\2022\";\r\n      font-size: 30px;\r\n      font-weight: bold;\r\n      left: 6px;\r\n      line-height: 0;\r\n      margin-left: -1em;\r\n      margin-top: 12px;\r\n      position: relative;\r\n      top: 4px;\r\n      width: 1em;\r\n      color: ${colorSecondary};\r\n\r\n      @media (max-width: 767px) {\r\n        left: 6px;\r\n      }\r\n    }\r\n  }\r\n\r\n  span ul.inside-list li::before {\r\n    content: \"\\00b0\";\r\n    font-weight: unset;\r\n    left: 22px;\r\n    top: 23px;\r\n\r\n    @media (max-width: 767px) {\r\n      left: 32px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const BoxWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nexport const BoxContainer = styled.div`\r\n    padding: 16px;\r\n    \r\n    @media screen and (min-width: 1025px){\r\n      max-width: 50%;\r\n    }\r\n\r\n    @media (max-width: 767px) {\r\n      left: 32px;\r\n    }\r\n`;\r\n\r\nexport const BoxImageContainer = styled.div`\r\ndisplay: inline-block;\r\nheight: 48px;\r\nmargin-right: 8px;\r\n`;\r\n\r\nexport const BoxImage = styled.img`\r\n  float: left;\r\n  margin: 28px;\r\n\r\n  @media (max-width: 767px) {\r\n    margin-top: 0px;\r\n  }\r\n`;\r\n\r\nexport const BoxBoldText = styled.div`\r\n  color: ${colorDark50};\r\n  font-family: \"NunitoSans Semibold\";\r\n  margin-top: 44px;\r\n  margin: 28px;\r\n  text-align: left;\r\n\r\n  @media (max-width: 767px)  {\r\n    margin-top: 0px;\r\n  }\r\n`;\r\n\r\nexport const BoxMetadata = styled.div`\r\n  margin: 28px;\r\n  text-align: left;\r\n`;\r\n\r\nexport const AboutMetadata = styled.div`\r\n  @media (max-width: 767px)  {\r\n    margin-top: 24px;\r\n  }\r\n`;\r\n\r\nexport const AboutWhatElseContainer = styled.div`\r\n  margin-bottom: 28px;\r\n  margin-top: 28px;\r\n`;\r\n\r\nexport const AboutWhatElseImg = styled.img`\r\n  float: right;\r\n  margin-left: 100px;\r\n  margin-right: 28px;\r\n\r\n  @media (max-width: 767px) {\r\n    float: none;\r\n    margin: auto;\r\n  }\r\n`;\r\n\r\nexport const AboutWHatElseText = styled.div`\r\n  margin-top: 44px;\r\n  text-align: left;\r\n  width: 70%;\r\n\r\n  @media (max-width: 767px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport const AboutWHatElseBold = styled.div`\r\n  color: ${colorDark50};\r\n  font-family: \"NunitoSans Semibold\";\r\n  margin-top: 44px;\r\n  margin: 28px;\r\n  text-align: left;\r\n`;\r\n\r\nexport const AboutWhatElseMetadata = styled.div`\r\n  margin: 28px;\r\n  text-align: left;\r\n`;\r\n\r\nexport const AboutFooter = styled.div`\r\n  padding: 50px 0;\r\n\r\n  @media (min-width: 768px) and (max-width: 1024px) {\r\n    padding: 50px 0 100px;\r\n  }\r\n\r\n  @media (max-width: 767px) {\r\n    padding: 50px 0 100px;\r\n  }\r\n\r\n  a {\r\n    text-decoration: none;\r\n  }\r\n\r\n  p {\r\n    margin: auto;\r\n    max-width: 800px;\r\n    padding: 0 20px;\r\n\r\n    @media (max-width: 767px) {\r\n      margin-bottom: 20px;\r\n    }\r\n  }\r\n`;\r\n", "import React from 'react';\r\nimport { json } from '@remix-run/node';\r\nimport { useLoaderData, useSearchParams } from '@remix-run/react';\r\nimport { requireAdminAuth } from 'app/session.server';\r\nimport * as Styled from 'app/styles/Admin.Styled';\r\nimport AdminUsersTable from 'app/components/AdminUsersTable';\r\nimport Notifications from 'app/components/Notifications';\r\nimport UserSearchBar from 'app/components/UserSearchBar';\r\nimport UploadButton from 'app/components/Atoms/UploadButton';\r\nimport listUsers from 'app/controllers/users/list';\r\nimport updateUser from 'app/controllers/users/update';\r\nimport NotFound from 'app/routes/$';\r\n\r\nexport const loader = async ({ request }) => {\r\n  await requireAdminAuth(request);\r\n  const url = new URL(request.url);\r\n  const currentPage = url.searchParams.get('page') ?? 1;\r\n  const size = url.searchParams.get('size') ?? 10;\r\n  const search = url.searchParams.get('search') ?? undefined;\r\n\r\n  const data = await listUsers({\r\n    page: currentPage,\r\n    search,\r\n    size,\r\n  });\r\n\r\n  return {\r\n    ...data,\r\n    currentPage: Number(currentPage),\r\n    size,\r\n  };\r\n};\r\n\r\nexport const action = async ({ request }) => {\r\n  const formData = await request.formData();\r\n\r\n  const payload = {\r\n    is_admin: !formData.has('is_admin') ? undefined : formData.get('is_admin') === 'on',\r\n    job_title: formData.get('job_title'),\r\n    employee_id: formData.get('employee_id'),\r\n  };\r\n\r\n  const result = await updateUser(payload);\r\n  return json(result);\r\n};\r\n\r\nfunction Admin() {\r\n  const {\r\n    users, totalPages, currentPage, size,\r\n  } = useLoaderData();\r\n  const [, setSearchParams] = useSearchParams();\r\n\r\n  const onSearch = (search) => {\r\n    setSearchParams({\r\n      search,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Notifications />\r\n      <Styled.Container>\r\n        <h2>Admin page</h2>\r\n        <UserSearchBar onSearch={onSearch} />\r\n      </Styled.Container>\r\n      <AdminUsersTable\r\n        users={users}\r\n        currentPage={currentPage}\r\n        totalPages={totalPages}\r\n        size={size}\r\n      />\r\n      <UploadButton />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function CatchBoundary() {\r\n  return (\r\n    <NotFound />\r\n  );\r\n}\r\n\r\nexport default Admin;\r\n", "/* eslint-disable import/prefer-default-export */\r\nimport styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin: 40px auto;\r\n  width: 90vw;\r\n\r\n  @media (max-width: 576px) {\r\n    flex-direction: column;\r\n\r\n    h2 {\r\n      margin-bottom: 30px;\r\n    }\r\n  }\r\n`;\r\n", "export { default } from './AdminUsersTable';\r\n", "import React, { useState, useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport logomarkX1 from 'app/images/logomark_medium.png';\r\nimport { useActionData, useSearchParams } from '@remix-run/react';\r\nimport { usePagination, DOTS } from 'app/utils/hooks/usePagination';\r\nimport Button from 'app/components/Atoms/Button/Button';\r\nimport Loader from 'app/components/Loader';\r\nimport { PRIMARY_BUTTON, LSPIN_MEDIUM } from 'app/utils/constants';\r\nimport * as Styled from 'app/components/AdminUsersTable/AdminUsersTable.Styled';\r\nimport EditUserModal from 'app/components/Modals/EditUserModal/EditUserModal';\r\n\r\nfunction AdminUsersTable({\r\n  users, currentPage, totalPages, isLoading, size,\r\n}) {\r\n  const [modal, setModal] = useState(false);\r\n  const [currentUser, setCurrenUser] = useState({});\r\n  const quantityRef = useRef(0);\r\n\r\n  const paginationRange = usePagination({\r\n    currentPage: (currentPage === 0 ? 1 : currentPage + 1),\r\n    totalPages,\r\n  });\r\n\r\n  const [, setSearchParams] = useSearchParams();\r\n\r\n  const data = useActionData();\r\n\r\n  useEffect(() => {\r\n    if (data && data.successMessage) {\r\n      setModal(false);\r\n    }\r\n  }, [users, data]);\r\n\r\n  const handleModal = (u) => {\r\n    if (!modal) {\r\n      setCurrenUser(u);\r\n    }\r\n    setModal(!modal);\r\n  };\r\n\r\n  const changePage = (page) => {\r\n    setSearchParams({\r\n      size,\r\n      page,\r\n    });\r\n  };\r\n\r\n  const nextPageHandler = () => {\r\n    setSearchParams({\r\n      size,\r\n      page: currentPage + 1,\r\n    });\r\n  };\r\n\r\n  const prevPageHandler = () => {\r\n    setSearchParams({\r\n      size,\r\n      page: currentPage - 1,\r\n    });\r\n  };\r\n\r\n  const createPaginationItem = (i, idx) => (\r\n    <Styled.TablePagination.Item\r\n      key={idx}\r\n      onClick={() => changePage(i)}\r\n      active={(i) === currentPage}\r\n    >\r\n      {i}\r\n    </Styled.TablePagination.Item>\r\n  );\r\n\r\n  const getPaginationItems = () => {\r\n    const item = paginationRange.map((__page, idx) => {\r\n      if (__page === DOTS) {\r\n        // eslint-disable-next-line react/no-array-index-key\r\n        return <Styled.TablePagination.Ellipsis key={idx} />;\r\n      }\r\n      return createPaginationItem(__page, idx);\r\n    });\r\n    return [...item];\r\n  };\r\n\r\n  const paginationItems = getPaginationItems();\r\n\r\n  const renderHeader = () => (\r\n    <thead>\r\n      <Styled.HeaderTable>\r\n        <th>Name</th>\r\n        <th className=\"table-desktop-view\">Email</th>\r\n        <th className=\"table-desktop-view\">Job Title</th>\r\n        <th className=\"table-desktop-view\">Roles</th>\r\n        <th>Action</th>\r\n      </Styled.HeaderTable>\r\n    </thead>\r\n  );\r\n\r\n  const setQTY = (value) => {\r\n    setSearchParams({\r\n      size: value,\r\n      page: currentPage,\r\n    });\r\n  };\r\n\r\n  if (!users.length && !isLoading) {\r\n    return (\r\n      <Styled.Alert>\r\n        <span className=\"message\">There are no results to show</span>\r\n      </Styled.Alert>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Styled.TableContainer>\r\n        Select the number of results\r\n        <select ref={quantityRef} onChange={(e) => setQTY(e.target.value)} defaultValue={size}>\r\n          <option value=\"5\">5</option>\r\n          <option value=\"10\">10</option>\r\n          <option value=\"15\">15</option>\r\n          <option value=\"20\">20</option>\r\n          <option value=\"25\">25</option>\r\n        </select>\r\n        {isLoading ? (\r\n          <div>\r\n            <Styled.UserTable>\r\n              {renderHeader()}\r\n            </Styled.UserTable>\r\n            <Loader src={logomarkX1} size={LSPIN_MEDIUM} />\r\n          </div>\r\n        ) : (\r\n          <Styled.UserTable>\r\n            {renderHeader()}\r\n            <tbody>\r\n              {users.map((user) => (\r\n                <Styled.RowTable key={user.employee_id}>\r\n                  <td>\r\n                    <div>\r\n                      <img src={user.profile_picture} alt=\"\" />\r\n                      {user.full_name}\r\n                    </div>\r\n                  </td>\r\n                  <td className=\"table-desktop-view\">{user.email}</td>\r\n                  <td className=\"table-desktop-view\">{user.job_title}</td>\r\n                  <td className=\"table-desktop-view\">\r\n                    Employee\r\n                    {user.is_admin && ', Admin'}\r\n                  </td>\r\n                  <td>\r\n                    <Button\r\n                      category={PRIMARY_BUTTON}\r\n                      onClick={() => handleModal(user)}\r\n                      className=\"row-btn\"\r\n                    >\r\n                      Edit roles\r\n                    </Button>\r\n                  </td>\r\n                </Styled.RowTable>\r\n              ))}\r\n            </tbody>\r\n          </Styled.UserTable>\r\n        )}\r\n        {!isLoading && (\r\n          <Styled.PaginationContainer>\r\n            <div>\r\n              Page\r\n              {' '}\r\n              {currentPage}\r\n              {' '}\r\n              of\r\n              {' '}\r\n              {totalPages}\r\n            </div>\r\n\r\n            <Styled.TablePagination boundarylinks=\"true\">\r\n              {currentPage > 1 && (\r\n                <Styled.TablePagination.Prev onClick={prevPageHandler} />\r\n              )}\r\n              {paginationItems}\r\n\r\n              {currentPage < totalPages && (\r\n                <Styled.TablePagination.Next onClick={nextPageHandler} />\r\n              )}\r\n            </Styled.TablePagination>\r\n          </Styled.PaginationContainer>\r\n        )}\r\n        { modal ? (\r\n          <EditUserModal\r\n            user={currentUser}\r\n            onClose={() => handleModal()}\r\n          />\r\n        ) : null}\r\n      </Styled.TableContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nAdminUsersTable.propTypes = {\r\n  users: PropTypes.arrayOf(\r\n    PropTypes.shape(),\r\n  ),\r\n  currentPage: PropTypes.number.isRequired,\r\n  totalPages: PropTypes.number.isRequired,\r\n  isLoading: PropTypes.bool.isRequired,\r\n  size: PropTypes.number.isRequired,\r\n};\r\n\r\nAdminUsersTable.defaultProps = {\r\n  users: [],\r\n};\r\n\r\nexport default AdminUsersTable;\r\n", "import { useMemo } from 'react';\r\n\r\nexport const DOTS = '...';\r\n\r\nconst range = (start, end) => {\r\n  const length = end - (start);\r\n  return Array.from({ length }, (_, idx) => idx + start);\r\n};\r\n\r\nexport function usePagination({\r\n  currentPage,\r\n  totalPages,\r\n}) {\r\n  const pagintationRange = useMemo(() => {\r\n    const totalPageCount = totalPages;\r\n    const sibilingCount = 1;\r\n    const totalPageNumbers = 2 + sibilingCount;\r\n\r\n    if (totalPageNumbers > totalPageCount) {\r\n      return range(1, totalPageCount);\r\n    }\r\n\r\n    const leftSiblingIndex = Math.max(currentPage - sibilingCount, 1);// 3\r\n    const rigthSiblingIndex = Math.min(currentPage + sibilingCount, totalPageCount); // 5\r\n\r\n    const shouldShowLeftDots = leftSiblingIndex > 2;\r\n    const shouldShowRigthDots = rigthSiblingIndex < totalPageCount - 2;\r\n\r\n    const firstPageIndex = 1;\r\n    const lastPageIndex = totalPageCount;\r\n\r\n    if (!shouldShowLeftDots && shouldShowRigthDots) {\r\n      // eslint-disable-next-line no-mixed-operators\r\n      const leftItemCount = 5 * sibilingCount;\r\n      const leftRange = range(1, leftItemCount);\r\n      return [...leftRange, DOTS, totalPageCount];\r\n    } if (shouldShowLeftDots && !shouldShowRigthDots) {\r\n      // eslint-disable-next-line no-mixed-operators\r\n      const rigthItemsCount = 5 * sibilingCount;\r\n      // eslint-disable-next-line no-mixed-operators\r\n      const rigthRange = range(totalPageCount - rigthItemsCount, totalPageCount + 1);\r\n      return [firstPageIndex, DOTS, ...rigthRange];\r\n    }\r\n\r\n    const middleRange = range(leftSiblingIndex, rigthSiblingIndex + 1);\r\n    return [firstPageIndex, DOTS, ...middleRange, DOTS, lastPageIndex];\r\n  }, [currentPage, totalPages]);\r\n  return pagintationRange;\r\n}\r\n", "/* eslint-disable import/prefer-default-export */\r\nimport styled from 'styled-components';\r\nimport { DropdownButton, Pagination } from 'react-bootstrap';\r\n\r\nexport const TableContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  margin: 2rem auto;\r\n  width: 90vw;\r\n  select {\r\n    width: 10rem;\r\n    border-radius: 5px;\r\n    background-color: #fff;\r\n    border: 1px solid #d3d3d4;\r\n    border-radius: 15px;\r\n    padding: 1px 4px;\r\n    margin: 1rem 0;\r\n    &:focus {\r\n      outline: none;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const UserTable = styled.table`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  margin: 2rem auto;\r\n  border-radius: 9px;\r\n  border: 1px solid #f2efed;\r\n  tr {\r\n    justify-content: space-between;\r\n  }\r\n  @media (max-width: 481px) {\r\n    .table-desktop-view {\r\n      display: none;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const RowTable = styled.tr`\r\n  padding: 0.5rem 0;\r\n  border: 1px solid #f2efed;\r\n  .row-btn {\r\n    margin: 0;\r\n  }\r\n  td {\r\n    min-width: 18vw;\r\n    max-width: 18.01vw;\r\n    text-align: left;\r\n    padding: 0 0.8rem;\r\n    overflow-wrap: break-word;\r\n    div {\r\n      margin: 0.3 auto;\r\n      display: flex;\r\n      align-items: center;\r\n    }\r\n  }\r\n  img {\r\n    margin: 0.8rem;\r\n    width: 2.5rem;\r\n    border-radius: 50%;\r\n  }\r\n  @media (max-width: 767px) {\r\n    td {\r\n      min-width: 17.5vw;\r\n      max-width: 17.51vw;\r\n      text-align: left;\r\n      padding: 0 0.8rem;\r\n      overflow-wrap: break-word;\r\n    }\r\n    div {\r\n      margin: 0.3 auto;\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n    }\r\n    img {\r\n      margin: 0.3rem;\r\n      width: 2rem;\r\n    }\r\n  }\r\n  @media (max-width: 481px) {\r\n    .table-desktop-view {\r\n      display: none;\r\n    }\r\n    td {\r\n      min-width: 45.5vw;\r\n      max-width: 45.51vw;\r\n      text-align: left;\r\n      padding: 0 0.8rem;\r\n      overflow-wrap: break-word;\r\n    }\r\n    div {\r\n      flex-direction: row;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const HeaderTable = styled.tr`\r\n  background-color: #f4f7f9;\r\n  padding: 1rem 0;\r\n  th {\r\n    font-size: 1.5rem;\r\n    min-width: 18vw;\r\n    max-width: 18.01vw;\r\n    color: #524f4e;\r\n    margin: 2rem;\r\n    padding: 0 0 0 1rem;\r\n    @media (max-width: 767px) {\r\n      margin: 0;\r\n      padding: 0;\r\n    }\r\n  }\r\n  .button-header{\r\n    padding: 0.5rem 0 0 0;\r\n  }\r\n  \r\n  @media (max-width: 481px) {\r\n    th {\r\n      min-width: 45.5vw;\r\n      max-width: 45.51vw;\r\n      text-align: left;\r\n      padding: 0 0.8rem;\r\n      overflow-wrap: break-word;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const PaginationContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin: 0.5rem auto;\r\n  padding: 1.5rem 0;\r\n  width: 90vw;\r\n  align-items: center;\r\n  @media (max-width: 767px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nexport const FilterDropdown = styled(DropdownButton)`\r\n  background: transparent;\r\n  border: none;\r\n  font-size: 1.5rem;\r\n  color: #524f4e;\r\n  align-items: center;\r\n  :hover {\r\n    background: transparent;\r\n  }\r\n`;\r\n\r\nexport const TablePagination = styled(Pagination)`\r\n background-color: white;  \r\n`;\r\n\r\nexport const Alert = styled.div`\r\n  display: flex;\r\n  color: var(--color-secondary-active);\r\n  align-items: center;\r\n  background-color: var(--color-secondary-light);\r\n  border-radius: 10px;\r\n  font-family: \"Nunito\";\r\n  font-size: 16px;\r\n  min-height: 50px;\r\n  margin: 15px auto;\r\n  padding: 6px 16px;\r\n  justify-content: center;\r\n  width: 50vw;\r\n  .message {\r\n    padding: 8px 15px;\r\n  }\r\n  @media (max-width: 576px) {\r\n    width: 90vw;\r\n  }\r\n`;\r\n", "import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Form } from '@remix-run/react';\r\nimport * as S from 'app/components/Modals/EditUserModal/EditUserModal.Styled';\r\nimport { PRIMARY_BUTTON, SECONDARY_BUTTON } from 'app/utils/constants';\r\nimport UserImage from 'app/components/Atoms/UserImage/UserImage';\r\nimport Button from 'app/components/Atoms/Button';\r\n\r\nfunction EditUserModal({ user, onClose }) {\r\n  const [uAdmin, setUAdmin] = useState(user.is_admin);\r\n  const [uJobTitle, setUJobTitle] = useState(user.job_title);\r\n\r\n  return (\r\n    <S.Wrapper>\r\n      <Form method=\"post\">\r\n        <S.Container>\r\n          <S.User>\r\n            <UserImage src={user.profile_picture} size=\"extra big\" />\r\n            <S.UserInfo>\r\n              <h2>{user.full_name}</h2>\r\n              <span><b>{user.job_title !== null ? user.job_title : ''}</b></span>\r\n              <span>{user.email}</span>\r\n            </S.UserInfo>\r\n          </S.User>\r\n          <S.Roles>\r\n            <h3>Roles</h3>\r\n            <span>Edit roles for this user</span>\r\n            <S.RolesTable>\r\n              <S.TableRow noBorder>\r\n                <li><b>Name</b></li>\r\n                <li><b>Action</b></li>\r\n              </S.TableRow>\r\n              <S.TableRow>\r\n                <li>Job Title</li>\r\n                <li><input name=\"job_title\" type=\"text\" value={uJobTitle} onChange={(e) => { setUJobTitle(e.target.value); }} /></li>\r\n              </S.TableRow>\r\n              <S.TableRow>\r\n                <li>Role Title</li>\r\n                <li>\r\n                  Employee\r\n                  {user.is_admin && ', Admin'}\r\n                </li>\r\n              </S.TableRow>\r\n              <S.TableRow>\r\n                <li>Admin</li>\r\n                <li><input name=\"is_admin\" type=\"checkbox\" checked={uAdmin} onChange={(e) => { setUAdmin(e.target.checked); }} disabled={user.is_admin} /></li>\r\n              </S.TableRow>\r\n            </S.RolesTable>\r\n            <S.ButtonContainer>\r\n              <Button category={SECONDARY_BUTTON} onClick={onClose}>\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                category={PRIMARY_BUTTON}\r\n                type=\"submit\"\r\n              >\r\n                Save\r\n              </Button>\r\n            </S.ButtonContainer>\r\n          </S.Roles>\r\n        </S.Container>\r\n        <input type=\"hidden\" name=\"employee_id\" value={user.employee_id} />\r\n      </Form>\r\n    </S.Wrapper>\r\n  );\r\n}\r\n\r\nEditUserModal.propTypes = {\r\n  user: PropTypes.shape({\r\n    employee_id: PropTypes.number,\r\n    full_name: PropTypes.string,\r\n    email: PropTypes.string,\r\n    job_title: PropTypes.string,\r\n    is_admin: PropTypes.bool,\r\n    profile_picture: PropTypes.node,\r\n    departments: PropTypes.shape([]),\r\n  }),\r\n  onClose: PropTypes.func,\r\n};\r\n\r\nEditUserModal.defaultProps = {\r\n  user: {\r\n    employee_id: '',\r\n    full_name: '',\r\n    email: '',\r\n    job_title: '',\r\n    is_admin: false,\r\n  },\r\n  onClose: () => { },\r\n};\r\n\r\nexport default EditUserModal;\r\n", "/* eslint-disable import/prefer-default-export */\r\nimport styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  width: 100%;\r\n  height: 100%;\r\n  transform: translate(-50%, -50%);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1050;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  font-family: \"Nunito\", sans-serif;\r\n  font-size: 14px;\r\n  border-radius: 15px;\r\n  background-color: white;\r\n  max-width: 500px;\r\n  width: calc(100% - 40px);\r\n  margin: 20px;\r\n  padding: 15px 0;\r\n  h2 {\r\n    margin: 0;\r\n  }\r\n  h3 {\r\n    margin: 15px 0;\r\n  }\r\n  span {\r\n    margin: 6px 0;\r\n  }\r\n`;\r\n\r\nexport const User = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  border-bottom: 1px solid #d8d8d8;\r\n  padding: 15px 25px;\r\n  @media (max-width: 576px) {\r\n    flex-direction: column;\r\n    justify-content: center;\r\n  }\r\n`;\r\n\r\nexport const UserInfo = styled.div`\r\n  margin-left: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  width: 100%;\r\n  @media (max-width: 576px) {\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport const Roles = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  padding: 15px 25px;\r\n`;\r\n\r\nexport const RolesTable = styled.div`\r\n  border-radius: 15px;\r\n  border: 1px solid #d8d8d8;\r\n  margin: 10px 0 0;\r\n`;\r\n\r\nexport const TableRow = styled.ul`\r\n  border-top: ${(props) => (props.noBorder ? 'none' : '1px solid #d8d8d8')};\r\n  list-style: none;\r\n  margin: 0;\r\n  padding: 15px;\r\n  text-align: center;\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: row;\r\n  justify-content: space-around;\r\n  li {\r\n    max-width: 50%;\r\n    width: 75px;\r\n  }\r\n  input[type=\"text\"] {\r\n    max-width: calc(100% - 4px);\r\n    padding: 5px 2px;\r\n  }\r\n`;\r\n\r\nexport const ButtonContainer = styled.div`\r\n  margin-top: 25px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-end;\r\n  button {\r\n    margin-left: 10px;\r\n  }\r\n  @media (max-width: 576px) {\r\n    justify-content: center;\r\n  }\r\n`;\r\n", "export { default } from './UserSearchBar';\r\n", "import PropTypes from 'prop-types';\r\nimport React, { useState } from 'react';\r\nimport * as Styled from 'app/components/UserSearchBar/UserSearchBar.Styled';\r\nimport { ICON_BUTTON } from 'app/utils/constants';\r\nimport Button from 'app/components/Atoms/Button';\r\n\r\nexport default function UserSearchBar({ onSearch }) {\r\n  const [search, setSearch] = useState('');\r\n\r\n  const clearText = () => {\r\n    setSearch('');\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    setSearch(e.target.value);\r\n  };\r\n\r\n  const handleKeyDown = (event) => {\r\n    if (search && event.key === 'Enter') {\r\n      onSearch(search);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Styled.SearchField>\r\n      <Styled.IconWrapper>\r\n        <Styled.SearchIcon />\r\n      </Styled.IconWrapper>\r\n      <Styled.Input\r\n        type=\"search\"\r\n        value={search}\r\n        onChange={onChange}\r\n        placeholder=\"Search for\u2026\"\r\n        onKeyDown={handleKeyDown}\r\n      />\r\n      {search && (\r\n        <Button\r\n          type=\"button\"\r\n          className=\"clear-button\"\r\n          title=\"Clear\"\r\n          category={ICON_BUTTON}\r\n          onClick={clearText}\r\n        >\r\n          <Styled.ClearIcon />\r\n        </Button>\r\n      )}\r\n    </Styled.SearchField>\r\n  );\r\n}\r\n\r\n// Props types\r\nUserSearchBar.propTypes = {\r\n  onSearch: PropTypes.func.isRequired,\r\n};\r\n", "/* eslint-disable import/prefer-default-export */\r\nimport styled from 'styled-components';\r\nimport { MdClose } from 'react-icons/md';\r\nimport { AiOutlineSearch } from 'react-icons/ai';\r\n\r\nexport const SearchField = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  background-color: #fff;\r\n  border: 1px solid #d3d3d4;\r\n  border-radius: 20px;\r\n  height: 40px;\r\n  justify-content: center;\r\n  max-width: 270px;\r\n  position: relative;\r\n  width: 100%;\r\n  transition: all 0.5s ease;\r\n`;\r\n\r\nexport const IconWrapper = styled.div`\r\n  left: 10px;\r\n  top: auto;\r\n  width: 22px;\r\n  position: absolute;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  background-color: transparent;\r\n  border: none;\r\n  font-size: 14px;\r\n  height: 100%;\r\n  padding: 0 40px;\r\n  width: 100%;\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n  ::placeholder,\r\n  ::-webkit-input-placeholder {\r\n    color: rgba(78, 81, 84, 0.65);\r\n    font-family: \"Nunito\", sans-serif;\r\n  }\r\n`;\r\n\r\nexport const SearchIcon = styled(AiOutlineSearch)`\r\n  font-size: 30px;\r\n  color: rgba(78, 81, 84, 0.65);\r\n`;\r\n\r\nexport const ClearIcon = styled(MdClose)`\r\n  font-size: 28px;\r\n  color: rgba(78, 81, 84, 0.65);\r\n  padding: 5px;\r\n  transition: all 0.3s ease-in-out;\r\n  &:hover {\r\n    color: #fff;\r\n  }\r\n`;\r\n", "export { default } from './UploadButton';\r\n", "import React, { useRef, useState } from 'react';\r\nimport * as Styled from 'app/components/Atoms/UploadButton/UploadButton.Styled';\r\nimport { uploadFiles } from 'app/controllers/answerBot/pdfConv.js'; // Update the Bots database with uploaded files by an admin.\r\n\r\nfunction UploadButton() {\r\n  const fileInputRef = useRef(null);\r\n  const [selectedFiles, setSelectedFiles] = useState([]);\r\n\r\n  const handleFileUpload = (event) => {\r\n    const { files } = event.target;\r\n    setSelectedFiles(Array.from(files));\r\n  };\r\n\r\n  const handleClick = () => {\r\n    fileInputRef.current.click();\r\n  };\r\n\r\n  const handleSendClick = () => {\r\n    // To upload the files...\r\n    const formData = new FormData();\r\n\r\n    // Iterate through the selected files\r\n    for (let i = 0; i < selectedFiles.length; i += 1) {\r\n      const file = selectedFiles[i];\r\n      formData.append(`file${i + 1}`, file); // Use a dynamic key based on the index\r\n    }\r\n    uploadFiles(formData);\r\n    setSelectedFiles([]);\r\n  };\r\n\r\n  return (\r\n    <Styled.Container>\r\n      <Styled.UploadButtonWrapper>\r\n        <Styled.UploadButtonLabel>\r\n          Files to be processed by the AnswerBot\r\n        </Styled.UploadButtonLabel>\r\n        <Styled.UploadButtonContainer onClick={handleClick}>\r\n          <Styled.UploadButtonIcon size={20} />\r\n          <Styled.UploadButtonText> Choose Files To Upload </Styled.UploadButtonText>\r\n        </Styled.UploadButtonContainer>\r\n        <input\r\n          style={{ display: 'none' }}\r\n          type=\"file\"\r\n          ref={fileInputRef}\r\n          onChange={handleFileUpload}\r\n          accept=\".pdf,.doc,.docx\"\r\n          multiple\r\n        />\r\n        {selectedFiles.length > 0 && (\r\n          <>\r\n            <Styled.FileList>\r\n              <li>\r\n                <Styled.FileCount>\r\n                  {selectedFiles.length}\r\n                  &nbsp;File(s) Selected\r\n                </Styled.FileCount>\r\n              </li>\r\n              {selectedFiles.map((file) => (\r\n                <Styled.FileName key={file.id}>{file.name}</Styled.FileName>\r\n              ))}\r\n            </Styled.FileList>\r\n            <Styled.SendButton visible={selectedFiles.length > 0} onClick={handleSendClick}>\r\n              Save File(s)\r\n            </Styled.SendButton>\r\n          </>\r\n        )}\r\n      </Styled.UploadButtonWrapper>\r\n    </Styled.Container>\r\n  );\r\n}\r\n\r\nexport default UploadButton;\r\n", "import styled from 'styled-components';\r\nimport { FiUpload } from 'react-icons/fi';\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 15px;\r\n`;\r\n\r\nexport const UploadButtonWrapper = styled.div`\r\n  background-color: #fff;\r\n  border-radius: 25px;\r\n  border: 1px solid #d3d3d4;\r\n  text-align: center;\r\n  width: 30vw;\r\n  min-height: 115px;\r\n  margin: 5vh auto;\r\n`;\r\n\r\nexport const UploadButtonLabel = styled.div`\r\n  font-size: 17px;\r\n  margin-bottom: 15px;\r\n  margin-top: 15px;\r\n`;\r\n\r\nexport const UploadButtonContainer = styled.label`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 10px;\r\n  background-color: #213246;\r\n  color: #fff;\r\n  border: 1px solid #213246;\r\n  border-radius: 4px;\r\n  width: 20vw;\r\n  height: 50px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n  margin: 0 auto;\r\n\r\n  &:hover {\r\n    background-color: #fff;\r\n    color: #213246;\r\n  }\r\n`;\r\n\r\nexport const UploadButtonIcon = styled(FiUpload)`\r\n  margin-right: 8px;\r\n`;\r\n\r\nexport const UploadButtonText = styled.div`\r\n  font-size: 14px;\r\n`;\r\n\r\nexport const FileList = styled.ul`\r\n  list-style-type: none;\r\n  margin-top: 10px;\r\n  padding: 0;\r\n`;\r\n\r\nexport const FileCount = styled.div`\r\n  margin-top: 15px;\r\n  margin-bottom: 15px;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport const FileName = styled.li`\r\n  font-size: 12px;\r\n  background-color: #f4f7f9;\r\n  width: 20vw;\r\n  margin: 0 auto;\r\n  margin-bottom: 1em;\r\n  padding: 1.1em 1em;\r\n  border-radius: 0.3em;\r\n`;\r\n\r\nexport const SendButton = styled.button`\r\n  display: ${({ visible }) => (visible ? 'block' : 'none')};\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 10px;\r\n  background-color: #213246;\r\n  color: #fff;\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n  border: 1px solid #213246;\r\n  border-radius: 4px;\r\n  width: 20vw;\r\n  height: 50px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n  margin-top: 40px;\r\n  margin-bottom: 1em;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n\r\n  &:hover {\r\n    background-color: #fff;\r\n    color: #213246;\r\n  }\r\n`;\r\n", "import { db } from 'app/utils/db.server';\r\n\r\nconst getPagination = (page, size) => {\r\n  // check if size is defined, if it is, convert the value to number, if not set default value to 20\r\n  const limit = size || 20;\r\n  // check if page is defined,\r\n  // if it is calculates the offset for the pagination, if not set offset to 0\r\n  const offset = page ? (page - 1) * limit : 0;\r\n  return { limit, offset };\r\n};\r\n\r\nconst listUsers = async (query) => {\r\n  const { page, search, size } = query;\r\n  const { limit, offset } = getPagination(Number(page), Number(size));\r\n\r\n  const where = search === undefined ? undefined : {\r\n    OR: [\r\n      {\r\n        full_name: { contains: search },\r\n      },\r\n      {\r\n        email: { contains: search },\r\n      },\r\n    ],\r\n  };\r\n\r\n  const count = await db.users.count({\r\n    where,\r\n  });\r\n  const totalPages = Math.floor(count / limit) + 1;\r\n  const users = await db.users.findMany({\r\n    where,\r\n    take: limit,\r\n    skip: (offset / limit) > totalPages ? 0 : offset,\r\n  });\r\n\r\n  return {\r\n    totalPages,\r\n    users,\r\n  };\r\n};\r\n\r\nexport default listUsers;\r\n", "/* eslint-disable camelcase */\r\nimport { DEFAULT_ERROR_MESSAGE } from 'app/utils/backend/constants';\r\nimport updateUserSchema from 'app/utils/backend/validators/admin';\r\nimport { db } from 'app/utils/db.server';\r\n\r\nconst updateUser = async (query) => {\r\n  const { error, value } = updateUserSchema.validate(query);\r\n  const { employee_id, is_admin, job_title } = value;\r\n\r\n  if (error) {\r\n    return {\r\n      errors: [\r\n        {\r\n          message: DEFAULT_ERROR_MESSAGE,\r\n          detail: error.details,\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  const updatedUser = await db.users.update({\r\n    where: {\r\n      employee_id,\r\n    },\r\n    data: {\r\n      is_admin,\r\n      job_title,\r\n    },\r\n  });\r\n\r\n  return {\r\n    successMessage: 'The user has been updated succesfully.',\r\n    updatedUser,\r\n  };\r\n};\r\n\r\nexport default updateUser;\r\n", "import Joi from 'joi';\r\nimport { JOI_ID_VALIDATION } from 'app/utils/backend/joiConstants';\r\n\r\nconst updateUserSchema = Joi.object({\r\n  employee_id: JOI_ID_VALIDATION,\r\n  job_title: Joi.string().max(255).allow(''),\r\n  is_admin: Joi.boolean(),\r\n});\r\n\r\nexport default updateUserSchema;\r\n", "import React from 'react';\r\nimport notFoundImage from 'app/images/404.svg';\r\nimport * as Styled from 'app/styles/NotFound.Styled';\r\n\r\nfunction NotFound() {\r\n  return (\r\n    <div>\r\n      <Styled.BackgroundDiv />\r\n      <Styled.MainDiv>\r\n        <Styled.Container>\r\n          <Styled.Img src={notFoundImage} alt=\"404\" />\r\n          <Styled.Title>Sorry! The page you were looking for doesn\u2019t exist.</Styled.Title>\r\n          <Styled.SLink to=\"/\">Go back</Styled.SLink>\r\n        </Styled.Container>\r\n      </Styled.MainDiv>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotFound;\r\n", "/* eslint-disable import/prefer-default-export */\r\nimport styled from 'styled-components';\r\nimport { Link } from '@remix-run/react';\r\nimport img from 'app/images/header-background-dots-pattern.svg';\r\n\r\nexport const BackgroundDiv = styled.div`\r\n    background-image: url(${img});\r\n    background-size: cover;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    height: 100%;\r\n    width: 100%;\r\n    z-index: -1;\r\n`;\r\n\r\nexport const MainDiv = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    height: 60rem;\r\n    margin-top: 3.5rem;\r\n    width: 100%;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n    align-items: center;\r\n    margin: 0 auto;\r\n    width: 70.4rem;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n\r\n    @media (min-width: 768px) and (max-width: 1024px) {\r\n        width: 704px;\r\n    }\r\n\r\n    @media (max-width: 767px) {\r\n        width: 288px;\r\n    }\r\n`;\r\n\r\nexport const Img = styled.img`\r\n    display: block;\r\n    height: 12.5rem;\r\n    margin-bottom: 5rem;\r\n    max-width: 100%\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n    font-size: 4rem;\r\n    font-weight: bold;\r\n    line-height: 1.25;\r\n    text-align: center;\r\n    margin: 0 0 5rem 0;\r\n`;\r\n\r\nexport const SLink = styled(Link)`\r\n    color: #fff;\r\n    background-color: var(--color-secondary);\r\n    border-radius: 5px;\r\n    font-size: 1.6rem;\r\n    padding: 1.5rem 4.1rem;\r\n    text-decoration: none;\r\n\r\n    &:hover {\r\n        color: #fff;\r\n        background-color: var(--color-secondary-hover);\r\n        cursor: pointer;\r\n        text-decoration: none;\r\n    }\r\n\r\n    &:active {\r\n        background-color: var(--color-secondary-active);\r\n    }\r\n`;\r\n", "import { json, redirect } from '@remix-run/node';\r\nimport {\r\n  useFetcher, useLoaderData, useSearchParams, useSubmit,\r\n} from '@remix-run/react';\r\nimport React, { useEffect, useState, useRef } from 'react';\r\nimport {\r\n  commitSession, getAuthenticatedUser, getSession, requireAuth,\r\n} from 'app/session.server';\r\nimport * as Styled from 'app/styles/Home.Styled';\r\nimport ListQuestions from 'app/components/ListQuestions';\r\nimport Notifications from 'app/components/Notifications';\r\nimport AnswerBot from 'app/components/AnswerBot';\r\nimport listDepartments from 'app/controllers/departments/list';\r\nimport listLocations from 'app/controllers/locations/list';\r\nimport listQuestions from 'app/controllers/questions/list';\r\nimport createQuestion from 'app/controllers/questions/create';\r\nimport createAnswerByBot from 'app/controllers/answerBot/create';\r\nimport updateFeedback from 'app/controllers/answerBot/modifyFeedback';\r\nimport updatePostID from 'app/controllers/answerBot/modifyIDQuestion';\r\nimport { PAGE_QUESTIONS_LIMIT, DEFAULT_LOCATION } from 'app/utils/constants';\r\nimport dateRangeConversion from 'app/utils/dateRangeConversion';\r\nimport modifyPinStatus from 'app/controllers/questions/modifyPinStatus';\r\nimport modifyEnabledValue from 'app/controllers/questions/modifyEnableStatus';\r\nimport voteQuestion from 'app/controllers/questionVotes/voteQuestion';\r\nimport ACTIONS from 'app/utils/actions';\r\n\r\nexport const loader = async ({ request }) => {\r\n  await requireAuth(request);\r\n  const user = await getAuthenticatedUser(request);\r\n\r\n  const url = new URL(request.url);\r\n\r\n  const order = url.searchParams.get('order');\r\n  const status = url.searchParams.get('status');\r\n  const department = Number.parseInt(url.searchParams.get('department'), 10);\r\n  const location = url.searchParams.get('location');\r\n  const dateRange = dateRangeConversion(url.searchParams.get('dateRange'));\r\n  const page = url.searchParams.get('page') ?? 1;\r\n\r\n  const questions = await listQuestions({\r\n    user,\r\n    orderBy: order,\r\n    status,\r\n    department: Number.isNaN(department) ? undefined : department,\r\n    location,\r\n    dateRange,\r\n    offset: (page - 1) * PAGE_QUESTIONS_LIMIT,\r\n  });\r\n\r\n  const locations = await listLocations();\r\n  const departments = await listDepartments();\r\n\r\n  return json({\r\n    questions,\r\n    locations,\r\n    departments,\r\n  });\r\n};\r\n\r\nexport const action = async ({ request }) => {\r\n  const formData = await request.formData();\r\n  const formAction = formData.get('action');\r\n\r\n  const user = await getAuthenticatedUser(request);\r\n  const form = Object.fromEntries(formData.entries());\r\n\r\n  // Extract and format department.\r\n  const { assignedDepartment } = form;\r\n  const parsedDepartment = parseInt(assignedDepartment, 10);\r\n\r\n  let response;\r\n  let payload;\r\n  let questionId;\r\n\r\n  switch (formAction) {\r\n    case ACTIONS.PINNIN:\r\n      questionId = parseInt(formData.get('questionId'), 10);\r\n      const value = formData.get('value') !== 'false';\r\n      response = await modifyPinStatus(questionId, value);\r\n      break;\r\n    case ACTIONS.VOTE_QUESTION:\r\n      const voteQuestionId = parseInt(formData.get('questionId'), 10);\r\n      const voteQuestionUser = JSON.parse(formData.get('user'));\r\n      const isUpVote = formData.get('isUpVote') === 'true';\r\n      response = await voteQuestion(voteQuestionId, voteQuestionUser, isUpVote);\r\n      break;\r\n    case ACTIONS.ENABLED_ACTION:\r\n      questionId = parseInt(formData.get('questionId'), 10);\r\n      const enabledValue = formData.get('enabledValue') !== 'false';\r\n      response = await modifyEnabledValue(questionId, enabledValue);\r\n      break;\r\n\r\n    // Create a new record in AnswerBot table.\r\n    case ACTIONS.CREATE_QUESTION_ANSWERBOT:\r\n      // Create the payload.\r\n      payload = {\r\n        question_by_user: form.question_by_user,\r\n        answer_by_bot: form.answer_by_bot,\r\n        assigned_department: Number.isNaN(parsedDepartment) ? null : parsedDepartment,\r\n        user_id: user.employee_id,\r\n      };\r\n\r\n      // Post the payload.\r\n      response = await createAnswerByBot(payload);\r\n\r\n      // If the result is successful, it shows it on the screen.\r\n      if (response.successMessage) {\r\n        const session = await getSession(request);\r\n        const { successMessage } = response;\r\n        session.flash('globalSuccess', successMessage);\r\n        const destination = '/?index';\r\n\r\n        return redirect(destination, {\r\n          headers: {\r\n            'Set-Cookie': await commitSession(session),\r\n          },\r\n        });\r\n      }\r\n      break;\r\n\r\n    // Update feedback.\r\n    case ACTIONS.UPDATE_FEEDBACK_ANSWERBOT:\r\n      // Create the payload.\r\n      payload = {\r\n        question_by_user: form.question_by_user,\r\n        answer_by_bot: form.answer_by_bot,\r\n        answerFeedback: form.answerFeedback,\r\n        assigned_department: Number.isNaN(parsedDepartment) ? null : parsedDepartment,\r\n        user_id: user.employee_id,\r\n      };\r\n\r\n      // Update the record with the payload.\r\n      response = await updateFeedback(payload);\r\n\r\n      // If the result is successful, it shows it on the screen.\r\n      if (response.successMessage) {\r\n        const session = await getSession(request);\r\n        const { successMessage } = response;\r\n        session.flash('globalSuccess', successMessage);\r\n        const destination = '/?index';\r\n\r\n        return redirect(destination, {\r\n          headers: {\r\n            'Set-Cookie': await commitSession(session),\r\n          },\r\n        });\r\n      }\r\n      break;\r\n\r\n    // Update post id.\r\n    case ACTIONS.UPDATE_POST_ANSWERBOT:\r\n      // Create the payload.\r\n      payload = {\r\n        question: form.question,\r\n        created_by_employee_id: user.employee_id,\r\n        is_anonymous: false,\r\n        assigned_department: Number.isNaN(parsedDepartment) ? null : parsedDepartment,\r\n        assigned_to_employee_id: null,\r\n        botEnabled: true,\r\n        location: DEFAULT_LOCATION,\r\n        accessToken: user.accessToken,\r\n      };\r\n\r\n      // Create a question in the forum.\r\n      response = await createQuestion(payload);\r\n\r\n      // If the result is successful, proceed to continue.\r\n      if (response.successMessage) {\r\n        // Create another payload.\r\n        payload = {\r\n          postQuestionID: response.question.question_id,\r\n          question_by_user: form.question,\r\n          answer_by_bot: form.answer,\r\n          assigned_department: Number.isNaN(parsedDepartment) ? null : parsedDepartment,\r\n          user_id: user.employee_id,\r\n        };\r\n\r\n        // Update the AnswerBot record with the new payload.\r\n        response = await updatePostID(payload);\r\n\r\n        // If the result is successful, it shows it on the screen.\r\n        if (response.successMessage) {\r\n          const session = await getSession(request);\r\n          const { successMessage } = response;\r\n          session.flash('globalSuccess', successMessage);\r\n          const destination = '/?index';\r\n\r\n          return redirect(destination, {\r\n            headers: {\r\n              'Set-Cookie': await commitSession(session),\r\n            },\r\n          });\r\n        }\r\n      }\r\n\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n\r\n  return json(response);\r\n};\r\n\r\nexport default function Index() {\r\n  const { questions: initialQuestions, departments } = useLoaderData();\r\n  const [questions, setQuestions] = useState(initialQuestions);\r\n\r\n  const fetcher = useFetcher();\r\n  const submit = useSubmit();\r\n  const formRef = useRef();\r\n  const [shouldFetch, setShouldFetch] = useState(true);\r\n  const [page, setPage] = useState(2);\r\n  const [searchParams] = useSearchParams();\r\n\r\n  const onFetchMore = () => {\r\n    if (!shouldFetch) return;\r\n    fetcher.load(`/?index&${searchParams.toString()}&page=${page}`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (fetcher.data && fetcher.data.questions && fetcher.data.questions.length === 0) {\r\n      setShouldFetch(false);\r\n      return;\r\n    }\r\n\r\n    if (fetcher.data && fetcher.data.questions && fetcher.data.questions.length > 0) {\r\n      setQuestions((prevQuestions) => [...prevQuestions, ...fetcher.data.questions]);\r\n      setPage((prevPage) => prevPage + 1);\r\n      setShouldFetch(true);\r\n    }\r\n  }, [fetcher.data]);\r\n\r\n  useEffect(() => {\r\n    setQuestions(initialQuestions);\r\n    setPage(2);\r\n    setShouldFetch(true);\r\n  }, [initialQuestions, searchParams]);\r\n\r\n  // Creates a FormData to submit and create a new record.\r\n  const postAnswerBotQuestion = (question) => {\r\n    const data = new FormData(formRef.current);\r\n\r\n    data.set('action', ACTIONS.CREATE_QUESTION_ANSWERBOT);\r\n\r\n    // eslint-disable-next-line no-restricted-syntax\r\n    for (const [key, value] of Object.entries(question)) {\r\n      data.set(key, value);\r\n    }\r\n\r\n    submit(\r\n      data,\r\n      { method: 'post', action: '/?index' },\r\n    );\r\n  };\r\n\r\n  // Creates a FormData to submit and update feedback for an existing record.\r\n  const updateAnswerBotFeedback = (question) => {\r\n    const data = new FormData(formRef.current);\r\n\r\n    data.set('action', ACTIONS.UPDATE_FEEDBACK_ANSWERBOT);\r\n\r\n    // eslint-disable-next-line no-restricted-syntax\r\n    for (const [key, value] of Object.entries(question)) {\r\n      data.set(key, value);\r\n    }\r\n\r\n    submit(\r\n      data,\r\n      { method: 'post', action: '/?index' },\r\n    );\r\n  };\r\n\r\n  // Creates a FormData to submit and update the post id for an existing record.\r\n  const updateAnswerBotPostID = (question) => {\r\n    const data = new FormData(formRef.current);\r\n\r\n    data.set('action', ACTIONS.UPDATE_POST_ANSWERBOT);\r\n\r\n    // eslint-disable-next-line no-restricted-syntax\r\n    for (const [key, value] of Object.entries(question)) {\r\n      data.set(key, value);\r\n    }\r\n\r\n    submit(\r\n      data,\r\n      { method: 'post', action: '/?index' },\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Notifications />\r\n      <Styled.Container>\r\n        <ListQuestions\r\n          type=\"all\"\r\n          questions={questions}\r\n          onFetchMore={onFetchMore}\r\n        />\r\n        <AnswerBot\r\n          postAnswerBotQuestion={postAnswerBotQuestion}\r\n          updateAnswerBotFeedback={updateAnswerBotFeedback}\r\n          updateAnswerBotPostID={updateAnswerBotPostID}\r\n          departments={departments}\r\n\r\n        />\r\n      </Styled.Container>\r\n    </>\r\n  );\r\n}\r\n", "/* eslint-disable import/prefer-default-export */\r\nimport styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\nbackground-color: #f4f7f9;\r\n`;\r\n", "export { default } from './ListQuestions';\r\n", "import React, { useState, useRef } from 'react';\r\nimport { useSubmit, useSearchParams, useTransition } from '@remix-run/react';\r\nimport PropTypes from 'prop-types';\r\nimport * as Styled from 'app/components/ListQuestions/ListQuestions.Styled';\r\nimport Slogan from 'app/components/Slogan';\r\nimport QuestionCard from 'app/components/QuestionCard';\r\nimport useUser from 'app/utils/hooks/useUser';\r\nimport GoToTopButton from 'app/components/GoToTopButton';\r\nimport markdownFormatQuestion from 'app/utils/markdownFormatQuestions';\r\nimport InfiniteScrollList from 'app/components/Atoms/InfiniteScrollList';\r\nimport Filters from 'app/components/Filters';\r\nimport ACTIONS from 'app/utils/actions';\r\nimport { setCookie, getCookie } from 'app/utils/cookies';\r\nimport ValuesMessageModal from '../Modals/ValuesMessageModal/ValuesMessageModal';\r\n\r\nfunction ListQuestions({\r\n  questions,\r\n  onFetchMore,\r\n}) {\r\n  const submit = useSubmit();\r\n  const transition = useTransition();\r\n  const voteQuestionForm = useRef();\r\n  const profile = useUser();\r\n  const [showValuesMessage, setShowValueMessage] = useState(getCookie('showValueMessage'));\r\n\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n\r\n  const [title, setTitle] = useState('Newest Questions');\r\n\r\n  const valuesMessageModal = showValuesMessage === 'true' && (\r\n    <ValuesMessageModal\r\n      show={showValuesMessage}\r\n      onClose={() => { setShowValueMessage(false); setCookie('showValueMessage', false); }}\r\n    />\r\n  );\r\n\r\n  const decorateQuestion = (question) => ({\r\n    ...question,\r\n    question: markdownFormatQuestion(question.question, undefined),\r\n    hasVoted: !!question.hasVoted,\r\n  });\r\n\r\n  const clearFilters = (params) => {\r\n    params.forEach((param) => {\r\n      searchParams.delete(param);\r\n    });\r\n\r\n    setSearchParams(searchParams);\r\n  };\r\n\r\n  const modifyQuery = (field, value) => {\r\n    if (field === 'order') {\r\n      if (value === 'oldest') {\r\n        setTitle('Oldest Questions');\r\n      } else if (value === 'newest') {\r\n        setTitle('Newest Questions');\r\n      } else if (value === 'popular') {\r\n        setTitle('Popular Questions');\r\n      } else if (value === 'most_commented') {\r\n        setTitle('Most Commented Questions');\r\n      }\r\n    }\r\n\r\n    if (value === undefined) {\r\n      searchParams.delete(field);\r\n    } else {\r\n      searchParams.set(field, value);\r\n    }\r\n    setSearchParams(searchParams);\r\n  };\r\n\r\n  const displayUsername = (user) => {\r\n    if (!user) {\r\n      return 'Anonymous';\r\n    }\r\n    return user.full_name;\r\n  };\r\n\r\n  const displayAnsweredBy = (username) => {\r\n    const answeredBy = username ? `Answered by ${username}` : '';\r\n    return answeredBy;\r\n  };\r\n\r\n  const renderQuestionsList = () => {\r\n    const onLikeButtonClick = (questionId, isUpVote) => {\r\n      if (transition.state !== 'idle') {\r\n        return;\r\n      }\r\n      const data = new FormData(voteQuestionForm.current);\r\n      data.set('action', ACTIONS.VOTE_QUESTION);\r\n      data.set('questionId', questionId);\r\n      data.set('user', JSON.stringify(profile));\r\n      data.set('isUpVote', isUpVote);\r\n      let actionUrl = '/?index';\r\n      searchParams.forEach((value, key) => {\r\n        actionUrl += value ? `&${key}=${value}` : '';\r\n      });\r\n      submit(data, { method: 'post', action: actionUrl, replace: true });\r\n    };\r\n\r\n    if (questions.length === 0) { return null; }\r\n\r\n    return questions.map((question, index) => (\r\n      <QuestionCard\r\n        key={question.question_id}\r\n        question={decorateQuestion(question)}\r\n        isAdmin={profile.is_admin}\r\n        displayUsername={displayUsername}\r\n        displayAnsweredBy={displayAnsweredBy}\r\n        searchTerm={undefined}\r\n        index={index}\r\n        onVoteClick={(isUpVote) => onLikeButtonClick(question.question_id, isUpVote)}\r\n        processingFormSubmission={transition.state !== 'idle'}\r\n      />\r\n    ));\r\n  };\r\n\r\n  const renderNoResultMessage = () => {\r\n    if (!questions) {\r\n      return 'Loading questions...';\r\n    }\r\n    return 'There are no questions yet, how about asking one?';\r\n  };\r\n\r\n  const generateAskQuestionButton = () => (\r\n    <Styled.AskButton to=\"/questions/new\" id=\"ask-button\">\r\n      Ask Question\r\n    </Styled.AskButton>\r\n  );\r\n\r\n  return (\r\n    <Styled.Container>\r\n      {/* TODO: Add left hashtag's panel */}\r\n      <Styled.LeftWrapper>\r\n        <Styled.SloganWrapper>\r\n          <Slogan />\r\n        </Styled.SloganWrapper>\r\n      </Styled.LeftWrapper>\r\n      <Styled.CenterWrapper>\r\n        <Styled.QuestionsWrapper>\r\n          <Styled.AskQuestionButtonWrapper>\r\n            <Styled.QuestionsTitle>\r\n              {title}\r\n            </Styled.QuestionsTitle>\r\n            {generateAskQuestionButton()}\r\n          </Styled.AskQuestionButtonWrapper>\r\n          {questions.length === 0 ? (\r\n            <Styled.Alert>{renderNoResultMessage()}</Styled.Alert>\r\n          ) : (\r\n            <InfiniteScrollList onFetch={onFetchMore}>\r\n              <Styled.QuestionList id=\"questions-list\">\r\n                {renderQuestionsList(questions)}\r\n              </Styled.QuestionList>\r\n            </InfiniteScrollList>\r\n          )}\r\n        </Styled.QuestionsWrapper>\r\n      </Styled.CenterWrapper>\r\n      <Styled.RightWrapper>\r\n        <Styled.FiltersWrapper>\r\n          <Filters\r\n            modifyQuery={modifyQuery}\r\n            clearFilters={clearFilters}\r\n          />\r\n        </Styled.FiltersWrapper>\r\n      </Styled.RightWrapper>\r\n      <GoToTopButton />\r\n      {valuesMessageModal}\r\n    </Styled.Container>\r\n  );\r\n}\r\n\r\nListQuestions.propTypes = {\r\n  questions: PropTypes.arrayOf(\r\n    PropTypes.shape(),\r\n  ),\r\n  onFetchMore: PropTypes.func.isRequired,\r\n};\r\n\r\nListQuestions.defaultProps = {\r\n  questions: [],\r\n};\r\n\r\nexport default ListQuestions;\r\n", "import { Link } from '@remix-run/react';\r\n/* eslint-disable import/prefer-default-export */\r\nimport styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  background-color: #f4f7f9;\r\n  margin: 0 auto;\r\n  width: 100%;\r\n  max-width: 1600px;\r\n  padding-top: 40px;\r\n  @media (max-width: 1025px) {\r\n    flex-direction: column-reverse;\r\n    align-items: center;\r\n  }\r\n  @media (max-width: 768px) {\r\n    padding-top: 20px;\r\n  }\r\n`;\r\n\r\nexport const LeftWrapper = styled.div`\r\n  flex: 1;\r\n`;\r\n\r\nexport const CenterWrapper = styled.div`\r\n  flex: 2;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const RightWrapper = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  @media (max-width: 1025px) {\r\n    width: 100%;\r\n    display: contents;\r\n    position: sticky;\r\n  }\r\n  @media (min-width: 1440px) {\r\n    overflow: auto;\r\n  }\r\n`;\r\n\r\nexport const SloganWrapper = styled.div`\r\n  max-width: 425px;\r\n  \r\n  @media (max-width: 1025px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const QuestionsWrapper = styled.div`\r\n  max-width: 650px;\r\n  width: 100%;\r\n`;\r\n\r\nexport const AskQuestionButtonWrapper = styled.div`\r\n  padding-right: 10px;\r\n  padding-left: 10px;\r\n  flex-direction: row;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport const QuestionsTitle = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  font-family: \"Nunito\", sans-serif;\r\n  font-size: 20px;\r\n  letter-spacing: 0.6px;\r\n`;\r\n\r\nexport const QuestionList = styled.div`\r\n  margin: 5px 0 10px;\r\n  padding-left: 0;\r\n`;\r\n\r\nexport const Alert = styled.div`\r\n  border-radius: 3px;\r\n  margin: 0 auto;\r\n  max-width: 592px;\r\n  width: 94%;\r\n  padding: 15px 10px;\r\n  @media (min-width: 768px) and (max-width: 1024px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport const FiltersWrapper = styled.div`\r\n  width: 100%;\r\n  max-width: 300px;\r\n  @media (max-width: 1024px) {\r\n    max-width: none;\r\n    padding: 0 0 20px;\r\n    position: -webkit-sticky;\r\n    position: sticky;\r\n    top: 0;\r\n    background-color: #f4f7f9;\r\n    border-radius: 18px;\r\n  }\r\n  @media (max-width: 767px) {\r\n    padding: 0 0 20px;\r\n    position: -webkit-sticky;\r\n    position: sticky;\r\n    top: 0;\r\n  }\r\n`;\r\n\r\nexport const AskButton = styled(Link)`\r\n  align-items: center;\r\n  background: var(--color-secondary);\r\n  border: solid 1px transparent;\r\n  border-radius: 3px;\r\n  color: #fff;\r\n  display: flex;\r\n  height: 33px;\r\n  justify-content: center;\r\n  padding: 20px 15px;\r\n  text-decoration: none;\r\n  width: 120px;\r\n  &:disabled {\r\n    background: #d8d8d8;\r\n  }\r\n  &:hover {\r\n    background-color: white;\r\n    border: solid 1px var(--color-secondary);\r\n    color: var(--color-secondary);\r\n    text-decoration: none;\r\n  }\r\n`;\r\n", "export { default } from './QuestionCard';\r\n", "import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport likeIcon from 'app/images/ic_like.svg';\r\nimport diskilike from 'app/images/ic_dislike.svg';\r\nimport dislikeIconVoted from 'app/images/ic_dislike_pressed.svg';\r\nimport likeIconVoted from 'app/images/ic_like_pressed.svg';\r\nimport commentIcon from 'app/images/ic_comment_non-selected.svg';\r\nimport {\r\n  renderAnswer,\r\n} from 'app/utils/questionUtils';\r\n\r\nimport * as Styled from 'app/components/QuestionCard/QuestionCard.Styled';\r\nimport QuestionRow from 'app/components/QuestionRow';\r\nimport CounterButton from 'app/components/CounterButton';\r\nimport reorderHighlightedComments from 'app/utils/commentUtils';\r\nimport AnswerRow from 'app/components/AnswerRow';\r\n\r\nfunction QuestionCard(props) {\r\n  const {\r\n    question,\r\n    currentUserEmail,\r\n    question: { Answers },\r\n    onVoteClick,\r\n    searchTerm,\r\n    processingFormSubmission,\r\n  } = props;\r\n\r\n  const renderAnswerProps = {\r\n    Answers,\r\n    isAdmin: false,\r\n    currentUserEmail,\r\n    onAnswerClick: () => {},\r\n    openDeleteAnswerModal: () => {},\r\n    question,\r\n    searchTerm,\r\n    isPreview: true,\r\n    isFromList: true,\r\n    questionId: question.question_id,\r\n    isAnswer: true,\r\n  };\r\n\r\n  const hasAnswer = question.Answers.length > 0;\r\n  const navigate = useNavigate();\r\n\r\n  const renderButtons = () => {\r\n    const icon = !question.hasLike ? likeIcon : likeIconVoted;\r\n    const dislikeicon = !question.hasDislike ? diskilike : dislikeIconVoted;\r\n\r\n    return (\r\n      <Styled.CounterButtonsWrapper isAdmin={false} hasAnswer={hasAnswer}>\r\n        <CounterButton\r\n          id={`like-button-${question.question_id}`}\r\n          selected={question.hasLike}\r\n          icon={icon}\r\n          count={question.numLikes}\r\n          onClick={() => onVoteClick(true)}\r\n          processingFormSubmission={processingFormSubmission}\r\n          isDisabled={question.hasDislike}\r\n        />\r\n        <CounterButton\r\n          id={`like-button-${question.question_id}`}\r\n          selected={question.hasDislike}\r\n          icon={dislikeicon}\r\n          count={question.numDisklike}\r\n          onClick={() => onVoteClick(false)}\r\n          processingFormSubmission={processingFormSubmission}\r\n          isDisabled={question.hasLike}\r\n        />\r\n        <CounterButton\r\n          id={`comments-button-${question.question_id}`}\r\n          icon={commentIcon}\r\n          count={question.numComments}\r\n          onClick={() => navigate(`/questions/${question.question_id}`)}\r\n        />\r\n      </Styled.CounterButtonsWrapper>\r\n    );\r\n  };\r\n\r\n  // eslint-disable-next-line consistent-return\r\n  const renderCommentAnswer = () => {\r\n    if ((!question.hasCommentApproved && !question.hasCommunityAnswer)\r\n       || question.Answers.length > 0) {\r\n      return null;\r\n    }\r\n\r\n    let commentAsAnswer = {};\r\n    if (question.hasCommentApproved) {\r\n      commentAsAnswer = question.Comments.find((comment) => comment.approvedBy !== null);\r\n    } else if (question.hasCommunityAnswer) {\r\n      const [communityAnswerCommentId] = reorderHighlightedComments(question.Comments);\r\n      commentAsAnswer = question.Comments.find(\r\n        (comment) => comment.id === communityAnswerCommentId,\r\n      );\r\n    }\r\n\r\n    if (commentAsAnswer) {\r\n      return (\r\n        <AnswerRow\r\n          answer_text={commentAsAnswer.comment}\r\n          user={commentAsAnswer.User}\r\n          answered_at={commentAsAnswer.createdAt}\r\n          searchTerm={renderAnswerProps.searchTerm}\r\n          isPreview={renderAnswerProps.isPreview}\r\n          isFromList={renderAnswerProps.isFromList}\r\n          questionId={question.question_id}\r\n          isAnswer={question.Answers.length > 0}\r\n          isCommunityAnswer={question.hasCommunityAnswer}\r\n          isCommentApproved={question.hasCommentApproved}\r\n          approver={commentAsAnswer.Approver}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Styled.QuestionCardContainer>\r\n      <Styled.QuestionCardWrapper>\r\n        <Styled.QuestionCardBorder>\r\n          <QuestionRow\r\n            question={question}\r\n            isQuestionModalOpen={false}\r\n            hasAnswer={hasAnswer}\r\n          />\r\n          <Styled.QuestionCardActions hasAnswer={hasAnswer} isQuestionModalOpen={false}>\r\n            {renderButtons()}\r\n          </Styled.QuestionCardActions>\r\n        </Styled.QuestionCardBorder>\r\n      </Styled.QuestionCardWrapper>\r\n      {renderAnswer(renderAnswerProps)}\r\n      {renderCommentAnswer()}\r\n    </Styled.QuestionCardContainer>\r\n  );\r\n}\r\n\r\nQuestionCard.propTypes = {\r\n  question: PropTypes.shape({\r\n    question_id: PropTypes.number.isRequired,\r\n    question: PropTypes.string.isRequired,\r\n    user_hash: PropTypes.string,\r\n    can_edit: PropTypes.bool,\r\n    created_by_user: PropTypes.shape({\r\n      email: PropTypes.string,\r\n      employee_id: PropTypes.number,\r\n      full_name: PropTypes.string,\r\n      is_admin: PropTypes.bool,\r\n      job_title: PropTypes.string,\r\n      profile_picture: PropTypes.string,\r\n    }),\r\n    Answers: PropTypes.arrayOf(\r\n      PropTypes.shape(),\r\n    ),\r\n    createdAt: PropTypes.string.isRequired,\r\n    location: PropTypes.string.isRequired,\r\n    numComments: PropTypes.number.isRequired,\r\n    hasVoted: PropTypes.bool.isRequired,\r\n    hasCommentApproved: PropTypes.bool.isRequired,\r\n    hasCommunityAnswer: PropTypes.bool.isRequired,\r\n    Comments: PropTypes.arrayOf(\r\n      PropTypes.shape(),\r\n    ),\r\n    numLikes: PropTypes.number.isRequired,\r\n    numDisklike: PropTypes.number.isRequired,\r\n    hasLike: PropTypes.bool.isRequired,\r\n    hasDislike: PropTypes.bool.isRequired,\r\n  }).isRequired,\r\n  onVoteClick: PropTypes.func.isRequired,\r\n  currentUserEmail: PropTypes.string,\r\n  searchTerm: PropTypes.string,\r\n  processingFormSubmission: PropTypes.bool,\r\n};\r\n\r\nQuestionCard.defaultProps = {\r\n  currentUserEmail: '',\r\n  searchTerm: '',\r\n  processingFormSubmission: false,\r\n};\r\n\r\nexport default QuestionCard;\r\n", "export { default } from './GoToTopButton';\r\n", "import React, { useState, useEffect } from 'react';\r\nimport * as Styled from 'app/components/GoToTopButton/GoToTopButton.Styled';\r\nimport { BACK_TO_TOP } from 'app/utils/constants';\r\nimport ArrowIcon from 'app/components/Atoms/ArrowIcon';\r\n\r\nfunction GoToTopButton() {\r\n  const [show, setShow] = useState(false);\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', () => {\r\n      if (window.scrollY > 500) {\r\n        setShow(true);\r\n      } else {\r\n        setShow(false);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const goToTop = () => {\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: 'auto',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Styled.Button\r\n      id=\"go-to-top-button\"\r\n      display={show}\r\n      onClick={goToTop}\r\n    >\r\n      <ArrowIcon />\r\n      <Styled.Span>{BACK_TO_TOP}</Styled.Span>\r\n    </Styled.Button>\r\n  );\r\n}\r\n\r\nexport default GoToTopButton;\r\n", "/* eslint-disable import/prefer-default-export */\r\nimport styled from 'styled-components';\r\n\r\nexport const Button = styled.button`\r\n  all: unset;\r\n  align-items: center;\r\n  background-color: var(--color-secondary);\r\n  border-radius: 4px 0 0 4px;\r\n  bottom: 45px;\r\n  box-shadow: 0 2px 4px 0 #c7c6c6;\r\n  display: flex;\r\n  height: 40px;\r\n  justify-content: center;\r\n  opacity: ${(props) => (props.display === true ? 0.9 : 0)};\r\n  padding-left: 11px;\r\n  position: fixed;\r\n  right: 0px;\r\n  transition: opacity 200ms;\r\n  width: 124px;\r\n  transition: opacity 200ms, visibility 0s 200ms;\r\n  &:hover {\r\n    background-color: var(--color-secondary-hover);\r\n    cursor: pointer;\r\n  }\r\n  &:active {\r\n    background-color: var(--color-secondary-active);\r\n  }\r\n  svg {\r\n    align-self: center;\r\n  }\r\n`;\r\n\r\nexport const Span = styled.span`\r\n  color: #ffffff;\r\n  font-family: 'Nunito', sans-serif;\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n  letter-spacing: 0.58px;\r\n  padding-left: 11px;\r\n  padding-right: 24px;\r\n`;\r\n", "export { default } from './ArrowIcon';\r\n", "import React from 'react';\r\n\r\nfunction ArrowIcon(props) {\r\n  return (\r\n    <svg\r\n      color=\"white\"\r\n      fill=\"currentColor\"\r\n      fillRule=\"nonzero\"\r\n      height={12}\r\n      stroke=\"currentColor\"\r\n      strokeWidth={1}\r\n      version=\"1.1\"\r\n      viewBox=\"0 0 23 27\"\r\n      width={10}\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      {...props}\r\n    >\r\n      <path\r\n        transform=\"translate(-18.000000, -17.000000)\"\r\n        d=\"M30.6301904,20.6966946 C30.6304384,20.705609 30.6305632,20.7145536 30.6305632,20.7235269 L30.6305632,41.9301705 C30.6305632,42.462539 30.1912987,42.8941089 29.6494386,42.8941089 C29.1075784,42.8941089 28.6683139,42.462539 28.6683139,41.9301705 L28.6683139,20.7235269 C28.6683139,20.6823753 28.6709386,20.6418259 28.6760325,20.6020316 L20.2797113,28.5838228 C19.9872058,28.8618871 19.5118845,28.8618871 19.2193791,28.5838228 C18.9268736,28.3057585 18.9268736,27.853904 19.2193791,27.5758396 L29.0731557,18.2085482 C29.3656611,17.9304839 29.8409825,17.9304839 30.1334879,18.2085482 L39.9872645,27.5758396 C40.1335172,27.7148718 40.2066436,27.888662 40.2066436,28.0798312 C40.2066436,28.2710004 40.1335172,28.4447906 39.9872645,28.5838228 C39.6947591,28.8618871 39.2194378,28.8618871 38.9269323,28.5838228 L30.6301904,20.6966946 Z M29.6444293,19.7596009 L29.6033218,19.7205229 L29.5578693,19.7637314 C29.5863864,19.7611383 29.6152573,19.7597442 29.6444293,19.7596009 Z\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default ArrowIcon;\r\n", "export { default } from './InfiniteScrollList';\r\n", "import React, { useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction InfiniteScrollList({ onFetch, children }) {\r\n  const endOfListRef = useRef();\r\n\r\n  const scrollContainer = null;\r\n  const fetchScrollLimit = 500;\r\n\r\n  const onScroll = ([entity]) => {\r\n    if (entity.isIntersecting) {\r\n      onFetch();\r\n    }\r\n  };\r\n\r\n  const observer = useRef();\r\n\r\n  useEffect(() => {\r\n    observer.current = new IntersectionObserver(onScroll, {\r\n      root: scrollContainer,\r\n      rootMargin: `${fetchScrollLimit}px`,\r\n      threshold: 0,\r\n    });\r\n    if (endOfListRef && endOfListRef.current) {\r\n      observer.current.observe(endOfListRef.current);\r\n    }\r\n    return () => {\r\n      if (endOfListRef && endOfListRef.current) {\r\n        observer.current.unobserve(endOfListRef.current);\r\n      }\r\n    };\r\n  }, [children.props.children.length]);\r\n\r\n  return (\r\n    <div>\r\n      {children}\r\n      <div ref={endOfListRef} />\r\n    </div>\r\n  );\r\n}\r\n\r\nInfiniteScrollList.propTypes = {\r\n  onFetch: PropTypes.func.isRequired,\r\n  children: PropTypes.node,\r\n};\r\n\r\nInfiniteScrollList.defaultProps = {\r\n  children: null,\r\n};\r\n\r\nexport default InfiniteScrollList;\r\n", "export { default } from './Filters';\r\n", "import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useLoaderData, useSearchParams } from '@remix-run/react';\r\nimport filterIcon from 'app/images/ic_filter.svg';\r\nimport * as Styled from 'app/components/Filters/Filters.Styled';\r\n\r\nimport {\r\n  SORTING_OPTIONS,\r\n  DEFAULT_SORTING_OPT,\r\n  SORTING_ACCESS_VALUE,\r\n  DATE_RANGE_OPTIONS,\r\n  DEFAULT_DATE_RANGE_OPT,\r\n  DATE_RANGE_LABEL,\r\n  DATE_RANGE_ACCESS_VALUE,\r\n  STATUS_OPTIONS,\r\n  DEFAULT_STATUS_OPT,\r\n  STATUS_LABEL,\r\n  STATUS_ACCESS_VALUE,\r\n  DEPARTMENT_OPTIONS,\r\n  DEFAULT_DEPARTMENT_OPT,\r\n  DEPARTMENT_LABEL,\r\n  DEPARTMENT_ACCESS_VALUE,\r\n  DEFAULT_LOCATION,\r\n  LOCATION_LABEL,\r\n  LOCATION_ACCESS_VALUE,\r\n  TEXT_BUTTON,\r\n  DEFAULT_LOCATION_OPT,\r\n} from 'app/utils/constants';\r\nimport Button from 'app/components/Atoms/Button';\r\nimport CustomDropdown from 'app/components/CustomDropdown';\r\n\r\nfunction Filters(props) {\r\n  const { modifyQuery, clearFilters } = props;\r\n\r\n  const { departments, locations } = useLoaderData();\r\n\r\n  const [searchParams] = useSearchParams();\r\n\r\n  const getDefaultStatus = () => {\r\n    const searchParam = searchParams.get('status');\r\n    if (searchParam) {\r\n      const found = STATUS_OPTIONS.find((status) => status.value === searchParam);\r\n      if (found) return found;\r\n    }\r\n\r\n    return DEFAULT_STATUS_OPT;\r\n  };\r\n\r\n  const getDefaultSortOption = () => {\r\n    const searchParam = searchParams.get('order');\r\n    if (searchParam) {\r\n      const found = SORTING_OPTIONS.find((order) => order.value === searchParam);\r\n      if (found) return found;\r\n    }\r\n\r\n    return DEFAULT_SORTING_OPT;\r\n  };\r\n\r\n  const getDefaultDateRangeOption = () => {\r\n    const searchParam = searchParams.get('dateRange');\r\n    if (searchParam) {\r\n      const found = DATE_RANGE_OPTIONS.find((date) => date.value === searchParam);\r\n      if (found) return found;\r\n    }\r\n\r\n    return DEFAULT_DATE_RANGE_OPT;\r\n  };\r\n\r\n  const getDefaultDepartmentOption = () => {\r\n    const searchParam = parseInt(searchParams.get('department'), 10);\r\n    if (searchParam !== undefined) {\r\n      const found = DEPARTMENT_OPTIONS.find((option) => option.department_id === searchParam);\r\n      if (found) return found;\r\n      const foundInData = departments.find(\r\n        (department) => department.department_id === searchParam,\r\n      );\r\n\r\n      if (foundInData) return foundInData;\r\n    }\r\n\r\n    return DEFAULT_DATE_RANGE_OPT;\r\n  };\r\n\r\n  const getDefaultLocationOption = () => {\r\n    const searchParam = searchParams.get('location');\r\n    if (searchParam) {\r\n      const foundInData = locations.find((location) => location.code === searchParam);\r\n      if (foundInData) return foundInData;\r\n    }\r\n\r\n    return DEFAULT_LOCATION_OPT;\r\n  };\r\n\r\n  const [selectedOrderBy, setSelectedOrderBy] = useState(getDefaultSortOption());\r\n  const [selectedDateRange, setSelectedDateRange] = useState(getDefaultDateRangeOption());\r\n  const [selectedStatus, setSelectedStatus] = useState(getDefaultStatus());\r\n  const [selectedDepartment, setSelectedDepartment] = useState(getDefaultDepartmentOption());\r\n  const [selectedLocation, setSelectedLocation] = useState(getDefaultLocationOption());\r\n  const [showClearButton, setShowClearButton] = useState(false);\r\n  const [showFilters, setShowFilters] = useState(false);\r\n  const [filtersButtonName, setFiltersButtonName] = useState('Show filters');\r\n\r\n  useEffect(() => {\r\n    if (selectedLocation !== null && selectedLocation !== undefined) {\r\n      if (\r\n        selectedDateRange.name === DEFAULT_DATE_RANGE_OPT.name\r\n        && selectedDepartment.name === DEFAULT_DEPARTMENT_OPT.name\r\n        && selectedStatus.name === DEFAULT_STATUS_OPT.name\r\n        && selectedLocation.code === DEFAULT_LOCATION\r\n      ) {\r\n        setShowClearButton(false);\r\n      } else {\r\n        setShowClearButton(true);\r\n      }\r\n    }\r\n  }, [selectedDateRange, selectedStatus, selectedDepartment, selectedLocation]);\r\n\r\n  const selectOrderByFilter = (selectOrderBy) => {\r\n    setSelectedOrderBy(selectOrderBy);\r\n    modifyQuery('order', selectOrderBy.value);\r\n  };\r\n\r\n  const selectDateRangeFilter = (selectDateRange) => {\r\n    setSelectedDateRange(selectDateRange);\r\n    if (selectDateRange.value === 'all') {\r\n      modifyQuery('dateRange', undefined);\r\n    } else {\r\n      modifyQuery('dateRange', selectDateRange.value);\r\n    }\r\n  };\r\n\r\n  const selectStatusFilter = (selectStatus) => {\r\n    setSelectedStatus(selectStatus);\r\n    if (selectStatus.value === 'all') {\r\n      modifyQuery('status', undefined);\r\n    } else {\r\n      modifyQuery('status', selectStatus.value);\r\n    }\r\n  };\r\n\r\n  const selectDepartmentFilter = (selectDepartment) => {\r\n    setSelectedDepartment(selectDepartment);\r\n    if (selectDepartment.department_id === -1) {\r\n      modifyQuery('department', undefined);\r\n    } else {\r\n      modifyQuery('department', selectDepartment.department_id);\r\n    }\r\n  };\r\n\r\n  const selectLocationFilter = (selectLocation) => {\r\n    setSelectedLocation(selectLocation);\r\n    modifyQuery('location', selectLocation.code);\r\n  };\r\n\r\n  const clearAllFilters = () => {\r\n    selectDateRangeFilter(DEFAULT_DATE_RANGE_OPT, false);\r\n    selectStatusFilter(DEFAULT_STATUS_OPT, false);\r\n    selectDepartmentFilter(DEFAULT_DEPARTMENT_OPT, false);\r\n    selectLocationFilter(DEFAULT_LOCATION_OPT, false);\r\n\r\n    clearFilters([\r\n      'location',\r\n      'department',\r\n      'status',\r\n      'dateRange',\r\n      'location',\r\n    ]);\r\n  };\r\n\r\n  const selectFilters = () => {\r\n    if (!showFilters) {\r\n      setFiltersButtonName('Hide filters');\r\n      setShowFilters(true);\r\n    } else {\r\n      setFiltersButtonName('Show filters');\r\n      setShowFilters(false);\r\n    }\r\n  };\r\n\r\n  const getLocationFilterConfig = () => {\r\n    let selectedLocationsProps = {};\r\n    if (selectedLocation) {\r\n      selectedLocationsProps = {\r\n        text: selectedLocation.name,\r\n        selectedValue: selectedLocation.code,\r\n        isHihlighted: selectedLocation.code !== DEFAULT_LOCATION,\r\n      };\r\n    }\r\n    return {\r\n      ...selectedLocationsProps,\r\n      elements: locations,\r\n      label: LOCATION_LABEL,\r\n      onSelectFunc: selectLocationFilter,\r\n      accessValueName: LOCATION_ACCESS_VALUE,\r\n      disabled: selectedLocation === undefined,\r\n    };\r\n  };\r\n\r\n  const orderByDropdownConfig = {\r\n    elements: SORTING_OPTIONS,\r\n    label: selectedOrderBy.name,\r\n    onSelectFunc: selectOrderByFilter,\r\n    selectedValue: selectedOrderBy.value,\r\n    showSelected: false,\r\n    accessValueName: SORTING_ACCESS_VALUE,\r\n  };\r\n\r\n  const dateRangeFilterConfig = {\r\n    elements: DATE_RANGE_OPTIONS,\r\n    text: selectedDateRange.name,\r\n    label: DATE_RANGE_LABEL,\r\n    onSelectFunc: selectDateRangeFilter,\r\n    selectedValue: selectedDateRange.value,\r\n    isHihlighted: selectedDateRange !== DEFAULT_DATE_RANGE_OPT,\r\n    accessValueName: DATE_RANGE_ACCESS_VALUE,\r\n  };\r\n\r\n  const departmentFilterConfig = {\r\n    elements: [...DEPARTMENT_OPTIONS, ...departments],\r\n    text: selectedDepartment.name,\r\n    label: DEPARTMENT_LABEL,\r\n    onSelectFunc: selectDepartmentFilter,\r\n    selectedValue: selectedDepartment.department_id,\r\n    isHihlighted: selectedDepartment !== DEFAULT_DEPARTMENT_OPT,\r\n    accessValueName: DEPARTMENT_ACCESS_VALUE,\r\n  };\r\n\r\n  const statusFilterConfig = {\r\n    elements: STATUS_OPTIONS,\r\n    text: selectedStatus.name,\r\n    label: STATUS_LABEL,\r\n    onSelectFunc: selectStatusFilter,\r\n    selectedValue: selectedStatus.value,\r\n    isHihlighted: selectedStatus !== DEFAULT_STATUS_OPT,\r\n    accessValueName: STATUS_ACCESS_VALUE,\r\n  };\r\n\r\n  return (\r\n    <Styled.Filters>\r\n      <Button\r\n        type=\"button\"\r\n        category={TEXT_BUTTON}\r\n        className=\"show-filters-button\"\r\n        onClick={selectFilters}\r\n      >\r\n        <Styled.Icon src={filterIcon} alt=\"Icon\" />\r\n        <span>{filtersButtonName}</span>\r\n      </Button>\r\n      <Styled.FiltersLine secondary visibility=\"none\" />\r\n      <Styled.FiltersWrapper\r\n        hideComponent={!showFilters ? 'none' : 'block'}\r\n      >\r\n        <Styled.FiltersContainer>\r\n          <Styled.FiltersBlock>\r\n            <Styled.FiltersLabel>Order by:</Styled.FiltersLabel>\r\n            <Styled.FiltersField>\r\n              <CustomDropdown {...orderByDropdownConfig} />\r\n            </Styled.FiltersField>\r\n          </Styled.FiltersBlock>\r\n          <Styled.FiltersBlock>\r\n            <Styled.FiltersLabel>\r\n              Filter by:\r\n              {' '}\r\n              {showClearButton && (\r\n              <button type=\"button\" onClick={clearAllFilters}>Clear All Filters</button>\r\n              )}\r\n            </Styled.FiltersLabel>\r\n            <Styled.FiltersField>\r\n              <CustomDropdown {...dateRangeFilterConfig} />\r\n            </Styled.FiltersField>\r\n            <Styled.FiltersField>\r\n              <CustomDropdown {...statusFilterConfig} />\r\n            </Styled.FiltersField>\r\n            <Styled.FiltersField departments>\r\n              <CustomDropdown {...departmentFilterConfig} />\r\n            </Styled.FiltersField>\r\n            <Styled.FiltersField>\r\n              <CustomDropdown {...getLocationFilterConfig()} />\r\n            </Styled.FiltersField>\r\n          </Styled.FiltersBlock>\r\n        </Styled.FiltersContainer>\r\n      </Styled.FiltersWrapper>\r\n    </Styled.Filters>\r\n  );\r\n}\r\n\r\nFilters.propTypes = {\r\n  clearFilters: PropTypes.func.isRequired,\r\n  modifyQuery: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filters;\r\n", "import styled, { css } from 'styled-components';\r\n\r\nexport const Filters = styled.div`\r\n  background-color: transparent;\r\n  margin: 0 11px;\r\n  position: -webkit-sticky;\r\n  position: sticky;\r\n  top: 0;\r\n  @media (min-width: 768px) and (max-width: 1024px) {\r\n    margin: 0 auto;\r\n    max-width: 592px;\r\n    padding: 20px 0 5px;\r\n    position: relative;\r\n  }\r\n  @media (max-width: 767px) {\r\n    margin: 0 auto;\r\n    max-width: 592px;\r\n    padding: 20px 0 5px;\r\n    position: relative;\r\n  }\r\n`;\r\n\r\nexport const Icon = styled.img`\r\n  height: 20px;\r\n  margin-right: 10px;\r\n  width: 17px;\r\n`;\r\n\r\nexport const FiltersLine = styled.hr`\r\n  border-top: 1px solid #e6e6e6;\r\n  margin: 16px 0 24px;\r\n  display: ${(props) => props.visibility};\r\n  ${(props) => props.secondary && css`\r\n    margin: 0;\r\n  `}\r\n  \r\n  @media (min-width: 768px) and (max-width: 1024px) {\r\n    display: block;\r\n  }\r\n  @media (max-width: 767px){\r\n   display: block;\r\n  }\r\n`;\r\n\r\nexport const FiltersWrapper = styled.div`\r\n  flex-grow: 1;\r\n  transition: box-shadow 300ms;\r\n  width: 100%;\r\n  @media (min-width: 768px) and (max-width: 1024px) {\r\n      display: ${(props) => props.hideComponent};\r\n      margin: 0 auto;\r\n      padding: 10px 0;\r\n      width: 248px;\r\n  }\r\n  @media (max-width: 767px) {\r\n      display: ${(props) => props.hideComponent};\r\n      margin: 0 auto;\r\n      padding: 10px 0;\r\n      width: 248px;\r\n  }\r\n  #sort-toggle.dropdown-toggle.btn {\r\n    background-color: transparent;\r\n    border: none;\r\n    font-size: 14px;\r\n    height: 56px;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport const FiltersContainer = styled.div`\r\n  display: unset;\r\n`;\r\n\r\nexport const FiltersBlock = styled.div``;\r\n\r\nexport const FiltersLabel = styled.div`\r\n  font-size: 12px;\r\n  margin: 8px 0 4px;\r\n  width: auto;\r\n  button {\r\n    color: var(--color-secondary);\r\n    float: right;\r\n    font-size: 12px;\r\n    text-decoration: none;\r\n    background: none!important;\r\n    border: none;\r\n    padding: 0!important;\r\n  }\r\n`;\r\n\r\nexport const FiltersField = styled.div`\r\n  border-color: transparent;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  font-size: 12px;\r\n  .sort-toggle.dropdown {\r\n    border-radius: 10px;\r\n    margin: 8px 0;\r\n    width: 100%;\r\n  }\r\n  .caret {\r\n    color: var(--color-secondary);\r\n    font-size: 50px;\r\n    position: absolute;\r\n    right: 24px;\r\n    top: 48%;\r\n  }\r\n  .sort-toggle.dropdown.open .caret {\r\n    -moz-transform: scale(1, -1);\r\n    -ms-transform: scale(1, -1);\r\n    -o-transform: scale(1, -1);\r\n    -webkit-transform: scale(1, -1);\r\n    transform: scale(1, -1);\r\n  }\r\n  .dropdown:hover {\r\n    background-color: transparent;\r\n  }\r\n  .dropdown .menu-dropdown {\r\n    box-shadow: none;\r\n    margin: 0;\r\n    min-width: 100%;\r\n    width: 100%;\r\n  }\r\n  .dropdown.open .menu-dropdown {\r\n    border: none;\r\n    border-radius: 10px;\r\n    padding: 5px 0 8.9px;\r\n    position: unset;\r\n  }\r\n  ${(props) => props.departments\r\n    && css`\r\n      .dropdown-menu li:nth-child(2) a label {\r\n        border-bottom: 1px solid #e6e6e6;\r\n        padding-bottom: 12px;\r\n      }\r\n    `}\r\n`;\r\n", "export { default } from './CustomDropdown';\r\n", "import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as Styled from './CustomDropdown.Styled';\r\n\r\nfunction CustomDropdown(props) {\r\n  const { accessValueName, selectedValue } = props;\r\n  const renderElements = (elements) => elements.map((element) => (\r\n    <Styled.CMenuItem eventKey={element} key={element[accessValueName]}>\r\n      <label className=\"custom-dropdown\" htmlFor={element[accessValueName]}>\r\n        {element.name}\r\n        <input\r\n          type=\"radio\"\r\n          className=\"custom-dropdown--radio\"\r\n          checked={selectedValue === element[accessValueName]}\r\n          readOnly\r\n          id={element[accessValueName]}\r\n        />\r\n        <span className=\"custom-dropdown--span\" />\r\n      </label>\r\n    </Styled.CMenuItem>\r\n  ));\r\n\r\n  const renderSelected = () => props.showSelected && (\r\n  <p className=\"custom-dropdown-selected\">{props.text}</p>\r\n  );\r\n\r\n  return (\r\n    <Styled.CDropdown\r\n      className={props.dropdownClass}\r\n      onSelect={props.onSelectFunc}\r\n      id={props.dropdownClass}\r\n      disabled={props.disabled}\r\n    >\r\n      <Styled.CDropdown.Toggle\r\n        onClick={props.onClickFunc}\r\n        className={`toggle ${props.isHighlighted ? 'highlighted' : ''}`}\r\n      >\r\n        <p className={`dropdown-text ${props.showSelected ? '' : 'first'}`}>\r\n          {props.label}\r\n        </p>\r\n        {renderSelected()}\r\n      </Styled.CDropdown.Toggle>\r\n      <Styled.CDropdown.Menu className={props.menuClass}>\r\n        {props.elements.length > 0\r\n          && renderElements(props.elements)}\r\n      </Styled.CDropdown.Menu>\r\n    </Styled.CDropdown>\r\n  );\r\n}\r\n\r\nCustomDropdown.propTypes = {\r\n  elements: PropTypes.arrayOf().isRequired,\r\n  text: PropTypes.string,\r\n  label: PropTypes.string.isRequired,\r\n  dropdownClass: PropTypes.string,\r\n  menuClass: PropTypes.string,\r\n  onClickFunc: PropTypes.func,\r\n  onSelectFunc: PropTypes.func,\r\n  selectedValue: PropTypes.oneOfType([\r\n    PropTypes.number,\r\n    PropTypes.string,\r\n  ]),\r\n  isHighlighted: PropTypes.bool,\r\n  showSelected: PropTypes.bool,\r\n  accessValueName: PropTypes.string.isRequired,\r\n  disabled: PropTypes.bool,\r\n};\r\n\r\nCustomDropdown.defaultProps = {\r\n  text: '',\r\n  dropdownClass: 'sort-toggle',\r\n  menuClass: 'menu-dropdown',\r\n  onClickFunc: null,\r\n  onSelectFunc: null,\r\n  selectedValue: null,\r\n  isHighlighted: false,\r\n  showSelected: true,\r\n  disabled: false,\r\n};\r\n\r\nexport default CustomDropdown;\r\n", "/* eslint-disable import/prefer-default-export */\r\nimport styled from 'styled-components';\r\nimport { Dropdown, MenuItem } from 'react-bootstrap';\r\n\r\nexport const CDropdown = styled(Dropdown)`\r\n  .dropdown-menu {\r\n    top: 98%;\r\n    background-color: transparent;\r\n  }\r\n  .dropdown-menu > .sub-menu-item > a {\r\n    line-height: 20px;\r\n    padding: 5px;\r\n  }\r\n  .dropdown-menu a {\r\n    text-decoration: none;\r\n    border-radius 10px;\r\n    &:hover {\r\n      background-color: #F1F3F6;\r\n    }\r\n  }\r\n  .dropdown-menu li {\r\n    height: auto;\r\n  }\r\n  .custom-dropdown input {\r\n    display: none;\r\n  }\r\n  .custom-dropdown input:checked ~ .custom-dropdown--span {\r\n    background-color: white;\r\n  }\r\n  .custom-dropdown--span::after {\r\n    content: \"\";\r\n    display: none;\r\n    position: absolute;\r\n  }\r\n  .custom-dropdown input:checked ~ .custom-dropdown--span::after {\r\n    display: block;\r\n  }\r\n  .custom-dropdown .custom-dropdown--span::after {\r\n    background-color: var(--color-secondary);\r\n    border-radius: 50%;\r\n    height: 12px;\r\n    left: 1px;\r\n    top: 1px;\r\n    width: 12px;\r\n  }\r\n  .custom-dropdown-selected {\r\n    color: var(--color-secondary);\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    margin: 0 5px;\r\n  }\r\n  .toggle {\r\n    align-items: flex-start;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n  }\r\n  .toogle > .caret {\r\n    position: absolute;\r\n  }\r\n  .dropdown-text {\r\n    color: var(--color-secondary);\r\n    float: left;\r\n    font-size: 12px;\r\n    padding-left: 5px;\r\n  }\r\n  .dropdown-text.first {\r\n    font-size: 14px;\r\n    font-weight: unset;\r\n  }\r\n`;\r\n\r\nexport const CDropdownText = styled.p`\r\n  color: var(--color-secondary);\r\n  float: left;\r\n  font-size: 12px;\r\n  padding-left: 5px;\r\n  .first {\r\n    font-size: 14px;\r\n    font-weight: unset;\r\n  }\r\n`;\r\n\r\nexport const CMenuItem = styled(MenuItem)`\r\n  .custom-dropdown {\r\n    cursor: pointer;\r\n    display: block;\r\n    font-size: 14px;\r\n    margin: 0;\r\n    padding: 6px 0 6px 25px;\r\n    position: relative;\r\n    -moz-user-select: none;\r\n    -ms-user-select: none;\r\n    -webkit-user-select: none;\r\n    user-select: none;\r\n  }\r\n  .custom-dropdown--span {\r\n    background-color: #fff;\r\n    border: 1px solid var(--color-secondary);\r\n    border-radius: 50%;\r\n    height: 16px;\r\n    left: 0;\r\n    margin-top: 4px;\r\n    position: absolute;\r\n    top: 10%;\r\n    width: 16px;\r\n    &:after {\r\n      content: \"\";\r\n    display: none;\r\n    position: absolute;\r\n    }\r\n  }\r\n`;\r\n", "export function setCookie(name, value) {\r\n  document.cookie = `${name}=${value}`;\r\n}\r\n\r\nexport function getCookie(name) {\r\n  if (typeof window !== 'undefined') {\r\n    // your code with access to window or document object here\r\n    const cname = `${name}=`;\r\n    const decodedCookie = decodeURIComponent(document.cookie);\r\n    const ca = decodedCookie.split(';');\r\n    // eslint-disable-next-line no-plusplus\r\n    for (let i = 0; i < ca.length; i++) {\r\n      let c = ca[i];\r\n      while (c.charAt(0) === ' ') {\r\n        c = c.substring(1);\r\n      }\r\n      if (c.indexOf(cname) === 0) {\r\n        return c.substring(cname.length, c.length);\r\n      }\r\n    }\r\n  }\r\n\r\n  return '';\r\n}\r\n", "import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport useUser from 'app/utils/hooks/useUser';\r\nimport * as styled from 'app/components/Modals/ValuesMessageModal/ValuesMessageModal.Styled';\r\nimport Button from 'app/components/Atoms/Button';\r\nimport { BsCircleFill } from 'react-icons/bs';\r\nimport { SECONDARY_BUTTON } from 'app/utils/constants';\r\n\r\nfunction ValuesMessageModal({ show, onClose }) {\r\n  const profile = useUser();\r\n\r\n  const renderBulletPoint = (color) => (\r\n    <BsCircleFill color={color} size=\"7px\" style={{ marginTop: '3px', marginRight: '10px' }} />\r\n  );\r\n\r\n  if (!show) { return null; }\r\n  return (\r\n    <div onClick={onClose}>\r\n      <styled.Modal onClick={onClose}>\r\n        <styled.ModalDialog show hide={onClose}>\r\n          <styled.ModalHeader>\r\n            <styled.ModalTitle>\r\n              Hello\r\n              {' '}\r\n              {profile.full_name}\r\n              {' '}\r\n              !\r\n            </styled.ModalTitle>\r\n            <styled.ModalSubtitle>\r\n              Welcome to Wize Q!\r\n            </styled.ModalSubtitle>\r\n          </styled.ModalHeader>\r\n          <styled.ModalBody>\r\n            <p>\r\n              We want to share a few simple guidelines before you start.\r\n              Remember that Wize Q is a space for asking questions and providing answers that\r\n              are helpful to our community.\r\n            </p>\r\n            <p>Please practice our values when using Wize Q: </p>\r\n            <styled.ValuesInformation>\r\n              <p>\r\n                {renderBulletPoint('var(--color-primary)')}\r\n                <styled.ValueText color=\"var(--color-primary)\">Ownership</styled.ValueText>\r\n                \u2013 See if you can find the answer to your question before posting on Wize Q.\r\n                And if you know the answer to a question or how to find it,\r\n                be sure to reply \u2014 anyone can!\r\n              </p>\r\n              <p>\r\n                {renderBulletPoint('var(--color-secondary)')}\r\n                <styled.ValueText color=\"var(--color-secondary)\">Innovation</styled.ValueText>\r\n                \u2013 When someone shares a concern or challenge,\r\n                let\u2019s be innovative \u2014 propose a solution or offer support!\r\n              </p>\r\n              <p>\r\n                {renderBulletPoint('#E5C8A6')}\r\n                <styled.ValueText color=\"#E5C8A6\">Community</styled.ValueText>\r\n                \u2013 Remember to treat everyone with dignity and respect.\r\n                Assume others have good intentions. Always be honest and constructive.\r\n                Let\u2019s make Wizeline a community where everyone can thrive.\r\n              </p>\r\n            </styled.ValuesInformation>\r\n            <p>\r\n              Consider that other channels:\r\n              (ticketing portal, Slack, your manager or people partner)\r\n              might be more effective for finding the right answer quickly.\r\n            </p>\r\n            <p>Thanks for being a valuable contributor to our community! </p>\r\n            <p>The Wize Q Team</p>\r\n          </styled.ModalBody>\r\n          <styled.ModalFooter>\r\n            <Button\r\n              id=\"btnAccept\"\r\n              category={SECONDARY_BUTTON}\r\n              onClick={onClose}\r\n            >\r\n              Accept\r\n            </Button>\r\n          </styled.ModalFooter>\r\n        </styled.ModalDialog>\r\n      </styled.Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nValuesMessageModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  show: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default ValuesMessageModal;\r\n", "/* eslint-disable import/prefer-default-export */\r\nimport styled from 'styled-components';\r\n\r\nexport const Modal = styled.div`\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    z-index: 1050;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n`;\r\n\r\nexport const ModalDialog = styled.div`\r\n    position: relative;\r\n    border-radius: 5px;\r\n    border: 0;\r\n    background-color: #fff;\r\n    box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.5);\r\n    overflow: hidden;\r\n    margin: 0 auto;\r\n    width: 100%;\r\n    display: block;\r\n    max-height: calc(100vh - 150px);\r\n    overflow-y: auto;\r\n    padding: 24px 24px;\r\n    max-width: 70vw;\r\n\r\n    @media (max-width: 768px) {\r\n        max-height: 100%;\r\n        max-width: 100%;\r\n        height: 100%;\r\n    }\r\n`;\r\n\r\nexport const ModalBody = styled.div`\r\n    display: block;\r\n    font-size: 15px;\r\n    background-color: #fff;\r\n    border-bottom: none;\r\n    position: relative;\r\n    padding: 15px;\r\n    box-sizing: border-box;\r\n    text-align: justify;\r\n`;\r\n\r\nexport const ModalFooter = styled.div`\r\n    border-top: none;\r\n    background-color: #fff;\r\n    border-bottom: none;\r\n    padding: 15px;\r\n    text-align: right;\r\n    box-sizing: border-box;\r\n    display: block;\r\n    font-size: 14px;\r\n    ${(props) => (props.variant === 'logout'\r\n    ? `border-top: 1px solid #e5e5e5;\r\n    padding: 15px;\r\n    text-align: right;`\r\n    : 'border-bottom: none;')}\r\n`;\r\n\r\nexport const ModalHeader = styled.div`\r\n    overflow-y: hidden;\r\n    padding: 15px;\r\n    box-sizing: border-box;\r\n    display: block;\r\n    font-size: 14px;\r\n    ${(props) => (props.variant === 'logout'\r\n    ? `border-bottom: 1px solid #e5e5e5;\r\n        padding: 15px;`\r\n    : 'border-bottom: none;')}\r\n`;\r\n\r\nexport const ModalTitle = styled.div`\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    line-height: normal;\r\n    letter-spacing: normal;\r\n    margin-bottom: 8px;\r\n`;\r\n\r\nexport const ModalSubtitle = styled.div`\r\n    font-size: 16px;\r\n    font-weight: normal;\r\n    letter-spacing: 0.6px;\r\n    line-height: 1.71;\r\n`;\r\n\r\nexport const ValueText = styled.span`\r\n    color: ${(props) => props.color};\r\n    font-weight: 600;\r\n    font-size: 16px;\r\n    text-decoration:  ${(props) => props.color} underline overline;\r\n`;\r\n\r\nexport const ValuesInformation = styled.div`\r\n    margin: 20px 0 20px 20px;\r\n`;\r\n", "import React from 'react';\r\nimport { json, redirect } from '@remix-run/node';\r\nimport LoginContainer from 'app/components/Login/LoginContainer';\r\nimport { getAuthenticatedUser } from 'app/session.server';\r\n\r\nexport const loader = async ({ request }) => {\r\n  const authenticated = await getAuthenticatedUser(request);\r\n\r\n  if (authenticated) {\r\n    return redirect('/');\r\n  }\r\n\r\n  return json({});\r\n};\r\n\r\nfunction Login() {\r\n  return <LoginContainer />;\r\n}\r\n\r\nexport default Login;\r\n", "import React, { useEffect } from 'react';\r\nimport { Form } from '@remix-run/react';\r\nimport logo from 'app/images/logo-white.png';\r\nimport Button from 'app/components/Atoms/Button';\r\nimport Slogan from 'app/components/Slogan';\r\nimport { PRIMARY_BUTTON } from 'app/utils/constants';\r\nimport * as Styled from 'app/components/Login/LoginContainer.Styled';\r\nimport { setCookie } from 'app/utils/cookies';\r\n\r\nfunction LoginContainer() {\r\n  const redirectTo = '/';\r\n\r\n  useEffect(() => {\r\n    setCookie('showValueMessage', true);\r\n  }, []);\r\n\r\n  return (\r\n    <Styled.LoginDiv>\r\n      <Styled.LoginSubDiv>\r\n        <Styled.LeftDiv>\r\n          <Styled.SH3>Welcome Wizeliner!</Styled.SH3>\r\n          <Form action=\"/auth/auth0\" method=\"POST\">\r\n            <input type=\"hidden\" name=\"redirectTo\" value={redirectTo} />\r\n            <Button type=\"submit\" category={PRIMARY_BUTTON} className=\"login-button\">\r\n              Log in with your Wizeline account\r\n            </Button>\r\n          </Form>\r\n          <Styled.Paragraph>\r\n            <Styled.Span>Wizeline Questions</Styled.Span>\r\n            <Styled.Span variant=\"bold\"> DOES NOT </Styled.Span>\r\n            <Styled.Span>\r\n              store any personal information so that you can ask anything.\r\n            </Styled.Span>\r\n          </Styled.Paragraph>\r\n        </Styled.LeftDiv>\r\n        <Styled.RightDiv>\r\n          <Styled.RedDiv />\r\n          <Styled.GoldDiv />\r\n          <img src={logo} alt=\"logo\" />\r\n          <Styled.Slogan>\r\n            <Slogan />\r\n            <Styled.AdviceContainer>\r\n              <p>\r\n                Before asking a question verify if you\r\n                can get the information you need from these resources.\r\n              </p>\r\n              <ul>\r\n                <li>\r\n                  <a href=\"https://wizeline.slack.com/archives/C1UDJCL9E\"> #Questions </a>\r\n                  - Slack Channel\r\n                </li>\r\n                <li><a href=\"https://ticketing.wizeline.com/ticketing.html\"> Ticketing</a></li>\r\n              </ul>\r\n            </Styled.AdviceContainer>\r\n          </Styled.Slogan>\r\n        </Styled.RightDiv>\r\n      </Styled.LoginSubDiv>\r\n    </Styled.LoginDiv>\r\n  );\r\n}\r\n\r\nexport default LoginContainer;\r\n", "/* eslint-disable import/prefer-default-export */\r\nimport styled from 'styled-components';\r\nimport { SloganContainer } from 'app/components/Slogan/Slogan.Styled';\r\n\r\nexport const LoginDiv = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const LoginSubDiv = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  @media (max-width: 768px) {\r\n    flex-direction: column-reverse;\r\n  }\r\n`;\r\n\r\nexport const SH3 = styled.h3`\r\n  text-align: center;\r\n  color: #646464;\r\n  margin-bottom: 50px;\r\n  font-family: \"Nunito\";\r\n  font-size: 25px;\r\n  letter-spacing: 0.4px;\r\n  font-weight: 700;\r\n`;\r\n\r\nexport const Span = styled.span`\r\n  ${(props) => (props.variant === 'bold'\r\n    ? 'font-family: \"Nunito\";'\r\n    : 'font-family: \"Nunito\";')}\r\n`;\r\n\r\nexport const Paragraph = styled.p`\r\n  text-align: center;\r\n  color: #646464;\r\n  font-family: \"Nunito\";\r\n  font-size: 18px;\r\n  letter-spacing: 0.7px;\r\n  margin-top: 50px;\r\n  width: 350px;\r\n`;\r\n\r\nexport const LeftDiv = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 45%;\r\n  padding: 0 40px;\r\n\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nexport const RightDiv = styled.div`\r\n  display: flex;\r\n  width: 55%;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  background-color: #203449;\r\n  position: relative;\r\n\r\n  img {\r\n    height: fit-content;\r\n    width: 200px;\r\n    margin-bottom: 40px;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n    height: 120px;\r\n\r\n    img {\r\n      margin-bottom: 0;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Slogan = styled.div`\r\n  width: 320px;\r\n\r\n  ${SloganContainer} {\r\n    p {\r\n      padding: 0;\r\n      text-align: center;\r\n      color: white;\r\n      font-size: 18px;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const RedDiv = styled.div`\r\n  width: 20px;\r\n  background-color: var(--color-primary);\r\n  position: absolute;\r\n  height: 100%;\r\n  left: 0;\r\n`;\r\n\r\nexport const GoldDiv = styled.div`\r\n  width: 20px;\r\n  background-color: #e5c8a6;\r\n  position: absolute;\r\n  height: 100%;\r\n  left: 20px;\r\n`;\r\n\r\nexport const AdviceContainer = styled.div`\r\n  color: white;\r\n  font-size: 15px;\r\n\r\n  p {\r\n    font-weight: 100;\r\n    width: fit-content;\r\n  }\r\n  a {\r\n    text-decoration: none;\r\n    color: var(--color-secondary);\r\n  }\r\n  ul {\r\n    li {\r\n      margin: 10px;\r\n    }\r\n  }\r\n`;\r\n", "export default {'version':'50466523','entry':{'module':'/build/entry.client-R6DHZFIR.js','imports':['/build/_shared/chunk-AOIRIE2A.js','/build/_shared/chunk-CA4B4QDL.js','/build/_shared/chunk-3WZ3CGWF.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-GRZ36EB6.js','imports':['/build/_shared/chunk-YKA5GWB6.js','/build/_shared/chunk-CHRNTAPK.js','/build/_shared/chunk-5M22U5RX.js','/build/_shared/chunk-3DPGJHGZ.js','/build/_shared/chunk-55GEIJ2U.js','/build/_shared/chunk-P7BYWKM6.js','/build/_shared/chunk-CJWDOHQ3.js','/build/_shared/chunk-UBEID7IU.js','/build/_shared/chunk-IWONXKPJ.js','/build/_shared/chunk-WXD47Y6L.js','/build/_shared/chunk-TOV5KU52.js','/build/_shared/chunk-2FVL2P6G.js','/build/_shared/chunk-DTXDYIFC.js','/build/_shared/chunk-UPCFJQSK.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':true},'routes/$':{'id':'routes/$','parentId':'root','path':'*','index':undefined,'caseSensitive':undefined,'module':'/build/routes/$-LV76AEPG.js','imports':['/build/_shared/chunk-ZJYHTA2X.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/about':{'id':'routes/about','parentId':'root','path':'about','index':undefined,'caseSensitive':undefined,'module':'/build/routes/about-PCU3UQVH.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/admin':{'id':'routes/admin','parentId':'root','path':'admin','index':undefined,'caseSensitive':undefined,'module':'/build/routes/admin-YB67UAEK.js','imports':['/build/_shared/chunk-ZJYHTA2X.js','/build/_shared/chunk-EMP6TYPA.js','/build/_shared/chunk-VTQAH65Q.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':true,'hasErrorBoundary':false},'routes/auth/auth0':{'id':'routes/auth/auth0','parentId':'root','path':'auth/auth0','index':undefined,'caseSensitive':undefined,'module':'/build/routes/auth/auth0-KBQ2S7BZ.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/auth/auth0/callback':{'id':'routes/auth/auth0/callback','parentId':'routes/auth/auth0','path':'callback','index':undefined,'caseSensitive':undefined,'module':'/build/routes/auth/auth0/callback-CN5UOKJC.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/contact':{'id':'routes/contact','parentId':'root','path':'contact','index':undefined,'caseSensitive':undefined,'module':'/build/routes/contact-353A7HBJ.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/dashboard':{'id':'routes/dashboard','parentId':'root','path':'dashboard','index':undefined,'caseSensitive':undefined,'module':'/build/routes/dashboard-CMQBIUYC.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/employees/getByDeparment/$id':{'id':'routes/employees/getByDeparment/$id','parentId':'root','path':'employees/getByDeparment/:id','index':undefined,'caseSensitive':undefined,'module':'/build/routes/employees/getByDeparment/$id-BTD55P6L.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-YR2HUXKW.js','imports':['/build/_shared/chunk-J3GNERB6.js','/build/_shared/chunk-3FIAWIOR.js','/build/_shared/chunk-MSFWS2SR.js','/build/_shared/chunk-RVRN3YQ7.js','/build/_shared/chunk-SWERSMFH.js','/build/_shared/chunk-VTQAH65Q.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/login':{'id':'routes/login','parentId':'root','path':'login','index':undefined,'caseSensitive':undefined,'module':'/build/routes/login-UJ4BXSHJ.js','imports':['/build/_shared/chunk-J3GNERB6.js','/build/_shared/chunk-RVRN3YQ7.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/logout':{'id':'routes/logout','parentId':'root','path':'logout','index':undefined,'caseSensitive':undefined,'module':'/build/routes/logout-4LBXPPXN.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/questions/$questionId':{'id':'routes/questions/$questionId','parentId':'root','path':'questions/:questionId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/questions/$questionId-OWIBB5UP.js','imports':['/build/_shared/chunk-EMP6TYPA.js','/build/_shared/chunk-3FIAWIOR.js','/build/_shared/chunk-T276QUSN.js','/build/_shared/chunk-SWERSMFH.js','/build/_shared/chunk-VTQAH65Q.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/questions/new':{'id':'routes/questions/new','parentId':'root','path':'questions/new','index':undefined,'caseSensitive':undefined,'module':'/build/routes/questions/new-CZ3EMV4R.js','imports':['/build/_shared/chunk-MSFWS2SR.js','/build/_shared/chunk-RVRN3YQ7.js','/build/_shared/chunk-T276QUSN.js','/build/_shared/chunk-SWERSMFH.js','/build/_shared/chunk-VTQAH65Q.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-50466523.js'};"],
  "mappings": "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",
  "names": []
}
