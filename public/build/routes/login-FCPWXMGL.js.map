{
  "version": 3,
  "sources": ["browser-route-module:routes/login.jsx?browser", "../../../app/routes/login.jsx", "../../../app/components/Login/LoginContainer.jsx", "../../../app/components/Login/LoginContainer.Styled.jsx"],
  "sourcesContent": ["export { default } from \"./routes/login.jsx\";", "import React from 'react';\nimport { json, redirect } from '@remix-run/node';\nimport LoginContainer from 'app/components/Login/LoginContainer';\nimport { getAuthenticatedUser } from 'app/session.server';\n\nexport const loader = async ({ request }) => {\n  const authenticated = await getAuthenticatedUser(request);\n\n  if (authenticated) {\n    return redirect('/');\n  }\n\n  return json({});\n};\n\nfunction Login() {\n  return <LoginContainer />;\n}\n\nexport default Login;\n", "import React, { useEffect } from 'react';\nimport { Form } from '@remix-run/react';\nimport logo from 'app/images/logo-white.png';\nimport Button from 'app/components/Atoms/Button';\nimport Slogan from 'app/components/Slogan';\nimport { PRIMARY_BUTTON } from 'app/utils/constants';\nimport * as Styled from 'app/components/Login/LoginContainer.Styled';\nimport { setCookie } from 'app/utils/cookies';\n\nfunction LoginContainer() {\n  const redirectTo = '/';\n\n  useEffect(() => {\n    setCookie('showValueMessage', true);\n  }, []);\n\n  return (\n    <Styled.LoginDiv>\n      <Styled.LoginSubDiv>\n        <Styled.LeftDiv>\n          <Styled.SH3>Welcome Wizeliner!</Styled.SH3>\n          <Form action=\"/auth/auth0\" method=\"POST\">\n            <input type=\"hidden\" name=\"redirectTo\" value={redirectTo} />\n            <Button type=\"submit\" category={PRIMARY_BUTTON} className=\"login-button\">\n              Log in with your Wizeline account\n            </Button>\n          </Form>\n          <Styled.Paragraph>\n            <Styled.Span>Wizeline Questions</Styled.Span>\n            <Styled.Span variant=\"bold\"> DOES NOT </Styled.Span>\n            <Styled.Span>\n              store any personal information so that you can ask anything.\n            </Styled.Span>\n          </Styled.Paragraph>\n        </Styled.LeftDiv>\n        <Styled.RightDiv>\n          <Styled.RedDiv />\n          <Styled.GoldDiv />\n          <img src={logo} alt=\"logo\" />\n          <Styled.Slogan>\n            <Slogan />\n            <Styled.AdviceContainer>\n              <p>\n                Before asking a question verify if you\n                can get the information you need from these resources.\n              </p>\n              <ul>\n                <li>\n                  <a href=\"https://wizeline.slack.com/archives/C1UDJCL9E\"> #Questions </a>\n                  - Slack Channel\n                </li>\n                <li><a href=\"https://ticketing.wizeline.com/ticketing.html\"> Ticketing</a></li>\n              </ul>\n            </Styled.AdviceContainer>\n          </Styled.Slogan>\n        </Styled.RightDiv>\n      </Styled.LoginSubDiv>\n    </Styled.LoginDiv>\n  );\n}\n\nexport default LoginContainer;\n", "/* eslint-disable import/prefer-default-export */\nimport styled from 'styled-components';\nimport { SloganContainer } from 'app/components/Slogan/Slogan.Styled';\n\nexport const LoginDiv = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const LoginSubDiv = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n\n  @media (max-width: 768px) {\n    flex-direction: column-reverse;\n  }\n`;\n\nexport const SH3 = styled.h3`\n  text-align: center;\n  color: #646464;\n  margin-bottom: 50px;\n  font-family: \"Nunito\";\n  font-size: 25px;\n  letter-spacing: 0.4px;\n  font-weight: 700;\n`;\n\nexport const Span = styled.span`\n  ${(props) => (props.variant === 'bold'\n    ? 'font-family: \"Nunito\";'\n    : 'font-family: \"Nunito\";')}\n`;\n\nexport const Paragraph = styled.p`\n  text-align: center;\n  color: #646464;\n  font-family: \"Nunito\";\n  font-size: 18px;\n  letter-spacing: 0.7px;\n  margin-top: 50px;\n  width: 350px;\n`;\n\nexport const LeftDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 45%;\n  padding: 0 40px;\n\n  @media (max-width: 768px) {\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nexport const RightDiv = styled.div`\n  display: flex;\n  width: 55%;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  background-color: #203449;\n  position: relative;\n\n  img {\n    height: fit-content;\n    width: 200px;\n    margin-bottom: 40px;\n  }\n\n  @media (max-width: 768px) {\n    width: 100%;\n    height: 120px;\n\n    img {\n      margin-bottom: 0;\n    }\n  }\n`;\n\nexport const Slogan = styled.div`\n  width: 320px;\n\n  ${SloganContainer} {\n    p {\n      padding: 0;\n      text-align: center;\n      color: white;\n      font-size: 18px;\n    }\n  }\n\n  @media (max-width: 768px) {\n    display: none;\n  }\n`;\n\nexport const RedDiv = styled.div`\n  width: 20px;\n  background-color: var(--color-primary);\n  position: absolute;\n  height: 100%;\n  left: 0;\n`;\n\nexport const GoldDiv = styled.div`\n  width: 20px;\n  background-color: #e5c8a6;\n  position: absolute;\n  height: 100%;\n  left: 20px;\n`;\n\nexport const AdviceContainer = styled.div`\n  color: white;\n  font-size: 15px;\n\n  p {\n    font-weight: 100;\n    width: fit-content;\n  }\n  a {\n    text-decoration: none;\n    color: var(--color-secondary);\n  }\n  ul {\n    li {\n      margin: 10px;\n    }\n  }\n`;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;ACAA;AAAA,oBAAkB;;;ACAlB;AAAA,mBAAiC;;;ACAjC;AAIO,IAAM,WAAW,sCAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWxB,IAAM,cAAc,sCAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAU3B,IAAM,MAAM,sCAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUnB,IAAM,OAAO,sCAAO;AAAA,IACvB,CAAC,UAAW,MAAM,YAAY,SAC5B,2BACA;AAAA;AAGC,IAAM,YAAY,sCAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUzB,IAAM,UAAU,sCAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcvB,IAAM,WAAW,sCAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAyBxB,IAAM,SAAS,sCAAO;AAAA;AAAA;AAAA,IAGzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcG,IAAM,SAAS,sCAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQtB,IAAM,UAAU,sCAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQvB,IAAM,kBAAkB,sCAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ADlHtC,0BAA0B;AACxB,QAAM,aAAa;AAEnB,8BAAU,MAAM;AACd,cAAU,oBAAoB;AAAA,KAC7B;AAEH,SACE,mDAAQ,UAAR,MACE,mDAAQ,aAAR,MACE,mDAAQ,SAAR,MACE,mDAAQ,KAAR,MAAY,uBACZ,mDAAC,MAAD;AAAA,IAAM,QAAO;AAAA,IAAc,QAAO;AAAA,KAChC,mDAAC,SAAD;AAAA,IAAO,MAAK;AAAA,IAAS,MAAK;AAAA,IAAa,OAAO;AAAA,MAC9C,mDAAC,gBAAD;AAAA,IAAQ,MAAK;AAAA,IAAS,UAAU;AAAA,IAAgB,WAAU;AAAA,KAAe,uCAI3E,mDAAQ,WAAR,MACE,mDAAQ,MAAR,MAAa,uBACb,mDAAQ,MAAR;AAAA,IAAa,SAAQ;AAAA,KAAO,eAC5B,mDAAQ,MAAR,MAAa,mEAKjB,mDAAQ,UAAR,MACE,mDAAQ,QAAR,OACA,mDAAQ,SAAR,OACA,mDAAC,OAAD;AAAA,IAAK,KAAK;AAAA,IAAM,KAAI;AAAA,MACpB,mDAAQ,QAAR,MACE,mDAAC,gBAAD,OACA,mDAAQ,iBAAR,MACE,mDAAC,KAAD,MAAG,kGAIH,mDAAC,MAAD,MACE,mDAAC,MAAD,MACE,mDAAC,KAAD;AAAA,IAAG,MAAK;AAAA,KAAgD,iBAAgB,oBAG1E,mDAAC,MAAD,MAAI,mDAAC,KAAD;AAAA,IAAG,MAAK;AAAA,KAAgD;AAAA;AAU5E,IAAO,yBAAQ;;;AD1Df,qBAAqC;AAYrC,iBAAiB;AACf,SAAO,oDAAC,wBAAD;AAAA;AAGT,IAAO,gBAAQ;",
  "names": []
}
