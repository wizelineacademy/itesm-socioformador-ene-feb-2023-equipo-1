{
  "version": 3,
  "sources": ["browser-route-module:routes/index.jsx?browser", "../../../app/routes/index.jsx", "../../../app/styles/Home.Styled.jsx", "../../../app/components/ListQuestions/index.js", "../../../app/components/ListQuestions/ListQuestions.jsx", "../../../app/components/ListQuestions/ListQuestions.Styled.jsx", "../../../app/components/QuestionCard/index.js", "../../../app/components/QuestionCard/QuestionCard.jsx", "../../../app/components/GoToTopButton/index.js", "../../../app/components/GoToTopButton/GoToTopButton.jsx", "../../../app/components/GoToTopButton/GoToTopButton.Styled.jsx", "../../../app/components/Atoms/ArrowIcon/index.js", "../../../app/components/Atoms/ArrowIcon/ArrowIcon.jsx", "../../../app/components/Atoms/InfiniteScrollList/index.js", "../../../app/components/Atoms/InfiniteScrollList/InfiniteScrollList.jsx", "../../../app/components/Filters/index.js", "../../../app/components/Filters/Filters.jsx", "../../../app/components/Filters/Filters.Styled.jsx", "../../../app/components/CustomDropdown/index.js", "../../../app/components/CustomDropdown/CustomDropdown.jsx", "../../../app/components/CustomDropdown/CustomDropdown.Styled.jsx", "../../../app/components/Modals/ValuesMessageModal/ValuesMessageModal.jsx", "../../../app/components/Modals/ValuesMessageModal/ValuesMessageModal.Styled.jsx"],
  "sourcesContent": ["export { default } from \"./routes/index.jsx\";", "import { json } from '@remix-run/node';\nimport {\n  useFetcher, useLoaderData, useSearchParams,\n} from '@remix-run/react';\nimport React, { useEffect, useState } from 'react';\nimport { getAuthenticatedUser, requireAuth } from 'app/session.server';\nimport * as Styled from 'app/styles/Home.Styled';\nimport ListQuestions from 'app/components/ListQuestions';\nimport Notifications from 'app/components/Notifications';\nimport listDepartments from 'app/controllers/departments/list';\nimport listLocations from 'app/controllers/locations/list';\nimport listQuestions from 'app/controllers/questions/list';\nimport { PAGE_QUESTIONS_LIMIT } from 'app/utils/constants';\nimport dateRangeConversion from 'app/utils/dateRangeConversion';\nimport modifyPinStatus from 'app/controllers/questions/modifyPinStatus';\nimport modifyEnabledValue from 'app/controllers/questions/modifyEnableStatus';\nimport voteQuestion from 'app/controllers/questionVotes/voteQuestion';\nimport ACTIONS from 'app/utils/actions';\n\nexport const loader = async ({ request }) => {\n  await requireAuth(request);\n  const user = await getAuthenticatedUser(request);\n\n  const url = new URL(request.url);\n\n  const order = url.searchParams.get('order');\n  const status = url.searchParams.get('status');\n  const department = Number.parseInt(url.searchParams.get('department'), 10);\n  const location = url.searchParams.get('location');\n  const dateRange = dateRangeConversion(url.searchParams.get('dateRange'));\n  const page = url.searchParams.get('page') ?? 1;\n\n  const questions = await listQuestions({\n    user,\n    orderBy: order,\n    status,\n    department: Number.isNaN(department) ? undefined : department,\n    location,\n    dateRange,\n    offset: (page - 1) * PAGE_QUESTIONS_LIMIT,\n  });\n\n  const locations = await listLocations();\n  const departments = await listDepartments();\n\n  return json({\n    questions,\n    locations,\n    departments,\n  });\n};\n\nexport const action = async ({ request }) => {\n  const formData = await request.formData();\n  const formAction = formData.get('action');\n  let response;\n  let questionId;\n  switch (formAction) {\n    case ACTIONS.PINNIN:\n      questionId = parseInt(formData.get('questionId'), 10);\n      const value = formData.get('value') !== 'false';\n      response = await modifyPinStatus(questionId, value);\n      break;\n    case ACTIONS.VOTE_QUESTION:\n      const voteQuestionId = parseInt(formData.get('questionId'), 10);\n      const voteQuestionUser = JSON.parse(formData.get('user'));\n      const isUpVote = formData.get('isUpVote') === 'true';\n      response = await voteQuestion(voteQuestionId, voteQuestionUser, isUpVote);\n      break;\n    case ACTIONS.ENABLED_ACTION:\n      questionId = parseInt(formData.get('questionId'), 10);\n      const enabledValue = formData.get('enabledValue') !== 'false';\n      response = await modifyEnabledValue(questionId, enabledValue);\n      break;\n    default:\n      break;\n  }\n\n  return json(response);\n};\n\nexport default function Index() {\n  const { questions: initialQuestions } = useLoaderData();\n  const [questions, setQuestions] = useState(initialQuestions);\n\n  const fetcher = useFetcher();\n  const [shouldFetch, setShouldFetch] = useState(true);\n  const [page, setPage] = useState(2);\n  const [searchParams] = useSearchParams();\n\n  const onFetchMore = () => {\n    if (!shouldFetch) return;\n    fetcher.load(`/?index&${searchParams.toString()}&page=${page}`);\n  };\n\n  useEffect(() => {\n    if (fetcher.data && fetcher.data.questions && fetcher.data.questions.length === 0) {\n      setShouldFetch(false);\n      return;\n    }\n\n    if (fetcher.data && fetcher.data.questions && fetcher.data.questions.length > 0) {\n      setQuestions((prevQuestions) => [...prevQuestions, ...fetcher.data.questions]);\n      setPage((prevPage) => prevPage + 1);\n      setShouldFetch(true);\n    }\n  }, [fetcher.data]);\n\n  useEffect(() => {\n    setQuestions(initialQuestions);\n    setPage(2);\n    setShouldFetch(true);\n  }, [initialQuestions, searchParams]);\n\n  return (\n    <>\n      <Notifications />\n      <Styled.Container>\n        <ListQuestions\n          type=\"all\"\n          questions={questions}\n          onFetchMore={onFetchMore}\n        />\n      </Styled.Container>\n    </>\n  );\n}\n", "/* eslint-disable import/prefer-default-export */\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\nbackground-color: #f4f7f9;\n`;\n", "export { default } from './ListQuestions';\n", "import React, { useState, useRef } from 'react';\nimport { useSubmit, useSearchParams, useTransition } from '@remix-run/react';\nimport PropTypes from 'prop-types';\nimport * as Styled from 'app/components/ListQuestions/ListQuestions.Styled';\nimport Slogan from 'app/components/Slogan';\nimport QuestionCard from 'app/components/QuestionCard';\nimport AnswerBot from 'app/components/AnswerBot';\nimport useUser from 'app/utils/hooks/useUser';\nimport GoToTopButton from 'app/components/GoToTopButton';\nimport markdownFormatQuestion from 'app/utils/markdownFormatQuestions';\nimport InfiniteScrollList from 'app/components/Atoms/InfiniteScrollList';\nimport Filters from 'app/components/Filters';\nimport ACTIONS from 'app/utils/actions';\nimport { setCookie, getCookie } from 'app/utils/cookies';\nimport ValuesMessageModal from '../Modals/ValuesMessageModal/ValuesMessageModal';\n\nfunction ListQuestions({\n  questions,\n  onFetchMore,\n}) {\n  const submit = useSubmit();\n  const transition = useTransition();\n  const voteQuestionForm = useRef();\n  const profile = useUser();\n  const [showValuesMessage, setShowValueMessage] = useState(getCookie('showValueMessage'));\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const [title, setTitle] = useState('Newest Questions');\n\n  const valuesMessageModal = showValuesMessage === 'true' && (\n    <ValuesMessageModal\n      show={showValuesMessage}\n      onClose={() => { setShowValueMessage(false); setCookie('showValueMessage', false); }}\n    />\n  );\n\n  const decorateQuestion = (question) => ({\n    ...question,\n    question: markdownFormatQuestion(question.question, undefined),\n    hasVoted: !!question.hasVoted,\n  });\n\n  const clearFilters = (params) => {\n    params.forEach((param) => {\n      searchParams.delete(param);\n    });\n\n    setSearchParams(searchParams);\n  };\n\n  const modifyQuery = (field, value) => {\n    if (field === 'order') {\n      if (value === 'oldest') {\n        setTitle('Oldest Questions');\n      } else if (value === 'newest') {\n        setTitle('Newest Questions');\n      } else if (value === 'popular') {\n        setTitle('Popular Questions');\n      } else if (value === 'most_commented') {\n        setTitle('Most Commented Questions');\n      }\n    }\n\n    if (value === undefined) {\n      searchParams.delete(field);\n    } else {\n      searchParams.set(field, value);\n    }\n    setSearchParams(searchParams);\n  };\n\n  const displayUsername = (user) => {\n    if (!user) {\n      return 'Anonymous';\n    }\n    return user.full_name;\n  };\n\n  const displayAnsweredBy = (username) => {\n    const answeredBy = username ? `Answered by ${username}` : '';\n    return answeredBy;\n  };\n\n  const renderQuestionsList = () => {\n    const onLikeButtonClick = (questionId, isUpVote) => {\n      if (transition.state !== 'idle') {\n        return;\n      }\n      const data = new FormData(voteQuestionForm.current);\n      data.set('action', ACTIONS.VOTE_QUESTION);\n      data.set('questionId', questionId);\n      data.set('user', JSON.stringify(profile));\n      data.set('isUpVote', isUpVote);\n      let actionUrl = '/?index';\n      searchParams.forEach((value, key) => {\n        actionUrl += value ? `&${key}=${value}` : '';\n      });\n      submit(data, { method: 'post', action: actionUrl, replace: true });\n    };\n\n    if (questions.length === 0) { return null; }\n\n    return questions.map((question, index) => (\n      <QuestionCard\n        key={question.question_id}\n        question={decorateQuestion(question)}\n        isAdmin={profile.is_admin}\n        displayUsername={displayUsername}\n        displayAnsweredBy={displayAnsweredBy}\n        searchTerm={undefined}\n        index={index}\n        onVoteClick={(isUpVote) => onLikeButtonClick(question.question_id, isUpVote)}\n        processingFormSubmission={transition.state !== 'idle'}\n      />\n    ));\n  };\n\n  const renderNoResultMessage = () => {\n    if (!questions) {\n      return 'Loading questions...';\n    }\n    return 'There are no questions yet, how about asking one?';\n  };\n\n  const generateAskQuestionButton = () => (\n    <Styled.AskButton to=\"/questions/new\" id=\"ask-button\">\n      Ask Question\n    </Styled.AskButton>\n  );\n\n  return (\n    <Styled.Container>\n      {/* TODO: Add left hashtag's panel */}\n      <Styled.LeftWrapper>\n        <Styled.SloganWrapper>\n          <Slogan />\n        </Styled.SloganWrapper>\n      </Styled.LeftWrapper>\n      <Styled.CenterWrapper>\n        <Styled.QuestionsWrapper>\n          <Styled.AskQuestionButtonWrapper>\n            <Styled.QuestionsTitle>\n              {title}\n            </Styled.QuestionsTitle>\n            {generateAskQuestionButton()}\n          </Styled.AskQuestionButtonWrapper>\n          {questions.length === 0 ? (\n            <Styled.Alert>{renderNoResultMessage()}</Styled.Alert>\n          ) : (\n            <InfiniteScrollList onFetch={onFetchMore}>\n              <Styled.QuestionList id=\"questions-list\">\n                {renderQuestionsList(questions)}\n              </Styled.QuestionList>\n            </InfiniteScrollList>\n          )}\n        </Styled.QuestionsWrapper>\n      </Styled.CenterWrapper>\n      <Styled.RightWrapper>\n        <Styled.FiltersWrapper>\n          <Filters\n            modifyQuery={modifyQuery}\n            clearFilters={clearFilters}\n          />\n        </Styled.FiltersWrapper>\n      </Styled.RightWrapper>\n      <GoToTopButton />\n      {valuesMessageModal}\n      <AnswerBot/>\n    </Styled.Container>\n  );\n}\n\nListQuestions.propTypes = {\n  questions: PropTypes.arrayOf(\n    PropTypes.shape(),\n  ),\n  onFetchMore: PropTypes.func.isRequired,\n};\n\nListQuestions.defaultProps = {\n  questions: [],\n};\n\nexport default ListQuestions;\n", "import { Link } from '@remix-run/react';\n/* eslint-disable import/prefer-default-export */\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  background-color: #f4f7f9;\n  margin: 0 auto;\n  width: 100%;\n  max-width: 1600px;\n  padding-top: 40px;\n  @media (max-width: 1025px) {\n    flex-direction: column-reverse;\n    align-items: center;\n  }\n  @media (max-width: 768px) {\n    padding-top: 20px;\n  }\n`;\n\nexport const LeftWrapper = styled.div`\n  flex: 1;\n`;\n\nexport const CenterWrapper = styled.div`\n  flex: 2;\n  display: flex;\n  justify-content: center;\n`;\n\nexport const RightWrapper = styled.div`\n  flex: 1;\n  display: flex;\n  @media (max-width: 1025px) {\n    width: 100%;\n    display: contents;\n    position: sticky;\n  }\n  @media (min-width: 1440px) {\n    overflow: auto;\n  }\n`;\n\nexport const SloganWrapper = styled.div`\n  max-width: 425px;\n  \n  @media (max-width: 1025px) {\n    display: none;\n  }\n`;\n\nexport const QuestionsWrapper = styled.div`\n  max-width: 650px;\n  width: 100%;\n`;\n\nexport const AskQuestionButtonWrapper = styled.div`\n  padding-right: 10px;\n  padding-left: 10px;\n  flex-direction: row;\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 20px;\n`;\n\nexport const QuestionsTitle = styled.div`\n  align-items: center;\n  display: flex;\n  font-family: \"Nunito\", sans-serif;\n  font-size: 20px;\n  letter-spacing: 0.6px;\n`;\n\nexport const QuestionList = styled.div`\n  margin: 5px 0 10px;\n  padding-left: 0;\n`;\n\nexport const Alert = styled.div`\n  border-radius: 3px;\n  margin: 0 auto;\n  max-width: 592px;\n  width: 94%;\n  padding: 15px 10px;\n  @media (min-width: 768px) and (max-width: 1024px) {\n    width: 100%;\n  }\n`;\n\nexport const FiltersWrapper = styled.div`\n  width: 100%;\n  max-width: 300px;\n  @media (max-width: 1024px) {\n    max-width: none;\n    padding: 0 0 20px;\n    position: -webkit-sticky;\n    position: sticky;\n    top: 0;\n    background-color: #f4f7f9;\n    border-radius: 18px;\n  }\n  @media (max-width: 767px) {\n    padding: 0 0 20px;\n    position: -webkit-sticky;\n    position: sticky;\n    top: 0;\n  }\n`;\n\nexport const AskButton = styled(Link)`\n  align-items: center;\n  background: var(--color-secondary);\n  border: solid 1px transparent;\n  border-radius: 3px;\n  color: #fff;\n  display: flex;\n  height: 33px;\n  justify-content: center;\n  padding: 20px 15px;\n  text-decoration: none;\n  width: 120px;\n  &:disabled {\n    background: #d8d8d8;\n  }\n  &:hover {\n    background-color: white;\n    border: solid 1px var(--color-secondary);\n    color: var(--color-secondary);\n    text-decoration: none;\n  }\n`;\n", "export { default } from './QuestionCard';\n", "import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useNavigate } from 'react-router-dom';\nimport likeIcon from 'app/images/ic_like.svg';\nimport diskilike from 'app/images/ic_dislike.svg';\nimport dislikeIconVoted from 'app/images/ic_dislike_pressed.svg';\nimport likeIconVoted from 'app/images/ic_like_pressed.svg';\nimport commentIcon from 'app/images/ic_comment_non-selected.svg';\nimport {\n  renderAnswer,\n} from 'app/utils/questionUtils';\n\nimport * as Styled from 'app/components/QuestionCard/QuestionCard.Styled';\nimport QuestionRow from 'app/components/QuestionRow';\nimport CounterButton from 'app/components/CounterButton';\nimport reorderHighlightedComments from 'app/utils/commentUtils';\nimport AnswerRow from 'app/components/AnswerRow';\n\nfunction QuestionCard(props) {\n  const {\n    question,\n    currentUserEmail,\n    question: { Answers },\n    onVoteClick,\n    searchTerm,\n    processingFormSubmission,\n  } = props;\n\n  const renderAnswerProps = {\n    Answers,\n    isAdmin: false,\n    currentUserEmail,\n    onAnswerClick: () => {},\n    openDeleteAnswerModal: () => {},\n    question,\n    searchTerm,\n    isPreview: true,\n    isFromList: true,\n    questionId: question.question_id,\n    isAnswer: true,\n  };\n\n  const hasAnswer = question.Answers.length > 0;\n  const navigate = useNavigate();\n\n  const renderButtons = () => {\n    const icon = !question.hasLike ? likeIcon : likeIconVoted;\n    const dislikeicon = !question.hasDislike ? diskilike : dislikeIconVoted;\n\n    return (\n      <Styled.CounterButtonsWrapper isAdmin={false} hasAnswer={hasAnswer}>\n        <CounterButton\n          id={`like-button-${question.question_id}`}\n          selected={question.hasLike}\n          icon={icon}\n          count={question.numLikes}\n          onClick={() => onVoteClick(true)}\n          processingFormSubmission={processingFormSubmission}\n          isDisabled={question.hasDislike}\n        />\n        <CounterButton\n          id={`like-button-${question.question_id}`}\n          selected={question.hasDislike}\n          icon={dislikeicon}\n          count={question.numDisklike}\n          onClick={() => onVoteClick(false)}\n          processingFormSubmission={processingFormSubmission}\n          isDisabled={question.hasLike}\n        />\n        <CounterButton\n          id={`comments-button-${question.question_id}`}\n          icon={commentIcon}\n          count={question.numComments}\n          onClick={() => navigate(`/questions/${question.question_id}`)}\n        />\n      </Styled.CounterButtonsWrapper>\n    );\n  };\n\n  // eslint-disable-next-line consistent-return\n  const renderCommentAnswer = () => {\n    if ((!question.hasCommentApproved && !question.hasCommunityAnswer)\n       || question.Answers.length > 0) {\n      return null;\n    }\n\n    let commentAsAnswer = {};\n    if (question.hasCommentApproved) {\n      commentAsAnswer = question.Comments.find((comment) => comment.approvedBy !== null);\n    } else if (question.hasCommunityAnswer) {\n      const [communityAnswerCommentId] = reorderHighlightedComments(question.Comments);\n      commentAsAnswer = question.Comments.find(\n        (comment) => comment.id === communityAnswerCommentId,\n      );\n    }\n\n    if (commentAsAnswer) {\n      return (\n        <AnswerRow\n          answer_text={commentAsAnswer.comment}\n          user={commentAsAnswer.User}\n          answered_at={commentAsAnswer.createdAt}\n          searchTerm={renderAnswerProps.searchTerm}\n          isPreview={renderAnswerProps.isPreview}\n          isFromList={renderAnswerProps.isFromList}\n          questionId={question.question_id}\n          isAnswer={question.Answers.length > 0}\n          isCommunityAnswer={question.hasCommunityAnswer}\n          isCommentApproved={question.hasCommentApproved}\n          approver={commentAsAnswer.Approver}\n        />\n      );\n    }\n  };\n\n  return (\n    <Styled.QuestionCardContainer>\n      <Styled.QuestionCardWrapper>\n        <Styled.QuestionCardBorder>\n          <QuestionRow\n            question={question}\n            isQuestionModalOpen={false}\n            hasAnswer={hasAnswer}\n          />\n          <Styled.QuestionCardActions hasAnswer={hasAnswer} isQuestionModalOpen={false}>\n            {renderButtons()}\n          </Styled.QuestionCardActions>\n        </Styled.QuestionCardBorder>\n      </Styled.QuestionCardWrapper>\n      {renderAnswer(renderAnswerProps)}\n      {renderCommentAnswer()}\n    </Styled.QuestionCardContainer>\n  );\n}\n\nQuestionCard.propTypes = {\n  question: PropTypes.shape({\n    question_id: PropTypes.number.isRequired,\n    question: PropTypes.string.isRequired,\n    user_hash: PropTypes.string,\n    can_edit: PropTypes.bool,\n    created_by_user: PropTypes.shape({\n      email: PropTypes.string,\n      employee_id: PropTypes.number,\n      full_name: PropTypes.string,\n      is_admin: PropTypes.bool,\n      job_title: PropTypes.string,\n      profile_picture: PropTypes.string,\n    }),\n    Answers: PropTypes.arrayOf(\n      PropTypes.shape(),\n    ),\n    createdAt: PropTypes.string.isRequired,\n    location: PropTypes.string.isRequired,\n    numComments: PropTypes.number.isRequired,\n    hasVoted: PropTypes.bool.isRequired,\n    hasCommentApproved: PropTypes.bool.isRequired,\n    hasCommunityAnswer: PropTypes.bool.isRequired,\n    Comments: PropTypes.arrayOf(\n      PropTypes.shape(),\n    ),\n    numLikes: PropTypes.number.isRequired,\n    numDisklike: PropTypes.number.isRequired,\n    hasLike: PropTypes.bool.isRequired,\n    hasDislike: PropTypes.bool.isRequired,\n  }).isRequired,\n  onVoteClick: PropTypes.func.isRequired,\n  currentUserEmail: PropTypes.string,\n  searchTerm: PropTypes.string,\n  processingFormSubmission: PropTypes.bool,\n};\n\nQuestionCard.defaultProps = {\n  currentUserEmail: '',\n  searchTerm: '',\n  processingFormSubmission: false,\n};\n\nexport default QuestionCard;\n", "export { default } from './GoToTopButton';\n", "import React, { useState, useEffect } from 'react';\nimport * as Styled from 'app/components/GoToTopButton/GoToTopButton.Styled';\nimport { BACK_TO_TOP } from 'app/utils/constants';\nimport ArrowIcon from 'app/components/Atoms/ArrowIcon';\n\nfunction GoToTopButton() {\n  const [show, setShow] = useState(false);\n  useEffect(() => {\n    window.addEventListener('scroll', () => {\n      if (window.scrollY > 500) {\n        setShow(true);\n      } else {\n        setShow(false);\n      }\n    });\n  }, []);\n\n  const goToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'auto',\n    });\n  };\n\n  return (\n    <Styled.Button\n      id=\"go-to-top-button\"\n      display={show}\n      onClick={goToTop}\n    >\n      <ArrowIcon />\n      <Styled.Span>{BACK_TO_TOP}</Styled.Span>\n    </Styled.Button>\n  );\n}\n\nexport default GoToTopButton;\n", "/* eslint-disable import/prefer-default-export */\nimport styled from 'styled-components';\n\nexport const Button = styled.button`\n  all: unset;\n  align-items: center;\n  background-color: var(--color-secondary);\n  border-radius: 4px 0 0 4px;\n  bottom: 45px;\n  box-shadow: 0 2px 4px 0 #c7c6c6;\n  display: flex;\n  height: 40px;\n  justify-content: center;\n  opacity: ${(props) => (props.display === true ? 0.9 : 0)};\n  padding-left: 11px;\n  position: fixed;\n  right: 0px;\n  transition: opacity 200ms;\n  width: 124px;\n  transition: opacity 200ms, visibility 0s 200ms;\n  &:hover {\n    background-color: var(--color-secondary-hover);\n    cursor: pointer;\n  }\n  &:active {\n    background-color: var(--color-secondary-active);\n  }\n  svg {\n    align-self: center;\n  }\n`;\n\nexport const Span = styled.span`\n  color: #ffffff;\n  font-family: 'Nunito', sans-serif;\n  font-size: 14px;\n  font-weight: 600;\n  letter-spacing: 0.58px;\n  padding-left: 11px;\n  padding-right: 24px;\n`;\n", "export { default } from './ArrowIcon';\n", "import React from 'react';\n\nfunction ArrowIcon(props) {\n  return (\n    <svg\n      color=\"white\"\n      fill=\"currentColor\"\n      fillRule=\"nonzero\"\n      height={12}\n      stroke=\"currentColor\"\n      strokeWidth={1}\n      version=\"1.1\"\n      viewBox=\"0 0 23 27\"\n      width={10}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...props}\n    >\n      <path\n        transform=\"translate(-18.000000, -17.000000)\"\n        d=\"M30.6301904,20.6966946 C30.6304384,20.705609 30.6305632,20.7145536 30.6305632,20.7235269 L30.6305632,41.9301705 C30.6305632,42.462539 30.1912987,42.8941089 29.6494386,42.8941089 C29.1075784,42.8941089 28.6683139,42.462539 28.6683139,41.9301705 L28.6683139,20.7235269 C28.6683139,20.6823753 28.6709386,20.6418259 28.6760325,20.6020316 L20.2797113,28.5838228 C19.9872058,28.8618871 19.5118845,28.8618871 19.2193791,28.5838228 C18.9268736,28.3057585 18.9268736,27.853904 19.2193791,27.5758396 L29.0731557,18.2085482 C29.3656611,17.9304839 29.8409825,17.9304839 30.1334879,18.2085482 L39.9872645,27.5758396 C40.1335172,27.7148718 40.2066436,27.888662 40.2066436,28.0798312 C40.2066436,28.2710004 40.1335172,28.4447906 39.9872645,28.5838228 C39.6947591,28.8618871 39.2194378,28.8618871 38.9269323,28.5838228 L30.6301904,20.6966946 Z M29.6444293,19.7596009 L29.6033218,19.7205229 L29.5578693,19.7637314 C29.5863864,19.7611383 29.6152573,19.7597442 29.6444293,19.7596009 Z\"\n      />\n    </svg>\n  );\n}\n\nexport default ArrowIcon;\n", "export { default } from './InfiniteScrollList';\n", "import React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nfunction InfiniteScrollList({ onFetch, children }) {\n  const endOfListRef = useRef();\n\n  const scrollContainer = null;\n  const fetchScrollLimit = 500;\n\n  const onScroll = ([entity]) => {\n    if (entity.isIntersecting) {\n      onFetch();\n    }\n  };\n\n  const observer = useRef();\n\n  useEffect(() => {\n    observer.current = new IntersectionObserver(onScroll, {\n      root: scrollContainer,\n      rootMargin: `${fetchScrollLimit}px`,\n      threshold: 0,\n    });\n    if (endOfListRef && endOfListRef.current) {\n      observer.current.observe(endOfListRef.current);\n    }\n    return () => {\n      if (endOfListRef && endOfListRef.current) {\n        observer.current.unobserve(endOfListRef.current);\n      }\n    };\n  }, [children.props.children.length]);\n\n  return (\n    <div>\n      {children}\n      <div ref={endOfListRef} />\n    </div>\n  );\n}\n\nInfiniteScrollList.propTypes = {\n  onFetch: PropTypes.func.isRequired,\n  children: PropTypes.node,\n};\n\nInfiniteScrollList.defaultProps = {\n  children: null,\n};\n\nexport default InfiniteScrollList;\n", "export { default } from './Filters';\n", "import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useLoaderData, useSearchParams } from '@remix-run/react';\nimport filterIcon from 'app/images/ic_filter.svg';\nimport * as Styled from 'app/components/Filters/Filters.Styled';\n\nimport {\n  SORTING_OPTIONS,\n  DEFAULT_SORTING_OPT,\n  SORTING_ACCESS_VALUE,\n  DATE_RANGE_OPTIONS,\n  DEFAULT_DATE_RANGE_OPT,\n  DATE_RANGE_LABEL,\n  DATE_RANGE_ACCESS_VALUE,\n  STATUS_OPTIONS,\n  DEFAULT_STATUS_OPT,\n  STATUS_LABEL,\n  STATUS_ACCESS_VALUE,\n  DEPARTMENT_OPTIONS,\n  DEFAULT_DEPARTMENT_OPT,\n  DEPARTMENT_LABEL,\n  DEPARTMENT_ACCESS_VALUE,\n  DEFAULT_LOCATION,\n  LOCATION_LABEL,\n  LOCATION_ACCESS_VALUE,\n  TEXT_BUTTON,\n  DEFAULT_LOCATION_OPT,\n} from 'app/utils/constants';\nimport Button from 'app/components/Atoms/Button';\nimport CustomDropdown from 'app/components/CustomDropdown';\n\nfunction Filters(props) {\n  const { modifyQuery, clearFilters } = props;\n\n  const { departments, locations } = useLoaderData();\n\n  const [searchParams] = useSearchParams();\n\n  const getDefaultStatus = () => {\n    const searchParam = searchParams.get('status');\n    if (searchParam) {\n      const found = STATUS_OPTIONS.find((status) => status.value === searchParam);\n      if (found) return found;\n    }\n\n    return DEFAULT_STATUS_OPT;\n  };\n\n  const getDefaultSortOption = () => {\n    const searchParam = searchParams.get('order');\n    if (searchParam) {\n      const found = SORTING_OPTIONS.find((order) => order.value === searchParam);\n      if (found) return found;\n    }\n\n    return DEFAULT_SORTING_OPT;\n  };\n\n  const getDefaultDateRangeOption = () => {\n    const searchParam = searchParams.get('dateRange');\n    if (searchParam) {\n      const found = DATE_RANGE_OPTIONS.find((date) => date.value === searchParam);\n      if (found) return found;\n    }\n\n    return DEFAULT_DATE_RANGE_OPT;\n  };\n\n  const getDefaultDepartmentOption = () => {\n    const searchParam = parseInt(searchParams.get('department'), 10);\n    if (searchParam !== undefined) {\n      const found = DEPARTMENT_OPTIONS.find((option) => option.department_id === searchParam);\n      if (found) return found;\n      const foundInData = departments.find(\n        (department) => department.department_id === searchParam,\n      );\n\n      if (foundInData) return foundInData;\n    }\n\n    return DEFAULT_DATE_RANGE_OPT;\n  };\n\n  const getDefaultLocationOption = () => {\n    const searchParam = searchParams.get('location');\n    if (searchParam) {\n      const foundInData = locations.find((location) => location.code === searchParam);\n      if (foundInData) return foundInData;\n    }\n\n    return DEFAULT_LOCATION_OPT;\n  };\n\n  const [selectedOrderBy, setSelectedOrderBy] = useState(getDefaultSortOption());\n  const [selectedDateRange, setSelectedDateRange] = useState(getDefaultDateRangeOption());\n  const [selectedStatus, setSelectedStatus] = useState(getDefaultStatus());\n  const [selectedDepartment, setSelectedDepartment] = useState(getDefaultDepartmentOption());\n  const [selectedLocation, setSelectedLocation] = useState(getDefaultLocationOption());\n  const [showClearButton, setShowClearButton] = useState(false);\n  const [showFilters, setShowFilters] = useState(false);\n  const [filtersButtonName, setFiltersButtonName] = useState('Show filters');\n\n  useEffect(() => {\n    if (selectedLocation !== null && selectedLocation !== undefined) {\n      if (\n        selectedDateRange.name === DEFAULT_DATE_RANGE_OPT.name\n        && selectedDepartment.name === DEFAULT_DEPARTMENT_OPT.name\n        && selectedStatus.name === DEFAULT_STATUS_OPT.name\n        && selectedLocation.code === DEFAULT_LOCATION\n      ) {\n        setShowClearButton(false);\n      } else {\n        setShowClearButton(true);\n      }\n    }\n  }, [selectedDateRange, selectedStatus, selectedDepartment, selectedLocation]);\n\n  const selectOrderByFilter = (selectOrderBy) => {\n    setSelectedOrderBy(selectOrderBy);\n    modifyQuery('order', selectOrderBy.value);\n  };\n\n  const selectDateRangeFilter = (selectDateRange) => {\n    setSelectedDateRange(selectDateRange);\n    if (selectDateRange.value === 'all') {\n      modifyQuery('dateRange', undefined);\n    } else {\n      modifyQuery('dateRange', selectDateRange.value);\n    }\n  };\n\n  const selectStatusFilter = (selectStatus) => {\n    setSelectedStatus(selectStatus);\n    if (selectStatus.value === 'all') {\n      modifyQuery('status', undefined);\n    } else {\n      modifyQuery('status', selectStatus.value);\n    }\n  };\n\n  const selectDepartmentFilter = (selectDepartment) => {\n    setSelectedDepartment(selectDepartment);\n    if (selectDepartment.department_id === -1) {\n      modifyQuery('department', undefined);\n    } else {\n      modifyQuery('department', selectDepartment.department_id);\n    }\n  };\n\n  const selectLocationFilter = (selectLocation) => {\n    setSelectedLocation(selectLocation);\n    modifyQuery('location', selectLocation.code);\n  };\n\n  const clearAllFilters = () => {\n    selectDateRangeFilter(DEFAULT_DATE_RANGE_OPT, false);\n    selectStatusFilter(DEFAULT_STATUS_OPT, false);\n    selectDepartmentFilter(DEFAULT_DEPARTMENT_OPT, false);\n    selectLocationFilter(DEFAULT_LOCATION_OPT, false);\n\n    clearFilters([\n      'location',\n      'department',\n      'status',\n      'dateRange',\n      'location',\n    ]);\n  };\n\n  const selectFilters = () => {\n    if (!showFilters) {\n      setFiltersButtonName('Hide filters');\n      setShowFilters(true);\n    } else {\n      setFiltersButtonName('Show filters');\n      setShowFilters(false);\n    }\n  };\n\n  const getLocationFilterConfig = () => {\n    let selectedLocationsProps = {};\n    if (selectedLocation) {\n      selectedLocationsProps = {\n        text: selectedLocation.name,\n        selectedValue: selectedLocation.code,\n        isHihlighted: selectedLocation.code !== DEFAULT_LOCATION,\n      };\n    }\n    return {\n      ...selectedLocationsProps,\n      elements: locations,\n      label: LOCATION_LABEL,\n      onSelectFunc: selectLocationFilter,\n      accessValueName: LOCATION_ACCESS_VALUE,\n      disabled: selectedLocation === undefined,\n    };\n  };\n\n  const orderByDropdownConfig = {\n    elements: SORTING_OPTIONS,\n    label: selectedOrderBy.name,\n    onSelectFunc: selectOrderByFilter,\n    selectedValue: selectedOrderBy.value,\n    showSelected: false,\n    accessValueName: SORTING_ACCESS_VALUE,\n  };\n\n  const dateRangeFilterConfig = {\n    elements: DATE_RANGE_OPTIONS,\n    text: selectedDateRange.name,\n    label: DATE_RANGE_LABEL,\n    onSelectFunc: selectDateRangeFilter,\n    selectedValue: selectedDateRange.value,\n    isHihlighted: selectedDateRange !== DEFAULT_DATE_RANGE_OPT,\n    accessValueName: DATE_RANGE_ACCESS_VALUE,\n  };\n\n  const departmentFilterConfig = {\n    elements: [...DEPARTMENT_OPTIONS, ...departments],\n    text: selectedDepartment.name,\n    label: DEPARTMENT_LABEL,\n    onSelectFunc: selectDepartmentFilter,\n    selectedValue: selectedDepartment.department_id,\n    isHihlighted: selectedDepartment !== DEFAULT_DEPARTMENT_OPT,\n    accessValueName: DEPARTMENT_ACCESS_VALUE,\n  };\n\n  const statusFilterConfig = {\n    elements: STATUS_OPTIONS,\n    text: selectedStatus.name,\n    label: STATUS_LABEL,\n    onSelectFunc: selectStatusFilter,\n    selectedValue: selectedStatus.value,\n    isHihlighted: selectedStatus !== DEFAULT_STATUS_OPT,\n    accessValueName: STATUS_ACCESS_VALUE,\n  };\n\n  return (\n    <Styled.Filters>\n      <Button\n        type=\"button\"\n        category={TEXT_BUTTON}\n        className=\"show-filters-button\"\n        onClick={selectFilters}\n      >\n        <Styled.Icon src={filterIcon} alt=\"Icon\" />\n        <span>{filtersButtonName}</span>\n      </Button>\n      <Styled.FiltersLine secondary visibility=\"none\" />\n      <Styled.FiltersWrapper\n        hideComponent={!showFilters ? 'none' : 'block'}\n      >\n        <Styled.FiltersContainer>\n          <Styled.FiltersBlock>\n            <Styled.FiltersLabel>Order by:</Styled.FiltersLabel>\n            <Styled.FiltersField>\n              <CustomDropdown {...orderByDropdownConfig} />\n            </Styled.FiltersField>\n          </Styled.FiltersBlock>\n          <Styled.FiltersBlock>\n            <Styled.FiltersLabel>\n              Filter by:\n              {' '}\n              {showClearButton && (\n              <button type=\"button\" onClick={clearAllFilters}>Clear All Filters</button>\n              )}\n            </Styled.FiltersLabel>\n            <Styled.FiltersField>\n              <CustomDropdown {...dateRangeFilterConfig} />\n            </Styled.FiltersField>\n            <Styled.FiltersField>\n              <CustomDropdown {...statusFilterConfig} />\n            </Styled.FiltersField>\n            <Styled.FiltersField departments>\n              <CustomDropdown {...departmentFilterConfig} />\n            </Styled.FiltersField>\n            <Styled.FiltersField>\n              <CustomDropdown {...getLocationFilterConfig()} />\n            </Styled.FiltersField>\n          </Styled.FiltersBlock>\n        </Styled.FiltersContainer>\n      </Styled.FiltersWrapper>\n    </Styled.Filters>\n  );\n}\n\nFilters.propTypes = {\n  clearFilters: PropTypes.func.isRequired,\n  modifyQuery: PropTypes.func.isRequired,\n};\n\nexport default Filters;\n", "import styled, { css } from 'styled-components';\n\nexport const Filters = styled.div`\n  background-color: transparent;\n  margin: 0 11px;\n  position: -webkit-sticky;\n  position: sticky;\n  top: 0;\n  @media (min-width: 768px) and (max-width: 1024px) {\n    margin: 0 auto;\n    max-width: 592px;\n    padding: 20px 0 5px;\n    position: relative;\n  }\n  @media (max-width: 767px) {\n    margin: 0 auto;\n    max-width: 592px;\n    padding: 20px 0 5px;\n    position: relative;\n  }\n`;\n\nexport const Icon = styled.img`\n  height: 20px;\n  margin-right: 10px;\n  width: 17px;\n`;\n\nexport const FiltersLine = styled.hr`\n  border-top: 1px solid #e6e6e6;\n  margin: 16px 0 24px;\n  display: ${(props) => props.visibility};\n  ${(props) => props.secondary && css`\n    margin: 0;\n  `}\n  \n  @media (min-width: 768px) and (max-width: 1024px) {\n    display: block;\n  }\n  @media (max-width: 767px){\n   display: block;\n  }\n`;\n\nexport const FiltersWrapper = styled.div`\n  flex-grow: 1;\n  transition: box-shadow 300ms;\n  width: 100%;\n  @media (min-width: 768px) and (max-width: 1024px) {\n      display: ${(props) => props.hideComponent};\n      margin: 0 auto;\n      padding: 10px 0;\n      width: 248px;\n  }\n  @media (max-width: 767px) {\n      display: ${(props) => props.hideComponent};\n      margin: 0 auto;\n      padding: 10px 0;\n      width: 248px;\n  }\n  #sort-toggle.dropdown-toggle.btn {\n    background-color: transparent;\n    border: none;\n    font-size: 14px;\n    height: 56px;\n    width: 100%;\n  }\n`;\n\nexport const FiltersContainer = styled.div`\n  display: unset;\n`;\n\nexport const FiltersBlock = styled.div``;\n\nexport const FiltersLabel = styled.div`\n  font-size: 12px;\n  margin: 8px 0 4px;\n  width: auto;\n  button {\n    color: var(--color-secondary);\n    float: right;\n    font-size: 12px;\n    text-decoration: none;\n    background: none!important;\n    border: none;\n    padding: 0!important;\n  }\n`;\n\nexport const FiltersField = styled.div`\n  border-color: transparent;\n  display: flex;\n  flex-wrap: wrap;\n  font-size: 12px;\n  .sort-toggle.dropdown {\n    border-radius: 10px;\n    margin: 8px 0;\n    width: 100%;\n  }\n  .caret {\n    color: var(--color-secondary);\n    font-size: 50px;\n    position: absolute;\n    right: 24px;\n    top: 48%;\n  }\n  .sort-toggle.dropdown.open .caret {\n    -moz-transform: scale(1, -1);\n    -ms-transform: scale(1, -1);\n    -o-transform: scale(1, -1);\n    -webkit-transform: scale(1, -1);\n    transform: scale(1, -1);\n  }\n  .dropdown:hover {\n    background-color: transparent;\n  }\n  .dropdown .menu-dropdown {\n    box-shadow: none;\n    margin: 0;\n    min-width: 100%;\n    width: 100%;\n  }\n  .dropdown.open .menu-dropdown {\n    border: none;\n    border-radius: 10px;\n    padding: 5px 0 8.9px;\n    position: unset;\n  }\n  ${(props) => props.departments\n    && css`\n      .dropdown-menu li:nth-child(2) a label {\n        border-bottom: 1px solid #e6e6e6;\n        padding-bottom: 12px;\n      }\n    `}\n`;\n", "export { default } from './CustomDropdown';\n", "import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as Styled from './CustomDropdown.Styled';\n\nfunction CustomDropdown(props) {\n  const { accessValueName, selectedValue } = props;\n  const renderElements = (elements) => elements.map((element) => (\n    <Styled.CMenuItem eventKey={element} key={element[accessValueName]}>\n      <label className=\"custom-dropdown\" htmlFor={element[accessValueName]}>\n        {element.name}\n        <input\n          type=\"radio\"\n          className=\"custom-dropdown--radio\"\n          checked={selectedValue === element[accessValueName]}\n          readOnly\n          id={element[accessValueName]}\n        />\n        <span className=\"custom-dropdown--span\" />\n      </label>\n    </Styled.CMenuItem>\n  ));\n\n  const renderSelected = () => props.showSelected && (\n  <p className=\"custom-dropdown-selected\">{props.text}</p>\n  );\n\n  return (\n    <Styled.CDropdown\n      className={props.dropdownClass}\n      onSelect={props.onSelectFunc}\n      id={props.dropdownClass}\n      disabled={props.disabled}\n    >\n      <Styled.CDropdown.Toggle\n        onClick={props.onClickFunc}\n        className={`toggle ${props.isHighlighted ? 'highlighted' : ''}`}\n      >\n        <p className={`dropdown-text ${props.showSelected ? '' : 'first'}`}>\n          {props.label}\n        </p>\n        {renderSelected()}\n      </Styled.CDropdown.Toggle>\n      <Styled.CDropdown.Menu className={props.menuClass}>\n        {props.elements.length > 0\n          && renderElements(props.elements)}\n      </Styled.CDropdown.Menu>\n    </Styled.CDropdown>\n  );\n}\n\nCustomDropdown.propTypes = {\n  elements: PropTypes.arrayOf().isRequired,\n  text: PropTypes.string,\n  label: PropTypes.string.isRequired,\n  dropdownClass: PropTypes.string,\n  menuClass: PropTypes.string,\n  onClickFunc: PropTypes.func,\n  onSelectFunc: PropTypes.func,\n  selectedValue: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n  ]),\n  isHighlighted: PropTypes.bool,\n  showSelected: PropTypes.bool,\n  accessValueName: PropTypes.string.isRequired,\n  disabled: PropTypes.bool,\n};\n\nCustomDropdown.defaultProps = {\n  text: '',\n  dropdownClass: 'sort-toggle',\n  menuClass: 'menu-dropdown',\n  onClickFunc: null,\n  onSelectFunc: null,\n  selectedValue: null,\n  isHighlighted: false,\n  showSelected: true,\n  disabled: false,\n};\n\nexport default CustomDropdown;\n", "/* eslint-disable import/prefer-default-export */\nimport styled from 'styled-components';\nimport { Dropdown, MenuItem } from 'react-bootstrap';\n\nexport const CDropdown = styled(Dropdown)`\n  .dropdown-menu {\n    top: 98%;\n    background-color: transparent;\n  }\n  .dropdown-menu > .sub-menu-item > a {\n    line-height: 20px;\n    padding: 5px;\n  }\n  .dropdown-menu a {\n    text-decoration: none;\n    border-radius 10px;\n    &:hover {\n      background-color: #F1F3F6;\n    }\n  }\n  .dropdown-menu li {\n    height: auto;\n  }\n  .custom-dropdown input {\n    display: none;\n  }\n  .custom-dropdown input:checked ~ .custom-dropdown--span {\n    background-color: white;\n  }\n  .custom-dropdown--span::after {\n    content: \"\";\n    display: none;\n    position: absolute;\n  }\n  .custom-dropdown input:checked ~ .custom-dropdown--span::after {\n    display: block;\n  }\n  .custom-dropdown .custom-dropdown--span::after {\n    background-color: var(--color-secondary);\n    border-radius: 50%;\n    height: 12px;\n    left: 1px;\n    top: 1px;\n    width: 12px;\n  }\n  .custom-dropdown-selected {\n    color: var(--color-secondary);\n    font-size: 14px;\n    font-weight: 600;\n    margin: 0 5px;\n  }\n  .toggle {\n    align-items: flex-start;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n  }\n  .toogle > .caret {\n    position: absolute;\n  }\n  .dropdown-text {\n    color: var(--color-secondary);\n    float: left;\n    font-size: 12px;\n    padding-left: 5px;\n  }\n  .dropdown-text.first {\n    font-size: 14px;\n    font-weight: unset;\n  }\n`;\n\nexport const CDropdownText = styled.p`\n  color: var(--color-secondary);\n  float: left;\n  font-size: 12px;\n  padding-left: 5px;\n  .first {\n    font-size: 14px;\n    font-weight: unset;\n  }\n`;\n\nexport const CMenuItem = styled(MenuItem)`\n  .custom-dropdown {\n    cursor: pointer;\n    display: block;\n    font-size: 14px;\n    margin: 0;\n    padding: 6px 0 6px 25px;\n    position: relative;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    -webkit-user-select: none;\n    user-select: none;\n  }\n  .custom-dropdown--span {\n    background-color: #fff;\n    border: 1px solid var(--color-secondary);\n    border-radius: 50%;\n    height: 16px;\n    left: 0;\n    margin-top: 4px;\n    position: absolute;\n    top: 10%;\n    width: 16px;\n    &:after {\n      content: \"\";\n    display: none;\n    position: absolute;\n    }\n  }\n`;\n", "import React from 'react';\nimport PropTypes from 'prop-types';\nimport useUser from 'app/utils/hooks/useUser';\nimport * as styled from 'app/components/Modals/ValuesMessageModal/ValuesMessageModal.Styled';\nimport Button from 'app/components/Atoms/Button';\nimport { BsCircleFill } from 'react-icons/bs';\nimport { SECONDARY_BUTTON } from 'app/utils/constants';\n\nfunction ValuesMessageModal({ show, onClose }) {\n  const profile = useUser();\n\n  const renderBulletPoint = (color) => (\n    <BsCircleFill color={color} size=\"7px\" style={{ marginTop: '3px', marginRight: '10px' }} />\n  );\n\n  if (!show) { return null; }\n  return (\n    <div onClick={onClose}>\n      <styled.Modal onClick={onClose}>\n        <styled.ModalDialog show hide={onClose}>\n          <styled.ModalHeader>\n            <styled.ModalTitle>\n              Hello\n              {' '}\n              {profile.full_name}\n              {' '}\n              !\n            </styled.ModalTitle>\n            <styled.ModalSubtitle>\n              Welcome to Wize Q!\n            </styled.ModalSubtitle>\n          </styled.ModalHeader>\n          <styled.ModalBody>\n            <p>\n              We want to share a few simple guidelines before you start.\n              Remember that Wize Q is a space for asking questions and providing answers that\n              are helpful to our community.\n            </p>\n            <p>Please practice our values when using Wize Q: </p>\n            <styled.ValuesInformation>\n              <p>\n                {renderBulletPoint('var(--color-primary)')}\n                <styled.ValueText color=\"var(--color-primary)\">Ownership</styled.ValueText>\n                \u2013 See if you can find the answer to your question before posting on Wize Q.\n                And if you know the answer to a question or how to find it,\n                be sure to reply \u2014 anyone can!\n              </p>\n              <p>\n                {renderBulletPoint('var(--color-secondary)')}\n                <styled.ValueText color=\"var(--color-secondary)\">Innovation</styled.ValueText>\n                \u2013 When someone shares a concern or challenge,\n                let\u2019s be innovative \u2014 propose a solution or offer support!\n              </p>\n              <p>\n                {renderBulletPoint('#E5C8A6')}\n                <styled.ValueText color=\"#E5C8A6\">Community</styled.ValueText>\n                \u2013 Remember to treat everyone with dignity and respect.\n                Assume others have good intentions. Always be honest and constructive.\n                Let\u2019s make Wizeline a community where everyone can thrive.\n              </p>\n            </styled.ValuesInformation>\n            <p>\n              Consider that other channels:\n              (ticketing portal, Slack, your manager or people partner)\n              might be more effective for finding the right answer quickly.\n            </p>\n            <p>Thanks for being a valuable contributor to our community! </p>\n            <p>The Wize Q Team</p>\n          </styled.ModalBody>\n          <styled.ModalFooter>\n            <Button\n              id=\"btnAccept\"\n              category={SECONDARY_BUTTON}\n              onClick={onClose}\n            >\n              Accept\n            </Button>\n          </styled.ModalFooter>\n        </styled.ModalDialog>\n      </styled.Modal>\n    </div>\n  );\n}\n\nValuesMessageModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  show: PropTypes.bool.isRequired,\n};\n\nexport default ValuesMessageModal;\n", "/* eslint-disable import/prefer-default-export */\nimport styled from 'styled-components';\n\nexport const Modal = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    width: 100%;\n    height: 100%;\n    z-index: 1050;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    background-color: rgba(0, 0, 0, 0.5);\n`;\n\nexport const ModalDialog = styled.div`\n    position: relative;\n    border-radius: 5px;\n    border: 0;\n    background-color: #fff;\n    box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.5);\n    overflow: hidden;\n    margin: 0 auto;\n    width: 100%;\n    display: block;\n    max-height: calc(100vh - 150px);\n    overflow-y: auto;\n    padding: 24px 24px;\n    max-width: 70vw;\n\n    @media (max-width: 768px) {\n        max-height: 100%;\n        max-width: 100%;\n        height: 100%;\n    }\n`;\n\nexport const ModalBody = styled.div`\n    display: block;\n    font-size: 15px;\n    background-color: #fff;\n    border-bottom: none;\n    position: relative;\n    padding: 15px;\n    box-sizing: border-box;\n    text-align: justify;\n`;\n\nexport const ModalFooter = styled.div`\n    border-top: none;\n    background-color: #fff;\n    border-bottom: none;\n    padding: 15px;\n    text-align: right;\n    box-sizing: border-box;\n    display: block;\n    font-size: 14px;\n    ${(props) => (props.variant === 'logout'\n    ? `border-top: 1px solid #e5e5e5;\n    padding: 15px;\n    text-align: right;`\n    : 'border-bottom: none;')}\n`;\n\nexport const ModalHeader = styled.div`\n    overflow-y: hidden;\n    padding: 15px;\n    box-sizing: border-box;\n    display: block;\n    font-size: 14px;\n    ${(props) => (props.variant === 'logout'\n    ? `border-bottom: 1px solid #e5e5e5;\n        padding: 15px;`\n    : 'border-bottom: none;')}\n`;\n\nexport const ModalTitle = styled.div`\n    font-size: 16px;\n    font-weight: 600;\n    line-height: normal;\n    letter-spacing: normal;\n    margin-bottom: 8px;\n`;\n\nexport const ModalSubtitle = styled.div`\n    font-size: 16px;\n    font-weight: normal;\n    letter-spacing: 0.6px;\n    line-height: 1.71;\n`;\n\nexport const ValueText = styled.span`\n    color: ${(props) => props.color};\n    font-weight: 600;\n    font-size: 16px;\n    text-decoration:  ${(props) => props.color} underline overline;\n`;\n\nexport const ValuesInformation = styled.div`\n    margin: 20px 0 20px 20px;\n`;\n"],
  "mappings": "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",
  "names": []
}
