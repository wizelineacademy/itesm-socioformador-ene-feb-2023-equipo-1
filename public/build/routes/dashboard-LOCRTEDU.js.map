{
  "version": 3,
  "sources": ["browser-route-module:routes/dashboard.jsx?browser", "../../../app/routes/dashboard.jsx", "../../../app/styles/Dashboard.Styled.jsx", "../../../app/components/AdminSideBar/index.js", "../../../app/components/AdminSideBar/AdminSideBar.jsx", "../../../app/components/AdminSideBar/AdminSideBar.Styled.jsx"],
  "sourcesContent": ["export { default } from \"./routes/dashboard.jsx\";", "import React, { useEffect, useState } from \"react\";\nimport { json } from \"@remix-run/node\";\nimport * as Styled from \"app/styles/Dashboard.Styled.jsx\";\nimport { requireAuth } from \"app/session.server\";\nimport AdminSideBar from \"app/components/AdminSideBar\";\nimport { Table } from \"react-bootstrap\";\nimport { useLoaderData } from '@remix-run/react';\nimport listQuestions from \"app/controllers/questions/list\";\nimport listDepartments from 'app/controllers/departments/list';\nimport listAnswerBot from \"app/controllers/answerBot/list\";\n\n\n// Process and load the data.\nexport const loader = async ({ request }) => {\n\t// Make sure the user is authenticated before continuing.\n    await requireAuth(request);\n\n\t// To access the request URL.\n    const url = new URL(request.url);\n\n\t// Extract the \"department\" parameter from the URL.\n    const department = Number.parseInt(url.searchParams.get('department'), 10);\n  \n\t// Get a list of FAQ questions.\n    const questionsFAQ = await listQuestions({\n        department: Number.isNaN(department) ? undefined : department,\n        limit: 5,\n    });\n\n\t// Get a list of unanswered questions.\n    const questionsOF = await listQuestions({\n        department: Number.isNaN(department) ? undefined : department,\n\t\tstatus: 'not_answered',\n        limit: 8,\n    });\n\n\t// Get a list of bot questions.\n\tconst questionsBot = await listAnswerBot({\n        department: Number.isNaN(department) ? undefined : department,\n\t\tlimit: 5,\n    });\n\n\t// Get a list of the departments.\n    const departments = await listDepartments();\n\t// Add 2 more departments in the options.\n    departments.unshift({ department_id: 0, name: 'Not Assigned'});\n    departments.unshift({ department_id: undefined, name: 'All'});\n  \n\t// Returns the results in a json.\n    return json({\n      questionsFAQ,\n      questionsOF,\n\t  questionsBot,\n      departments,\n    });\n};\n\n// Format for the month.\nconst months = [\n    'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',\n    'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'\n];\n  \n// Format for date.\nconst formatDate = (dateString) => {\n\tconst date = new Date(dateString);\n\tconst month = months[date.getMonth()];\n\tconst day = date.getDate();\n\n\treturn `${month} ${day}`;\n};\n\nfunction Dashboard() {\n    \n\t// Load the data.\n    const { questionsFAQ, questionsOF, questionsBot, departments } = useLoaderData();\n\n\t// For the department selector.\n    const [selectedDepartment, setSelectedDepartment] = useState(departments[0].department_id);\n  \n\t// Change the current value of the department selector and send it to the loader.\n    const handleSelectDepartment = department => {\n      setSelectedDepartment(department);\n      const queryParams = new URLSearchParams({ department });\n      window.location.search = queryParams.toString();\n    }\n\n\treturn (\n\t\t<>\n\t\t\t<AdminSideBar \n                departments={departments}\n                selectedDepartment={selectedDepartment} \n                handleSelectDepartment={handleSelectDepartment}\n            />\n\n\t\t\t<Styled.MainContainer>\n\t\t\t\t<Styled.NextContainer>\n\t\t\t\t\t<Styled.DividerContainer>\n\t\t\t\t\t\t<Styled.TopContainers>\n\t\t\t\t\t\t\t<Styled.ContMargin>\n\t\t\t\t\t\t\t\t<Styled.Title>Open Forums</Styled.Title>\n\t\t\t\t\t\t\t\t<Table hover>\n\t\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t{questionsOF.map((question,index) => (\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<Styled.Text \n\t\t\t\t\t\t\t\t\t\t\t\tkey={`questionOP-${index}`}\n\t\t\t\t\t\t\t\t\t\t\t\ttitle={question.question}>\n\t\t\t\t\t\t\t\t\t\t\t\t{question.question.length > 100 ? `${question.question.substring(0, 100)}...` : question.question}\n\t\t\t\t\t\t\t\t\t\t\t</Styled.Text>\n\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t\t</Styled.ContMargin>\n\t\t\t\t\t\t</Styled.TopContainers>\n\n\t\t\t\t\t\t<Styled.TopContainers>\n\t\t\t\t\t\t\t<Styled.ContMargin>\n\t\t\t\t\t\t\t\t<Styled.Title>Answerbot Feedback</Styled.Title>\n\n\t\t\t\t\t\t\t\t<Table stripped hover>\n\t\t\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<Styled.TextBold width=\"250\">Question</Styled.TextBold>\n\t\t\t\t\t\t\t\t\t\t\t<Styled.TextBold width=\"250\">Answer</Styled.TextBold>\n\t\t\t\t\t\t\t\t\t\t\t<Styled.TextBold width=\"170\">Feedback</Styled.TextBold>\n\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t\t{questionsBot.map((question,index) => (\n\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t<Styled.Text \n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={`questionAB-${index}`} \n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle={question.question_by_user}> \n\t\t\t\t\t\t\t\t\t\t\t\t\t{question.question_by_user.length > 50 ? `${question.question_by_user.substring(0, 50)}...` : question.question_by_user}\n\t\t\t\t\t\t\t\t\t\t\t\t</Styled.Text>\n\t\t\t\t\t\t\t\t\t\t\t\t<Styled.Text \n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={`answerAB-${index}`} \n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle={question.answer_by_bot}> \n\t\t\t\t\t\t\t\t\t\t\t\t\t{question.answer_by_bot.length > 50 ? `${question.answer_by_bot.substring(0, 50)}...` : question.answer_by_bot}\n\t\t\t\t\t\t\t\t\t\t\t\t</Styled.Text>\n\t\t\t\t\t\t\t\t\t\t\t\t{question.answer_feedback === -1 && <Styled.TextU key={`feedbackAB-${index}`}> Bad </Styled.TextU>}\n\t\t\t\t\t\t\t\t\t\t\t\t{question.answer_feedback === 0 && <Styled.Text key={`feedbackAB-${index}`}> N/A </Styled.Text>}\n\t\t\t\t\t\t\t\t\t\t\t\t{question.answer_feedback === 1 && <Styled.TextA key={`feedbackAB-${index}`}> Good </Styled.TextA>}\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t\t</Styled.ContMargin>\n\t\t\t\t\t\t</Styled.TopContainers>\n\t\t\t\t\t</Styled.DividerContainer>\n\n\t\t\t\t\t<Styled.BottomContainer>\n\t\t\t\t\t\t<Styled.ContMargin>\n\t\t\t\t\t\t\t<Styled.Title>FAQs</Styled.Title>\n\t\t\t\t\t\t\t<Table stripped hover>\n\t\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t<Styled.TextBold width=\"330\">Question</Styled.TextBold>\n\t\t\t\t\t\t\t\t\t\t<Styled.TextBold width=\"170\">Department</Styled.TextBold>\n\t\t\t\t\t\t\t\t\t\t<Styled.TextBold width=\"170\">Date</Styled.TextBold>\n\t\t\t\t\t\t\t\t\t\t<Styled.TextBold width=\"170\">Status</Styled.TextBold>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t\t<tbody>\n                                {questionsFAQ.map((question,index) => (\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t<Styled.Text \n\t\t\t\t\t\t\t\t\t\t\tkey={`questionFAQ-${index}`} \n\t\t\t\t\t\t\t\t\t\t\ttitle={question.question}> \n\t\t\t\t\t\t\t\t\t\t\t{question.question.length > 50 ? `${question.question.substring(0, 50)}...` : question.question}\n\t\t\t\t\t\t\t\t\t\t</Styled.Text>\n\t\t\t\t\t\t\t\t\t\t<Styled.Text key={`department-${index}`}> {question.assigned_department !== null ? departments.find(depa => depa.department_id === question.assigned_department)?.name : 'Not Assigned'} </Styled.Text>\n\t\t\t\t\t\t\t\t\t\t<Styled.Text key={`date-${index}`}> {formatDate(question.createdAt)} </Styled.Text>\n                                        {question.Answers.length > 0 ?\n                                            <Styled.TextA key={`statusFAQ-${index}`}> Answered </Styled.TextA>\n                                            :\n                                            <Styled.TextU key={`statusFAQ-${index}`}> Unanswered </Styled.TextU>\n                                        }\n\t\t\t\t\t\t\t\t\t</tr>\n                                ))}\n\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t</Styled.ContMargin>\n\t\t\t\t\t</Styled.BottomContainer>\n\t\t\t\t</Styled.NextContainer>\n\t\t\t</Styled.MainContainer>\n\t\t</>\n\t);\n}\n\nexport default Dashboard;", "import styled from \"styled-components\";\n\nexport const MainContainer = styled.div`\n\tbackground-color: #f7fafc; /* Slate-100 */\n\tmargin-left: 15%;\n\n\t@media (min-width: 1536px) {\n\t\tmargin-left: 40px; /* 2xl:ml-40 */\n\t}\n\n\theight: 100vh;\n\tpadding-top: 8px; /* Pt-8 */\n\talign-content: stretch; /* Content-stretch */\n`;\n\nexport const NextContainer = styled.div`\n\tmargin-left: 1%;\n\n\theight: 100vh;\n\tpadding-top: 8px;\n\tdisplay: grid;\n\n\tgrid-template-columns: repeat(1, minmax(0, 1fr));\n\tgap: 3.5rem;\n\tpadding-left: 2.5rem;\n\tpadding-right: 2.5rem;\n\n\tmargin-right: 1px;\n`;\n\nexport const DividerContainer = styled.div`\n\tdisplay: grid;\n\tgrid-template-columns: repeat(2, minmax(0, 1fr));\n\tgrid-template-rows: minmax(0, 1fr);\n\tcolumn-gap: 3%;\n\tmargin-left: 2px;\n`;\n\nexport const TopContainers = styled.div`\n\tdisplay: inline-block;\n\talign-items: center;\n\tjustify-content: center;\n\tmargin-top: 20px;\n\twidth: 11/12;\n\theight: 100%;\n\tborder-radius: 0.5rem;\n\tbackground-color: white;\n\tborder: 1px solid #d1d5db;\n\tbox-shadow: 0px 0px 0px 3px rgba(0, 0, 0, 0.05);\n\t&:focus {\n\t\toutline: none;\n\t\tbox-shadow: 0px 0px 0px 3px rgba(59, 130, 246, 0.5);\n\t}\n`;\n\nexport const BottomContainer = styled.div`\n\tdisplay: inline-block;\n\talign-items: center;\n\tjustify-content: center;\n\tbackground-color: white;\n\tmargin-top: 20px;\n\tborder: 1px solid #d1d5db; /* ring-gray-200 */\n\tbox-shadow: 0px 0px 0px 3px rgba(0, 0, 0, 0.05);\n\t&:focus {\n\t\toutline: none;\n\t\tbox-shadow: 0px 0px 0px 3px rgba(59, 130, 246, 0.5);\n\t}\n\tborder-radius: 0.375rem; /* rounded-md */\n\tmargin-left: 2px; /* ml-2 */\n\tmargin-right: 1px; /* mr-1 */\n\theight: 90%;\n`;\n\nexport const ContMargin = styled.div`\n\tmargin-left: 25px;\n\tmargin-right: 25px;\n\tmargin-top: 10px;\n`;\n\nexport const UList = styled.ul`\n\tlist-style-type: none;\n\tmargin: 0;\n\tpadding: 0;\n`;\n\nexport const Title = styled.h2`\n\tcolor: #17202a;\n\tfont-weight: 600;\n\tletter-spacing: 1px;\n\tmargin-bottom: 15px;\n`;\n\nexport const Text = styled.td`\n\tcolor: #17202a;\n\tfont-weight: 400;\n\tletter-spacing: 1px;\n`;\n\nexport const TextBold = styled.th`\n\tcolor: #17202a;\n\tfont-weight: 600;\n\tletter-spacing: 1px;\n\tfont-size: medium;\n`;\n\nexport const TextBoldList = styled.li`\n\tcolor: #17202a;\n\tfont-weight: 600;\n\tletter-spacing: 1px;\n\tfont-size: large;\n\tmargin-top: 30px;\n`;\n\nexport const TextU = styled.td`\n\tcolor: #c64927;\n\tfont-weight: 400;\n\tletter-spacing: 1px;\n`;\n\nexport const TextA = styled.td`\n\tcolor: #83bb2b;\n\tfont-weight: 400;\n\tletter-spacing: 1px;\n`;\n\nexport const TextB = styled.td`\n\tcolor: #4766b6;\n\tfont-weight: 400;\n\tletter-spacing: 1px;\n`;", "export { default } from './AdminSideBar';", "import * as Styled from \"app/components/AdminSideBar/AdminSideBar.Styled.jsx\";\nimport React, { useEffect, useState } from 'react';\n\nfunction SideBar({ departments, selectedDepartment, handleSelectDepartment }) {\n\n\treturn (\n\t\t<Styled.MainContainer>\n\t\t\t<Styled.DepContainer>\n\t\t\t\t<Styled.TitleDep>Departaments</Styled.TitleDep>\n\n\t\t\t\t<Styled.ListDep>\n\t\t\t\t\t{departments.map((item) => (\n\t\t\t\t\t\t<Styled.DepSelect\n\t\t\t\t\t\t\tkey={item.name}\n\t\t\t\t\t\t\taria-current={item.current ? \"page\" : undefined}\n\t\t\t\t\t\t\tonClick={() => handleSelectDepartment(item.department_id)}\n\t\t\t\t\t\t\tselected={item.department_id === selectedDepartment}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{item.name}\n\t\t\t\t\t\t</Styled.DepSelect>\n\t\t\t\t\t))}\n\t\t\t\t</Styled.ListDep>\n\t\t\t</Styled.DepContainer>\n\t\t</Styled.MainContainer>\n\t);\n}\n\nexport default SideBar;", "import styled from \"styled-components\";\n\nexport const MainContainer = styled.div`\n\tmargin-top: 1px;\n\theight: 100vh;\n\tposition: absolute;\n\tinset-y: 0;\n\tdisplay: flex;\n\toverflow-y: scroll;\n`;\n\nexport const DepContainer = styled.div`\n\tposition: relative;\n\tdisplay: inline-block;\n\tpadding-left: 25px;\n\tpadding-right: 15px;\n`;\n\nexport const TitleDep = styled.div`\n\tcolor: #17202a; /* Indigo-800 */\n\tfont-weight: bold;\n\tfont-size: large;\n\tmargin-left: 8px;\n\tmargin-right: 8px;\n\tmargin-top: 18%;\n`;\n\nexport const ListDep = styled.ul`\n\tlist-style-type: none;\n\tpadding: 0;\n\tpadding-left: 15px;\n\tmargin-top: 20%;\n`;\n\nexport const DepSelect = styled.li`\n\t@import url(\"https://fonts.googleapis.com/css?family=Inter\");\n\ttext-align: left;\n\tmargin-top: 7.5%;\n\t// margin-top: 20%;\n\t/* background-color: #1f2937;  Gray-900 */\n\tcolor: #17202a;\n\tfont-weight: 600;\n\tletter-spacing: 1px;\n\n\t&:hover {\n\t\tbackground-color: #213246; /* Gray-700 */\n\t\tcolor: white;\n\t\tborder-radius: 0.375rem; /* Rounded-md */\n\t\t// padding-left: 0.75rem; /* Px-3 */\n\t\t// padding-right: 0.75rem; /* Px-3 */\n\t\tpadding-top: 0.5rem; /* Py-2 */\n\t\tpadding-bottom: 0.5rem; /* Py-2 */\n\t}\n`;"],
  "mappings": "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",
  "names": []
}
