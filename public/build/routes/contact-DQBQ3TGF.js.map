{
  "version": 3,
  "sources": ["browser-route-module:routes/contact.jsx?browser", "../../../app/routes/contact.jsx", "../../../app/components/Footer.jsx", "../../../app/styles/Contact.Styled.jsx", "../../../app/components/ContactGoto.jsx"],
  "sourcesContent": ["export { default } from \"./routes/contact.jsx\";", "/* eslint-disable class-methods-use-this */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { json } from '@remix-run/node';\nimport {\n  CONTACT_REASONS_LIST,\n  CONTACT_REASONS_MAP,\n  CONTACT_WARNING,\n  MAXIMUM_MESSAGE_LENGTH,\n  MAXIUMUM_EMAIL_LENGTH,\n  MAXIMUM_NAME_LENGTH,\n  MAXIMUM_REASON_LENGTH,\n} from 'app/utils/constants';\nimport Footer from 'app/components/Footer';\nimport mailIcon from 'app/images/ic_email.svg';\nimport slackIcon from 'app/images/ic_slack.svg';\nimport ContactGoto from 'app/components/ContactGoto';\nimport * as Styled from 'app/styles/Contact.Styled';\nimport { requireAuth } from 'app/session.server';\nimport useUser from 'app/utils/hooks/useUser';\n\nexport const loader = async ({ request }) => {\n  await requireAuth(request);\n  return json({});\n};\n\nconst initialState = {\n  reason: '',\n  message: '',\n  placeholders: {\n    message: 'Your message',\n  },\n  isSubmitted: false,\n};\n\nfunction Contact(props) {\n  const { full_name: name, email } = useUser();\n\n  const [state, setState] = useState(initialState);\n\n  const resetForm = () => {\n    setState(initialState);\n  };\n\n  const handleContactClick = () => {\n    resetForm();\n  };\n\n  const renderSuccessMessage = () => (\n    <Styled.SuccessDiv>\n      <p>\n        Thanks for contacting us! We will review your feedback shortly.\n      </p>\n      <p>\n        Click\n        {' '}\n        <button type=\"button\" onClick={handleContactClick}> here </button>\n        {' '}\n        to contact us again.\n      </p>\n      <p>\n        Cheers,\n        <br />\n        {' '}\n        The WizeQ team!\n      </p>\n    </Styled.SuccessDiv>\n  );\n\n  const renderOptionsList = () => CONTACT_REASONS_LIST.map(\n    (options) => <option value={options.value} key={options.value}>{options.reason}</option>,\n  );\n\n  const onInputChange = (event) => {\n    setState((prevState) => ({\n      ...prevState,\n      [event.target.name]: event.target.value,\n    }));\n  };\n\n  const handleEmailSent = () => {\n    setState((prevState) => ({\n      ...prevState,\n      isSubmitted: true,\n    }));\n  };\n\n  const createEmailContent = () => {\n    const emailObj = {};\n    emailObj.fullName = name;\n    emailObj.email = email;\n    emailObj.reason = CONTACT_REASONS_MAP[state.reason];\n    emailObj.message = state.message;\n    return emailObj;\n  };\n\n  const onSubmitWithSuccess = () => {\n    const emailBody = createEmailContent();\n    props.sendContact(emailBody);\n    handleEmailSent();\n  };\n\n  const inputLengthIsValid = (input, maxLength) => (\n    input.length > 0 && input.length <= maxLength\n  );\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    if (state.isSubmitted) {\n      return;\n    }\n\n    if (!inputLengthIsValid(name, MAXIMUM_NAME_LENGTH)) {\n      props.warningAlert(CONTACT_WARNING);\n      return;\n    }\n\n    if (!inputLengthIsValid(email, MAXIUMUM_EMAIL_LENGTH)) {\n      props.warningAlert(CONTACT_WARNING);\n      return;\n    }\n\n    if (!inputLengthIsValid(state.reason, MAXIMUM_REASON_LENGTH)) {\n      props.warningAlert(CONTACT_WARNING);\n      return;\n    }\n\n    if (!inputLengthIsValid(state.message, MAXIMUM_MESSAGE_LENGTH)) {\n      props.warningAlert(CONTACT_WARNING);\n      return;\n    }\n\n    onSubmitWithSuccess();\n  };\n\n  const renderContactForm = () => {\n    const firstName = name ? name.split(' ')[0] : '';\n    return (\n      <Styled.ContactForm onSubmit={onSubmit}>\n        <Styled.ContactFormP>\n          Hi&nbsp;\n          <strong>\n            {firstName}\n          </strong>\n          !\n          <br />\n          Send us a message!\n        </Styled.ContactFormP>\n        <Styled.ContactSelect name=\"reason\" onChange={onInputChange}>\n          {renderOptionsList()}\n        </Styled.ContactSelect>\n        <Styled.ContactTextArea name=\"message\" placeholder={state.placeholders.message} onChange={onInputChange} />\n        <Styled.BtnContainer>\n          <Styled.SubmitBtn type=\"submit\">Submit</Styled.SubmitBtn>\n        </Styled.BtnContainer>\n      </Styled.ContactForm>\n    );\n  };\n\n  const handleRender = () => {\n    if (!state.isSubmitted) {\n      return renderContactForm();\n    }\n    if (state.isSubmitted) {\n      return renderSuccessMessage();\n    }\n    return null;\n  };\n\n  return (\n    <Styled.ContactCardDiv>\n      <Styled.ContactInputHeader>\n        <Styled.ContactInputHeaderH1>Contact Us</Styled.ContactInputHeaderH1>\n        <Styled.ContactInputHeaderH2>We are here for you!</Styled.ContactInputHeaderH2>\n        <Styled.ContactInputHeaderP>\n          We\u2019d love to hear from you, please let us\n          know what you think and get in touch with us.\n          {' '}\n        </Styled.ContactInputHeaderP>\n\n        <Styled.ContactInputSitesDiv>\n          <ContactGoto\n            icon={mailIcon}\n            text=\"Email us at\"\n            goto=\"wizeq@wizeline.com\"\n            dir=\"mailto:wizeq@wizeline.com\"\n          />\n          <ContactGoto\n            icon={slackIcon}\n            text=\"Slack us at\"\n            goto=\"#wize-q-support\"\n            dir=\"https://wizeline.slack.com/messages/C6M652THT\"\n          />\n        </Styled.ContactInputSitesDiv>\n      </Styled.ContactInputHeader>\n      <Styled.ContactInputDiv>\n        {handleRender()}\n      </Styled.ContactInputDiv>\n      <Footer />\n    </Styled.ContactCardDiv>\n  );\n}\n\nContact.propTypes = {\n  sendContact: PropTypes.func.isRequired,\n  warningAlert: PropTypes.func.isRequired,\n};\n\nexport default Contact;\n", "import React, { Component } from 'react';\nimport { FOOTER_MESSAGE } from 'app/utils/constants';\nimport * as Styled from 'app/styles/Contact.Styled';\n\nclass Footer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      wizeQTeamUrl: 'https://wizeline.atlassian.net/wiki/spaces/WIZEQ/overview',\n    };\n  }\n\n  render() {\n    return (\n      <Styled.FooterDiv>\n        <Styled.FooterContainer>\n          <Styled.FooterLink href={this.state.wizeQTeamUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n            {FOOTER_MESSAGE}\n          </Styled.FooterLink>\n        </Styled.FooterContainer>\n      </Styled.FooterDiv>\n    );\n  }\n}\n\nexport default Footer;\n", "/* eslint-disable import/prefer-default-export */\nimport styled from 'styled-components';\nimport img from 'app/images/caret-down-solid.svg';\n\nexport const FooterDiv = styled.div`\n    background-color: #f4f7f9;\n    color: #a2abaf;\n    font-size: 12px;\n    margin-left: auto;\n    margin-right: auto;\n    padding: 20px 15px 70px;\n\n    @media (max-width: 400px) {\n        padding: 0 15px 20px;\n    }\n`;\n\nexport const FooterContainer = styled.div`\n    margin-right: auto;\n    margin-left: auto;\n    padding-left: 15px;\n    padding-right: 15px;\n    text-align: center;\n\n    @media (min-width: 1200px) {\n        width: 1170px;\n    }\n\n    @media (min-width: 992px) and (max-width: 1199px) {\n        width: 970px;\n    }\n\n    @media (min-width: 768px) and (max-width: 991px) {\n        width: 750px;\n    }\n`;\n\nexport const FooterLink = styled.a`\n    color: #666;\n\n    &:hover {\n        text-decoration: underline;\n    }\n`;\n\nexport const ContactInputDiv = styled.div`\n    background-color: #f4f7f9;\n    box-sizing: border-box;\n    min-height: 64.8752vh;\n    padding: 2% 0 7%;\n    position: relative;\n    text-align: center;\n`;\n\nexport const ContactForm = styled.form`\n    align-items: center;\n    display: flex;\n    flex-direction: column;\n    margin: auto;\n    padding: 20px;\n    border-radius: 4px;\n    box-sizing: border-box;\n    max-width: 390px;\n    width: 100%;\n`;\n\nexport const ContactFormP = styled.p`\n    border-radius: 4px;\n    box-sizing: border-box;\n    display: inline-block;\n    margin: 10px 0;\n    max-width: 390px;\n    padding: 12px 16px;\n    width: 100%;\n    color: var(--color-dark-50);\n    line-height: 24px;\n`;\n\nexport const ContactSelect = styled.select`\n    -moz-appearance: none; /* Firefox */\n    -webkit-appearance: none; /* Safari and Chrome */\n    appearance: none;\n    background: #fff url(${img}) no-repeat;\n    background-position-x: calc(100% - 16px);\n    background-position-y: 6px;\n    background-size: 16px;\n    border-radius: 4px;\n    border: 1px solid #ccc;\n    box-sizing: border-box;\n    color: #222;\n    cursor: pointer;\n    display: inline-block;\n    height: 40px;\n    border-radius: 4px;\n    box-sizing: border-box;\n    margin: 10px 0;\n    max-width: 390px;\n    padding: 12px 16px;\n    width: 100%;\n`;\n\nexport const ContactTextArea = styled.textarea`\n    border: 1px solid #ccc;\n    height: 150px;\n    border-radius: 4px;\n    box-sizing: border-box;\n    display: inline-block;\n    margin: 10px 0;\n    max-width: 390px;\n    padding: 12px 16px;\n    width: 100%;\n    resize: none;\n    overflow: auto;\n    border-radius: 4px;\n    box-sizing: border-box;\n`;\n\nexport const BtnContainer = styled.div`\n    padding: 12px 0;\n    border-radius: 4px;\n    box-sizing: border-box;\n    display: inline-block;\n    margin: 10px 0;\n    max-width: 390px;\n    width: 100%;\n`;\n\nexport const SubmitBtn = styled.button`\n    background-color: var(--color-secondary);\n    border-radius: 3px;\n    border: none;\n    color: #fff;\n    cursor: pointer;\n    margin: 4px 2px;\n    padding: 12px 32px;\n    text-decoration: none;\n    width: 100%;\n    text-transform: none;\n    overflow: visible;\n\n    &:hover {\n        background-color: #00a7e587;\n    }\n`;\n\nexport const SuccessDiv = styled.div`\n    background-color: white;\n    color: var(--color-dark-50);\n    margin-top: 50px;\n    max-width: 500px;\n    padding: 30px 20px;\n    margin-right: auto;\n    margin-left: auto;  \n\n    @media (min-width: 1200px) {\n        width: 1170px;\n    }\n\n    @media (min-width: 992px) and (max-width: 1199px) {\n        width: 970px;\n    }\n\n    @media (min-width: 768px) and (max-width: 991px) {\n        width: 750px;\n    }\n`;\n\nexport const ContactCardDiv = styled.div`\n    background-color: #1c1c1c;\n`;\n\nexport const ContactInputHeader = styled.div`\n    background-color: #fff;\n    text-align: center;\n    font-size: 14px;\n    margin: 0 auto;\n    box-sizing: border-box;\n`;\n\nexport const ContactInputHeaderH1 = styled.h1`\n    color: #a2abaf;\n    letter-spacing: 1.5px;\n    padding: 72px 0 12px;\n    text-transform: uppercase;\n    font-size: 14px;\n    margin: 0 auto;\n    max-width: 390px;\n`;\n\nexport const ContactInputHeaderH2 = styled.h2`\n    color: var(--color-dark-50);\n    font-size: 24px;\n    font-weight: 600;\n    padding: 12px 0 8px;\n    margin: 0 auto;\n    max-width: 390px;\n`;\n\nexport const ContactInputHeaderP = styled.p`\n    color: var(--color-dark-50);\n    letter-spacing: 0.6px;\n    line-height: 1.71;\n    padding: 8px 10px 28px;\n    font-size: 14px;\n    margin: 0 auto;\n    max-width: 390px;\n`;\n\nexport const ContactInputSitesDiv = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-around;\n    margin: 0 auto;\n    max-width: 390px;\n`;\n\nexport const ContactInputGoTo = styled.div`\n    margin: 20px 40px 40px;\n    max-width: 390px;\n`;\n\nexport const ContactInputGoToP = styled.p`\n    font-size: 16px;\n    margin: 8px 0 4px;\n    padding: 0;\n    max-width: 390px;\n`;\n\nexport const ContactInputGoToA = styled.a`\n    padding: 4px 0;\n    white-space: nowrap;\n    color: var(--color-secondary);\n    margin: 0 auto;\n    max-width: 390px;\n`;\n\nexport const ContactInputGoToImg = styled.img`\n    background-color: #f4f7f9;\n    border-radius: 50%;\n    box-shadow: 0 0 0 10px #f4f7f9;\n    height: 28px;\n    margin: 18px;\n    width: 28px;\n    max-width: 390px;\n`;\n", "import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as Styled from 'app/styles/Contact.Styled';\n\nfunction ContactGoto(props) {\n  const {\n    icon, text, goto, dir,\n  } = props;\n  return (\n    <Styled.ContactInputGoTo>\n      <Styled.ContactInputGoToImg src={icon} />\n      <Styled.ContactInputGoToP>{text}</Styled.ContactInputGoToP>\n      <Styled.ContactInputGoToA href={dir} target=\"_blank\" rel=\"noopener noreferrer\">{goto}</Styled.ContactInputGoToA>\n    </Styled.ContactInputGoTo>\n  );\n}\n\nContactGoto.propTypes = {\n  icon: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  goto: PropTypes.string.isRequired,\n  dir: PropTypes.string.isRequired,\n};\n\nexport default ContactGoto;\n"],
  "mappings": "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",
  "names": []
}
