name: 🚀 Deploy
on:
  push:
    branches:
      - main
      - dev
    tags:
      - "*"
permissions:
  actions: write
  contents: read

jobs:
  deploy:
    name: 🚀 Deploy
    runs-on: ubuntu-latest
    environment: dev
    # needs: [lint, typecheck, vitest, cypress]
    # only build/deploy main branch on pushes
    if: ${{ (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev') && github.event_name == 'push' }}

    env:
      NODE_ENV: production

    steps:
      - name: 🛑 Cancel Previous Runs
        if: ${{ env.GITHUB_ACTOR != 'nektos/act' }}
        uses: styfle/cancel-workflow-action@0.11.0

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: Prepare Server For Build
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.LIGHTSAIL_IP }}
          username: ${{ secrets.LIGHTSAIL_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            rm -rf ~/itesm-socioformador-ene-feb-2023-equipo-1/tmp
            mkdir -p ~/itesm-socioformador-ene-feb-2023-equipo-1/tmp
      - name: Copy Files To Lightsail Instance
        uses: wlixcc/SFTP-Deploy-Action@v1.0
        with:
          username: ${{ secrets.LIGHTSAIL_USER }}
          server: ${{ secrets.LIGHTSAIL_IP }}
          ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}
          local_path: "./*"
          remote_path: "/home/admin/itesm-socioformador-ene-feb-2023-equipo-1/tmp"
          args: "-o ConnectTimeout=60"

      - name: Configure Server
        uses: appleboy/ssh-action@master
        env:
          BASE_URL: ${{ secrets.BASE_URL }}
          PORT: ${{ secrets.PORT }}
          PUBLIC_IP: ${{ secrets.PUBLIC_IP }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          DB_HOST: ${{ secrets.DB_HOST }}
          AUTH0_DOMAIN: ${{ secrets.AUTH0_DOMAIN }}
          SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
          AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
          AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          timeout: 60s
          command_timeout: 30m
          envs: BASE_URL,PORT,PUBLIC_IP,DATABASE_URL,DB_HOST,AUTH0_DOMAIN,SESSION_SECRET,AUTH0_CLIENT_ID,AUTH0_CLIENT_SECRET,OPENAI_API_KEY
          host: ${{ secrets.LIGHTSAIL_IP }}
          username: ${{ secrets.LIGHTSAIL_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script_stop: true
          script: |
            # ignore failure on pm2 stop (first time?)
            pm2 stop all || true
            echo "*** Step: *** Replace app folders"
            rm -rf ~/itesm-socioformador-ene-feb-2023-equipo-1/app
            mkdir -p ~/itesm-socioformador-ene-feb-2023-equipo-1/app
            cp -R ~/itesm-socioformador-ene-feb-2023-equipo-1/tmp/. ~/itesm-socioformador-ene-feb-2023-equipo-1/app/
            cd ~/itesm-socioformador-ene-feb-2023-equipo-1/app
            echo "*** Step: *** Create .env file"
            echo BASE_URL="$BASE_URL" >> .env
            echo PORT="$PORT" >> .env
            echo DATABASE_URL="$DATABASE_URL" >> .env
            echo DB_HOST="$DB_HOST" >> .env
            echo SESSION_SECRET="$SESSION_SECRET" >> .env
            echo AUTH0_CLIENT_ID="$AUTH0_CLIENT_ID" >> .env
            echo AUTH0_DOMAIN="$AUTH0_DOMAIN" >> .env
            echo AUTH0_CLIENT_SECRET="$AUTH0_CLIENT_SECRET" >> .env
            echo OPENAI_API_KEY="$OPENAI_API_KEY" >> .env

            echo "*** Step: *** insert public IP js file"
            cd ~/itesm-socioformador-ene-feb-2023-equipo-1/app/app/controllers/answerBot
            rm pythonUrl.js
            echo "$PUBLIC_IP" >> pythonUrl.js
            cd ~/itesm-socioformador-ene-feb-2023-equipo-1/app

            echo "*** Step: *** npm ci and build"
            npm ci # install
            sudo npm install pm2 -g
            npm run build

            echo "*** Step: *** Start python service"
            cd ~/itesm-socioformador-ene-feb-2023-equipo-1/app/AnswerBotOfficial
            rm -r storage
            sudo systemctl restart answerbot.service
            
            echo "*** Step: *** Start pm2 service"
            pm2 start pm2.config.js
            pm2 save

            echo "*** Step: ** Cleanup"
            rm -rf ~/itesm-socioformador-ene-feb-2023-equipo-1/tmp
    
  deploy-prod:
    name: 🚀 Deploy Prod
    runs-on: ubuntu-latest
    environment: prod
    #needs: [lint, typecheck, vitest, cypress]
    # only build/deploy prod on new version tags (v1.0.0)
    if: github.ref == 'refs/heads/main'

    env:
      NODE_ENV: production

    steps:
      - name: 🛑 Cancel Previous Runs
        if: ${{ env.GITHUB_ACTOR != 'nektos/act' }}
        uses: styfle/cancel-workflow-action@0.11.0

      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: Prepare Server For Build
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.LIGHTSAIL_IP_PROD }}
          username: ${{ secrets.LIGHTSAIL_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            rm -rf ~/itesm-socioformador-ene-feb-2023-equipo-1/tmp
            mkdir -p ~/itesm-socioformador-ene-feb-2023-equipo-1/tmp
      - name: Copy Files To Lightsail Instance
        uses: wlixcc/SFTP-Deploy-Action@v1.0
        with:
          username: ${{ secrets.LIGHTSAIL_USER }}
          server: ${{ secrets.LIGHTSAIL_IP_PROD }}
          ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}
          local_path: "./*"
          remote_path: "/home/admin/itesm-socioformador-ene-feb-2023-equipo-1/tmp"
          args: "-o ConnectTimeout=60"

      - name: Configure Server
        uses: appleboy/ssh-action@master
        env:
          BASE_URL: ${{ secrets.BASE_URL_PROD }}
          PORT: ${{ secrets.PORT }}
          PUBLIC_IP: ${{ secrets.PUBLIC_IP_PROD }}
          DATABASE_URL: ${{ secrets.DATABASE_URL_PROD }}
          DB_HOST: ${{ secrets.DB_HOST_PROD }}
          AUTH0_DOMAIN: ${{ secrets.AUTH0_DOMAIN }}
          SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
          AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
          AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        with:
          timeout: 60s
          command_timeout: 30m
          envs: BASE_URL,PORT,PUBLIC_IP,DATABASE_URL,DB_HOST,AUTH0_DOMAIN,SESSION_SECRET,AUTH0_CLIENT_ID,AUTH0_CLIENT_SECRET,OPENAI_API_KEY
          host: ${{ secrets.LIGHTSAIL_IP_PROD }}
          username: ${{ secrets.LIGHTSAIL_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script_stop: true
          script: |
            # ignore failure on pm2 stop (first time?)
            pm2 stop all || true
            echo "*** Step: *** Replace app folders"
            rm -rf ~/itesm-socioformador-ene-feb-2023-equipo-1/app
            mkdir -p ~/itesm-socioformador-ene-feb-2023-equipo-1/app
            cp -R ~/itesm-socioformador-ene-feb-2023-equipo-1/tmp/. ~/itesm-socioformador-ene-feb-2023-equipo-1/app/
            cd ~/itesm-socioformador-ene-feb-2023-equipo-1/app
            echo "*** Step: *** Create .env file"
            echo BASE_URL="$BASE_URL" >> .env
            echo PORT="$PORT" >> .env
            echo DATABASE_URL="$DATABASE_URL" >> .env
            echo DB_HOST="$DB_HOST" >> .env
            echo SESSION_SECRET="$SESSION_SECRET" >> .env
            echo AUTH0_CLIENT_ID="$AUTH0_CLIENT_ID" >> .env
            echo AUTH0_DOMAIN="$AUTH0_DOMAIN" >> .env
            echo AUTH0_CLIENT_SECRET="$AUTH0_CLIENT_SECRET" >> .env
            echo OPENAI_API_KEY="$OPENAI_API_KEY" >> .env

            echo "*** Step: *** insert public IP js file"
            cd ~/itesm-socioformador-ene-feb-2023-equipo-1/app/app/controllers/answerBot
            rm pythonUrl.js
            echo "$PUBLIC_IP" >> pythonUrl.js
            cd ~/itesm-socioformador-ene-feb-2023-equipo-1/app

            echo "*** Step: *** npm ci and build"
            npm ci # install
            sudo npm install pm2 -g
            npm run build

            echo "*** Step: *** Start python service"
            cd ~/itesm-socioformador-ene-feb-2023-equipo-1/app/AnswerBotOfficial
            rm -r storage
            sudo systemctl restart answerbot.service
            
            echo "*** Step: *** Start pm2 service"
            pm2 start pm2.config.js
            pm2 save