{
  "version": 3,
  "sources": ["browser-route-module:routes\\admin.jsx?browser", "../../../app/routes/admin.jsx", "../../../app/styles/Admin.Styled.jsx", "../../../app/components/AdminUsersTable/index.js", "../../../app/components/AdminUsersTable/AdminUsersTable.jsx", "../../../app/utils/hooks/usePagination.js", "../../../app/components/AdminUsersTable/AdminUsersTable.Styled.jsx", "../../../app/components/Modals/EditUserModal/EditUserModal.jsx", "../../../app/components/Modals/EditUserModal/EditUserModal.Styled.jsx", "../../../app/components/UserSearchBar/index.js", "../../../app/components/UserSearchBar/UserSearchBar.jsx", "../../../app/components/UserSearchBar/UserSearchBar.Styled.jsx"],
  "sourcesContent": ["export { CatchBoundary, default } from \"./routes\\\\admin.jsx\";", "import React from 'react';\r\nimport { json } from '@remix-run/node';\r\nimport { useLoaderData, useSearchParams } from '@remix-run/react';\r\nimport { requireAdminAuth } from 'app/session.server';\r\nimport * as Styled from 'app/styles/Admin.Styled';\r\nimport AdminUsersTable from 'app/components/AdminUsersTable';\r\nimport Notifications from 'app/components/Notifications';\r\nimport UserSearchBar from 'app/components/UserSearchBar';\r\nimport listUsers from 'app/controllers/users/list';\r\nimport updateUser from 'app/controllers/users/update';\r\nimport NotFound from 'app/routes/$';\r\n\r\nexport const loader = async ({ request }) => {\r\n  await requireAdminAuth(request);\r\n  const url = new URL(request.url);\r\n  const currentPage = url.searchParams.get('page') ?? 1;\r\n  const size = url.searchParams.get('size') ?? 10;\r\n  const search = url.searchParams.get('search') ?? undefined;\r\n\r\n  const data = await listUsers({\r\n    page: currentPage,\r\n    search,\r\n    size,\r\n  });\r\n\r\n  return {\r\n    ...data,\r\n    currentPage: Number(currentPage),\r\n    size,\r\n  };\r\n};\r\n\r\nexport const action = async ({ request }) => {\r\n  const formData = await request.formData();\r\n\r\n  const payload = {\r\n    is_admin: !formData.has('is_admin') ? undefined : formData.get('is_admin') === 'on',\r\n    job_title: formData.get('job_title'),\r\n    employee_id: formData.get('employee_id'),\r\n  };\r\n\r\n  const result = await updateUser(payload);\r\n  return json(result);\r\n};\r\n\r\nfunction Admin() {\r\n  const {\r\n    users, totalPages, currentPage, size,\r\n  } = useLoaderData();\r\n  const [, setSearchParams] = useSearchParams();\r\n\r\n  const onSearch = (search) => {\r\n    setSearchParams({\r\n      search,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Notifications />\r\n      <Styled.Container>\r\n        <h2>Admin page</h2>\r\n        <UserSearchBar onSearch={onSearch} />\r\n      </Styled.Container>\r\n      <AdminUsersTable\r\n        users={users}\r\n        currentPage={currentPage}\r\n        totalPages={totalPages}\r\n        size={size}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function CatchBoundary() {\r\n  return (\r\n    <NotFound />\r\n  );\r\n}\r\n\r\nexport default Admin;\r\n", "/* eslint-disable import/prefer-default-export */\r\nimport styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin: 40px auto;\r\n  width: 90vw;\r\n\r\n  @media (max-width: 576px) {\r\n    flex-direction: column;\r\n\r\n    h2 {\r\n      margin-bottom: 30px;\r\n    }\r\n  }\r\n`;\r\n", "export { default } from './AdminUsersTable';\r\n", "import React, { useState, useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport logomarkX1 from 'app/images/logomark_medium.png';\r\nimport { useActionData, useSearchParams } from '@remix-run/react';\r\nimport { usePagination, DOTS } from 'app/utils/hooks/usePagination';\r\nimport Button from 'app/components/Atoms/Button/Button';\r\nimport Loader from 'app/components/Loader';\r\nimport { PRIMARY_BUTTON, LSPIN_MEDIUM } from 'app/utils/constants';\r\nimport * as Styled from 'app/components/AdminUsersTable/AdminUsersTable.Styled';\r\nimport EditUserModal from 'app/components/Modals/EditUserModal/EditUserModal';\r\n\r\nfunction AdminUsersTable({\r\n  users, currentPage, totalPages, isLoading, size,\r\n}) {\r\n  const [modal, setModal] = useState(false);\r\n  const [currentUser, setCurrenUser] = useState({});\r\n  const quantityRef = useRef(0);\r\n\r\n  const paginationRange = usePagination({\r\n    currentPage: (currentPage === 0 ? 1 : currentPage + 1),\r\n    totalPages,\r\n  });\r\n\r\n  const [, setSearchParams] = useSearchParams();\r\n\r\n  const data = useActionData();\r\n\r\n  useEffect(() => {\r\n    if (data && data.successMessage) {\r\n      setModal(false);\r\n    }\r\n  }, [users, data]);\r\n\r\n  const handleModal = (u) => {\r\n    if (!modal) {\r\n      setCurrenUser(u);\r\n    }\r\n    setModal(!modal);\r\n  };\r\n\r\n  const changePage = (page) => {\r\n    setSearchParams({\r\n      size,\r\n      page,\r\n    });\r\n  };\r\n\r\n  const nextPageHandler = () => {\r\n    setSearchParams({\r\n      size,\r\n      page: currentPage + 1,\r\n    });\r\n  };\r\n\r\n  const prevPageHandler = () => {\r\n    setSearchParams({\r\n      size,\r\n      page: currentPage - 1,\r\n    });\r\n  };\r\n\r\n  const createPaginationItem = (i, idx) => (\r\n    <Styled.TablePagination.Item\r\n      key={idx}\r\n      onClick={() => changePage(i)}\r\n      active={(i) === currentPage}\r\n    >\r\n      {i}\r\n    </Styled.TablePagination.Item>\r\n  );\r\n\r\n  const getPaginationItems = () => {\r\n    const item = paginationRange.map((__page, idx) => {\r\n      if (__page === DOTS) {\r\n        // eslint-disable-next-line react/no-array-index-key\r\n        return <Styled.TablePagination.Ellipsis key={idx} />;\r\n      }\r\n      return createPaginationItem(__page, idx);\r\n    });\r\n    return [...item];\r\n  };\r\n\r\n  const paginationItems = getPaginationItems();\r\n\r\n  const renderHeader = () => (\r\n    <thead>\r\n      <Styled.HeaderTable>\r\n        <th>Name</th>\r\n        <th className=\"table-desktop-view\">Email</th>\r\n        <th className=\"table-desktop-view\">Job Title</th>\r\n        <th className=\"table-desktop-view\">Roles</th>\r\n        <th>Action</th>\r\n      </Styled.HeaderTable>\r\n    </thead>\r\n  );\r\n\r\n  const setQTY = (value) => {\r\n    setSearchParams({\r\n      size: value,\r\n      page: currentPage,\r\n    });\r\n  };\r\n\r\n  if (!users.length && !isLoading) {\r\n    return (\r\n      <Styled.Alert>\r\n        <span className=\"message\">There are no results to show</span>\r\n      </Styled.Alert>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Styled.TableContainer>\r\n        Select the number of results\r\n        <select ref={quantityRef} onChange={(e) => setQTY(e.target.value)} defaultValue={size}>\r\n          <option value=\"5\">5</option>\r\n          <option value=\"10\">10</option>\r\n          <option value=\"15\">15</option>\r\n          <option value=\"20\">20</option>\r\n          <option value=\"25\">25</option>\r\n        </select>\r\n        {isLoading ? (\r\n          <div>\r\n            <Styled.UserTable>\r\n              {renderHeader()}\r\n            </Styled.UserTable>\r\n            <Loader src={logomarkX1} size={LSPIN_MEDIUM} />\r\n          </div>\r\n        ) : (\r\n          <Styled.UserTable>\r\n            {renderHeader()}\r\n            <tbody>\r\n              {users.map((user) => (\r\n                <Styled.RowTable key={user.employee_id}>\r\n                  <td>\r\n                    <div>\r\n                      <img src={user.profile_picture} alt=\"\" />\r\n                      {user.full_name}\r\n                    </div>\r\n                  </td>\r\n                  <td className=\"table-desktop-view\">{user.email}</td>\r\n                  <td className=\"table-desktop-view\">{user.job_title}</td>\r\n                  <td className=\"table-desktop-view\">\r\n                    Employee\r\n                    {user.is_admin && ', Admin'}\r\n                  </td>\r\n                  <td>\r\n                    <Button\r\n                      category={PRIMARY_BUTTON}\r\n                      onClick={() => handleModal(user)}\r\n                      className=\"row-btn\"\r\n                    >\r\n                      Edit roles\r\n                    </Button>\r\n                  </td>\r\n                </Styled.RowTable>\r\n              ))}\r\n            </tbody>\r\n          </Styled.UserTable>\r\n        )}\r\n        {!isLoading && (\r\n          <Styled.PaginationContainer>\r\n            <div>\r\n              Page\r\n              {' '}\r\n              {currentPage}\r\n              {' '}\r\n              of\r\n              {' '}\r\n              {totalPages}\r\n            </div>\r\n\r\n            <Styled.TablePagination boundarylinks=\"true\">\r\n              {currentPage > 1 && (\r\n                <Styled.TablePagination.Prev onClick={prevPageHandler} />\r\n              )}\r\n              {paginationItems}\r\n\r\n              {currentPage < totalPages && (\r\n                <Styled.TablePagination.Next onClick={nextPageHandler} />\r\n              )}\r\n            </Styled.TablePagination>\r\n          </Styled.PaginationContainer>\r\n        )}\r\n        { modal ? (\r\n          <EditUserModal\r\n            user={currentUser}\r\n            onClose={() => handleModal()}\r\n          />\r\n        ) : null}\r\n      </Styled.TableContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nAdminUsersTable.propTypes = {\r\n  users: PropTypes.arrayOf(\r\n    PropTypes.shape(),\r\n  ),\r\n  currentPage: PropTypes.number.isRequired,\r\n  totalPages: PropTypes.number.isRequired,\r\n  isLoading: PropTypes.bool.isRequired,\r\n  size: PropTypes.number.isRequired,\r\n};\r\n\r\nAdminUsersTable.defaultProps = {\r\n  users: [],\r\n};\r\n\r\nexport default AdminUsersTable;\r\n", "import { useMemo } from 'react';\r\n\r\nexport const DOTS = '...';\r\n\r\nconst range = (start, end) => {\r\n  const length = end - (start);\r\n  return Array.from({ length }, (_, idx) => idx + start);\r\n};\r\n\r\nexport function usePagination({\r\n  currentPage,\r\n  totalPages,\r\n}) {\r\n  const pagintationRange = useMemo(() => {\r\n    const totalPageCount = totalPages;\r\n    const sibilingCount = 1;\r\n    const totalPageNumbers = 2 + sibilingCount;\r\n\r\n    if (totalPageNumbers > totalPageCount) {\r\n      return range(1, totalPageCount);\r\n    }\r\n\r\n    const leftSiblingIndex = Math.max(currentPage - sibilingCount, 1);// 3\r\n    const rigthSiblingIndex = Math.min(currentPage + sibilingCount, totalPageCount); // 5\r\n\r\n    const shouldShowLeftDots = leftSiblingIndex > 2;\r\n    const shouldShowRigthDots = rigthSiblingIndex < totalPageCount - 2;\r\n\r\n    const firstPageIndex = 1;\r\n    const lastPageIndex = totalPageCount;\r\n\r\n    if (!shouldShowLeftDots && shouldShowRigthDots) {\r\n      // eslint-disable-next-line no-mixed-operators\r\n      const leftItemCount = 5 * sibilingCount;\r\n      const leftRange = range(1, leftItemCount);\r\n      return [...leftRange, DOTS, totalPageCount];\r\n    } if (shouldShowLeftDots && !shouldShowRigthDots) {\r\n      // eslint-disable-next-line no-mixed-operators\r\n      const rigthItemsCount = 5 * sibilingCount;\r\n      // eslint-disable-next-line no-mixed-operators\r\n      const rigthRange = range(totalPageCount - rigthItemsCount, totalPageCount + 1);\r\n      return [firstPageIndex, DOTS, ...rigthRange];\r\n    }\r\n\r\n    const middleRange = range(leftSiblingIndex, rigthSiblingIndex + 1);\r\n    return [firstPageIndex, DOTS, ...middleRange, DOTS, lastPageIndex];\r\n  }, [currentPage, totalPages]);\r\n  return pagintationRange;\r\n}\r\n", "/* eslint-disable import/prefer-default-export */\r\nimport styled from 'styled-components';\r\nimport { DropdownButton, Pagination } from 'react-bootstrap';\r\n\r\nexport const TableContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  margin: 2rem auto;\r\n  width: 90vw;\r\n  select {\r\n    width: 10rem;\r\n    border-radius: 5px;\r\n    background-color: #fff;\r\n    border: 1px solid #d3d3d4;\r\n    border-radius: 15px;\r\n    padding: 1px 4px;\r\n    margin: 1rem 0;\r\n    &:focus {\r\n      outline: none;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const UserTable = styled.table`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  margin: 2rem auto;\r\n  border-radius: 9px;\r\n  border: 1px solid #f2efed;\r\n  tr {\r\n    justify-content: space-between;\r\n  }\r\n  @media (max-width: 481px) {\r\n    .table-desktop-view {\r\n      display: none;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const RowTable = styled.tr`\r\n  padding: 0.5rem 0;\r\n  border: 1px solid #f2efed;\r\n  .row-btn {\r\n    margin: 0;\r\n  }\r\n  td {\r\n    min-width: 18vw;\r\n    max-width: 18.01vw;\r\n    text-align: left;\r\n    padding: 0 0.8rem;\r\n    overflow-wrap: break-word;\r\n    div {\r\n      margin: 0.3 auto;\r\n      display: flex;\r\n      align-items: center;\r\n    }\r\n  }\r\n  img {\r\n    margin: 0.8rem;\r\n    width: 2.5rem;\r\n    border-radius: 50%;\r\n  }\r\n  @media (max-width: 767px) {\r\n    td {\r\n      min-width: 17.5vw;\r\n      max-width: 17.51vw;\r\n      text-align: left;\r\n      padding: 0 0.8rem;\r\n      overflow-wrap: break-word;\r\n    }\r\n    div {\r\n      margin: 0.3 auto;\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n    }\r\n    img {\r\n      margin: 0.3rem;\r\n      width: 2rem;\r\n    }\r\n  }\r\n  @media (max-width: 481px) {\r\n    .table-desktop-view {\r\n      display: none;\r\n    }\r\n    td {\r\n      min-width: 45.5vw;\r\n      max-width: 45.51vw;\r\n      text-align: left;\r\n      padding: 0 0.8rem;\r\n      overflow-wrap: break-word;\r\n    }\r\n    div {\r\n      flex-direction: row;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const HeaderTable = styled.tr`\r\n  background-color: #f4f7f9;\r\n  padding: 1rem 0;\r\n  th {\r\n    font-size: 1.5rem;\r\n    min-width: 18vw;\r\n    max-width: 18.01vw;\r\n    color: #524f4e;\r\n    margin: 2rem;\r\n    padding: 0 0 0 1rem;\r\n    @media (max-width: 767px) {\r\n      margin: 0;\r\n      padding: 0;\r\n    }\r\n  }\r\n  .button-header{\r\n    padding: 0.5rem 0 0 0;\r\n  }\r\n  \r\n  @media (max-width: 481px) {\r\n    th {\r\n      min-width: 45.5vw;\r\n      max-width: 45.51vw;\r\n      text-align: left;\r\n      padding: 0 0.8rem;\r\n      overflow-wrap: break-word;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const PaginationContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin: 0.5rem auto;\r\n  padding: 1.5rem 0;\r\n  width: 90vw;\r\n  align-items: center;\r\n  @media (max-width: 767px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nexport const FilterDropdown = styled(DropdownButton)`\r\n  background: transparent;\r\n  border: none;\r\n  font-size: 1.5rem;\r\n  color: #524f4e;\r\n  align-items: center;\r\n  :hover {\r\n    background: transparent;\r\n  }\r\n`;\r\n\r\nexport const TablePagination = styled(Pagination)`\r\n background-color: white;  \r\n`;\r\n\r\nexport const Alert = styled.div`\r\n  display: flex;\r\n  color: var(--color-secondary-active);\r\n  align-items: center;\r\n  background-color: var(--color-secondary-light);\r\n  border-radius: 10px;\r\n  font-family: \"Nunito\";\r\n  font-size: 16px;\r\n  min-height: 50px;\r\n  margin: 15px auto;\r\n  padding: 6px 16px;\r\n  justify-content: center;\r\n  width: 50vw;\r\n  .message {\r\n    padding: 8px 15px;\r\n  }\r\n  @media (max-width: 576px) {\r\n    width: 90vw;\r\n  }\r\n`;\r\n", "import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Form } from '@remix-run/react';\r\nimport * as S from 'app/components/Modals/EditUserModal/EditUserModal.Styled';\r\nimport { PRIMARY_BUTTON, SECONDARY_BUTTON } from 'app/utils/constants';\r\nimport UserImage from 'app/components/Atoms/UserImage/UserImage';\r\nimport Button from 'app/components/Atoms/Button';\r\n\r\nfunction EditUserModal({ user, onClose }) {\r\n  const [uAdmin, setUAdmin] = useState(user.is_admin);\r\n  const [uJobTitle, setUJobTitle] = useState(user.job_title);\r\n\r\n  return (\r\n    <S.Wrapper>\r\n      <Form method=\"post\">\r\n        <S.Container>\r\n          <S.User>\r\n            <UserImage src={user.profile_picture} size=\"extra big\" />\r\n            <S.UserInfo>\r\n              <h2>{user.full_name}</h2>\r\n              <span><b>{user.job_title !== null ? user.job_title : ''}</b></span>\r\n              <span>{user.email}</span>\r\n            </S.UserInfo>\r\n          </S.User>\r\n          <S.Roles>\r\n            <h3>Roles</h3>\r\n            <span>Edit roles for this user</span>\r\n            <S.RolesTable>\r\n              <S.TableRow noBorder>\r\n                <li><b>Name</b></li>\r\n                <li><b>Action</b></li>\r\n              </S.TableRow>\r\n              <S.TableRow>\r\n                <li>Job Title</li>\r\n                <li><input name=\"job_title\" type=\"text\" value={uJobTitle} onChange={(e) => { setUJobTitle(e.target.value); }} /></li>\r\n              </S.TableRow>\r\n              <S.TableRow>\r\n                <li>Role Title</li>\r\n                <li>\r\n                  Employee\r\n                  {user.is_admin && ', Admin'}\r\n                </li>\r\n              </S.TableRow>\r\n              <S.TableRow>\r\n                <li>Admin</li>\r\n                <li><input name=\"is_admin\" type=\"checkbox\" checked={uAdmin} onChange={(e) => { setUAdmin(e.target.checked); }} disabled={user.is_admin} /></li>\r\n              </S.TableRow>\r\n            </S.RolesTable>\r\n            <S.ButtonContainer>\r\n              <Button category={SECONDARY_BUTTON} onClick={onClose}>\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                category={PRIMARY_BUTTON}\r\n                type=\"submit\"\r\n              >\r\n                Save\r\n              </Button>\r\n            </S.ButtonContainer>\r\n          </S.Roles>\r\n        </S.Container>\r\n        <input type=\"hidden\" name=\"employee_id\" value={user.employee_id} />\r\n      </Form>\r\n    </S.Wrapper>\r\n  );\r\n}\r\n\r\nEditUserModal.propTypes = {\r\n  user: PropTypes.shape({\r\n    employee_id: PropTypes.number,\r\n    full_name: PropTypes.string,\r\n    email: PropTypes.string,\r\n    job_title: PropTypes.string,\r\n    is_admin: PropTypes.bool,\r\n    profile_picture: PropTypes.node,\r\n    departments: PropTypes.shape([]),\r\n  }),\r\n  onClose: PropTypes.func,\r\n};\r\n\r\nEditUserModal.defaultProps = {\r\n  user: {\r\n    employee_id: '',\r\n    full_name: '',\r\n    email: '',\r\n    job_title: '',\r\n    is_admin: false,\r\n  },\r\n  onClose: () => { },\r\n};\r\n\r\nexport default EditUserModal;\r\n", "/* eslint-disable import/prefer-default-export */\r\nimport styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  width: 100%;\r\n  height: 100%;\r\n  transform: translate(-50%, -50%);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1050;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  font-family: \"Nunito\", sans-serif;\r\n  font-size: 14px;\r\n  border-radius: 15px;\r\n  background-color: white;\r\n  max-width: 500px;\r\n  width: calc(100% - 40px);\r\n  margin: 20px;\r\n  padding: 15px 0;\r\n  h2 {\r\n    margin: 0;\r\n  }\r\n  h3 {\r\n    margin: 15px 0;\r\n  }\r\n  span {\r\n    margin: 6px 0;\r\n  }\r\n`;\r\n\r\nexport const User = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  border-bottom: 1px solid #d8d8d8;\r\n  padding: 15px 25px;\r\n  @media (max-width: 576px) {\r\n    flex-direction: column;\r\n    justify-content: center;\r\n  }\r\n`;\r\n\r\nexport const UserInfo = styled.div`\r\n  margin-left: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  width: 100%;\r\n  @media (max-width: 576px) {\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nexport const Roles = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  padding: 15px 25px;\r\n`;\r\n\r\nexport const RolesTable = styled.div`\r\n  border-radius: 15px;\r\n  border: 1px solid #d8d8d8;\r\n  margin: 10px 0 0;\r\n`;\r\n\r\nexport const TableRow = styled.ul`\r\n  border-top: ${(props) => (props.noBorder ? 'none' : '1px solid #d8d8d8')};\r\n  list-style: none;\r\n  margin: 0;\r\n  padding: 15px;\r\n  text-align: center;\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: row;\r\n  justify-content: space-around;\r\n  li {\r\n    max-width: 50%;\r\n    width: 75px;\r\n  }\r\n  input[type=\"text\"] {\r\n    max-width: calc(100% - 4px);\r\n    padding: 5px 2px;\r\n  }\r\n`;\r\n\r\nexport const ButtonContainer = styled.div`\r\n  margin-top: 25px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-end;\r\n  button {\r\n    margin-left: 10px;\r\n  }\r\n  @media (max-width: 576px) {\r\n    justify-content: center;\r\n  }\r\n`;\r\n", "export { default } from './UserSearchBar';\r\n", "import PropTypes from 'prop-types';\r\nimport React, { useState } from 'react';\r\nimport * as Styled from 'app/components/UserSearchBar/UserSearchBar.Styled';\r\nimport { ICON_BUTTON } from 'app/utils/constants';\r\nimport Button from 'app/components/Atoms/Button';\r\n\r\nexport default function UserSearchBar({ onSearch }) {\r\n  const [search, setSearch] = useState('');\r\n\r\n  const clearText = () => {\r\n    setSearch('');\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    setSearch(e.target.value);\r\n  };\r\n\r\n  const handleKeyDown = (event) => {\r\n    if (search && event.key === 'Enter') {\r\n      onSearch(search);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Styled.SearchField>\r\n      <Styled.IconWrapper>\r\n        <Styled.SearchIcon />\r\n      </Styled.IconWrapper>\r\n      <Styled.Input\r\n        type=\"search\"\r\n        value={search}\r\n        onChange={onChange}\r\n        placeholder=\"Search for\u2026\"\r\n        onKeyDown={handleKeyDown}\r\n      />\r\n      {search && (\r\n        <Button\r\n          type=\"button\"\r\n          className=\"clear-button\"\r\n          title=\"Clear\"\r\n          category={ICON_BUTTON}\r\n          onClick={clearText}\r\n        >\r\n          <Styled.ClearIcon />\r\n        </Button>\r\n      )}\r\n    </Styled.SearchField>\r\n  );\r\n}\r\n\r\n// Props types\r\nUserSearchBar.propTypes = {\r\n  onSearch: PropTypes.func.isRequired,\r\n};\r\n", "/* eslint-disable import/prefer-default-export */\r\nimport styled from 'styled-components';\r\nimport { MdClose } from 'react-icons/md';\r\nimport { AiOutlineSearch } from 'react-icons/ai';\r\n\r\nexport const SearchField = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  background-color: #fff;\r\n  border: 1px solid #d3d3d4;\r\n  border-radius: 20px;\r\n  height: 40px;\r\n  justify-content: center;\r\n  max-width: 270px;\r\n  position: relative;\r\n  width: 100%;\r\n  transition: all 0.5s ease;\r\n`;\r\n\r\nexport const IconWrapper = styled.div`\r\n  left: 10px;\r\n  top: auto;\r\n  width: 22px;\r\n  position: absolute;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  background-color: transparent;\r\n  border: none;\r\n  font-size: 14px;\r\n  height: 100%;\r\n  padding: 0 40px;\r\n  width: 100%;\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n  ::placeholder,\r\n  ::-webkit-input-placeholder {\r\n    color: rgba(78, 81, 84, 0.65);\r\n    font-family: \"Nunito\", sans-serif;\r\n  }\r\n`;\r\n\r\nexport const SearchIcon = styled(AiOutlineSearch)`\r\n  font-size: 30px;\r\n  color: rgba(78, 81, 84, 0.65);\r\n`;\r\n\r\nexport const ClearIcon = styled(MdClose)`\r\n  font-size: 28px;\r\n  color: rgba(78, 81, 84, 0.65);\r\n  padding: 5px;\r\n  transition: all 0.3s ease-in-out;\r\n  &:hover {\r\n    color: #fff;\r\n  }\r\n`;\r\n"],
  "mappings": "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",
  "names": []
}
