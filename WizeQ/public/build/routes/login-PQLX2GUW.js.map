{
  "version": 3,
  "sources": ["browser-route-module:routes\\login.jsx?browser", "../../../app/routes/login.jsx", "../../../app/components/Login/LoginContainer.jsx", "../../../app/components/Login/LoginContainer.Styled.jsx"],
  "sourcesContent": ["export { default } from \"./routes\\\\login.jsx\";", "import React from 'react';\r\nimport { json, redirect } from '@remix-run/node';\r\nimport LoginContainer from 'app/components/Login/LoginContainer';\r\nimport { getAuthenticatedUser } from 'app/session.server';\r\n\r\nexport const loader = async ({ request }) => {\r\n  const authenticated = await getAuthenticatedUser(request);\r\n\r\n  if (authenticated) {\r\n    return redirect('/');\r\n  }\r\n\r\n  return json({});\r\n};\r\n\r\nfunction Login() {\r\n  return <LoginContainer />;\r\n}\r\n\r\nexport default Login;\r\n", "import React, { useEffect } from 'react';\r\nimport { Form } from '@remix-run/react';\r\nimport logo from 'app/images/logo-white.png';\r\nimport Button from 'app/components/Atoms/Button';\r\nimport Slogan from 'app/components/Slogan';\r\nimport { PRIMARY_BUTTON } from 'app/utils/constants';\r\nimport * as Styled from 'app/components/Login/LoginContainer.Styled';\r\nimport { setCookie } from 'app/utils/cookies';\r\n\r\nfunction LoginContainer() {\r\n  const redirectTo = '/';\r\n\r\n  useEffect(() => {\r\n    setCookie('showValueMessage', true);\r\n  }, []);\r\n\r\n  return (\r\n    <Styled.LoginDiv>\r\n      <Styled.LoginSubDiv>\r\n        <Styled.LeftDiv>\r\n          <Styled.SH3>Welcome Wizeliner!</Styled.SH3>\r\n          <Form action=\"/auth/auth0\" method=\"POST\">\r\n            <input type=\"hidden\" name=\"redirectTo\" value={redirectTo} />\r\n            <Button type=\"submit\" category={PRIMARY_BUTTON} className=\"login-button\">\r\n              Log in with your Wizeline account\r\n            </Button>\r\n          </Form>\r\n          <Styled.Paragraph>\r\n            <Styled.Span>Wizeline Questions</Styled.Span>\r\n            <Styled.Span variant=\"bold\"> DOES NOT </Styled.Span>\r\n            <Styled.Span>\r\n              store any personal information so that you can ask anything.\r\n            </Styled.Span>\r\n          </Styled.Paragraph>\r\n        </Styled.LeftDiv>\r\n        <Styled.RightDiv>\r\n          <Styled.RedDiv />\r\n          <Styled.GoldDiv />\r\n          <img src={logo} alt=\"logo\" />\r\n          <Styled.Slogan>\r\n            <Slogan />\r\n            <Styled.AdviceContainer>\r\n              <p>\r\n                Before asking a question verify if you\r\n                can get the information you need from these resources.\r\n              </p>\r\n              <ul>\r\n                <li>\r\n                  <a href=\"https://wizeline.slack.com/archives/C1UDJCL9E\"> #Questions </a>\r\n                  - Slack Channel\r\n                </li>\r\n                <li><a href=\"https://ticketing.wizeline.com/ticketing.html\"> Ticketing</a></li>\r\n              </ul>\r\n            </Styled.AdviceContainer>\r\n          </Styled.Slogan>\r\n        </Styled.RightDiv>\r\n      </Styled.LoginSubDiv>\r\n    </Styled.LoginDiv>\r\n  );\r\n}\r\n\r\nexport default LoginContainer;\r\n", "/* eslint-disable import/prefer-default-export */\r\nimport styled from 'styled-components';\r\nimport { SloganContainer } from 'app/components/Slogan/Slogan.Styled';\r\n\r\nexport const LoginDiv = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const LoginSubDiv = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  @media (max-width: 768px) {\r\n    flex-direction: column-reverse;\r\n  }\r\n`;\r\n\r\nexport const SH3 = styled.h3`\r\n  text-align: center;\r\n  color: #646464;\r\n  margin-bottom: 50px;\r\n  font-family: \"Nunito\";\r\n  font-size: 25px;\r\n  letter-spacing: 0.4px;\r\n  font-weight: 700;\r\n`;\r\n\r\nexport const Span = styled.span`\r\n  ${(props) => (props.variant === 'bold'\r\n    ? 'font-family: \"Nunito\";'\r\n    : 'font-family: \"Nunito\";')}\r\n`;\r\n\r\nexport const Paragraph = styled.p`\r\n  text-align: center;\r\n  color: #646464;\r\n  font-family: \"Nunito\";\r\n  font-size: 18px;\r\n  letter-spacing: 0.7px;\r\n  margin-top: 50px;\r\n  width: 350px;\r\n`;\r\n\r\nexport const LeftDiv = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 45%;\r\n  padding: 0 40px;\r\n\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nexport const RightDiv = styled.div`\r\n  display: flex;\r\n  width: 55%;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  background-color: #203449;\r\n  position: relative;\r\n\r\n  img {\r\n    height: fit-content;\r\n    width: 200px;\r\n    margin-bottom: 40px;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    width: 100%;\r\n    height: 120px;\r\n\r\n    img {\r\n      margin-bottom: 0;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Slogan = styled.div`\r\n  width: 320px;\r\n\r\n  ${SloganContainer} {\r\n    p {\r\n      padding: 0;\r\n      text-align: center;\r\n      color: white;\r\n      font-size: 18px;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const RedDiv = styled.div`\r\n  width: 20px;\r\n  background-color: var(--color-primary);\r\n  position: absolute;\r\n  height: 100%;\r\n  left: 0;\r\n`;\r\n\r\nexport const GoldDiv = styled.div`\r\n  width: 20px;\r\n  background-color: #e5c8a6;\r\n  position: absolute;\r\n  height: 100%;\r\n  left: 20px;\r\n`;\r\n\r\nexport const AdviceContainer = styled.div`\r\n  color: white;\r\n  font-size: 15px;\r\n\r\n  p {\r\n    font-weight: 100;\r\n    width: fit-content;\r\n  }\r\n  a {\r\n    text-decoration: none;\r\n    color: var(--color-secondary);\r\n  }\r\n  ul {\r\n    li {\r\n      margin: 10px;\r\n    }\r\n  }\r\n`;\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;ACAA;AAAA,oBAAkB;;;ACAlB;AAAA,mBAAiC;;;ACAjC;AAIO,IAAM,WAAW,sCAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWxB,IAAM,cAAc,sCAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAU3B,IAAM,MAAM,sCAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUnB,IAAM,OAAO,sCAAO;AAAA,IACvB,CAAC,UAAW,MAAM,YAAY,SAC5B,2BACA;AAAA;AAGC,IAAM,YAAY,sCAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUzB,IAAM,UAAU,sCAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcvB,IAAM,WAAW,sCAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAyBxB,IAAM,SAAS,sCAAO;AAAA;AAAA;AAAA,IAGzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcG,IAAM,SAAS,sCAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQtB,IAAM,UAAU,sCAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQvB,IAAM,kBAAkB,sCAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ADlHtC,0BAA0B;AACxB,QAAM,aAAa;AAEnB,8BAAU,MAAM;AACd,cAAU,oBAAoB;AAAA,KAC7B;AAEH,SACE,mDAAQ,UAAR,MACE,mDAAQ,aAAR,MACE,mDAAQ,SAAR,MACE,mDAAQ,KAAR,MAAY,uBACZ,mDAAC,MAAD;AAAA,IAAM,QAAO;AAAA,IAAc,QAAO;AAAA,KAChC,mDAAC,SAAD;AAAA,IAAO,MAAK;AAAA,IAAS,MAAK;AAAA,IAAa,OAAO;AAAA,MAC9C,mDAAC,gBAAD;AAAA,IAAQ,MAAK;AAAA,IAAS,UAAU;AAAA,IAAgB,WAAU;AAAA,KAAe,uCAI3E,mDAAQ,WAAR,MACE,mDAAQ,MAAR,MAAa,uBACb,mDAAQ,MAAR;AAAA,IAAa,SAAQ;AAAA,KAAO,eAC5B,mDAAQ,MAAR,MAAa,mEAKjB,mDAAQ,UAAR,MACE,mDAAQ,QAAR,OACA,mDAAQ,SAAR,OACA,mDAAC,OAAD;AAAA,IAAK,KAAK;AAAA,IAAM,KAAI;AAAA,MACpB,mDAAQ,QAAR,MACE,mDAAC,gBAAD,OACA,mDAAQ,iBAAR,MACE,mDAAC,KAAD,MAAG,kGAIH,mDAAC,MAAD,MACE,mDAAC,MAAD,MACE,mDAAC,KAAD;AAAA,IAAG,MAAK;AAAA,KAAgD,iBAAgB,oBAG1E,mDAAC,MAAD,MAAI,mDAAC,KAAD;AAAA,IAAG,MAAK;AAAA,KAAgD;AAAA;AAU5E,IAAO,yBAAQ;;;AD1Df,qBAAqC;AAYrC,iBAAiB;AACf,SAAO,oDAAC,wBAAD;AAAA;AAGT,IAAO,gBAAQ;",
  "names": []
}
